Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID class
Rule 2     programa -> PROGRAM ID context
Rule 3     class -> scope CLASS ID context
Rule 4     class -> scope CLASS ID COLON ID context
Rule 5     context -> LBRACE constructor vars funcion estatuto RBRACE
Rule 6     context -> LBRACE constructor vars estatuto RBRACE
Rule 7     context -> LBRACE vars funcion estatuto RBRACE
Rule 8     context -> LBRACE vars estatuto RBRACE
Rule 9     context -> LBRACE funcion RBRACE
Rule 10    context -> LBRACE vars RBRACE
Rule 11    context -> LBRACE estatuto RBRACE
Rule 12    context -> LBRACE constructor RBRACE
Rule 13    constructor -> PUBLIC ID LPAREN param RPAREN contexto_const
Rule 14    contexto_const -> LBRACE vars RBRACE
Rule 15    contexto_const -> LBRACE estatuto RBRACE
Rule 16    contexto_const -> LBRACE vars estatuto RBRACE
Rule 17    estatuto -> asignacion
Rule 18    estatuto -> llamada_func
Rule 19    estatuto -> objeto_metodo
Rule 20    estatuto -> condicion
Rule 21    estatuto -> lectura
Rule 22    estatuto -> escritura
Rule 23    estatuto -> ciclo
Rule 24    estatuto -> estatuto asignacion
Rule 25    estatuto -> estatuto llamada_func
Rule 26    estatuto -> estatuto objeto_metodo
Rule 27    estatuto -> estatuto condicion
Rule 28    estatuto -> estatuto lectura
Rule 29    estatuto -> estatuto escritura
Rule 30    estatuto -> estatuto ciclo
Rule 31    ciclo -> WHILE LPAREN expresion RPAREN bloque
Rule 32    condicion -> IF LPAREN expresion RPAREN bloque
Rule 33    condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
Rule 34    bloque -> LBRACE estatuto RBRACE
Rule 35    lectura -> READ LPAREN ID RPAREN
Rule 36    lectura -> READ LPAREN objeto_aAcceso RPAREN
Rule 37    escritura -> PRINT LPAREN aux5 RPAREN
Rule 38    aux5 -> expresion
Rule 39    aux5 -> llamada_func
Rule 40    aux5 -> objeto_metodo
Rule 41    aux5 -> CSTRING
Rule 42    aux5 -> aux5 COMMA expresion
Rule 43    aux5 -> aux5 COMMA llamada_func
Rule 44    aux5 -> aux5 COMMA objeto_metodo
Rule 45    aux5 -> aux5 COMMA CSTRING
Rule 46    llamada_func -> ID LPAREN aux3 RPAREN
Rule 47    aux3 -> exp
Rule 48    aux3 -> aux3 COMMA exp
Rule 49    funcion -> scope DEF ID LPAREN param RPAREN contexto_func
Rule 50    contexto_func -> LBRACE vars RBRACE
Rule 51    contexto_func -> LBRACE estatuto RBRACE
Rule 52    contexto_func -> LBRACE vars estatuto RBRACE
Rule 53    contexto_func -> LBRACE vars RETURN INT ID RBRACE
Rule 54    contexto_func -> LBRACE vars RETURN FLOAT ID RBRACE
Rule 55    contexto_func -> LBRACE estatuto RETURN INT ID RBRACE
Rule 56    contexto_func -> LBRACE estatuto RETURN FLOAT ID RBRACE
Rule 57    contexto_func -> LBRACE vars estatuto RETURN INT ID RBRACE
Rule 58    contexto_func -> LBRACE vars estatuto RETURN FLOAT ID RBRACE
Rule 59    param -> aux4
Rule 60    aux4 -> tipo_simple ID
Rule 61    aux4 -> aux4 COMMA tipo_simple ID
Rule 62    scope -> PRIVATE
Rule 63    scope -> PUBLIC
Rule 64    scope -> PROTECTED
Rule 65    vars -> VAR aux
Rule 66    vars -> vars VAR aux
Rule 67    aux -> aux aux
Rule 68    aux -> ID COLON tipo_simple
Rule 69    aux -> ID COLON tipo_compuesto
Rule 70    aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
Rule 71    aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
Rule 72    aux -> ID LBRACKET cint RBRACKET COLON tipo_simple
Rule 73    aux -> ID LBRACKET cint RBRACKET COLON tipo_compuesto
Rule 74    aux -> ID aux2 COLON tipo_simple
Rule 75    aux -> ID aux2 COLON tipo_compuesto
Rule 76    aux2 -> aux2 aux2
Rule 77    aux2 -> COMMA ID
Rule 78    tipo_simple -> INT
Rule 79    tipo_simple -> FLOAT
Rule 80    tipo_compuesto -> ID
Rule 81    asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
Rule 82    asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion
Rule 83    asignacion -> objeto_aAcceso EQUALS expresion
Rule 84    asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
Rule 85    asignacion -> ID LBRACKET cint RBRACKET EQUALS expresion
Rule 86    asignacion -> ID EQUALS expresion
Rule 87    asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
Rule 88    asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func
Rule 89    asignacion -> objeto_aAcceso EQUALS llamada_func
Rule 90    asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
Rule 91    asignacion -> ID LBRACKET cint RBRACKET EQUALS llamada_func
Rule 92    asignacion -> ID EQUALS llamada_func
Rule 93    asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
Rule 94    asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo
Rule 95    asignacion -> objeto_aAcceso EQUALS objeto_metodo
Rule 96    asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
Rule 97    asignacion -> ID LBRACKET cint RBRACKET EQUALS objeto_metodo
Rule 98    asignacion -> ID EQUALS objeto_metodo
Rule 99    objeto_metodo -> ID PERIOD llamada_func
Rule 100   expresion -> exp_bool
Rule 101   expresion -> exp_bool rel_op exp_bool
Rule 102   expresion -> expresion AND exp_bool
Rule 103   expresion -> expresion OR exp_bool
Rule 104   expresion -> expresion AND exp_bool rel_op exp_bool
Rule 105   expresion -> expresion OR exp_bool rel_op exp_bool
Rule 106   exp_bool -> TRUE
Rule 107   exp_bool -> FALSE
Rule 108   exp_bool -> exp
Rule 109   exp -> termino
Rule 110   exp -> exp PLUS termino
Rule 111   exp -> exp MINUS termino
Rule 112   termino -> factor
Rule 113   termino -> termino TIMES factor
Rule 114   termino -> termino DIVIDE factor
Rule 115   termino -> termino MODULO factor
Rule 116   factor -> LPAREN expresion RPAREN
Rule 117   factor -> PLUS objeto_aAcceso
Rule 118   factor -> MINUS objeto_aAcceso
Rule 119   factor -> PLUS var
Rule 120   factor -> MINUS var
Rule 121   factor -> var
Rule 122   factor -> objeto_aAcceso
Rule 123   var -> ID
Rule 124   var -> cint
Rule 125   var -> cfloat
Rule 126   cint -> CINT
Rule 127   cfloat -> NUMBER
Rule 128   rel_op -> LT
Rule 129   rel_op -> LE
Rule 130   rel_op -> GT
Rule 131   rel_op -> GE
Rule 132   rel_op -> EQ
Rule 133   rel_op -> NE
Rule 134   objeto_aAcceso -> ID PERIOD ID

Terminals, with rules where they appear

AND                  : 102 104
CINT                 : 126
CLASS                : 3 4
COLON                : 4 68 69 70 71 72 73 74 75
COMMA                : 42 43 44 45 48 61 77
CSTRING              : 41 45
DEF                  : 49
DIVIDE               : 114
ELIF                 : 33
EQ                   : 132
EQUALS               : 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98
FALSE                : 107
FLOAT                : 54 56 58 79
GE                   : 131
GT                   : 130
ID                   : 1 2 3 4 4 13 35 46 49 53 54 55 56 57 58 60 61 68 69 70 71 72 73 74 75 77 80 84 85 86 90 91 92 96 97 98 99 123 134 134
IF                   : 32 33
INT                  : 53 55 57 78
LBRACE               : 5 6 7 8 9 10 11 12 14 15 16 34 50 51 52 53 54 55 56 57 58
LBRACKET             : 70 70 71 71 72 73 81 81 82 84 84 85 87 87 88 90 90 91 93 93 94 96 96 97
LE                   : 129
LPAREN               : 13 31 32 33 33 35 36 37 46 49 116
LT                   : 128
MINUS                : 111 118 120
MODULO               : 115
NE                   : 133
NUMBER               : 127
OR                   : 103 105
PERIOD               : 99 134
PLUS                 : 110 117 119
PRINT                : 37
PRIVATE              : 62
PROGRAM              : 1 2
PROTECTED            : 64
PUBLIC               : 13 63
RBRACE               : 5 6 7 8 9 10 11 12 14 15 16 34 50 51 52 53 54 55 56 57 58
RBRACKET             : 70 70 71 71 72 73 81 81 82 84 84 85 87 87 88 90 90 91 93 93 94 96 96 97
READ                 : 35 36
RETURN               : 53 54 55 56 57 58
RPAREN               : 13 31 32 33 33 35 36 37 46 49 116
TIMES                : 113
TRUE                 : 106
VAR                  : 65 66
WHILE                : 31
error                : 

Nonterminals, with rules where they appear

asignacion           : 17 24
aux                  : 65 66 67 67
aux2                 : 74 75 76 76
aux3                 : 46 48
aux4                 : 59 61
aux5                 : 37 42 43 44 45
bloque               : 31 32 33 33
cfloat               : 125
ciclo                : 23 30
cint                 : 70 70 71 71 72 73 81 81 82 84 84 85 87 87 88 90 90 91 93 93 94 96 96 97 124
class                : 1
condicion            : 20 27
constructor          : 5 6 12
context              : 2 3 4
contexto_const       : 13
contexto_func        : 49
escritura            : 22 29
estatuto             : 5 6 7 8 11 15 16 24 25 26 27 28 29 30 34 51 52 55 56 57 58
exp                  : 47 48 108 110 111
exp_bool             : 100 101 101 102 103 104 104 105 105
expresion            : 31 32 33 33 38 42 81 82 83 84 85 86 102 103 104 105 116
factor               : 112 113 114 115
funcion              : 5 7 9
lectura              : 21 28
llamada_func         : 18 25 39 43 87 88 89 90 91 92 99
objeto_aAcceso       : 36 81 82 83 87 88 89 93 94 95 117 118 122
objeto_metodo        : 19 26 40 44 93 94 95 96 97 98
param                : 13 49
programa             : 0
rel_op               : 101 104 105
scope                : 3 4 49
termino              : 109 110 111 113 114 115
tipo_compuesto       : 69 71 73 75
tipo_simple          : 60 61 68 70 72 74
var                  : 119 120 121
vars                 : 5 6 7 8 10 14 16 50 52 53 54 57 58 66

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID class
    (2) programa -> . PROGRAM ID context

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID class
    (2) programa -> PROGRAM . ID context

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . class
    (2) programa -> PROGRAM ID . context
    (3) class -> . scope CLASS ID context
    (4) class -> . scope CLASS ID COLON ID context
    (5) context -> . LBRACE constructor vars funcion estatuto RBRACE
    (6) context -> . LBRACE constructor vars estatuto RBRACE
    (7) context -> . LBRACE vars funcion estatuto RBRACE
    (8) context -> . LBRACE vars estatuto RBRACE
    (9) context -> . LBRACE funcion RBRACE
    (10) context -> . LBRACE vars RBRACE
    (11) context -> . LBRACE estatuto RBRACE
    (12) context -> . LBRACE constructor RBRACE
    (62) scope -> . PRIVATE
    (63) scope -> . PUBLIC
    (64) scope -> . PROTECTED

    LBRACE          shift and go to state 7
    PRIVATE         shift and go to state 8
    PUBLIC          shift and go to state 9
    PROTECTED       shift and go to state 10

    class                          shift and go to state 4
    context                        shift and go to state 5
    scope                          shift and go to state 6

state 4

    (1) programa -> PROGRAM ID class .

    $end            reduce using rule 1 (programa -> PROGRAM ID class .)


state 5

    (2) programa -> PROGRAM ID context .

    $end            reduce using rule 2 (programa -> PROGRAM ID context .)


state 6

    (3) class -> scope . CLASS ID context
    (4) class -> scope . CLASS ID COLON ID context

    CLASS           shift and go to state 11


state 7

    (5) context -> LBRACE . constructor vars funcion estatuto RBRACE
    (6) context -> LBRACE . constructor vars estatuto RBRACE
    (7) context -> LBRACE . vars funcion estatuto RBRACE
    (8) context -> LBRACE . vars estatuto RBRACE
    (9) context -> LBRACE . funcion RBRACE
    (10) context -> LBRACE . vars RBRACE
    (11) context -> LBRACE . estatuto RBRACE
    (12) context -> LBRACE . constructor RBRACE
    (13) constructor -> . PUBLIC ID LPAREN param RPAREN contexto_const
    (65) vars -> . VAR aux
    (66) vars -> . vars VAR aux
    (49) funcion -> . scope DEF ID LPAREN param RPAREN contexto_func
    (17) estatuto -> . asignacion
    (18) estatuto -> . llamada_func
    (19) estatuto -> . objeto_metodo
    (20) estatuto -> . condicion
    (21) estatuto -> . lectura
    (22) estatuto -> . escritura
    (23) estatuto -> . ciclo
    (24) estatuto -> . estatuto asignacion
    (25) estatuto -> . estatuto llamada_func
    (26) estatuto -> . estatuto objeto_metodo
    (27) estatuto -> . estatuto condicion
    (28) estatuto -> . estatuto lectura
    (29) estatuto -> . estatuto escritura
    (30) estatuto -> . estatuto ciclo
    (62) scope -> . PRIVATE
    (63) scope -> . PUBLIC
    (64) scope -> . PROTECTED
    (81) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS expresion
    (84) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET cint RBRACKET EQUALS expresion
    (86) asignacion -> . ID EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (91) asignacion -> . ID LBRACKET cint RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (96) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET cint RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID EQUALS objeto_metodo
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (32) condicion -> . IF LPAREN expresion RPAREN bloque
    (33) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (35) lectura -> . READ LPAREN ID RPAREN
    (36) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (37) escritura -> . PRINT LPAREN aux5 RPAREN
    (31) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (134) objeto_aAcceso -> . ID PERIOD ID

    PUBLIC          shift and go to state 16
    VAR             shift and go to state 18
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 17
    IF              shift and go to state 28
    READ            shift and go to state 29
    PRINT           shift and go to state 30
    WHILE           shift and go to state 31

    constructor                    shift and go to state 12
    vars                           shift and go to state 13
    funcion                        shift and go to state 14
    estatuto                       shift and go to state 15
    scope                          shift and go to state 19
    asignacion                     shift and go to state 20
    llamada_func                   shift and go to state 21
    objeto_metodo                  shift and go to state 22
    condicion                      shift and go to state 23
    lectura                        shift and go to state 24
    escritura                      shift and go to state 25
    ciclo                          shift and go to state 26
    objeto_aAcceso                 shift and go to state 27

state 8

    (62) scope -> PRIVATE .

    CLASS           reduce using rule 62 (scope -> PRIVATE .)
    DEF             reduce using rule 62 (scope -> PRIVATE .)


state 9

    (63) scope -> PUBLIC .

    CLASS           reduce using rule 63 (scope -> PUBLIC .)
    DEF             reduce using rule 63 (scope -> PUBLIC .)


state 10

    (64) scope -> PROTECTED .

    CLASS           reduce using rule 64 (scope -> PROTECTED .)
    DEF             reduce using rule 64 (scope -> PROTECTED .)


state 11

    (3) class -> scope CLASS . ID context
    (4) class -> scope CLASS . ID COLON ID context

    ID              shift and go to state 32


state 12

    (5) context -> LBRACE constructor . vars funcion estatuto RBRACE
    (6) context -> LBRACE constructor . vars estatuto RBRACE
    (12) context -> LBRACE constructor . RBRACE
    (65) vars -> . VAR aux
    (66) vars -> . vars VAR aux

    RBRACE          shift and go to state 34
    VAR             shift and go to state 18

    vars                           shift and go to state 33

state 13

    (7) context -> LBRACE vars . funcion estatuto RBRACE
    (8) context -> LBRACE vars . estatuto RBRACE
    (10) context -> LBRACE vars . RBRACE
    (66) vars -> vars . VAR aux
    (49) funcion -> . scope DEF ID LPAREN param RPAREN contexto_func
    (17) estatuto -> . asignacion
    (18) estatuto -> . llamada_func
    (19) estatuto -> . objeto_metodo
    (20) estatuto -> . condicion
    (21) estatuto -> . lectura
    (22) estatuto -> . escritura
    (23) estatuto -> . ciclo
    (24) estatuto -> . estatuto asignacion
    (25) estatuto -> . estatuto llamada_func
    (26) estatuto -> . estatuto objeto_metodo
    (27) estatuto -> . estatuto condicion
    (28) estatuto -> . estatuto lectura
    (29) estatuto -> . estatuto escritura
    (30) estatuto -> . estatuto ciclo
    (62) scope -> . PRIVATE
    (63) scope -> . PUBLIC
    (64) scope -> . PROTECTED
    (81) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS expresion
    (84) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET cint RBRACKET EQUALS expresion
    (86) asignacion -> . ID EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (91) asignacion -> . ID LBRACKET cint RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (96) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET cint RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID EQUALS objeto_metodo
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (32) condicion -> . IF LPAREN expresion RPAREN bloque
    (33) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (35) lectura -> . READ LPAREN ID RPAREN
    (36) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (37) escritura -> . PRINT LPAREN aux5 RPAREN
    (31) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (134) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          shift and go to state 37
    VAR             shift and go to state 38
    PRIVATE         shift and go to state 8
    PUBLIC          shift and go to state 9
    PROTECTED       shift and go to state 10
    ID              shift and go to state 17
    IF              shift and go to state 28
    READ            shift and go to state 29
    PRINT           shift and go to state 30
    WHILE           shift and go to state 31

    funcion                        shift and go to state 35
    estatuto                       shift and go to state 36
    scope                          shift and go to state 19
    asignacion                     shift and go to state 20
    llamada_func                   shift and go to state 21
    objeto_metodo                  shift and go to state 22
    condicion                      shift and go to state 23
    lectura                        shift and go to state 24
    escritura                      shift and go to state 25
    ciclo                          shift and go to state 26
    objeto_aAcceso                 shift and go to state 27

state 14

    (9) context -> LBRACE funcion . RBRACE

    RBRACE          shift and go to state 39


state 15

    (11) context -> LBRACE estatuto . RBRACE
    (24) estatuto -> estatuto . asignacion
    (25) estatuto -> estatuto . llamada_func
    (26) estatuto -> estatuto . objeto_metodo
    (27) estatuto -> estatuto . condicion
    (28) estatuto -> estatuto . lectura
    (29) estatuto -> estatuto . escritura
    (30) estatuto -> estatuto . ciclo
    (81) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS expresion
    (84) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET cint RBRACKET EQUALS expresion
    (86) asignacion -> . ID EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (91) asignacion -> . ID LBRACKET cint RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (96) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET cint RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID EQUALS objeto_metodo
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (32) condicion -> . IF LPAREN expresion RPAREN bloque
    (33) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (35) lectura -> . READ LPAREN ID RPAREN
    (36) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (37) escritura -> . PRINT LPAREN aux5 RPAREN
    (31) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (134) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          shift and go to state 40
    ID              shift and go to state 17
    IF              shift and go to state 28
    READ            shift and go to state 29
    PRINT           shift and go to state 30
    WHILE           shift and go to state 31

    asignacion                     shift and go to state 41
    llamada_func                   shift and go to state 42
    objeto_metodo                  shift and go to state 43
    condicion                      shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    ciclo                          shift and go to state 47
    objeto_aAcceso                 shift and go to state 27

state 16

    (13) constructor -> PUBLIC . ID LPAREN param RPAREN contexto_const
    (63) scope -> PUBLIC .

    ID              shift and go to state 48
    DEF             reduce using rule 63 (scope -> PUBLIC .)


state 17

    (84) asignacion -> ID . LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (85) asignacion -> ID . LBRACKET cint RBRACKET EQUALS expresion
    (86) asignacion -> ID . EQUALS expresion
    (90) asignacion -> ID . LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (91) asignacion -> ID . LBRACKET cint RBRACKET EQUALS llamada_func
    (92) asignacion -> ID . EQUALS llamada_func
    (96) asignacion -> ID . LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (97) asignacion -> ID . LBRACKET cint RBRACKET EQUALS objeto_metodo
    (98) asignacion -> ID . EQUALS objeto_metodo
    (46) llamada_func -> ID . LPAREN aux3 RPAREN
    (99) objeto_metodo -> ID . PERIOD llamada_func
    (134) objeto_aAcceso -> ID . PERIOD ID

    LBRACKET        shift and go to state 49
    EQUALS          shift and go to state 50
    LPAREN          shift and go to state 51
    PERIOD          shift and go to state 52


state 18

    (65) vars -> VAR . aux
    (67) aux -> . aux aux
    (68) aux -> . ID COLON tipo_simple
    (69) aux -> . ID COLON tipo_compuesto
    (70) aux -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (71) aux -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (72) aux -> . ID LBRACKET cint RBRACKET COLON tipo_simple
    (73) aux -> . ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (74) aux -> . ID aux2 COLON tipo_simple
    (75) aux -> . ID aux2 COLON tipo_compuesto

    ID              shift and go to state 54

    aux                            shift and go to state 53

state 19

    (49) funcion -> scope . DEF ID LPAREN param RPAREN contexto_func

    DEF             shift and go to state 55


state 20

    (17) estatuto -> asignacion .

    RBRACE          reduce using rule 17 (estatuto -> asignacion .)
    ID              reduce using rule 17 (estatuto -> asignacion .)
    IF              reduce using rule 17 (estatuto -> asignacion .)
    READ            reduce using rule 17 (estatuto -> asignacion .)
    PRINT           reduce using rule 17 (estatuto -> asignacion .)
    WHILE           reduce using rule 17 (estatuto -> asignacion .)
    RETURN          reduce using rule 17 (estatuto -> asignacion .)


state 21

    (18) estatuto -> llamada_func .

    RBRACE          reduce using rule 18 (estatuto -> llamada_func .)
    ID              reduce using rule 18 (estatuto -> llamada_func .)
    IF              reduce using rule 18 (estatuto -> llamada_func .)
    READ            reduce using rule 18 (estatuto -> llamada_func .)
    PRINT           reduce using rule 18 (estatuto -> llamada_func .)
    WHILE           reduce using rule 18 (estatuto -> llamada_func .)
    RETURN          reduce using rule 18 (estatuto -> llamada_func .)


state 22

    (19) estatuto -> objeto_metodo .

    RBRACE          reduce using rule 19 (estatuto -> objeto_metodo .)
    ID              reduce using rule 19 (estatuto -> objeto_metodo .)
    IF              reduce using rule 19 (estatuto -> objeto_metodo .)
    READ            reduce using rule 19 (estatuto -> objeto_metodo .)
    PRINT           reduce using rule 19 (estatuto -> objeto_metodo .)
    WHILE           reduce using rule 19 (estatuto -> objeto_metodo .)
    RETURN          reduce using rule 19 (estatuto -> objeto_metodo .)


state 23

    (20) estatuto -> condicion .

    RBRACE          reduce using rule 20 (estatuto -> condicion .)
    ID              reduce using rule 20 (estatuto -> condicion .)
    IF              reduce using rule 20 (estatuto -> condicion .)
    READ            reduce using rule 20 (estatuto -> condicion .)
    PRINT           reduce using rule 20 (estatuto -> condicion .)
    WHILE           reduce using rule 20 (estatuto -> condicion .)
    RETURN          reduce using rule 20 (estatuto -> condicion .)


state 24

    (21) estatuto -> lectura .

    RBRACE          reduce using rule 21 (estatuto -> lectura .)
    ID              reduce using rule 21 (estatuto -> lectura .)
    IF              reduce using rule 21 (estatuto -> lectura .)
    READ            reduce using rule 21 (estatuto -> lectura .)
    PRINT           reduce using rule 21 (estatuto -> lectura .)
    WHILE           reduce using rule 21 (estatuto -> lectura .)
    RETURN          reduce using rule 21 (estatuto -> lectura .)


state 25

    (22) estatuto -> escritura .

    RBRACE          reduce using rule 22 (estatuto -> escritura .)
    ID              reduce using rule 22 (estatuto -> escritura .)
    IF              reduce using rule 22 (estatuto -> escritura .)
    READ            reduce using rule 22 (estatuto -> escritura .)
    PRINT           reduce using rule 22 (estatuto -> escritura .)
    WHILE           reduce using rule 22 (estatuto -> escritura .)
    RETURN          reduce using rule 22 (estatuto -> escritura .)


state 26

    (23) estatuto -> ciclo .

    RBRACE          reduce using rule 23 (estatuto -> ciclo .)
    ID              reduce using rule 23 (estatuto -> ciclo .)
    IF              reduce using rule 23 (estatuto -> ciclo .)
    READ            reduce using rule 23 (estatuto -> ciclo .)
    PRINT           reduce using rule 23 (estatuto -> ciclo .)
    WHILE           reduce using rule 23 (estatuto -> ciclo .)
    RETURN          reduce using rule 23 (estatuto -> ciclo .)


state 27

    (81) asignacion -> objeto_aAcceso . LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (82) asignacion -> objeto_aAcceso . LBRACKET cint RBRACKET EQUALS expresion
    (83) asignacion -> objeto_aAcceso . EQUALS expresion
    (87) asignacion -> objeto_aAcceso . LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (88) asignacion -> objeto_aAcceso . LBRACKET cint RBRACKET EQUALS llamada_func
    (89) asignacion -> objeto_aAcceso . EQUALS llamada_func
    (93) asignacion -> objeto_aAcceso . LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (94) asignacion -> objeto_aAcceso . LBRACKET cint RBRACKET EQUALS objeto_metodo
    (95) asignacion -> objeto_aAcceso . EQUALS objeto_metodo

    LBRACKET        shift and go to state 56
    EQUALS          shift and go to state 57


state 28

    (32) condicion -> IF . LPAREN expresion RPAREN bloque
    (33) condicion -> IF . LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque

    LPAREN          shift and go to state 58


state 29

    (35) lectura -> READ . LPAREN ID RPAREN
    (36) lectura -> READ . LPAREN objeto_aAcceso RPAREN

    LPAREN          shift and go to state 59


state 30

    (37) escritura -> PRINT . LPAREN aux5 RPAREN

    LPAREN          shift and go to state 60


state 31

    (31) ciclo -> WHILE . LPAREN expresion RPAREN bloque

    LPAREN          shift and go to state 61


state 32

    (3) class -> scope CLASS ID . context
    (4) class -> scope CLASS ID . COLON ID context
    (5) context -> . LBRACE constructor vars funcion estatuto RBRACE
    (6) context -> . LBRACE constructor vars estatuto RBRACE
    (7) context -> . LBRACE vars funcion estatuto RBRACE
    (8) context -> . LBRACE vars estatuto RBRACE
    (9) context -> . LBRACE funcion RBRACE
    (10) context -> . LBRACE vars RBRACE
    (11) context -> . LBRACE estatuto RBRACE
    (12) context -> . LBRACE constructor RBRACE

    COLON           shift and go to state 63
    LBRACE          shift and go to state 7

    context                        shift and go to state 62

state 33

    (5) context -> LBRACE constructor vars . funcion estatuto RBRACE
    (6) context -> LBRACE constructor vars . estatuto RBRACE
    (66) vars -> vars . VAR aux
    (49) funcion -> . scope DEF ID LPAREN param RPAREN contexto_func
    (17) estatuto -> . asignacion
    (18) estatuto -> . llamada_func
    (19) estatuto -> . objeto_metodo
    (20) estatuto -> . condicion
    (21) estatuto -> . lectura
    (22) estatuto -> . escritura
    (23) estatuto -> . ciclo
    (24) estatuto -> . estatuto asignacion
    (25) estatuto -> . estatuto llamada_func
    (26) estatuto -> . estatuto objeto_metodo
    (27) estatuto -> . estatuto condicion
    (28) estatuto -> . estatuto lectura
    (29) estatuto -> . estatuto escritura
    (30) estatuto -> . estatuto ciclo
    (62) scope -> . PRIVATE
    (63) scope -> . PUBLIC
    (64) scope -> . PROTECTED
    (81) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS expresion
    (84) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET cint RBRACKET EQUALS expresion
    (86) asignacion -> . ID EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (91) asignacion -> . ID LBRACKET cint RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (96) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET cint RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID EQUALS objeto_metodo
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (32) condicion -> . IF LPAREN expresion RPAREN bloque
    (33) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (35) lectura -> . READ LPAREN ID RPAREN
    (36) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (37) escritura -> . PRINT LPAREN aux5 RPAREN
    (31) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (134) objeto_aAcceso -> . ID PERIOD ID

    VAR             shift and go to state 38
    PRIVATE         shift and go to state 8
    PUBLIC          shift and go to state 9
    PROTECTED       shift and go to state 10
    ID              shift and go to state 17
    IF              shift and go to state 28
    READ            shift and go to state 29
    PRINT           shift and go to state 30
    WHILE           shift and go to state 31

    funcion                        shift and go to state 64
    estatuto                       shift and go to state 65
    scope                          shift and go to state 19
    asignacion                     shift and go to state 20
    llamada_func                   shift and go to state 21
    objeto_metodo                  shift and go to state 22
    condicion                      shift and go to state 23
    lectura                        shift and go to state 24
    escritura                      shift and go to state 25
    ciclo                          shift and go to state 26
    objeto_aAcceso                 shift and go to state 27

state 34

    (12) context -> LBRACE constructor RBRACE .

    $end            reduce using rule 12 (context -> LBRACE constructor RBRACE .)


state 35

    (7) context -> LBRACE vars funcion . estatuto RBRACE
    (17) estatuto -> . asignacion
    (18) estatuto -> . llamada_func
    (19) estatuto -> . objeto_metodo
    (20) estatuto -> . condicion
    (21) estatuto -> . lectura
    (22) estatuto -> . escritura
    (23) estatuto -> . ciclo
    (24) estatuto -> . estatuto asignacion
    (25) estatuto -> . estatuto llamada_func
    (26) estatuto -> . estatuto objeto_metodo
    (27) estatuto -> . estatuto condicion
    (28) estatuto -> . estatuto lectura
    (29) estatuto -> . estatuto escritura
    (30) estatuto -> . estatuto ciclo
    (81) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS expresion
    (84) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET cint RBRACKET EQUALS expresion
    (86) asignacion -> . ID EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (91) asignacion -> . ID LBRACKET cint RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (96) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET cint RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID EQUALS objeto_metodo
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (32) condicion -> . IF LPAREN expresion RPAREN bloque
    (33) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (35) lectura -> . READ LPAREN ID RPAREN
    (36) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (37) escritura -> . PRINT LPAREN aux5 RPAREN
    (31) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (134) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 17
    IF              shift and go to state 28
    READ            shift and go to state 29
    PRINT           shift and go to state 30
    WHILE           shift and go to state 31

    estatuto                       shift and go to state 66
    asignacion                     shift and go to state 20
    llamada_func                   shift and go to state 21
    objeto_metodo                  shift and go to state 22
    condicion                      shift and go to state 23
    lectura                        shift and go to state 24
    escritura                      shift and go to state 25
    ciclo                          shift and go to state 26
    objeto_aAcceso                 shift and go to state 27

state 36

    (8) context -> LBRACE vars estatuto . RBRACE
    (24) estatuto -> estatuto . asignacion
    (25) estatuto -> estatuto . llamada_func
    (26) estatuto -> estatuto . objeto_metodo
    (27) estatuto -> estatuto . condicion
    (28) estatuto -> estatuto . lectura
    (29) estatuto -> estatuto . escritura
    (30) estatuto -> estatuto . ciclo
    (81) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS expresion
    (84) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET cint RBRACKET EQUALS expresion
    (86) asignacion -> . ID EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (91) asignacion -> . ID LBRACKET cint RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (96) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET cint RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID EQUALS objeto_metodo
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (32) condicion -> . IF LPAREN expresion RPAREN bloque
    (33) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (35) lectura -> . READ LPAREN ID RPAREN
    (36) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (37) escritura -> . PRINT LPAREN aux5 RPAREN
    (31) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (134) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          shift and go to state 67
    ID              shift and go to state 17
    IF              shift and go to state 28
    READ            shift and go to state 29
    PRINT           shift and go to state 30
    WHILE           shift and go to state 31

    asignacion                     shift and go to state 41
    llamada_func                   shift and go to state 42
    objeto_metodo                  shift and go to state 43
    condicion                      shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    ciclo                          shift and go to state 47
    objeto_aAcceso                 shift and go to state 27

state 37

    (10) context -> LBRACE vars RBRACE .

    $end            reduce using rule 10 (context -> LBRACE vars RBRACE .)


state 38

    (66) vars -> vars VAR . aux
    (67) aux -> . aux aux
    (68) aux -> . ID COLON tipo_simple
    (69) aux -> . ID COLON tipo_compuesto
    (70) aux -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (71) aux -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (72) aux -> . ID LBRACKET cint RBRACKET COLON tipo_simple
    (73) aux -> . ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (74) aux -> . ID aux2 COLON tipo_simple
    (75) aux -> . ID aux2 COLON tipo_compuesto

    ID              shift and go to state 54

    aux                            shift and go to state 68

state 39

    (9) context -> LBRACE funcion RBRACE .

    $end            reduce using rule 9 (context -> LBRACE funcion RBRACE .)


state 40

    (11) context -> LBRACE estatuto RBRACE .

    $end            reduce using rule 11 (context -> LBRACE estatuto RBRACE .)


state 41

    (24) estatuto -> estatuto asignacion .

    RBRACE          reduce using rule 24 (estatuto -> estatuto asignacion .)
    ID              reduce using rule 24 (estatuto -> estatuto asignacion .)
    IF              reduce using rule 24 (estatuto -> estatuto asignacion .)
    READ            reduce using rule 24 (estatuto -> estatuto asignacion .)
    PRINT           reduce using rule 24 (estatuto -> estatuto asignacion .)
    WHILE           reduce using rule 24 (estatuto -> estatuto asignacion .)
    RETURN          reduce using rule 24 (estatuto -> estatuto asignacion .)


state 42

    (25) estatuto -> estatuto llamada_func .

    RBRACE          reduce using rule 25 (estatuto -> estatuto llamada_func .)
    ID              reduce using rule 25 (estatuto -> estatuto llamada_func .)
    IF              reduce using rule 25 (estatuto -> estatuto llamada_func .)
    READ            reduce using rule 25 (estatuto -> estatuto llamada_func .)
    PRINT           reduce using rule 25 (estatuto -> estatuto llamada_func .)
    WHILE           reduce using rule 25 (estatuto -> estatuto llamada_func .)
    RETURN          reduce using rule 25 (estatuto -> estatuto llamada_func .)


state 43

    (26) estatuto -> estatuto objeto_metodo .

    RBRACE          reduce using rule 26 (estatuto -> estatuto objeto_metodo .)
    ID              reduce using rule 26 (estatuto -> estatuto objeto_metodo .)
    IF              reduce using rule 26 (estatuto -> estatuto objeto_metodo .)
    READ            reduce using rule 26 (estatuto -> estatuto objeto_metodo .)
    PRINT           reduce using rule 26 (estatuto -> estatuto objeto_metodo .)
    WHILE           reduce using rule 26 (estatuto -> estatuto objeto_metodo .)
    RETURN          reduce using rule 26 (estatuto -> estatuto objeto_metodo .)


state 44

    (27) estatuto -> estatuto condicion .

    RBRACE          reduce using rule 27 (estatuto -> estatuto condicion .)
    ID              reduce using rule 27 (estatuto -> estatuto condicion .)
    IF              reduce using rule 27 (estatuto -> estatuto condicion .)
    READ            reduce using rule 27 (estatuto -> estatuto condicion .)
    PRINT           reduce using rule 27 (estatuto -> estatuto condicion .)
    WHILE           reduce using rule 27 (estatuto -> estatuto condicion .)
    RETURN          reduce using rule 27 (estatuto -> estatuto condicion .)


state 45

    (28) estatuto -> estatuto lectura .

    RBRACE          reduce using rule 28 (estatuto -> estatuto lectura .)
    ID              reduce using rule 28 (estatuto -> estatuto lectura .)
    IF              reduce using rule 28 (estatuto -> estatuto lectura .)
    READ            reduce using rule 28 (estatuto -> estatuto lectura .)
    PRINT           reduce using rule 28 (estatuto -> estatuto lectura .)
    WHILE           reduce using rule 28 (estatuto -> estatuto lectura .)
    RETURN          reduce using rule 28 (estatuto -> estatuto lectura .)


state 46

    (29) estatuto -> estatuto escritura .

    RBRACE          reduce using rule 29 (estatuto -> estatuto escritura .)
    ID              reduce using rule 29 (estatuto -> estatuto escritura .)
    IF              reduce using rule 29 (estatuto -> estatuto escritura .)
    READ            reduce using rule 29 (estatuto -> estatuto escritura .)
    PRINT           reduce using rule 29 (estatuto -> estatuto escritura .)
    WHILE           reduce using rule 29 (estatuto -> estatuto escritura .)
    RETURN          reduce using rule 29 (estatuto -> estatuto escritura .)


state 47

    (30) estatuto -> estatuto ciclo .

    RBRACE          reduce using rule 30 (estatuto -> estatuto ciclo .)
    ID              reduce using rule 30 (estatuto -> estatuto ciclo .)
    IF              reduce using rule 30 (estatuto -> estatuto ciclo .)
    READ            reduce using rule 30 (estatuto -> estatuto ciclo .)
    PRINT           reduce using rule 30 (estatuto -> estatuto ciclo .)
    WHILE           reduce using rule 30 (estatuto -> estatuto ciclo .)
    RETURN          reduce using rule 30 (estatuto -> estatuto ciclo .)


state 48

    (13) constructor -> PUBLIC ID . LPAREN param RPAREN contexto_const

    LPAREN          shift and go to state 69


state 49

    (84) asignacion -> ID LBRACKET . cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (85) asignacion -> ID LBRACKET . cint RBRACKET EQUALS expresion
    (90) asignacion -> ID LBRACKET . cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (91) asignacion -> ID LBRACKET . cint RBRACKET EQUALS llamada_func
    (96) asignacion -> ID LBRACKET . cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (97) asignacion -> ID LBRACKET . cint RBRACKET EQUALS objeto_metodo
    (126) cint -> . CINT

    CINT            shift and go to state 71

    cint                           shift and go to state 70

state 50

    (86) asignacion -> ID EQUALS . expresion
    (92) asignacion -> ID EQUALS . llamada_func
    (98) asignacion -> ID EQUALS . objeto_metodo
    (100) expresion -> . exp_bool
    (101) expresion -> . exp_bool rel_op exp_bool
    (102) expresion -> . expresion AND exp_bool
    (103) expresion -> . expresion OR exp_bool
    (104) expresion -> . expresion AND exp_bool rel_op exp_bool
    (105) expresion -> . expresion OR exp_bool rel_op exp_bool
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (106) exp_bool -> . TRUE
    (107) exp_bool -> . FALSE
    (108) exp_bool -> . exp
    (109) exp -> . termino
    (110) exp -> . exp PLUS termino
    (111) exp -> . exp MINUS termino
    (112) termino -> . factor
    (113) termino -> . termino TIMES factor
    (114) termino -> . termino DIVIDE factor
    (115) termino -> . termino MODULO factor
    (116) factor -> . LPAREN expresion RPAREN
    (117) factor -> . PLUS objeto_aAcceso
    (118) factor -> . MINUS objeto_aAcceso
    (119) factor -> . PLUS var
    (120) factor -> . MINUS var
    (121) factor -> . var
    (122) factor -> . objeto_aAcceso
    (123) var -> . ID
    (124) var -> . cint
    (125) var -> . cfloat
    (134) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER

    ID              shift and go to state 72
    TRUE            shift and go to state 78
    FALSE           shift and go to state 79
    LPAREN          shift and go to state 77
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CINT            shift and go to state 71
    NUMBER          shift and go to state 89

    expresion                      shift and go to state 73
    llamada_func                   shift and go to state 74
    objeto_metodo                  shift and go to state 75
    exp_bool                       shift and go to state 76
    exp                            shift and go to state 80
    termino                        shift and go to state 81
    factor                         shift and go to state 84
    objeto_aAcceso                 shift and go to state 85
    var                            shift and go to state 86
    cint                           shift and go to state 87
    cfloat                         shift and go to state 88

state 51

    (46) llamada_func -> ID LPAREN . aux3 RPAREN
    (47) aux3 -> . exp
    (48) aux3 -> . aux3 COMMA exp
    (109) exp -> . termino
    (110) exp -> . exp PLUS termino
    (111) exp -> . exp MINUS termino
    (112) termino -> . factor
    (113) termino -> . termino TIMES factor
    (114) termino -> . termino DIVIDE factor
    (115) termino -> . termino MODULO factor
    (116) factor -> . LPAREN expresion RPAREN
    (117) factor -> . PLUS objeto_aAcceso
    (118) factor -> . MINUS objeto_aAcceso
    (119) factor -> . PLUS var
    (120) factor -> . MINUS var
    (121) factor -> . var
    (122) factor -> . objeto_aAcceso
    (123) var -> . ID
    (124) var -> . cint
    (125) var -> . cfloat
    (134) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER

    LPAREN          shift and go to state 77
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    ID              shift and go to state 90
    CINT            shift and go to state 71
    NUMBER          shift and go to state 89

    aux3                           shift and go to state 91
    exp                            shift and go to state 92
    termino                        shift and go to state 81
    factor                         shift and go to state 84
    objeto_aAcceso                 shift and go to state 85
    var                            shift and go to state 86
    cint                           shift and go to state 87
    cfloat                         shift and go to state 88

state 52

    (99) objeto_metodo -> ID PERIOD . llamada_func
    (134) objeto_aAcceso -> ID PERIOD . ID
    (46) llamada_func -> . ID LPAREN aux3 RPAREN

    ID              shift and go to state 93

    llamada_func                   shift and go to state 94

state 53

    (65) vars -> VAR aux .
    (67) aux -> aux . aux
    (67) aux -> . aux aux
    (68) aux -> . ID COLON tipo_simple
    (69) aux -> . ID COLON tipo_compuesto
    (70) aux -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (71) aux -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (72) aux -> . ID LBRACKET cint RBRACKET COLON tipo_simple
    (73) aux -> . ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (74) aux -> . ID aux2 COLON tipo_simple
    (75) aux -> . ID aux2 COLON tipo_compuesto

  ! shift/reduce conflict for ID resolved as shift
    RBRACE          reduce using rule 65 (vars -> VAR aux .)
    VAR             reduce using rule 65 (vars -> VAR aux .)
    PRIVATE         reduce using rule 65 (vars -> VAR aux .)
    PUBLIC          reduce using rule 65 (vars -> VAR aux .)
    PROTECTED       reduce using rule 65 (vars -> VAR aux .)
    IF              reduce using rule 65 (vars -> VAR aux .)
    READ            reduce using rule 65 (vars -> VAR aux .)
    PRINT           reduce using rule 65 (vars -> VAR aux .)
    WHILE           reduce using rule 65 (vars -> VAR aux .)
    RETURN          reduce using rule 65 (vars -> VAR aux .)
    ID              shift and go to state 54

  ! ID              [ reduce using rule 65 (vars -> VAR aux .) ]

    aux                            shift and go to state 95

state 54

    (68) aux -> ID . COLON tipo_simple
    (69) aux -> ID . COLON tipo_compuesto
    (70) aux -> ID . LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (71) aux -> ID . LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (72) aux -> ID . LBRACKET cint RBRACKET COLON tipo_simple
    (73) aux -> ID . LBRACKET cint RBRACKET COLON tipo_compuesto
    (74) aux -> ID . aux2 COLON tipo_simple
    (75) aux -> ID . aux2 COLON tipo_compuesto
    (76) aux2 -> . aux2 aux2
    (77) aux2 -> . COMMA ID

    COLON           shift and go to state 96
    LBRACKET        shift and go to state 97
    COMMA           shift and go to state 99

    aux2                           shift and go to state 98

state 55

    (49) funcion -> scope DEF . ID LPAREN param RPAREN contexto_func

    ID              shift and go to state 100


state 56

    (81) asignacion -> objeto_aAcceso LBRACKET . cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (82) asignacion -> objeto_aAcceso LBRACKET . cint RBRACKET EQUALS expresion
    (87) asignacion -> objeto_aAcceso LBRACKET . cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (88) asignacion -> objeto_aAcceso LBRACKET . cint RBRACKET EQUALS llamada_func
    (93) asignacion -> objeto_aAcceso LBRACKET . cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (94) asignacion -> objeto_aAcceso LBRACKET . cint RBRACKET EQUALS objeto_metodo
    (126) cint -> . CINT

    CINT            shift and go to state 71

    cint                           shift and go to state 101

state 57

    (83) asignacion -> objeto_aAcceso EQUALS . expresion
    (89) asignacion -> objeto_aAcceso EQUALS . llamada_func
    (95) asignacion -> objeto_aAcceso EQUALS . objeto_metodo
    (100) expresion -> . exp_bool
    (101) expresion -> . exp_bool rel_op exp_bool
    (102) expresion -> . expresion AND exp_bool
    (103) expresion -> . expresion OR exp_bool
    (104) expresion -> . expresion AND exp_bool rel_op exp_bool
    (105) expresion -> . expresion OR exp_bool rel_op exp_bool
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (106) exp_bool -> . TRUE
    (107) exp_bool -> . FALSE
    (108) exp_bool -> . exp
    (109) exp -> . termino
    (110) exp -> . exp PLUS termino
    (111) exp -> . exp MINUS termino
    (112) termino -> . factor
    (113) termino -> . termino TIMES factor
    (114) termino -> . termino DIVIDE factor
    (115) termino -> . termino MODULO factor
    (116) factor -> . LPAREN expresion RPAREN
    (117) factor -> . PLUS objeto_aAcceso
    (118) factor -> . MINUS objeto_aAcceso
    (119) factor -> . PLUS var
    (120) factor -> . MINUS var
    (121) factor -> . var
    (122) factor -> . objeto_aAcceso
    (123) var -> . ID
    (124) var -> . cint
    (125) var -> . cfloat
    (134) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER

    ID              shift and go to state 72
    TRUE            shift and go to state 78
    FALSE           shift and go to state 79
    LPAREN          shift and go to state 77
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CINT            shift and go to state 71
    NUMBER          shift and go to state 89

    objeto_aAcceso                 shift and go to state 85
    expresion                      shift and go to state 102
    llamada_func                   shift and go to state 103
    objeto_metodo                  shift and go to state 104
    exp_bool                       shift and go to state 76
    exp                            shift and go to state 80
    termino                        shift and go to state 81
    factor                         shift and go to state 84
    var                            shift and go to state 86
    cint                           shift and go to state 87
    cfloat                         shift and go to state 88

state 58

    (32) condicion -> IF LPAREN . expresion RPAREN bloque
    (33) condicion -> IF LPAREN . expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (100) expresion -> . exp_bool
    (101) expresion -> . exp_bool rel_op exp_bool
    (102) expresion -> . expresion AND exp_bool
    (103) expresion -> . expresion OR exp_bool
    (104) expresion -> . expresion AND exp_bool rel_op exp_bool
    (105) expresion -> . expresion OR exp_bool rel_op exp_bool
    (106) exp_bool -> . TRUE
    (107) exp_bool -> . FALSE
    (108) exp_bool -> . exp
    (109) exp -> . termino
    (110) exp -> . exp PLUS termino
    (111) exp -> . exp MINUS termino
    (112) termino -> . factor
    (113) termino -> . termino TIMES factor
    (114) termino -> . termino DIVIDE factor
    (115) termino -> . termino MODULO factor
    (116) factor -> . LPAREN expresion RPAREN
    (117) factor -> . PLUS objeto_aAcceso
    (118) factor -> . MINUS objeto_aAcceso
    (119) factor -> . PLUS var
    (120) factor -> . MINUS var
    (121) factor -> . var
    (122) factor -> . objeto_aAcceso
    (123) var -> . ID
    (124) var -> . cint
    (125) var -> . cfloat
    (134) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER

    TRUE            shift and go to state 78
    FALSE           shift and go to state 79
    LPAREN          shift and go to state 77
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    ID              shift and go to state 90
    CINT            shift and go to state 71
    NUMBER          shift and go to state 89

    expresion                      shift and go to state 105
    exp_bool                       shift and go to state 76
    exp                            shift and go to state 80
    termino                        shift and go to state 81
    factor                         shift and go to state 84
    objeto_aAcceso                 shift and go to state 85
    var                            shift and go to state 86
    cint                           shift and go to state 87
    cfloat                         shift and go to state 88

state 59

    (35) lectura -> READ LPAREN . ID RPAREN
    (36) lectura -> READ LPAREN . objeto_aAcceso RPAREN
    (134) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 106

    objeto_aAcceso                 shift and go to state 107

state 60

    (37) escritura -> PRINT LPAREN . aux5 RPAREN
    (38) aux5 -> . expresion
    (39) aux5 -> . llamada_func
    (40) aux5 -> . objeto_metodo
    (41) aux5 -> . CSTRING
    (42) aux5 -> . aux5 COMMA expresion
    (43) aux5 -> . aux5 COMMA llamada_func
    (44) aux5 -> . aux5 COMMA objeto_metodo
    (45) aux5 -> . aux5 COMMA CSTRING
    (100) expresion -> . exp_bool
    (101) expresion -> . exp_bool rel_op exp_bool
    (102) expresion -> . expresion AND exp_bool
    (103) expresion -> . expresion OR exp_bool
    (104) expresion -> . expresion AND exp_bool rel_op exp_bool
    (105) expresion -> . expresion OR exp_bool rel_op exp_bool
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (106) exp_bool -> . TRUE
    (107) exp_bool -> . FALSE
    (108) exp_bool -> . exp
    (109) exp -> . termino
    (110) exp -> . exp PLUS termino
    (111) exp -> . exp MINUS termino
    (112) termino -> . factor
    (113) termino -> . termino TIMES factor
    (114) termino -> . termino DIVIDE factor
    (115) termino -> . termino MODULO factor
    (116) factor -> . LPAREN expresion RPAREN
    (117) factor -> . PLUS objeto_aAcceso
    (118) factor -> . MINUS objeto_aAcceso
    (119) factor -> . PLUS var
    (120) factor -> . MINUS var
    (121) factor -> . var
    (122) factor -> . objeto_aAcceso
    (123) var -> . ID
    (124) var -> . cint
    (125) var -> . cfloat
    (134) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER

    CSTRING         shift and go to state 112
    ID              shift and go to state 72
    TRUE            shift and go to state 78
    FALSE           shift and go to state 79
    LPAREN          shift and go to state 77
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CINT            shift and go to state 71
    NUMBER          shift and go to state 89

    aux5                           shift and go to state 108
    expresion                      shift and go to state 109
    llamada_func                   shift and go to state 110
    objeto_metodo                  shift and go to state 111
    exp_bool                       shift and go to state 76
    exp                            shift and go to state 80
    termino                        shift and go to state 81
    factor                         shift and go to state 84
    objeto_aAcceso                 shift and go to state 85
    var                            shift and go to state 86
    cint                           shift and go to state 87
    cfloat                         shift and go to state 88

state 61

    (31) ciclo -> WHILE LPAREN . expresion RPAREN bloque
    (100) expresion -> . exp_bool
    (101) expresion -> . exp_bool rel_op exp_bool
    (102) expresion -> . expresion AND exp_bool
    (103) expresion -> . expresion OR exp_bool
    (104) expresion -> . expresion AND exp_bool rel_op exp_bool
    (105) expresion -> . expresion OR exp_bool rel_op exp_bool
    (106) exp_bool -> . TRUE
    (107) exp_bool -> . FALSE
    (108) exp_bool -> . exp
    (109) exp -> . termino
    (110) exp -> . exp PLUS termino
    (111) exp -> . exp MINUS termino
    (112) termino -> . factor
    (113) termino -> . termino TIMES factor
    (114) termino -> . termino DIVIDE factor
    (115) termino -> . termino MODULO factor
    (116) factor -> . LPAREN expresion RPAREN
    (117) factor -> . PLUS objeto_aAcceso
    (118) factor -> . MINUS objeto_aAcceso
    (119) factor -> . PLUS var
    (120) factor -> . MINUS var
    (121) factor -> . var
    (122) factor -> . objeto_aAcceso
    (123) var -> . ID
    (124) var -> . cint
    (125) var -> . cfloat
    (134) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER

    TRUE            shift and go to state 78
    FALSE           shift and go to state 79
    LPAREN          shift and go to state 77
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    ID              shift and go to state 90
    CINT            shift and go to state 71
    NUMBER          shift and go to state 89

    expresion                      shift and go to state 113
    exp_bool                       shift and go to state 76
    exp                            shift and go to state 80
    termino                        shift and go to state 81
    factor                         shift and go to state 84
    objeto_aAcceso                 shift and go to state 85
    var                            shift and go to state 86
    cint                           shift and go to state 87
    cfloat                         shift and go to state 88

state 62

    (3) class -> scope CLASS ID context .

    $end            reduce using rule 3 (class -> scope CLASS ID context .)


state 63

    (4) class -> scope CLASS ID COLON . ID context

    ID              shift and go to state 114


state 64

    (5) context -> LBRACE constructor vars funcion . estatuto RBRACE
    (17) estatuto -> . asignacion
    (18) estatuto -> . llamada_func
    (19) estatuto -> . objeto_metodo
    (20) estatuto -> . condicion
    (21) estatuto -> . lectura
    (22) estatuto -> . escritura
    (23) estatuto -> . ciclo
    (24) estatuto -> . estatuto asignacion
    (25) estatuto -> . estatuto llamada_func
    (26) estatuto -> . estatuto objeto_metodo
    (27) estatuto -> . estatuto condicion
    (28) estatuto -> . estatuto lectura
    (29) estatuto -> . estatuto escritura
    (30) estatuto -> . estatuto ciclo
    (81) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS expresion
    (84) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET cint RBRACKET EQUALS expresion
    (86) asignacion -> . ID EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (91) asignacion -> . ID LBRACKET cint RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (96) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET cint RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID EQUALS objeto_metodo
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (32) condicion -> . IF LPAREN expresion RPAREN bloque
    (33) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (35) lectura -> . READ LPAREN ID RPAREN
    (36) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (37) escritura -> . PRINT LPAREN aux5 RPAREN
    (31) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (134) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 17
    IF              shift and go to state 28
    READ            shift and go to state 29
    PRINT           shift and go to state 30
    WHILE           shift and go to state 31

    estatuto                       shift and go to state 115
    asignacion                     shift and go to state 20
    llamada_func                   shift and go to state 21
    objeto_metodo                  shift and go to state 22
    condicion                      shift and go to state 23
    lectura                        shift and go to state 24
    escritura                      shift and go to state 25
    ciclo                          shift and go to state 26
    objeto_aAcceso                 shift and go to state 27

state 65

    (6) context -> LBRACE constructor vars estatuto . RBRACE
    (24) estatuto -> estatuto . asignacion
    (25) estatuto -> estatuto . llamada_func
    (26) estatuto -> estatuto . objeto_metodo
    (27) estatuto -> estatuto . condicion
    (28) estatuto -> estatuto . lectura
    (29) estatuto -> estatuto . escritura
    (30) estatuto -> estatuto . ciclo
    (81) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS expresion
    (84) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET cint RBRACKET EQUALS expresion
    (86) asignacion -> . ID EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (91) asignacion -> . ID LBRACKET cint RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (96) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET cint RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID EQUALS objeto_metodo
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (32) condicion -> . IF LPAREN expresion RPAREN bloque
    (33) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (35) lectura -> . READ LPAREN ID RPAREN
    (36) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (37) escritura -> . PRINT LPAREN aux5 RPAREN
    (31) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (134) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          shift and go to state 116
    ID              shift and go to state 17
    IF              shift and go to state 28
    READ            shift and go to state 29
    PRINT           shift and go to state 30
    WHILE           shift and go to state 31

    asignacion                     shift and go to state 41
    llamada_func                   shift and go to state 42
    objeto_metodo                  shift and go to state 43
    condicion                      shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    ciclo                          shift and go to state 47
    objeto_aAcceso                 shift and go to state 27

state 66

    (7) context -> LBRACE vars funcion estatuto . RBRACE
    (24) estatuto -> estatuto . asignacion
    (25) estatuto -> estatuto . llamada_func
    (26) estatuto -> estatuto . objeto_metodo
    (27) estatuto -> estatuto . condicion
    (28) estatuto -> estatuto . lectura
    (29) estatuto -> estatuto . escritura
    (30) estatuto -> estatuto . ciclo
    (81) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS expresion
    (84) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET cint RBRACKET EQUALS expresion
    (86) asignacion -> . ID EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (91) asignacion -> . ID LBRACKET cint RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (96) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET cint RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID EQUALS objeto_metodo
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (32) condicion -> . IF LPAREN expresion RPAREN bloque
    (33) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (35) lectura -> . READ LPAREN ID RPAREN
    (36) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (37) escritura -> . PRINT LPAREN aux5 RPAREN
    (31) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (134) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          shift and go to state 117
    ID              shift and go to state 17
    IF              shift and go to state 28
    READ            shift and go to state 29
    PRINT           shift and go to state 30
    WHILE           shift and go to state 31

    asignacion                     shift and go to state 41
    llamada_func                   shift and go to state 42
    objeto_metodo                  shift and go to state 43
    condicion                      shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    ciclo                          shift and go to state 47
    objeto_aAcceso                 shift and go to state 27

state 67

    (8) context -> LBRACE vars estatuto RBRACE .

    $end            reduce using rule 8 (context -> LBRACE vars estatuto RBRACE .)


state 68

    (66) vars -> vars VAR aux .
    (67) aux -> aux . aux
    (67) aux -> . aux aux
    (68) aux -> . ID COLON tipo_simple
    (69) aux -> . ID COLON tipo_compuesto
    (70) aux -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (71) aux -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (72) aux -> . ID LBRACKET cint RBRACKET COLON tipo_simple
    (73) aux -> . ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (74) aux -> . ID aux2 COLON tipo_simple
    (75) aux -> . ID aux2 COLON tipo_compuesto

  ! shift/reduce conflict for ID resolved as shift
    RBRACE          reduce using rule 66 (vars -> vars VAR aux .)
    VAR             reduce using rule 66 (vars -> vars VAR aux .)
    PRIVATE         reduce using rule 66 (vars -> vars VAR aux .)
    PUBLIC          reduce using rule 66 (vars -> vars VAR aux .)
    PROTECTED       reduce using rule 66 (vars -> vars VAR aux .)
    IF              reduce using rule 66 (vars -> vars VAR aux .)
    READ            reduce using rule 66 (vars -> vars VAR aux .)
    PRINT           reduce using rule 66 (vars -> vars VAR aux .)
    WHILE           reduce using rule 66 (vars -> vars VAR aux .)
    RETURN          reduce using rule 66 (vars -> vars VAR aux .)
    ID              shift and go to state 54

  ! ID              [ reduce using rule 66 (vars -> vars VAR aux .) ]

    aux                            shift and go to state 95

state 69

    (13) constructor -> PUBLIC ID LPAREN . param RPAREN contexto_const
    (59) param -> . aux4
    (60) aux4 -> . tipo_simple ID
    (61) aux4 -> . aux4 COMMA tipo_simple ID
    (78) tipo_simple -> . INT
    (79) tipo_simple -> . FLOAT

    INT             shift and go to state 121
    FLOAT           shift and go to state 122

    param                          shift and go to state 118
    aux4                           shift and go to state 119
    tipo_simple                    shift and go to state 120

state 70

    (84) asignacion -> ID LBRACKET cint . RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (85) asignacion -> ID LBRACKET cint . RBRACKET EQUALS expresion
    (90) asignacion -> ID LBRACKET cint . RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (91) asignacion -> ID LBRACKET cint . RBRACKET EQUALS llamada_func
    (96) asignacion -> ID LBRACKET cint . RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (97) asignacion -> ID LBRACKET cint . RBRACKET EQUALS objeto_metodo

    RBRACKET        shift and go to state 123


state 71

    (126) cint -> CINT .

    RBRACKET        reduce using rule 126 (cint -> CINT .)
    TIMES           reduce using rule 126 (cint -> CINT .)
    DIVIDE          reduce using rule 126 (cint -> CINT .)
    MODULO          reduce using rule 126 (cint -> CINT .)
    PLUS            reduce using rule 126 (cint -> CINT .)
    MINUS           reduce using rule 126 (cint -> CINT .)
    LT              reduce using rule 126 (cint -> CINT .)
    LE              reduce using rule 126 (cint -> CINT .)
    GT              reduce using rule 126 (cint -> CINT .)
    GE              reduce using rule 126 (cint -> CINT .)
    EQ              reduce using rule 126 (cint -> CINT .)
    NE              reduce using rule 126 (cint -> CINT .)
    AND             reduce using rule 126 (cint -> CINT .)
    OR              reduce using rule 126 (cint -> CINT .)
    RBRACE          reduce using rule 126 (cint -> CINT .)
    ID              reduce using rule 126 (cint -> CINT .)
    IF              reduce using rule 126 (cint -> CINT .)
    READ            reduce using rule 126 (cint -> CINT .)
    PRINT           reduce using rule 126 (cint -> CINT .)
    WHILE           reduce using rule 126 (cint -> CINT .)
    RETURN          reduce using rule 126 (cint -> CINT .)
    RPAREN          reduce using rule 126 (cint -> CINT .)
    COMMA           reduce using rule 126 (cint -> CINT .)


state 72

    (46) llamada_func -> ID . LPAREN aux3 RPAREN
    (99) objeto_metodo -> ID . PERIOD llamada_func
    (123) var -> ID .
    (134) objeto_aAcceso -> ID . PERIOD ID

    LPAREN          shift and go to state 51
    PERIOD          shift and go to state 52
    TIMES           reduce using rule 123 (var -> ID .)
    DIVIDE          reduce using rule 123 (var -> ID .)
    MODULO          reduce using rule 123 (var -> ID .)
    PLUS            reduce using rule 123 (var -> ID .)
    MINUS           reduce using rule 123 (var -> ID .)
    LT              reduce using rule 123 (var -> ID .)
    LE              reduce using rule 123 (var -> ID .)
    GT              reduce using rule 123 (var -> ID .)
    GE              reduce using rule 123 (var -> ID .)
    EQ              reduce using rule 123 (var -> ID .)
    NE              reduce using rule 123 (var -> ID .)
    AND             reduce using rule 123 (var -> ID .)
    OR              reduce using rule 123 (var -> ID .)
    RBRACE          reduce using rule 123 (var -> ID .)
    ID              reduce using rule 123 (var -> ID .)
    IF              reduce using rule 123 (var -> ID .)
    READ            reduce using rule 123 (var -> ID .)
    PRINT           reduce using rule 123 (var -> ID .)
    WHILE           reduce using rule 123 (var -> ID .)
    RETURN          reduce using rule 123 (var -> ID .)
    RPAREN          reduce using rule 123 (var -> ID .)
    COMMA           reduce using rule 123 (var -> ID .)


state 73

    (86) asignacion -> ID EQUALS expresion .
    (102) expresion -> expresion . AND exp_bool
    (103) expresion -> expresion . OR exp_bool
    (104) expresion -> expresion . AND exp_bool rel_op exp_bool
    (105) expresion -> expresion . OR exp_bool rel_op exp_bool

    RBRACE          reduce using rule 86 (asignacion -> ID EQUALS expresion .)
    ID              reduce using rule 86 (asignacion -> ID EQUALS expresion .)
    IF              reduce using rule 86 (asignacion -> ID EQUALS expresion .)
    READ            reduce using rule 86 (asignacion -> ID EQUALS expresion .)
    PRINT           reduce using rule 86 (asignacion -> ID EQUALS expresion .)
    WHILE           reduce using rule 86 (asignacion -> ID EQUALS expresion .)
    RETURN          reduce using rule 86 (asignacion -> ID EQUALS expresion .)
    AND             shift and go to state 124
    OR              shift and go to state 125


state 74

    (92) asignacion -> ID EQUALS llamada_func .

    RBRACE          reduce using rule 92 (asignacion -> ID EQUALS llamada_func .)
    ID              reduce using rule 92 (asignacion -> ID EQUALS llamada_func .)
    IF              reduce using rule 92 (asignacion -> ID EQUALS llamada_func .)
    READ            reduce using rule 92 (asignacion -> ID EQUALS llamada_func .)
    PRINT           reduce using rule 92 (asignacion -> ID EQUALS llamada_func .)
    WHILE           reduce using rule 92 (asignacion -> ID EQUALS llamada_func .)
    RETURN          reduce using rule 92 (asignacion -> ID EQUALS llamada_func .)


state 75

    (98) asignacion -> ID EQUALS objeto_metodo .

    RBRACE          reduce using rule 98 (asignacion -> ID EQUALS objeto_metodo .)
    ID              reduce using rule 98 (asignacion -> ID EQUALS objeto_metodo .)
    IF              reduce using rule 98 (asignacion -> ID EQUALS objeto_metodo .)
    READ            reduce using rule 98 (asignacion -> ID EQUALS objeto_metodo .)
    PRINT           reduce using rule 98 (asignacion -> ID EQUALS objeto_metodo .)
    WHILE           reduce using rule 98 (asignacion -> ID EQUALS objeto_metodo .)
    RETURN          reduce using rule 98 (asignacion -> ID EQUALS objeto_metodo .)


state 76

    (100) expresion -> exp_bool .
    (101) expresion -> exp_bool . rel_op exp_bool
    (128) rel_op -> . LT
    (129) rel_op -> . LE
    (130) rel_op -> . GT
    (131) rel_op -> . GE
    (132) rel_op -> . EQ
    (133) rel_op -> . NE

    AND             reduce using rule 100 (expresion -> exp_bool .)
    OR              reduce using rule 100 (expresion -> exp_bool .)
    RBRACE          reduce using rule 100 (expresion -> exp_bool .)
    ID              reduce using rule 100 (expresion -> exp_bool .)
    IF              reduce using rule 100 (expresion -> exp_bool .)
    READ            reduce using rule 100 (expresion -> exp_bool .)
    PRINT           reduce using rule 100 (expresion -> exp_bool .)
    WHILE           reduce using rule 100 (expresion -> exp_bool .)
    RETURN          reduce using rule 100 (expresion -> exp_bool .)
    RPAREN          reduce using rule 100 (expresion -> exp_bool .)
    COMMA           reduce using rule 100 (expresion -> exp_bool .)
    LT              shift and go to state 127
    LE              shift and go to state 128
    GT              shift and go to state 129
    GE              shift and go to state 130
    EQ              shift and go to state 131
    NE              shift and go to state 132

    rel_op                         shift and go to state 126

state 77

    (116) factor -> LPAREN . expresion RPAREN
    (100) expresion -> . exp_bool
    (101) expresion -> . exp_bool rel_op exp_bool
    (102) expresion -> . expresion AND exp_bool
    (103) expresion -> . expresion OR exp_bool
    (104) expresion -> . expresion AND exp_bool rel_op exp_bool
    (105) expresion -> . expresion OR exp_bool rel_op exp_bool
    (106) exp_bool -> . TRUE
    (107) exp_bool -> . FALSE
    (108) exp_bool -> . exp
    (109) exp -> . termino
    (110) exp -> . exp PLUS termino
    (111) exp -> . exp MINUS termino
    (112) termino -> . factor
    (113) termino -> . termino TIMES factor
    (114) termino -> . termino DIVIDE factor
    (115) termino -> . termino MODULO factor
    (116) factor -> . LPAREN expresion RPAREN
    (117) factor -> . PLUS objeto_aAcceso
    (118) factor -> . MINUS objeto_aAcceso
    (119) factor -> . PLUS var
    (120) factor -> . MINUS var
    (121) factor -> . var
    (122) factor -> . objeto_aAcceso
    (123) var -> . ID
    (124) var -> . cint
    (125) var -> . cfloat
    (134) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER

    TRUE            shift and go to state 78
    FALSE           shift and go to state 79
    LPAREN          shift and go to state 77
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    ID              shift and go to state 90
    CINT            shift and go to state 71
    NUMBER          shift and go to state 89

    expresion                      shift and go to state 133
    exp_bool                       shift and go to state 76
    exp                            shift and go to state 80
    termino                        shift and go to state 81
    factor                         shift and go to state 84
    objeto_aAcceso                 shift and go to state 85
    var                            shift and go to state 86
    cint                           shift and go to state 87
    cfloat                         shift and go to state 88

state 78

    (106) exp_bool -> TRUE .

    LT              reduce using rule 106 (exp_bool -> TRUE .)
    LE              reduce using rule 106 (exp_bool -> TRUE .)
    GT              reduce using rule 106 (exp_bool -> TRUE .)
    GE              reduce using rule 106 (exp_bool -> TRUE .)
    EQ              reduce using rule 106 (exp_bool -> TRUE .)
    NE              reduce using rule 106 (exp_bool -> TRUE .)
    AND             reduce using rule 106 (exp_bool -> TRUE .)
    OR              reduce using rule 106 (exp_bool -> TRUE .)
    RBRACE          reduce using rule 106 (exp_bool -> TRUE .)
    ID              reduce using rule 106 (exp_bool -> TRUE .)
    IF              reduce using rule 106 (exp_bool -> TRUE .)
    READ            reduce using rule 106 (exp_bool -> TRUE .)
    PRINT           reduce using rule 106 (exp_bool -> TRUE .)
    WHILE           reduce using rule 106 (exp_bool -> TRUE .)
    RETURN          reduce using rule 106 (exp_bool -> TRUE .)
    RPAREN          reduce using rule 106 (exp_bool -> TRUE .)
    COMMA           reduce using rule 106 (exp_bool -> TRUE .)


state 79

    (107) exp_bool -> FALSE .

    LT              reduce using rule 107 (exp_bool -> FALSE .)
    LE              reduce using rule 107 (exp_bool -> FALSE .)
    GT              reduce using rule 107 (exp_bool -> FALSE .)
    GE              reduce using rule 107 (exp_bool -> FALSE .)
    EQ              reduce using rule 107 (exp_bool -> FALSE .)
    NE              reduce using rule 107 (exp_bool -> FALSE .)
    AND             reduce using rule 107 (exp_bool -> FALSE .)
    OR              reduce using rule 107 (exp_bool -> FALSE .)
    RBRACE          reduce using rule 107 (exp_bool -> FALSE .)
    ID              reduce using rule 107 (exp_bool -> FALSE .)
    IF              reduce using rule 107 (exp_bool -> FALSE .)
    READ            reduce using rule 107 (exp_bool -> FALSE .)
    PRINT           reduce using rule 107 (exp_bool -> FALSE .)
    WHILE           reduce using rule 107 (exp_bool -> FALSE .)
    RETURN          reduce using rule 107 (exp_bool -> FALSE .)
    RPAREN          reduce using rule 107 (exp_bool -> FALSE .)
    COMMA           reduce using rule 107 (exp_bool -> FALSE .)


state 80

    (108) exp_bool -> exp .
    (110) exp -> exp . PLUS termino
    (111) exp -> exp . MINUS termino

    LT              reduce using rule 108 (exp_bool -> exp .)
    LE              reduce using rule 108 (exp_bool -> exp .)
    GT              reduce using rule 108 (exp_bool -> exp .)
    GE              reduce using rule 108 (exp_bool -> exp .)
    EQ              reduce using rule 108 (exp_bool -> exp .)
    NE              reduce using rule 108 (exp_bool -> exp .)
    AND             reduce using rule 108 (exp_bool -> exp .)
    OR              reduce using rule 108 (exp_bool -> exp .)
    RBRACE          reduce using rule 108 (exp_bool -> exp .)
    ID              reduce using rule 108 (exp_bool -> exp .)
    IF              reduce using rule 108 (exp_bool -> exp .)
    READ            reduce using rule 108 (exp_bool -> exp .)
    PRINT           reduce using rule 108 (exp_bool -> exp .)
    WHILE           reduce using rule 108 (exp_bool -> exp .)
    RETURN          reduce using rule 108 (exp_bool -> exp .)
    RPAREN          reduce using rule 108 (exp_bool -> exp .)
    COMMA           reduce using rule 108 (exp_bool -> exp .)
    PLUS            shift and go to state 134
    MINUS           shift and go to state 135


state 81

    (109) exp -> termino .
    (113) termino -> termino . TIMES factor
    (114) termino -> termino . DIVIDE factor
    (115) termino -> termino . MODULO factor

    PLUS            reduce using rule 109 (exp -> termino .)
    MINUS           reduce using rule 109 (exp -> termino .)
    LT              reduce using rule 109 (exp -> termino .)
    LE              reduce using rule 109 (exp -> termino .)
    GT              reduce using rule 109 (exp -> termino .)
    GE              reduce using rule 109 (exp -> termino .)
    EQ              reduce using rule 109 (exp -> termino .)
    NE              reduce using rule 109 (exp -> termino .)
    AND             reduce using rule 109 (exp -> termino .)
    OR              reduce using rule 109 (exp -> termino .)
    RBRACE          reduce using rule 109 (exp -> termino .)
    ID              reduce using rule 109 (exp -> termino .)
    IF              reduce using rule 109 (exp -> termino .)
    READ            reduce using rule 109 (exp -> termino .)
    PRINT           reduce using rule 109 (exp -> termino .)
    WHILE           reduce using rule 109 (exp -> termino .)
    RETURN          reduce using rule 109 (exp -> termino .)
    RPAREN          reduce using rule 109 (exp -> termino .)
    COMMA           reduce using rule 109 (exp -> termino .)
    TIMES           shift and go to state 136
    DIVIDE          shift and go to state 137
    MODULO          shift and go to state 138


state 82

    (117) factor -> PLUS . objeto_aAcceso
    (119) factor -> PLUS . var
    (134) objeto_aAcceso -> . ID PERIOD ID
    (123) var -> . ID
    (124) var -> . cint
    (125) var -> . cfloat
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER

    ID              shift and go to state 141
    CINT            shift and go to state 71
    NUMBER          shift and go to state 89

    objeto_aAcceso                 shift and go to state 139
    var                            shift and go to state 140
    cint                           shift and go to state 87
    cfloat                         shift and go to state 88

state 83

    (118) factor -> MINUS . objeto_aAcceso
    (120) factor -> MINUS . var
    (134) objeto_aAcceso -> . ID PERIOD ID
    (123) var -> . ID
    (124) var -> . cint
    (125) var -> . cfloat
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER

    ID              shift and go to state 141
    CINT            shift and go to state 71
    NUMBER          shift and go to state 89

    objeto_aAcceso                 shift and go to state 142
    var                            shift and go to state 143
    cint                           shift and go to state 87
    cfloat                         shift and go to state 88

state 84

    (112) termino -> factor .

    TIMES           reduce using rule 112 (termino -> factor .)
    DIVIDE          reduce using rule 112 (termino -> factor .)
    MODULO          reduce using rule 112 (termino -> factor .)
    PLUS            reduce using rule 112 (termino -> factor .)
    MINUS           reduce using rule 112 (termino -> factor .)
    LT              reduce using rule 112 (termino -> factor .)
    LE              reduce using rule 112 (termino -> factor .)
    GT              reduce using rule 112 (termino -> factor .)
    GE              reduce using rule 112 (termino -> factor .)
    EQ              reduce using rule 112 (termino -> factor .)
    NE              reduce using rule 112 (termino -> factor .)
    AND             reduce using rule 112 (termino -> factor .)
    OR              reduce using rule 112 (termino -> factor .)
    RBRACE          reduce using rule 112 (termino -> factor .)
    ID              reduce using rule 112 (termino -> factor .)
    IF              reduce using rule 112 (termino -> factor .)
    READ            reduce using rule 112 (termino -> factor .)
    PRINT           reduce using rule 112 (termino -> factor .)
    WHILE           reduce using rule 112 (termino -> factor .)
    RETURN          reduce using rule 112 (termino -> factor .)
    RPAREN          reduce using rule 112 (termino -> factor .)
    COMMA           reduce using rule 112 (termino -> factor .)


state 85

    (122) factor -> objeto_aAcceso .

    TIMES           reduce using rule 122 (factor -> objeto_aAcceso .)
    DIVIDE          reduce using rule 122 (factor -> objeto_aAcceso .)
    MODULO          reduce using rule 122 (factor -> objeto_aAcceso .)
    PLUS            reduce using rule 122 (factor -> objeto_aAcceso .)
    MINUS           reduce using rule 122 (factor -> objeto_aAcceso .)
    LT              reduce using rule 122 (factor -> objeto_aAcceso .)
    LE              reduce using rule 122 (factor -> objeto_aAcceso .)
    GT              reduce using rule 122 (factor -> objeto_aAcceso .)
    GE              reduce using rule 122 (factor -> objeto_aAcceso .)
    EQ              reduce using rule 122 (factor -> objeto_aAcceso .)
    NE              reduce using rule 122 (factor -> objeto_aAcceso .)
    AND             reduce using rule 122 (factor -> objeto_aAcceso .)
    OR              reduce using rule 122 (factor -> objeto_aAcceso .)
    RBRACE          reduce using rule 122 (factor -> objeto_aAcceso .)
    ID              reduce using rule 122 (factor -> objeto_aAcceso .)
    IF              reduce using rule 122 (factor -> objeto_aAcceso .)
    READ            reduce using rule 122 (factor -> objeto_aAcceso .)
    PRINT           reduce using rule 122 (factor -> objeto_aAcceso .)
    WHILE           reduce using rule 122 (factor -> objeto_aAcceso .)
    RETURN          reduce using rule 122 (factor -> objeto_aAcceso .)
    RPAREN          reduce using rule 122 (factor -> objeto_aAcceso .)
    COMMA           reduce using rule 122 (factor -> objeto_aAcceso .)


state 86

    (121) factor -> var .

    TIMES           reduce using rule 121 (factor -> var .)
    DIVIDE          reduce using rule 121 (factor -> var .)
    MODULO          reduce using rule 121 (factor -> var .)
    PLUS            reduce using rule 121 (factor -> var .)
    MINUS           reduce using rule 121 (factor -> var .)
    LT              reduce using rule 121 (factor -> var .)
    LE              reduce using rule 121 (factor -> var .)
    GT              reduce using rule 121 (factor -> var .)
    GE              reduce using rule 121 (factor -> var .)
    EQ              reduce using rule 121 (factor -> var .)
    NE              reduce using rule 121 (factor -> var .)
    AND             reduce using rule 121 (factor -> var .)
    OR              reduce using rule 121 (factor -> var .)
    RBRACE          reduce using rule 121 (factor -> var .)
    ID              reduce using rule 121 (factor -> var .)
    IF              reduce using rule 121 (factor -> var .)
    READ            reduce using rule 121 (factor -> var .)
    PRINT           reduce using rule 121 (factor -> var .)
    WHILE           reduce using rule 121 (factor -> var .)
    RETURN          reduce using rule 121 (factor -> var .)
    RPAREN          reduce using rule 121 (factor -> var .)
    COMMA           reduce using rule 121 (factor -> var .)


state 87

    (124) var -> cint .

    TIMES           reduce using rule 124 (var -> cint .)
    DIVIDE          reduce using rule 124 (var -> cint .)
    MODULO          reduce using rule 124 (var -> cint .)
    PLUS            reduce using rule 124 (var -> cint .)
    MINUS           reduce using rule 124 (var -> cint .)
    LT              reduce using rule 124 (var -> cint .)
    LE              reduce using rule 124 (var -> cint .)
    GT              reduce using rule 124 (var -> cint .)
    GE              reduce using rule 124 (var -> cint .)
    EQ              reduce using rule 124 (var -> cint .)
    NE              reduce using rule 124 (var -> cint .)
    AND             reduce using rule 124 (var -> cint .)
    OR              reduce using rule 124 (var -> cint .)
    RBRACE          reduce using rule 124 (var -> cint .)
    ID              reduce using rule 124 (var -> cint .)
    IF              reduce using rule 124 (var -> cint .)
    READ            reduce using rule 124 (var -> cint .)
    PRINT           reduce using rule 124 (var -> cint .)
    WHILE           reduce using rule 124 (var -> cint .)
    RETURN          reduce using rule 124 (var -> cint .)
    RPAREN          reduce using rule 124 (var -> cint .)
    COMMA           reduce using rule 124 (var -> cint .)


state 88

    (125) var -> cfloat .

    TIMES           reduce using rule 125 (var -> cfloat .)
    DIVIDE          reduce using rule 125 (var -> cfloat .)
    MODULO          reduce using rule 125 (var -> cfloat .)
    PLUS            reduce using rule 125 (var -> cfloat .)
    MINUS           reduce using rule 125 (var -> cfloat .)
    LT              reduce using rule 125 (var -> cfloat .)
    LE              reduce using rule 125 (var -> cfloat .)
    GT              reduce using rule 125 (var -> cfloat .)
    GE              reduce using rule 125 (var -> cfloat .)
    EQ              reduce using rule 125 (var -> cfloat .)
    NE              reduce using rule 125 (var -> cfloat .)
    AND             reduce using rule 125 (var -> cfloat .)
    OR              reduce using rule 125 (var -> cfloat .)
    RBRACE          reduce using rule 125 (var -> cfloat .)
    ID              reduce using rule 125 (var -> cfloat .)
    IF              reduce using rule 125 (var -> cfloat .)
    READ            reduce using rule 125 (var -> cfloat .)
    PRINT           reduce using rule 125 (var -> cfloat .)
    WHILE           reduce using rule 125 (var -> cfloat .)
    RETURN          reduce using rule 125 (var -> cfloat .)
    RPAREN          reduce using rule 125 (var -> cfloat .)
    COMMA           reduce using rule 125 (var -> cfloat .)


state 89

    (127) cfloat -> NUMBER .

    TIMES           reduce using rule 127 (cfloat -> NUMBER .)
    DIVIDE          reduce using rule 127 (cfloat -> NUMBER .)
    MODULO          reduce using rule 127 (cfloat -> NUMBER .)
    PLUS            reduce using rule 127 (cfloat -> NUMBER .)
    MINUS           reduce using rule 127 (cfloat -> NUMBER .)
    LT              reduce using rule 127 (cfloat -> NUMBER .)
    LE              reduce using rule 127 (cfloat -> NUMBER .)
    GT              reduce using rule 127 (cfloat -> NUMBER .)
    GE              reduce using rule 127 (cfloat -> NUMBER .)
    EQ              reduce using rule 127 (cfloat -> NUMBER .)
    NE              reduce using rule 127 (cfloat -> NUMBER .)
    AND             reduce using rule 127 (cfloat -> NUMBER .)
    OR              reduce using rule 127 (cfloat -> NUMBER .)
    RBRACE          reduce using rule 127 (cfloat -> NUMBER .)
    ID              reduce using rule 127 (cfloat -> NUMBER .)
    IF              reduce using rule 127 (cfloat -> NUMBER .)
    READ            reduce using rule 127 (cfloat -> NUMBER .)
    PRINT           reduce using rule 127 (cfloat -> NUMBER .)
    WHILE           reduce using rule 127 (cfloat -> NUMBER .)
    RETURN          reduce using rule 127 (cfloat -> NUMBER .)
    RPAREN          reduce using rule 127 (cfloat -> NUMBER .)
    COMMA           reduce using rule 127 (cfloat -> NUMBER .)


state 90

    (123) var -> ID .
    (134) objeto_aAcceso -> ID . PERIOD ID

    TIMES           reduce using rule 123 (var -> ID .)
    DIVIDE          reduce using rule 123 (var -> ID .)
    MODULO          reduce using rule 123 (var -> ID .)
    PLUS            reduce using rule 123 (var -> ID .)
    MINUS           reduce using rule 123 (var -> ID .)
    RPAREN          reduce using rule 123 (var -> ID .)
    COMMA           reduce using rule 123 (var -> ID .)
    LT              reduce using rule 123 (var -> ID .)
    LE              reduce using rule 123 (var -> ID .)
    GT              reduce using rule 123 (var -> ID .)
    GE              reduce using rule 123 (var -> ID .)
    EQ              reduce using rule 123 (var -> ID .)
    NE              reduce using rule 123 (var -> ID .)
    AND             reduce using rule 123 (var -> ID .)
    OR              reduce using rule 123 (var -> ID .)
    RBRACE          reduce using rule 123 (var -> ID .)
    ID              reduce using rule 123 (var -> ID .)
    IF              reduce using rule 123 (var -> ID .)
    READ            reduce using rule 123 (var -> ID .)
    PRINT           reduce using rule 123 (var -> ID .)
    WHILE           reduce using rule 123 (var -> ID .)
    RETURN          reduce using rule 123 (var -> ID .)
    PERIOD          shift and go to state 144


state 91

    (46) llamada_func -> ID LPAREN aux3 . RPAREN
    (48) aux3 -> aux3 . COMMA exp

    RPAREN          shift and go to state 145
    COMMA           shift and go to state 146


state 92

    (47) aux3 -> exp .
    (110) exp -> exp . PLUS termino
    (111) exp -> exp . MINUS termino

    RPAREN          reduce using rule 47 (aux3 -> exp .)
    COMMA           reduce using rule 47 (aux3 -> exp .)
    PLUS            shift and go to state 134
    MINUS           shift and go to state 135


state 93

    (134) objeto_aAcceso -> ID PERIOD ID .
    (46) llamada_func -> ID . LPAREN aux3 RPAREN

    LBRACKET        reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    EQUALS          reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    TIMES           reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    DIVIDE          reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    MODULO          reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    PLUS            reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    MINUS           reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    LT              reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    LE              reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    GT              reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    GE              reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    EQ              reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    NE              reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    AND             reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    OR              reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACE          reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    ID              reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    IF              reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    READ            reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    PRINT           reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    WHILE           reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    RETURN          reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    RPAREN          reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    COMMA           reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    LPAREN          shift and go to state 51


state 94

    (99) objeto_metodo -> ID PERIOD llamada_func .

    RBRACE          reduce using rule 99 (objeto_metodo -> ID PERIOD llamada_func .)
    ID              reduce using rule 99 (objeto_metodo -> ID PERIOD llamada_func .)
    IF              reduce using rule 99 (objeto_metodo -> ID PERIOD llamada_func .)
    READ            reduce using rule 99 (objeto_metodo -> ID PERIOD llamada_func .)
    PRINT           reduce using rule 99 (objeto_metodo -> ID PERIOD llamada_func .)
    WHILE           reduce using rule 99 (objeto_metodo -> ID PERIOD llamada_func .)
    RETURN          reduce using rule 99 (objeto_metodo -> ID PERIOD llamada_func .)
    RPAREN          reduce using rule 99 (objeto_metodo -> ID PERIOD llamada_func .)
    COMMA           reduce using rule 99 (objeto_metodo -> ID PERIOD llamada_func .)


state 95

    (67) aux -> aux aux .
    (67) aux -> aux . aux
    (67) aux -> . aux aux
    (68) aux -> . ID COLON tipo_simple
    (69) aux -> . ID COLON tipo_compuesto
    (70) aux -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (71) aux -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (72) aux -> . ID LBRACKET cint RBRACKET COLON tipo_simple
    (73) aux -> . ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (74) aux -> . ID aux2 COLON tipo_simple
    (75) aux -> . ID aux2 COLON tipo_compuesto

  ! shift/reduce conflict for ID resolved as shift
    RBRACE          reduce using rule 67 (aux -> aux aux .)
    VAR             reduce using rule 67 (aux -> aux aux .)
    PRIVATE         reduce using rule 67 (aux -> aux aux .)
    PUBLIC          reduce using rule 67 (aux -> aux aux .)
    PROTECTED       reduce using rule 67 (aux -> aux aux .)
    IF              reduce using rule 67 (aux -> aux aux .)
    READ            reduce using rule 67 (aux -> aux aux .)
    PRINT           reduce using rule 67 (aux -> aux aux .)
    WHILE           reduce using rule 67 (aux -> aux aux .)
    RETURN          reduce using rule 67 (aux -> aux aux .)
    ID              shift and go to state 54

  ! ID              [ reduce using rule 67 (aux -> aux aux .) ]

    aux                            shift and go to state 95

state 96

    (68) aux -> ID COLON . tipo_simple
    (69) aux -> ID COLON . tipo_compuesto
    (78) tipo_simple -> . INT
    (79) tipo_simple -> . FLOAT
    (80) tipo_compuesto -> . ID

    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    ID              shift and go to state 147

    tipo_simple                    shift and go to state 148
    tipo_compuesto                 shift and go to state 149

state 97

    (70) aux -> ID LBRACKET . cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (71) aux -> ID LBRACKET . cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (72) aux -> ID LBRACKET . cint RBRACKET COLON tipo_simple
    (73) aux -> ID LBRACKET . cint RBRACKET COLON tipo_compuesto
    (126) cint -> . CINT

    CINT            shift and go to state 71

    cint                           shift and go to state 150

state 98

    (74) aux -> ID aux2 . COLON tipo_simple
    (75) aux -> ID aux2 . COLON tipo_compuesto
    (76) aux2 -> aux2 . aux2
    (76) aux2 -> . aux2 aux2
    (77) aux2 -> . COMMA ID

    COLON           shift and go to state 152
    COMMA           shift and go to state 99

    aux2                           shift and go to state 151

state 99

    (77) aux2 -> COMMA . ID

    ID              shift and go to state 153


state 100

    (49) funcion -> scope DEF ID . LPAREN param RPAREN contexto_func

    LPAREN          shift and go to state 154


state 101

    (81) asignacion -> objeto_aAcceso LBRACKET cint . RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (82) asignacion -> objeto_aAcceso LBRACKET cint . RBRACKET EQUALS expresion
    (87) asignacion -> objeto_aAcceso LBRACKET cint . RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (88) asignacion -> objeto_aAcceso LBRACKET cint . RBRACKET EQUALS llamada_func
    (93) asignacion -> objeto_aAcceso LBRACKET cint . RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (94) asignacion -> objeto_aAcceso LBRACKET cint . RBRACKET EQUALS objeto_metodo

    RBRACKET        shift and go to state 155


state 102

    (83) asignacion -> objeto_aAcceso EQUALS expresion .
    (102) expresion -> expresion . AND exp_bool
    (103) expresion -> expresion . OR exp_bool
    (104) expresion -> expresion . AND exp_bool rel_op exp_bool
    (105) expresion -> expresion . OR exp_bool rel_op exp_bool

    RBRACE          reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS expresion .)
    ID              reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS expresion .)
    IF              reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS expresion .)
    READ            reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PRINT           reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS expresion .)
    WHILE           reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS expresion .)
    RETURN          reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS expresion .)
    AND             shift and go to state 124
    OR              shift and go to state 125


state 103

    (89) asignacion -> objeto_aAcceso EQUALS llamada_func .

    RBRACE          reduce using rule 89 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    ID              reduce using rule 89 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    IF              reduce using rule 89 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    READ            reduce using rule 89 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PRINT           reduce using rule 89 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    WHILE           reduce using rule 89 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    RETURN          reduce using rule 89 (asignacion -> objeto_aAcceso EQUALS llamada_func .)


state 104

    (95) asignacion -> objeto_aAcceso EQUALS objeto_metodo .

    RBRACE          reduce using rule 95 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    ID              reduce using rule 95 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    IF              reduce using rule 95 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    READ            reduce using rule 95 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PRINT           reduce using rule 95 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    WHILE           reduce using rule 95 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    RETURN          reduce using rule 95 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)


state 105

    (32) condicion -> IF LPAREN expresion . RPAREN bloque
    (33) condicion -> IF LPAREN expresion . RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (102) expresion -> expresion . AND exp_bool
    (103) expresion -> expresion . OR exp_bool
    (104) expresion -> expresion . AND exp_bool rel_op exp_bool
    (105) expresion -> expresion . OR exp_bool rel_op exp_bool

    RPAREN          shift and go to state 156
    AND             shift and go to state 124
    OR              shift and go to state 125


state 106

    (35) lectura -> READ LPAREN ID . RPAREN
    (134) objeto_aAcceso -> ID . PERIOD ID

    RPAREN          shift and go to state 157
    PERIOD          shift and go to state 144


state 107

    (36) lectura -> READ LPAREN objeto_aAcceso . RPAREN

    RPAREN          shift and go to state 158


state 108

    (37) escritura -> PRINT LPAREN aux5 . RPAREN
    (42) aux5 -> aux5 . COMMA expresion
    (43) aux5 -> aux5 . COMMA llamada_func
    (44) aux5 -> aux5 . COMMA objeto_metodo
    (45) aux5 -> aux5 . COMMA CSTRING

    RPAREN          shift and go to state 159
    COMMA           shift and go to state 160


state 109

    (38) aux5 -> expresion .
    (102) expresion -> expresion . AND exp_bool
    (103) expresion -> expresion . OR exp_bool
    (104) expresion -> expresion . AND exp_bool rel_op exp_bool
    (105) expresion -> expresion . OR exp_bool rel_op exp_bool

    RPAREN          reduce using rule 38 (aux5 -> expresion .)
    COMMA           reduce using rule 38 (aux5 -> expresion .)
    AND             shift and go to state 124
    OR              shift and go to state 125


state 110

    (39) aux5 -> llamada_func .

    RPAREN          reduce using rule 39 (aux5 -> llamada_func .)
    COMMA           reduce using rule 39 (aux5 -> llamada_func .)


state 111

    (40) aux5 -> objeto_metodo .

    RPAREN          reduce using rule 40 (aux5 -> objeto_metodo .)
    COMMA           reduce using rule 40 (aux5 -> objeto_metodo .)


state 112

    (41) aux5 -> CSTRING .

    RPAREN          reduce using rule 41 (aux5 -> CSTRING .)
    COMMA           reduce using rule 41 (aux5 -> CSTRING .)


state 113

    (31) ciclo -> WHILE LPAREN expresion . RPAREN bloque
    (102) expresion -> expresion . AND exp_bool
    (103) expresion -> expresion . OR exp_bool
    (104) expresion -> expresion . AND exp_bool rel_op exp_bool
    (105) expresion -> expresion . OR exp_bool rel_op exp_bool

    RPAREN          shift and go to state 161
    AND             shift and go to state 124
    OR              shift and go to state 125


state 114

    (4) class -> scope CLASS ID COLON ID . context
    (5) context -> . LBRACE constructor vars funcion estatuto RBRACE
    (6) context -> . LBRACE constructor vars estatuto RBRACE
    (7) context -> . LBRACE vars funcion estatuto RBRACE
    (8) context -> . LBRACE vars estatuto RBRACE
    (9) context -> . LBRACE funcion RBRACE
    (10) context -> . LBRACE vars RBRACE
    (11) context -> . LBRACE estatuto RBRACE
    (12) context -> . LBRACE constructor RBRACE

    LBRACE          shift and go to state 7

    context                        shift and go to state 162

state 115

    (5) context -> LBRACE constructor vars funcion estatuto . RBRACE
    (24) estatuto -> estatuto . asignacion
    (25) estatuto -> estatuto . llamada_func
    (26) estatuto -> estatuto . objeto_metodo
    (27) estatuto -> estatuto . condicion
    (28) estatuto -> estatuto . lectura
    (29) estatuto -> estatuto . escritura
    (30) estatuto -> estatuto . ciclo
    (81) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS expresion
    (84) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET cint RBRACKET EQUALS expresion
    (86) asignacion -> . ID EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (91) asignacion -> . ID LBRACKET cint RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (96) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET cint RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID EQUALS objeto_metodo
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (32) condicion -> . IF LPAREN expresion RPAREN bloque
    (33) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (35) lectura -> . READ LPAREN ID RPAREN
    (36) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (37) escritura -> . PRINT LPAREN aux5 RPAREN
    (31) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (134) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          shift and go to state 163
    ID              shift and go to state 17
    IF              shift and go to state 28
    READ            shift and go to state 29
    PRINT           shift and go to state 30
    WHILE           shift and go to state 31

    asignacion                     shift and go to state 41
    llamada_func                   shift and go to state 42
    objeto_metodo                  shift and go to state 43
    condicion                      shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    ciclo                          shift and go to state 47
    objeto_aAcceso                 shift and go to state 27

state 116

    (6) context -> LBRACE constructor vars estatuto RBRACE .

    $end            reduce using rule 6 (context -> LBRACE constructor vars estatuto RBRACE .)


state 117

    (7) context -> LBRACE vars funcion estatuto RBRACE .

    $end            reduce using rule 7 (context -> LBRACE vars funcion estatuto RBRACE .)


state 118

    (13) constructor -> PUBLIC ID LPAREN param . RPAREN contexto_const

    RPAREN          shift and go to state 164


state 119

    (59) param -> aux4 .
    (61) aux4 -> aux4 . COMMA tipo_simple ID

    RPAREN          reduce using rule 59 (param -> aux4 .)
    COMMA           shift and go to state 165


state 120

    (60) aux4 -> tipo_simple . ID

    ID              shift and go to state 166


state 121

    (78) tipo_simple -> INT .

    ID              reduce using rule 78 (tipo_simple -> INT .)
    RBRACE          reduce using rule 78 (tipo_simple -> INT .)
    VAR             reduce using rule 78 (tipo_simple -> INT .)
    PRIVATE         reduce using rule 78 (tipo_simple -> INT .)
    PUBLIC          reduce using rule 78 (tipo_simple -> INT .)
    PROTECTED       reduce using rule 78 (tipo_simple -> INT .)
    IF              reduce using rule 78 (tipo_simple -> INT .)
    READ            reduce using rule 78 (tipo_simple -> INT .)
    PRINT           reduce using rule 78 (tipo_simple -> INT .)
    WHILE           reduce using rule 78 (tipo_simple -> INT .)
    RETURN          reduce using rule 78 (tipo_simple -> INT .)


state 122

    (79) tipo_simple -> FLOAT .

    ID              reduce using rule 79 (tipo_simple -> FLOAT .)
    RBRACE          reduce using rule 79 (tipo_simple -> FLOAT .)
    VAR             reduce using rule 79 (tipo_simple -> FLOAT .)
    PRIVATE         reduce using rule 79 (tipo_simple -> FLOAT .)
    PUBLIC          reduce using rule 79 (tipo_simple -> FLOAT .)
    PROTECTED       reduce using rule 79 (tipo_simple -> FLOAT .)
    IF              reduce using rule 79 (tipo_simple -> FLOAT .)
    READ            reduce using rule 79 (tipo_simple -> FLOAT .)
    PRINT           reduce using rule 79 (tipo_simple -> FLOAT .)
    WHILE           reduce using rule 79 (tipo_simple -> FLOAT .)
    RETURN          reduce using rule 79 (tipo_simple -> FLOAT .)


state 123

    (84) asignacion -> ID LBRACKET cint RBRACKET . LBRACKET cint RBRACKET EQUALS expresion
    (85) asignacion -> ID LBRACKET cint RBRACKET . EQUALS expresion
    (90) asignacion -> ID LBRACKET cint RBRACKET . LBRACKET cint RBRACKET EQUALS llamada_func
    (91) asignacion -> ID LBRACKET cint RBRACKET . EQUALS llamada_func
    (96) asignacion -> ID LBRACKET cint RBRACKET . LBRACKET cint RBRACKET EQUALS objeto_metodo
    (97) asignacion -> ID LBRACKET cint RBRACKET . EQUALS objeto_metodo

    LBRACKET        shift and go to state 167
    EQUALS          shift and go to state 168


state 124

    (102) expresion -> expresion AND . exp_bool
    (104) expresion -> expresion AND . exp_bool rel_op exp_bool
    (106) exp_bool -> . TRUE
    (107) exp_bool -> . FALSE
    (108) exp_bool -> . exp
    (109) exp -> . termino
    (110) exp -> . exp PLUS termino
    (111) exp -> . exp MINUS termino
    (112) termino -> . factor
    (113) termino -> . termino TIMES factor
    (114) termino -> . termino DIVIDE factor
    (115) termino -> . termino MODULO factor
    (116) factor -> . LPAREN expresion RPAREN
    (117) factor -> . PLUS objeto_aAcceso
    (118) factor -> . MINUS objeto_aAcceso
    (119) factor -> . PLUS var
    (120) factor -> . MINUS var
    (121) factor -> . var
    (122) factor -> . objeto_aAcceso
    (123) var -> . ID
    (124) var -> . cint
    (125) var -> . cfloat
    (134) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER

    TRUE            shift and go to state 78
    FALSE           shift and go to state 79
    LPAREN          shift and go to state 77
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    ID              shift and go to state 90
    CINT            shift and go to state 71
    NUMBER          shift and go to state 89

    exp_bool                       shift and go to state 169
    exp                            shift and go to state 80
    termino                        shift and go to state 81
    factor                         shift and go to state 84
    objeto_aAcceso                 shift and go to state 85
    var                            shift and go to state 86
    cint                           shift and go to state 87
    cfloat                         shift and go to state 88

state 125

    (103) expresion -> expresion OR . exp_bool
    (105) expresion -> expresion OR . exp_bool rel_op exp_bool
    (106) exp_bool -> . TRUE
    (107) exp_bool -> . FALSE
    (108) exp_bool -> . exp
    (109) exp -> . termino
    (110) exp -> . exp PLUS termino
    (111) exp -> . exp MINUS termino
    (112) termino -> . factor
    (113) termino -> . termino TIMES factor
    (114) termino -> . termino DIVIDE factor
    (115) termino -> . termino MODULO factor
    (116) factor -> . LPAREN expresion RPAREN
    (117) factor -> . PLUS objeto_aAcceso
    (118) factor -> . MINUS objeto_aAcceso
    (119) factor -> . PLUS var
    (120) factor -> . MINUS var
    (121) factor -> . var
    (122) factor -> . objeto_aAcceso
    (123) var -> . ID
    (124) var -> . cint
    (125) var -> . cfloat
    (134) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER

    TRUE            shift and go to state 78
    FALSE           shift and go to state 79
    LPAREN          shift and go to state 77
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    ID              shift and go to state 90
    CINT            shift and go to state 71
    NUMBER          shift and go to state 89

    exp_bool                       shift and go to state 170
    exp                            shift and go to state 80
    termino                        shift and go to state 81
    factor                         shift and go to state 84
    objeto_aAcceso                 shift and go to state 85
    var                            shift and go to state 86
    cint                           shift and go to state 87
    cfloat                         shift and go to state 88

state 126

    (101) expresion -> exp_bool rel_op . exp_bool
    (106) exp_bool -> . TRUE
    (107) exp_bool -> . FALSE
    (108) exp_bool -> . exp
    (109) exp -> . termino
    (110) exp -> . exp PLUS termino
    (111) exp -> . exp MINUS termino
    (112) termino -> . factor
    (113) termino -> . termino TIMES factor
    (114) termino -> . termino DIVIDE factor
    (115) termino -> . termino MODULO factor
    (116) factor -> . LPAREN expresion RPAREN
    (117) factor -> . PLUS objeto_aAcceso
    (118) factor -> . MINUS objeto_aAcceso
    (119) factor -> . PLUS var
    (120) factor -> . MINUS var
    (121) factor -> . var
    (122) factor -> . objeto_aAcceso
    (123) var -> . ID
    (124) var -> . cint
    (125) var -> . cfloat
    (134) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER

    TRUE            shift and go to state 78
    FALSE           shift and go to state 79
    LPAREN          shift and go to state 77
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    ID              shift and go to state 90
    CINT            shift and go to state 71
    NUMBER          shift and go to state 89

    exp_bool                       shift and go to state 171
    exp                            shift and go to state 80
    termino                        shift and go to state 81
    factor                         shift and go to state 84
    objeto_aAcceso                 shift and go to state 85
    var                            shift and go to state 86
    cint                           shift and go to state 87
    cfloat                         shift and go to state 88

state 127

    (128) rel_op -> LT .

    TRUE            reduce using rule 128 (rel_op -> LT .)
    FALSE           reduce using rule 128 (rel_op -> LT .)
    LPAREN          reduce using rule 128 (rel_op -> LT .)
    PLUS            reduce using rule 128 (rel_op -> LT .)
    MINUS           reduce using rule 128 (rel_op -> LT .)
    ID              reduce using rule 128 (rel_op -> LT .)
    CINT            reduce using rule 128 (rel_op -> LT .)
    NUMBER          reduce using rule 128 (rel_op -> LT .)


state 128

    (129) rel_op -> LE .

    TRUE            reduce using rule 129 (rel_op -> LE .)
    FALSE           reduce using rule 129 (rel_op -> LE .)
    LPAREN          reduce using rule 129 (rel_op -> LE .)
    PLUS            reduce using rule 129 (rel_op -> LE .)
    MINUS           reduce using rule 129 (rel_op -> LE .)
    ID              reduce using rule 129 (rel_op -> LE .)
    CINT            reduce using rule 129 (rel_op -> LE .)
    NUMBER          reduce using rule 129 (rel_op -> LE .)


state 129

    (130) rel_op -> GT .

    TRUE            reduce using rule 130 (rel_op -> GT .)
    FALSE           reduce using rule 130 (rel_op -> GT .)
    LPAREN          reduce using rule 130 (rel_op -> GT .)
    PLUS            reduce using rule 130 (rel_op -> GT .)
    MINUS           reduce using rule 130 (rel_op -> GT .)
    ID              reduce using rule 130 (rel_op -> GT .)
    CINT            reduce using rule 130 (rel_op -> GT .)
    NUMBER          reduce using rule 130 (rel_op -> GT .)


state 130

    (131) rel_op -> GE .

    TRUE            reduce using rule 131 (rel_op -> GE .)
    FALSE           reduce using rule 131 (rel_op -> GE .)
    LPAREN          reduce using rule 131 (rel_op -> GE .)
    PLUS            reduce using rule 131 (rel_op -> GE .)
    MINUS           reduce using rule 131 (rel_op -> GE .)
    ID              reduce using rule 131 (rel_op -> GE .)
    CINT            reduce using rule 131 (rel_op -> GE .)
    NUMBER          reduce using rule 131 (rel_op -> GE .)


state 131

    (132) rel_op -> EQ .

    TRUE            reduce using rule 132 (rel_op -> EQ .)
    FALSE           reduce using rule 132 (rel_op -> EQ .)
    LPAREN          reduce using rule 132 (rel_op -> EQ .)
    PLUS            reduce using rule 132 (rel_op -> EQ .)
    MINUS           reduce using rule 132 (rel_op -> EQ .)
    ID              reduce using rule 132 (rel_op -> EQ .)
    CINT            reduce using rule 132 (rel_op -> EQ .)
    NUMBER          reduce using rule 132 (rel_op -> EQ .)


state 132

    (133) rel_op -> NE .

    TRUE            reduce using rule 133 (rel_op -> NE .)
    FALSE           reduce using rule 133 (rel_op -> NE .)
    LPAREN          reduce using rule 133 (rel_op -> NE .)
    PLUS            reduce using rule 133 (rel_op -> NE .)
    MINUS           reduce using rule 133 (rel_op -> NE .)
    ID              reduce using rule 133 (rel_op -> NE .)
    CINT            reduce using rule 133 (rel_op -> NE .)
    NUMBER          reduce using rule 133 (rel_op -> NE .)


state 133

    (116) factor -> LPAREN expresion . RPAREN
    (102) expresion -> expresion . AND exp_bool
    (103) expresion -> expresion . OR exp_bool
    (104) expresion -> expresion . AND exp_bool rel_op exp_bool
    (105) expresion -> expresion . OR exp_bool rel_op exp_bool

    RPAREN          shift and go to state 172
    AND             shift and go to state 124
    OR              shift and go to state 125


state 134

    (110) exp -> exp PLUS . termino
    (112) termino -> . factor
    (113) termino -> . termino TIMES factor
    (114) termino -> . termino DIVIDE factor
    (115) termino -> . termino MODULO factor
    (116) factor -> . LPAREN expresion RPAREN
    (117) factor -> . PLUS objeto_aAcceso
    (118) factor -> . MINUS objeto_aAcceso
    (119) factor -> . PLUS var
    (120) factor -> . MINUS var
    (121) factor -> . var
    (122) factor -> . objeto_aAcceso
    (123) var -> . ID
    (124) var -> . cint
    (125) var -> . cfloat
    (134) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER

    LPAREN          shift and go to state 77
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    ID              shift and go to state 90
    CINT            shift and go to state 71
    NUMBER          shift and go to state 89

    termino                        shift and go to state 173
    factor                         shift and go to state 84
    objeto_aAcceso                 shift and go to state 85
    var                            shift and go to state 86
    cint                           shift and go to state 87
    cfloat                         shift and go to state 88

state 135

    (111) exp -> exp MINUS . termino
    (112) termino -> . factor
    (113) termino -> . termino TIMES factor
    (114) termino -> . termino DIVIDE factor
    (115) termino -> . termino MODULO factor
    (116) factor -> . LPAREN expresion RPAREN
    (117) factor -> . PLUS objeto_aAcceso
    (118) factor -> . MINUS objeto_aAcceso
    (119) factor -> . PLUS var
    (120) factor -> . MINUS var
    (121) factor -> . var
    (122) factor -> . objeto_aAcceso
    (123) var -> . ID
    (124) var -> . cint
    (125) var -> . cfloat
    (134) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER

    LPAREN          shift and go to state 77
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    ID              shift and go to state 90
    CINT            shift and go to state 71
    NUMBER          shift and go to state 89

    termino                        shift and go to state 174
    factor                         shift and go to state 84
    objeto_aAcceso                 shift and go to state 85
    var                            shift and go to state 86
    cint                           shift and go to state 87
    cfloat                         shift and go to state 88

state 136

    (113) termino -> termino TIMES . factor
    (116) factor -> . LPAREN expresion RPAREN
    (117) factor -> . PLUS objeto_aAcceso
    (118) factor -> . MINUS objeto_aAcceso
    (119) factor -> . PLUS var
    (120) factor -> . MINUS var
    (121) factor -> . var
    (122) factor -> . objeto_aAcceso
    (123) var -> . ID
    (124) var -> . cint
    (125) var -> . cfloat
    (134) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER

    LPAREN          shift and go to state 77
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    ID              shift and go to state 90
    CINT            shift and go to state 71
    NUMBER          shift and go to state 89

    factor                         shift and go to state 175
    objeto_aAcceso                 shift and go to state 85
    var                            shift and go to state 86
    cint                           shift and go to state 87
    cfloat                         shift and go to state 88

state 137

    (114) termino -> termino DIVIDE . factor
    (116) factor -> . LPAREN expresion RPAREN
    (117) factor -> . PLUS objeto_aAcceso
    (118) factor -> . MINUS objeto_aAcceso
    (119) factor -> . PLUS var
    (120) factor -> . MINUS var
    (121) factor -> . var
    (122) factor -> . objeto_aAcceso
    (123) var -> . ID
    (124) var -> . cint
    (125) var -> . cfloat
    (134) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER

    LPAREN          shift and go to state 77
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    ID              shift and go to state 90
    CINT            shift and go to state 71
    NUMBER          shift and go to state 89

    factor                         shift and go to state 176
    objeto_aAcceso                 shift and go to state 85
    var                            shift and go to state 86
    cint                           shift and go to state 87
    cfloat                         shift and go to state 88

state 138

    (115) termino -> termino MODULO . factor
    (116) factor -> . LPAREN expresion RPAREN
    (117) factor -> . PLUS objeto_aAcceso
    (118) factor -> . MINUS objeto_aAcceso
    (119) factor -> . PLUS var
    (120) factor -> . MINUS var
    (121) factor -> . var
    (122) factor -> . objeto_aAcceso
    (123) var -> . ID
    (124) var -> . cint
    (125) var -> . cfloat
    (134) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER

    LPAREN          shift and go to state 77
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    ID              shift and go to state 90
    CINT            shift and go to state 71
    NUMBER          shift and go to state 89

    factor                         shift and go to state 177
    objeto_aAcceso                 shift and go to state 85
    var                            shift and go to state 86
    cint                           shift and go to state 87
    cfloat                         shift and go to state 88

state 139

    (117) factor -> PLUS objeto_aAcceso .

    TIMES           reduce using rule 117 (factor -> PLUS objeto_aAcceso .)
    DIVIDE          reduce using rule 117 (factor -> PLUS objeto_aAcceso .)
    MODULO          reduce using rule 117 (factor -> PLUS objeto_aAcceso .)
    PLUS            reduce using rule 117 (factor -> PLUS objeto_aAcceso .)
    MINUS           reduce using rule 117 (factor -> PLUS objeto_aAcceso .)
    LT              reduce using rule 117 (factor -> PLUS objeto_aAcceso .)
    LE              reduce using rule 117 (factor -> PLUS objeto_aAcceso .)
    GT              reduce using rule 117 (factor -> PLUS objeto_aAcceso .)
    GE              reduce using rule 117 (factor -> PLUS objeto_aAcceso .)
    EQ              reduce using rule 117 (factor -> PLUS objeto_aAcceso .)
    NE              reduce using rule 117 (factor -> PLUS objeto_aAcceso .)
    AND             reduce using rule 117 (factor -> PLUS objeto_aAcceso .)
    OR              reduce using rule 117 (factor -> PLUS objeto_aAcceso .)
    RBRACE          reduce using rule 117 (factor -> PLUS objeto_aAcceso .)
    ID              reduce using rule 117 (factor -> PLUS objeto_aAcceso .)
    IF              reduce using rule 117 (factor -> PLUS objeto_aAcceso .)
    READ            reduce using rule 117 (factor -> PLUS objeto_aAcceso .)
    PRINT           reduce using rule 117 (factor -> PLUS objeto_aAcceso .)
    WHILE           reduce using rule 117 (factor -> PLUS objeto_aAcceso .)
    RETURN          reduce using rule 117 (factor -> PLUS objeto_aAcceso .)
    RPAREN          reduce using rule 117 (factor -> PLUS objeto_aAcceso .)
    COMMA           reduce using rule 117 (factor -> PLUS objeto_aAcceso .)


state 140

    (119) factor -> PLUS var .

    TIMES           reduce using rule 119 (factor -> PLUS var .)
    DIVIDE          reduce using rule 119 (factor -> PLUS var .)
    MODULO          reduce using rule 119 (factor -> PLUS var .)
    PLUS            reduce using rule 119 (factor -> PLUS var .)
    MINUS           reduce using rule 119 (factor -> PLUS var .)
    LT              reduce using rule 119 (factor -> PLUS var .)
    LE              reduce using rule 119 (factor -> PLUS var .)
    GT              reduce using rule 119 (factor -> PLUS var .)
    GE              reduce using rule 119 (factor -> PLUS var .)
    EQ              reduce using rule 119 (factor -> PLUS var .)
    NE              reduce using rule 119 (factor -> PLUS var .)
    AND             reduce using rule 119 (factor -> PLUS var .)
    OR              reduce using rule 119 (factor -> PLUS var .)
    RBRACE          reduce using rule 119 (factor -> PLUS var .)
    ID              reduce using rule 119 (factor -> PLUS var .)
    IF              reduce using rule 119 (factor -> PLUS var .)
    READ            reduce using rule 119 (factor -> PLUS var .)
    PRINT           reduce using rule 119 (factor -> PLUS var .)
    WHILE           reduce using rule 119 (factor -> PLUS var .)
    RETURN          reduce using rule 119 (factor -> PLUS var .)
    RPAREN          reduce using rule 119 (factor -> PLUS var .)
    COMMA           reduce using rule 119 (factor -> PLUS var .)


state 141

    (134) objeto_aAcceso -> ID . PERIOD ID
    (123) var -> ID .

    PERIOD          shift and go to state 144
    TIMES           reduce using rule 123 (var -> ID .)
    DIVIDE          reduce using rule 123 (var -> ID .)
    MODULO          reduce using rule 123 (var -> ID .)
    PLUS            reduce using rule 123 (var -> ID .)
    MINUS           reduce using rule 123 (var -> ID .)
    LT              reduce using rule 123 (var -> ID .)
    LE              reduce using rule 123 (var -> ID .)
    GT              reduce using rule 123 (var -> ID .)
    GE              reduce using rule 123 (var -> ID .)
    EQ              reduce using rule 123 (var -> ID .)
    NE              reduce using rule 123 (var -> ID .)
    AND             reduce using rule 123 (var -> ID .)
    OR              reduce using rule 123 (var -> ID .)
    RBRACE          reduce using rule 123 (var -> ID .)
    ID              reduce using rule 123 (var -> ID .)
    IF              reduce using rule 123 (var -> ID .)
    READ            reduce using rule 123 (var -> ID .)
    PRINT           reduce using rule 123 (var -> ID .)
    WHILE           reduce using rule 123 (var -> ID .)
    RETURN          reduce using rule 123 (var -> ID .)
    RPAREN          reduce using rule 123 (var -> ID .)
    COMMA           reduce using rule 123 (var -> ID .)


state 142

    (118) factor -> MINUS objeto_aAcceso .

    TIMES           reduce using rule 118 (factor -> MINUS objeto_aAcceso .)
    DIVIDE          reduce using rule 118 (factor -> MINUS objeto_aAcceso .)
    MODULO          reduce using rule 118 (factor -> MINUS objeto_aAcceso .)
    PLUS            reduce using rule 118 (factor -> MINUS objeto_aAcceso .)
    MINUS           reduce using rule 118 (factor -> MINUS objeto_aAcceso .)
    LT              reduce using rule 118 (factor -> MINUS objeto_aAcceso .)
    LE              reduce using rule 118 (factor -> MINUS objeto_aAcceso .)
    GT              reduce using rule 118 (factor -> MINUS objeto_aAcceso .)
    GE              reduce using rule 118 (factor -> MINUS objeto_aAcceso .)
    EQ              reduce using rule 118 (factor -> MINUS objeto_aAcceso .)
    NE              reduce using rule 118 (factor -> MINUS objeto_aAcceso .)
    AND             reduce using rule 118 (factor -> MINUS objeto_aAcceso .)
    OR              reduce using rule 118 (factor -> MINUS objeto_aAcceso .)
    RBRACE          reduce using rule 118 (factor -> MINUS objeto_aAcceso .)
    ID              reduce using rule 118 (factor -> MINUS objeto_aAcceso .)
    IF              reduce using rule 118 (factor -> MINUS objeto_aAcceso .)
    READ            reduce using rule 118 (factor -> MINUS objeto_aAcceso .)
    PRINT           reduce using rule 118 (factor -> MINUS objeto_aAcceso .)
    WHILE           reduce using rule 118 (factor -> MINUS objeto_aAcceso .)
    RETURN          reduce using rule 118 (factor -> MINUS objeto_aAcceso .)
    RPAREN          reduce using rule 118 (factor -> MINUS objeto_aAcceso .)
    COMMA           reduce using rule 118 (factor -> MINUS objeto_aAcceso .)


state 143

    (120) factor -> MINUS var .

    TIMES           reduce using rule 120 (factor -> MINUS var .)
    DIVIDE          reduce using rule 120 (factor -> MINUS var .)
    MODULO          reduce using rule 120 (factor -> MINUS var .)
    PLUS            reduce using rule 120 (factor -> MINUS var .)
    MINUS           reduce using rule 120 (factor -> MINUS var .)
    LT              reduce using rule 120 (factor -> MINUS var .)
    LE              reduce using rule 120 (factor -> MINUS var .)
    GT              reduce using rule 120 (factor -> MINUS var .)
    GE              reduce using rule 120 (factor -> MINUS var .)
    EQ              reduce using rule 120 (factor -> MINUS var .)
    NE              reduce using rule 120 (factor -> MINUS var .)
    AND             reduce using rule 120 (factor -> MINUS var .)
    OR              reduce using rule 120 (factor -> MINUS var .)
    RBRACE          reduce using rule 120 (factor -> MINUS var .)
    ID              reduce using rule 120 (factor -> MINUS var .)
    IF              reduce using rule 120 (factor -> MINUS var .)
    READ            reduce using rule 120 (factor -> MINUS var .)
    PRINT           reduce using rule 120 (factor -> MINUS var .)
    WHILE           reduce using rule 120 (factor -> MINUS var .)
    RETURN          reduce using rule 120 (factor -> MINUS var .)
    RPAREN          reduce using rule 120 (factor -> MINUS var .)
    COMMA           reduce using rule 120 (factor -> MINUS var .)


state 144

    (134) objeto_aAcceso -> ID PERIOD . ID

    ID              shift and go to state 178


state 145

    (46) llamada_func -> ID LPAREN aux3 RPAREN .

    RBRACE          reduce using rule 46 (llamada_func -> ID LPAREN aux3 RPAREN .)
    ID              reduce using rule 46 (llamada_func -> ID LPAREN aux3 RPAREN .)
    IF              reduce using rule 46 (llamada_func -> ID LPAREN aux3 RPAREN .)
    READ            reduce using rule 46 (llamada_func -> ID LPAREN aux3 RPAREN .)
    PRINT           reduce using rule 46 (llamada_func -> ID LPAREN aux3 RPAREN .)
    WHILE           reduce using rule 46 (llamada_func -> ID LPAREN aux3 RPAREN .)
    RETURN          reduce using rule 46 (llamada_func -> ID LPAREN aux3 RPAREN .)
    RPAREN          reduce using rule 46 (llamada_func -> ID LPAREN aux3 RPAREN .)
    COMMA           reduce using rule 46 (llamada_func -> ID LPAREN aux3 RPAREN .)


state 146

    (48) aux3 -> aux3 COMMA . exp
    (109) exp -> . termino
    (110) exp -> . exp PLUS termino
    (111) exp -> . exp MINUS termino
    (112) termino -> . factor
    (113) termino -> . termino TIMES factor
    (114) termino -> . termino DIVIDE factor
    (115) termino -> . termino MODULO factor
    (116) factor -> . LPAREN expresion RPAREN
    (117) factor -> . PLUS objeto_aAcceso
    (118) factor -> . MINUS objeto_aAcceso
    (119) factor -> . PLUS var
    (120) factor -> . MINUS var
    (121) factor -> . var
    (122) factor -> . objeto_aAcceso
    (123) var -> . ID
    (124) var -> . cint
    (125) var -> . cfloat
    (134) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER

    LPAREN          shift and go to state 77
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    ID              shift and go to state 90
    CINT            shift and go to state 71
    NUMBER          shift and go to state 89

    exp                            shift and go to state 179
    termino                        shift and go to state 81
    factor                         shift and go to state 84
    objeto_aAcceso                 shift and go to state 85
    var                            shift and go to state 86
    cint                           shift and go to state 87
    cfloat                         shift and go to state 88

state 147

    (80) tipo_compuesto -> ID .

    ID              reduce using rule 80 (tipo_compuesto -> ID .)
    RBRACE          reduce using rule 80 (tipo_compuesto -> ID .)
    VAR             reduce using rule 80 (tipo_compuesto -> ID .)
    PRIVATE         reduce using rule 80 (tipo_compuesto -> ID .)
    PUBLIC          reduce using rule 80 (tipo_compuesto -> ID .)
    PROTECTED       reduce using rule 80 (tipo_compuesto -> ID .)
    IF              reduce using rule 80 (tipo_compuesto -> ID .)
    READ            reduce using rule 80 (tipo_compuesto -> ID .)
    PRINT           reduce using rule 80 (tipo_compuesto -> ID .)
    WHILE           reduce using rule 80 (tipo_compuesto -> ID .)
    RETURN          reduce using rule 80 (tipo_compuesto -> ID .)


state 148

    (68) aux -> ID COLON tipo_simple .

    ID              reduce using rule 68 (aux -> ID COLON tipo_simple .)
    RBRACE          reduce using rule 68 (aux -> ID COLON tipo_simple .)
    VAR             reduce using rule 68 (aux -> ID COLON tipo_simple .)
    PRIVATE         reduce using rule 68 (aux -> ID COLON tipo_simple .)
    PUBLIC          reduce using rule 68 (aux -> ID COLON tipo_simple .)
    PROTECTED       reduce using rule 68 (aux -> ID COLON tipo_simple .)
    IF              reduce using rule 68 (aux -> ID COLON tipo_simple .)
    READ            reduce using rule 68 (aux -> ID COLON tipo_simple .)
    PRINT           reduce using rule 68 (aux -> ID COLON tipo_simple .)
    WHILE           reduce using rule 68 (aux -> ID COLON tipo_simple .)
    RETURN          reduce using rule 68 (aux -> ID COLON tipo_simple .)


state 149

    (69) aux -> ID COLON tipo_compuesto .

    ID              reduce using rule 69 (aux -> ID COLON tipo_compuesto .)
    RBRACE          reduce using rule 69 (aux -> ID COLON tipo_compuesto .)
    VAR             reduce using rule 69 (aux -> ID COLON tipo_compuesto .)
    PRIVATE         reduce using rule 69 (aux -> ID COLON tipo_compuesto .)
    PUBLIC          reduce using rule 69 (aux -> ID COLON tipo_compuesto .)
    PROTECTED       reduce using rule 69 (aux -> ID COLON tipo_compuesto .)
    IF              reduce using rule 69 (aux -> ID COLON tipo_compuesto .)
    READ            reduce using rule 69 (aux -> ID COLON tipo_compuesto .)
    PRINT           reduce using rule 69 (aux -> ID COLON tipo_compuesto .)
    WHILE           reduce using rule 69 (aux -> ID COLON tipo_compuesto .)
    RETURN          reduce using rule 69 (aux -> ID COLON tipo_compuesto .)


state 150

    (70) aux -> ID LBRACKET cint . RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (71) aux -> ID LBRACKET cint . RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (72) aux -> ID LBRACKET cint . RBRACKET COLON tipo_simple
    (73) aux -> ID LBRACKET cint . RBRACKET COLON tipo_compuesto

    RBRACKET        shift and go to state 180


state 151

    (76) aux2 -> aux2 aux2 .
    (76) aux2 -> aux2 . aux2
    (76) aux2 -> . aux2 aux2
    (77) aux2 -> . COMMA ID

  ! shift/reduce conflict for COMMA resolved as shift
    COLON           reduce using rule 76 (aux2 -> aux2 aux2 .)
    COMMA           shift and go to state 99

  ! COMMA           [ reduce using rule 76 (aux2 -> aux2 aux2 .) ]

    aux2                           shift and go to state 151

state 152

    (74) aux -> ID aux2 COLON . tipo_simple
    (75) aux -> ID aux2 COLON . tipo_compuesto
    (78) tipo_simple -> . INT
    (79) tipo_simple -> . FLOAT
    (80) tipo_compuesto -> . ID

    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    ID              shift and go to state 147

    tipo_simple                    shift and go to state 181
    tipo_compuesto                 shift and go to state 182

state 153

    (77) aux2 -> COMMA ID .

    COLON           reduce using rule 77 (aux2 -> COMMA ID .)
    COMMA           reduce using rule 77 (aux2 -> COMMA ID .)


state 154

    (49) funcion -> scope DEF ID LPAREN . param RPAREN contexto_func
    (59) param -> . aux4
    (60) aux4 -> . tipo_simple ID
    (61) aux4 -> . aux4 COMMA tipo_simple ID
    (78) tipo_simple -> . INT
    (79) tipo_simple -> . FLOAT

    INT             shift and go to state 121
    FLOAT           shift and go to state 122

    param                          shift and go to state 183
    aux4                           shift and go to state 119
    tipo_simple                    shift and go to state 120

state 155

    (81) asignacion -> objeto_aAcceso LBRACKET cint RBRACKET . LBRACKET cint RBRACKET EQUALS expresion
    (82) asignacion -> objeto_aAcceso LBRACKET cint RBRACKET . EQUALS expresion
    (87) asignacion -> objeto_aAcceso LBRACKET cint RBRACKET . LBRACKET cint RBRACKET EQUALS llamada_func
    (88) asignacion -> objeto_aAcceso LBRACKET cint RBRACKET . EQUALS llamada_func
    (93) asignacion -> objeto_aAcceso LBRACKET cint RBRACKET . LBRACKET cint RBRACKET EQUALS objeto_metodo
    (94) asignacion -> objeto_aAcceso LBRACKET cint RBRACKET . EQUALS objeto_metodo

    LBRACKET        shift and go to state 184
    EQUALS          shift and go to state 185


state 156

    (32) condicion -> IF LPAREN expresion RPAREN . bloque
    (33) condicion -> IF LPAREN expresion RPAREN . bloque ELIF LPAREN expresion RPAREN bloque
    (34) bloque -> . LBRACE estatuto RBRACE

    LBRACE          shift and go to state 187

    bloque                         shift and go to state 186

state 157

    (35) lectura -> READ LPAREN ID RPAREN .

    RBRACE          reduce using rule 35 (lectura -> READ LPAREN ID RPAREN .)
    ID              reduce using rule 35 (lectura -> READ LPAREN ID RPAREN .)
    IF              reduce using rule 35 (lectura -> READ LPAREN ID RPAREN .)
    READ            reduce using rule 35 (lectura -> READ LPAREN ID RPAREN .)
    PRINT           reduce using rule 35 (lectura -> READ LPAREN ID RPAREN .)
    WHILE           reduce using rule 35 (lectura -> READ LPAREN ID RPAREN .)
    RETURN          reduce using rule 35 (lectura -> READ LPAREN ID RPAREN .)


state 158

    (36) lectura -> READ LPAREN objeto_aAcceso RPAREN .

    RBRACE          reduce using rule 36 (lectura -> READ LPAREN objeto_aAcceso RPAREN .)
    ID              reduce using rule 36 (lectura -> READ LPAREN objeto_aAcceso RPAREN .)
    IF              reduce using rule 36 (lectura -> READ LPAREN objeto_aAcceso RPAREN .)
    READ            reduce using rule 36 (lectura -> READ LPAREN objeto_aAcceso RPAREN .)
    PRINT           reduce using rule 36 (lectura -> READ LPAREN objeto_aAcceso RPAREN .)
    WHILE           reduce using rule 36 (lectura -> READ LPAREN objeto_aAcceso RPAREN .)
    RETURN          reduce using rule 36 (lectura -> READ LPAREN objeto_aAcceso RPAREN .)


state 159

    (37) escritura -> PRINT LPAREN aux5 RPAREN .

    RBRACE          reduce using rule 37 (escritura -> PRINT LPAREN aux5 RPAREN .)
    ID              reduce using rule 37 (escritura -> PRINT LPAREN aux5 RPAREN .)
    IF              reduce using rule 37 (escritura -> PRINT LPAREN aux5 RPAREN .)
    READ            reduce using rule 37 (escritura -> PRINT LPAREN aux5 RPAREN .)
    PRINT           reduce using rule 37 (escritura -> PRINT LPAREN aux5 RPAREN .)
    WHILE           reduce using rule 37 (escritura -> PRINT LPAREN aux5 RPAREN .)
    RETURN          reduce using rule 37 (escritura -> PRINT LPAREN aux5 RPAREN .)


state 160

    (42) aux5 -> aux5 COMMA . expresion
    (43) aux5 -> aux5 COMMA . llamada_func
    (44) aux5 -> aux5 COMMA . objeto_metodo
    (45) aux5 -> aux5 COMMA . CSTRING
    (100) expresion -> . exp_bool
    (101) expresion -> . exp_bool rel_op exp_bool
    (102) expresion -> . expresion AND exp_bool
    (103) expresion -> . expresion OR exp_bool
    (104) expresion -> . expresion AND exp_bool rel_op exp_bool
    (105) expresion -> . expresion OR exp_bool rel_op exp_bool
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (106) exp_bool -> . TRUE
    (107) exp_bool -> . FALSE
    (108) exp_bool -> . exp
    (109) exp -> . termino
    (110) exp -> . exp PLUS termino
    (111) exp -> . exp MINUS termino
    (112) termino -> . factor
    (113) termino -> . termino TIMES factor
    (114) termino -> . termino DIVIDE factor
    (115) termino -> . termino MODULO factor
    (116) factor -> . LPAREN expresion RPAREN
    (117) factor -> . PLUS objeto_aAcceso
    (118) factor -> . MINUS objeto_aAcceso
    (119) factor -> . PLUS var
    (120) factor -> . MINUS var
    (121) factor -> . var
    (122) factor -> . objeto_aAcceso
    (123) var -> . ID
    (124) var -> . cint
    (125) var -> . cfloat
    (134) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER

    CSTRING         shift and go to state 191
    ID              shift and go to state 72
    TRUE            shift and go to state 78
    FALSE           shift and go to state 79
    LPAREN          shift and go to state 77
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CINT            shift and go to state 71
    NUMBER          shift and go to state 89

    expresion                      shift and go to state 188
    llamada_func                   shift and go to state 189
    objeto_metodo                  shift and go to state 190
    exp_bool                       shift and go to state 76
    exp                            shift and go to state 80
    termino                        shift and go to state 81
    factor                         shift and go to state 84
    objeto_aAcceso                 shift and go to state 85
    var                            shift and go to state 86
    cint                           shift and go to state 87
    cfloat                         shift and go to state 88

state 161

    (31) ciclo -> WHILE LPAREN expresion RPAREN . bloque
    (34) bloque -> . LBRACE estatuto RBRACE

    LBRACE          shift and go to state 187

    bloque                         shift and go to state 192

state 162

    (4) class -> scope CLASS ID COLON ID context .

    $end            reduce using rule 4 (class -> scope CLASS ID COLON ID context .)


state 163

    (5) context -> LBRACE constructor vars funcion estatuto RBRACE .

    $end            reduce using rule 5 (context -> LBRACE constructor vars funcion estatuto RBRACE .)


state 164

    (13) constructor -> PUBLIC ID LPAREN param RPAREN . contexto_const
    (14) contexto_const -> . LBRACE vars RBRACE
    (15) contexto_const -> . LBRACE estatuto RBRACE
    (16) contexto_const -> . LBRACE vars estatuto RBRACE

    LBRACE          shift and go to state 194

    contexto_const                 shift and go to state 193

state 165

    (61) aux4 -> aux4 COMMA . tipo_simple ID
    (78) tipo_simple -> . INT
    (79) tipo_simple -> . FLOAT

    INT             shift and go to state 121
    FLOAT           shift and go to state 122

    tipo_simple                    shift and go to state 195

state 166

    (60) aux4 -> tipo_simple ID .

    COMMA           reduce using rule 60 (aux4 -> tipo_simple ID .)
    RPAREN          reduce using rule 60 (aux4 -> tipo_simple ID .)


state 167

    (84) asignacion -> ID LBRACKET cint RBRACKET LBRACKET . cint RBRACKET EQUALS expresion
    (90) asignacion -> ID LBRACKET cint RBRACKET LBRACKET . cint RBRACKET EQUALS llamada_func
    (96) asignacion -> ID LBRACKET cint RBRACKET LBRACKET . cint RBRACKET EQUALS objeto_metodo
    (126) cint -> . CINT

    CINT            shift and go to state 71

    cint                           shift and go to state 196

state 168

    (85) asignacion -> ID LBRACKET cint RBRACKET EQUALS . expresion
    (91) asignacion -> ID LBRACKET cint RBRACKET EQUALS . llamada_func
    (97) asignacion -> ID LBRACKET cint RBRACKET EQUALS . objeto_metodo
    (100) expresion -> . exp_bool
    (101) expresion -> . exp_bool rel_op exp_bool
    (102) expresion -> . expresion AND exp_bool
    (103) expresion -> . expresion OR exp_bool
    (104) expresion -> . expresion AND exp_bool rel_op exp_bool
    (105) expresion -> . expresion OR exp_bool rel_op exp_bool
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (106) exp_bool -> . TRUE
    (107) exp_bool -> . FALSE
    (108) exp_bool -> . exp
    (109) exp -> . termino
    (110) exp -> . exp PLUS termino
    (111) exp -> . exp MINUS termino
    (112) termino -> . factor
    (113) termino -> . termino TIMES factor
    (114) termino -> . termino DIVIDE factor
    (115) termino -> . termino MODULO factor
    (116) factor -> . LPAREN expresion RPAREN
    (117) factor -> . PLUS objeto_aAcceso
    (118) factor -> . MINUS objeto_aAcceso
    (119) factor -> . PLUS var
    (120) factor -> . MINUS var
    (121) factor -> . var
    (122) factor -> . objeto_aAcceso
    (123) var -> . ID
    (124) var -> . cint
    (125) var -> . cfloat
    (134) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER

    ID              shift and go to state 72
    TRUE            shift and go to state 78
    FALSE           shift and go to state 79
    LPAREN          shift and go to state 77
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CINT            shift and go to state 71
    NUMBER          shift and go to state 89

    cint                           shift and go to state 87
    expresion                      shift and go to state 197
    llamada_func                   shift and go to state 198
    objeto_metodo                  shift and go to state 199
    exp_bool                       shift and go to state 76
    exp                            shift and go to state 80
    termino                        shift and go to state 81
    factor                         shift and go to state 84
    objeto_aAcceso                 shift and go to state 85
    var                            shift and go to state 86
    cfloat                         shift and go to state 88

state 169

    (102) expresion -> expresion AND exp_bool .
    (104) expresion -> expresion AND exp_bool . rel_op exp_bool
    (128) rel_op -> . LT
    (129) rel_op -> . LE
    (130) rel_op -> . GT
    (131) rel_op -> . GE
    (132) rel_op -> . EQ
    (133) rel_op -> . NE

    AND             reduce using rule 102 (expresion -> expresion AND exp_bool .)
    OR              reduce using rule 102 (expresion -> expresion AND exp_bool .)
    RBRACE          reduce using rule 102 (expresion -> expresion AND exp_bool .)
    ID              reduce using rule 102 (expresion -> expresion AND exp_bool .)
    IF              reduce using rule 102 (expresion -> expresion AND exp_bool .)
    READ            reduce using rule 102 (expresion -> expresion AND exp_bool .)
    PRINT           reduce using rule 102 (expresion -> expresion AND exp_bool .)
    WHILE           reduce using rule 102 (expresion -> expresion AND exp_bool .)
    RETURN          reduce using rule 102 (expresion -> expresion AND exp_bool .)
    RPAREN          reduce using rule 102 (expresion -> expresion AND exp_bool .)
    COMMA           reduce using rule 102 (expresion -> expresion AND exp_bool .)
    LT              shift and go to state 127
    LE              shift and go to state 128
    GT              shift and go to state 129
    GE              shift and go to state 130
    EQ              shift and go to state 131
    NE              shift and go to state 132

    rel_op                         shift and go to state 200

state 170

    (103) expresion -> expresion OR exp_bool .
    (105) expresion -> expresion OR exp_bool . rel_op exp_bool
    (128) rel_op -> . LT
    (129) rel_op -> . LE
    (130) rel_op -> . GT
    (131) rel_op -> . GE
    (132) rel_op -> . EQ
    (133) rel_op -> . NE

    AND             reduce using rule 103 (expresion -> expresion OR exp_bool .)
    OR              reduce using rule 103 (expresion -> expresion OR exp_bool .)
    RBRACE          reduce using rule 103 (expresion -> expresion OR exp_bool .)
    ID              reduce using rule 103 (expresion -> expresion OR exp_bool .)
    IF              reduce using rule 103 (expresion -> expresion OR exp_bool .)
    READ            reduce using rule 103 (expresion -> expresion OR exp_bool .)
    PRINT           reduce using rule 103 (expresion -> expresion OR exp_bool .)
    WHILE           reduce using rule 103 (expresion -> expresion OR exp_bool .)
    RETURN          reduce using rule 103 (expresion -> expresion OR exp_bool .)
    RPAREN          reduce using rule 103 (expresion -> expresion OR exp_bool .)
    COMMA           reduce using rule 103 (expresion -> expresion OR exp_bool .)
    LT              shift and go to state 127
    LE              shift and go to state 128
    GT              shift and go to state 129
    GE              shift and go to state 130
    EQ              shift and go to state 131
    NE              shift and go to state 132

    rel_op                         shift and go to state 201

state 171

    (101) expresion -> exp_bool rel_op exp_bool .

    AND             reduce using rule 101 (expresion -> exp_bool rel_op exp_bool .)
    OR              reduce using rule 101 (expresion -> exp_bool rel_op exp_bool .)
    RBRACE          reduce using rule 101 (expresion -> exp_bool rel_op exp_bool .)
    ID              reduce using rule 101 (expresion -> exp_bool rel_op exp_bool .)
    IF              reduce using rule 101 (expresion -> exp_bool rel_op exp_bool .)
    READ            reduce using rule 101 (expresion -> exp_bool rel_op exp_bool .)
    PRINT           reduce using rule 101 (expresion -> exp_bool rel_op exp_bool .)
    WHILE           reduce using rule 101 (expresion -> exp_bool rel_op exp_bool .)
    RETURN          reduce using rule 101 (expresion -> exp_bool rel_op exp_bool .)
    RPAREN          reduce using rule 101 (expresion -> exp_bool rel_op exp_bool .)
    COMMA           reduce using rule 101 (expresion -> exp_bool rel_op exp_bool .)


state 172

    (116) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 116 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 116 (factor -> LPAREN expresion RPAREN .)
    MODULO          reduce using rule 116 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 116 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 116 (factor -> LPAREN expresion RPAREN .)
    LT              reduce using rule 116 (factor -> LPAREN expresion RPAREN .)
    LE              reduce using rule 116 (factor -> LPAREN expresion RPAREN .)
    GT              reduce using rule 116 (factor -> LPAREN expresion RPAREN .)
    GE              reduce using rule 116 (factor -> LPAREN expresion RPAREN .)
    EQ              reduce using rule 116 (factor -> LPAREN expresion RPAREN .)
    NE              reduce using rule 116 (factor -> LPAREN expresion RPAREN .)
    AND             reduce using rule 116 (factor -> LPAREN expresion RPAREN .)
    OR              reduce using rule 116 (factor -> LPAREN expresion RPAREN .)
    RBRACE          reduce using rule 116 (factor -> LPAREN expresion RPAREN .)
    ID              reduce using rule 116 (factor -> LPAREN expresion RPAREN .)
    IF              reduce using rule 116 (factor -> LPAREN expresion RPAREN .)
    READ            reduce using rule 116 (factor -> LPAREN expresion RPAREN .)
    PRINT           reduce using rule 116 (factor -> LPAREN expresion RPAREN .)
    WHILE           reduce using rule 116 (factor -> LPAREN expresion RPAREN .)
    RETURN          reduce using rule 116 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 116 (factor -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 116 (factor -> LPAREN expresion RPAREN .)


state 173

    (110) exp -> exp PLUS termino .
    (113) termino -> termino . TIMES factor
    (114) termino -> termino . DIVIDE factor
    (115) termino -> termino . MODULO factor

    PLUS            reduce using rule 110 (exp -> exp PLUS termino .)
    MINUS           reduce using rule 110 (exp -> exp PLUS termino .)
    LT              reduce using rule 110 (exp -> exp PLUS termino .)
    LE              reduce using rule 110 (exp -> exp PLUS termino .)
    GT              reduce using rule 110 (exp -> exp PLUS termino .)
    GE              reduce using rule 110 (exp -> exp PLUS termino .)
    EQ              reduce using rule 110 (exp -> exp PLUS termino .)
    NE              reduce using rule 110 (exp -> exp PLUS termino .)
    AND             reduce using rule 110 (exp -> exp PLUS termino .)
    OR              reduce using rule 110 (exp -> exp PLUS termino .)
    RBRACE          reduce using rule 110 (exp -> exp PLUS termino .)
    ID              reduce using rule 110 (exp -> exp PLUS termino .)
    IF              reduce using rule 110 (exp -> exp PLUS termino .)
    READ            reduce using rule 110 (exp -> exp PLUS termino .)
    PRINT           reduce using rule 110 (exp -> exp PLUS termino .)
    WHILE           reduce using rule 110 (exp -> exp PLUS termino .)
    RETURN          reduce using rule 110 (exp -> exp PLUS termino .)
    RPAREN          reduce using rule 110 (exp -> exp PLUS termino .)
    COMMA           reduce using rule 110 (exp -> exp PLUS termino .)
    TIMES           shift and go to state 136
    DIVIDE          shift and go to state 137
    MODULO          shift and go to state 138


state 174

    (111) exp -> exp MINUS termino .
    (113) termino -> termino . TIMES factor
    (114) termino -> termino . DIVIDE factor
    (115) termino -> termino . MODULO factor

    PLUS            reduce using rule 111 (exp -> exp MINUS termino .)
    MINUS           reduce using rule 111 (exp -> exp MINUS termino .)
    LT              reduce using rule 111 (exp -> exp MINUS termino .)
    LE              reduce using rule 111 (exp -> exp MINUS termino .)
    GT              reduce using rule 111 (exp -> exp MINUS termino .)
    GE              reduce using rule 111 (exp -> exp MINUS termino .)
    EQ              reduce using rule 111 (exp -> exp MINUS termino .)
    NE              reduce using rule 111 (exp -> exp MINUS termino .)
    AND             reduce using rule 111 (exp -> exp MINUS termino .)
    OR              reduce using rule 111 (exp -> exp MINUS termino .)
    RBRACE          reduce using rule 111 (exp -> exp MINUS termino .)
    ID              reduce using rule 111 (exp -> exp MINUS termino .)
    IF              reduce using rule 111 (exp -> exp MINUS termino .)
    READ            reduce using rule 111 (exp -> exp MINUS termino .)
    PRINT           reduce using rule 111 (exp -> exp MINUS termino .)
    WHILE           reduce using rule 111 (exp -> exp MINUS termino .)
    RETURN          reduce using rule 111 (exp -> exp MINUS termino .)
    RPAREN          reduce using rule 111 (exp -> exp MINUS termino .)
    COMMA           reduce using rule 111 (exp -> exp MINUS termino .)
    TIMES           shift and go to state 136
    DIVIDE          shift and go to state 137
    MODULO          shift and go to state 138


state 175

    (113) termino -> termino TIMES factor .

    TIMES           reduce using rule 113 (termino -> termino TIMES factor .)
    DIVIDE          reduce using rule 113 (termino -> termino TIMES factor .)
    MODULO          reduce using rule 113 (termino -> termino TIMES factor .)
    PLUS            reduce using rule 113 (termino -> termino TIMES factor .)
    MINUS           reduce using rule 113 (termino -> termino TIMES factor .)
    LT              reduce using rule 113 (termino -> termino TIMES factor .)
    LE              reduce using rule 113 (termino -> termino TIMES factor .)
    GT              reduce using rule 113 (termino -> termino TIMES factor .)
    GE              reduce using rule 113 (termino -> termino TIMES factor .)
    EQ              reduce using rule 113 (termino -> termino TIMES factor .)
    NE              reduce using rule 113 (termino -> termino TIMES factor .)
    AND             reduce using rule 113 (termino -> termino TIMES factor .)
    OR              reduce using rule 113 (termino -> termino TIMES factor .)
    RBRACE          reduce using rule 113 (termino -> termino TIMES factor .)
    ID              reduce using rule 113 (termino -> termino TIMES factor .)
    IF              reduce using rule 113 (termino -> termino TIMES factor .)
    READ            reduce using rule 113 (termino -> termino TIMES factor .)
    PRINT           reduce using rule 113 (termino -> termino TIMES factor .)
    WHILE           reduce using rule 113 (termino -> termino TIMES factor .)
    RETURN          reduce using rule 113 (termino -> termino TIMES factor .)
    RPAREN          reduce using rule 113 (termino -> termino TIMES factor .)
    COMMA           reduce using rule 113 (termino -> termino TIMES factor .)


state 176

    (114) termino -> termino DIVIDE factor .

    TIMES           reduce using rule 114 (termino -> termino DIVIDE factor .)
    DIVIDE          reduce using rule 114 (termino -> termino DIVIDE factor .)
    MODULO          reduce using rule 114 (termino -> termino DIVIDE factor .)
    PLUS            reduce using rule 114 (termino -> termino DIVIDE factor .)
    MINUS           reduce using rule 114 (termino -> termino DIVIDE factor .)
    LT              reduce using rule 114 (termino -> termino DIVIDE factor .)
    LE              reduce using rule 114 (termino -> termino DIVIDE factor .)
    GT              reduce using rule 114 (termino -> termino DIVIDE factor .)
    GE              reduce using rule 114 (termino -> termino DIVIDE factor .)
    EQ              reduce using rule 114 (termino -> termino DIVIDE factor .)
    NE              reduce using rule 114 (termino -> termino DIVIDE factor .)
    AND             reduce using rule 114 (termino -> termino DIVIDE factor .)
    OR              reduce using rule 114 (termino -> termino DIVIDE factor .)
    RBRACE          reduce using rule 114 (termino -> termino DIVIDE factor .)
    ID              reduce using rule 114 (termino -> termino DIVIDE factor .)
    IF              reduce using rule 114 (termino -> termino DIVIDE factor .)
    READ            reduce using rule 114 (termino -> termino DIVIDE factor .)
    PRINT           reduce using rule 114 (termino -> termino DIVIDE factor .)
    WHILE           reduce using rule 114 (termino -> termino DIVIDE factor .)
    RETURN          reduce using rule 114 (termino -> termino DIVIDE factor .)
    RPAREN          reduce using rule 114 (termino -> termino DIVIDE factor .)
    COMMA           reduce using rule 114 (termino -> termino DIVIDE factor .)


state 177

    (115) termino -> termino MODULO factor .

    TIMES           reduce using rule 115 (termino -> termino MODULO factor .)
    DIVIDE          reduce using rule 115 (termino -> termino MODULO factor .)
    MODULO          reduce using rule 115 (termino -> termino MODULO factor .)
    PLUS            reduce using rule 115 (termino -> termino MODULO factor .)
    MINUS           reduce using rule 115 (termino -> termino MODULO factor .)
    LT              reduce using rule 115 (termino -> termino MODULO factor .)
    LE              reduce using rule 115 (termino -> termino MODULO factor .)
    GT              reduce using rule 115 (termino -> termino MODULO factor .)
    GE              reduce using rule 115 (termino -> termino MODULO factor .)
    EQ              reduce using rule 115 (termino -> termino MODULO factor .)
    NE              reduce using rule 115 (termino -> termino MODULO factor .)
    AND             reduce using rule 115 (termino -> termino MODULO factor .)
    OR              reduce using rule 115 (termino -> termino MODULO factor .)
    RBRACE          reduce using rule 115 (termino -> termino MODULO factor .)
    ID              reduce using rule 115 (termino -> termino MODULO factor .)
    IF              reduce using rule 115 (termino -> termino MODULO factor .)
    READ            reduce using rule 115 (termino -> termino MODULO factor .)
    PRINT           reduce using rule 115 (termino -> termino MODULO factor .)
    WHILE           reduce using rule 115 (termino -> termino MODULO factor .)
    RETURN          reduce using rule 115 (termino -> termino MODULO factor .)
    RPAREN          reduce using rule 115 (termino -> termino MODULO factor .)
    COMMA           reduce using rule 115 (termino -> termino MODULO factor .)


state 178

    (134) objeto_aAcceso -> ID PERIOD ID .

    TIMES           reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    DIVIDE          reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    MODULO          reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    PLUS            reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    MINUS           reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    RPAREN          reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    COMMA           reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    LT              reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    LE              reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    GT              reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    GE              reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    EQ              reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    NE              reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    AND             reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    OR              reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACE          reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    ID              reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    IF              reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    READ            reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    PRINT           reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    WHILE           reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)
    RETURN          reduce using rule 134 (objeto_aAcceso -> ID PERIOD ID .)


state 179

    (48) aux3 -> aux3 COMMA exp .
    (110) exp -> exp . PLUS termino
    (111) exp -> exp . MINUS termino

    RPAREN          reduce using rule 48 (aux3 -> aux3 COMMA exp .)
    COMMA           reduce using rule 48 (aux3 -> aux3 COMMA exp .)
    PLUS            shift and go to state 134
    MINUS           shift and go to state 135


state 180

    (70) aux -> ID LBRACKET cint RBRACKET . LBRACKET cint RBRACKET COLON tipo_simple
    (71) aux -> ID LBRACKET cint RBRACKET . LBRACKET cint RBRACKET COLON tipo_compuesto
    (72) aux -> ID LBRACKET cint RBRACKET . COLON tipo_simple
    (73) aux -> ID LBRACKET cint RBRACKET . COLON tipo_compuesto

    LBRACKET        shift and go to state 202
    COLON           shift and go to state 203


state 181

    (74) aux -> ID aux2 COLON tipo_simple .

    ID              reduce using rule 74 (aux -> ID aux2 COLON tipo_simple .)
    RBRACE          reduce using rule 74 (aux -> ID aux2 COLON tipo_simple .)
    VAR             reduce using rule 74 (aux -> ID aux2 COLON tipo_simple .)
    PRIVATE         reduce using rule 74 (aux -> ID aux2 COLON tipo_simple .)
    PUBLIC          reduce using rule 74 (aux -> ID aux2 COLON tipo_simple .)
    PROTECTED       reduce using rule 74 (aux -> ID aux2 COLON tipo_simple .)
    IF              reduce using rule 74 (aux -> ID aux2 COLON tipo_simple .)
    READ            reduce using rule 74 (aux -> ID aux2 COLON tipo_simple .)
    PRINT           reduce using rule 74 (aux -> ID aux2 COLON tipo_simple .)
    WHILE           reduce using rule 74 (aux -> ID aux2 COLON tipo_simple .)
    RETURN          reduce using rule 74 (aux -> ID aux2 COLON tipo_simple .)


state 182

    (75) aux -> ID aux2 COLON tipo_compuesto .

    ID              reduce using rule 75 (aux -> ID aux2 COLON tipo_compuesto .)
    RBRACE          reduce using rule 75 (aux -> ID aux2 COLON tipo_compuesto .)
    VAR             reduce using rule 75 (aux -> ID aux2 COLON tipo_compuesto .)
    PRIVATE         reduce using rule 75 (aux -> ID aux2 COLON tipo_compuesto .)
    PUBLIC          reduce using rule 75 (aux -> ID aux2 COLON tipo_compuesto .)
    PROTECTED       reduce using rule 75 (aux -> ID aux2 COLON tipo_compuesto .)
    IF              reduce using rule 75 (aux -> ID aux2 COLON tipo_compuesto .)
    READ            reduce using rule 75 (aux -> ID aux2 COLON tipo_compuesto .)
    PRINT           reduce using rule 75 (aux -> ID aux2 COLON tipo_compuesto .)
    WHILE           reduce using rule 75 (aux -> ID aux2 COLON tipo_compuesto .)
    RETURN          reduce using rule 75 (aux -> ID aux2 COLON tipo_compuesto .)


state 183

    (49) funcion -> scope DEF ID LPAREN param . RPAREN contexto_func

    RPAREN          shift and go to state 204


state 184

    (81) asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET . cint RBRACKET EQUALS expresion
    (87) asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET . cint RBRACKET EQUALS llamada_func
    (93) asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET . cint RBRACKET EQUALS objeto_metodo
    (126) cint -> . CINT

    CINT            shift and go to state 71

    cint                           shift and go to state 205

state 185

    (82) asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS . expresion
    (88) asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS . llamada_func
    (94) asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS . objeto_metodo
    (100) expresion -> . exp_bool
    (101) expresion -> . exp_bool rel_op exp_bool
    (102) expresion -> . expresion AND exp_bool
    (103) expresion -> . expresion OR exp_bool
    (104) expresion -> . expresion AND exp_bool rel_op exp_bool
    (105) expresion -> . expresion OR exp_bool rel_op exp_bool
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (106) exp_bool -> . TRUE
    (107) exp_bool -> . FALSE
    (108) exp_bool -> . exp
    (109) exp -> . termino
    (110) exp -> . exp PLUS termino
    (111) exp -> . exp MINUS termino
    (112) termino -> . factor
    (113) termino -> . termino TIMES factor
    (114) termino -> . termino DIVIDE factor
    (115) termino -> . termino MODULO factor
    (116) factor -> . LPAREN expresion RPAREN
    (117) factor -> . PLUS objeto_aAcceso
    (118) factor -> . MINUS objeto_aAcceso
    (119) factor -> . PLUS var
    (120) factor -> . MINUS var
    (121) factor -> . var
    (122) factor -> . objeto_aAcceso
    (123) var -> . ID
    (124) var -> . cint
    (125) var -> . cfloat
    (134) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER

    ID              shift and go to state 72
    TRUE            shift and go to state 78
    FALSE           shift and go to state 79
    LPAREN          shift and go to state 77
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CINT            shift and go to state 71
    NUMBER          shift and go to state 89

    objeto_aAcceso                 shift and go to state 85
    cint                           shift and go to state 87
    expresion                      shift and go to state 206
    llamada_func                   shift and go to state 207
    objeto_metodo                  shift and go to state 208
    exp_bool                       shift and go to state 76
    exp                            shift and go to state 80
    termino                        shift and go to state 81
    factor                         shift and go to state 84
    var                            shift and go to state 86
    cfloat                         shift and go to state 88

state 186

    (32) condicion -> IF LPAREN expresion RPAREN bloque .
    (33) condicion -> IF LPAREN expresion RPAREN bloque . ELIF LPAREN expresion RPAREN bloque

    RBRACE          reduce using rule 32 (condicion -> IF LPAREN expresion RPAREN bloque .)
    ID              reduce using rule 32 (condicion -> IF LPAREN expresion RPAREN bloque .)
    IF              reduce using rule 32 (condicion -> IF LPAREN expresion RPAREN bloque .)
    READ            reduce using rule 32 (condicion -> IF LPAREN expresion RPAREN bloque .)
    PRINT           reduce using rule 32 (condicion -> IF LPAREN expresion RPAREN bloque .)
    WHILE           reduce using rule 32 (condicion -> IF LPAREN expresion RPAREN bloque .)
    RETURN          reduce using rule 32 (condicion -> IF LPAREN expresion RPAREN bloque .)
    ELIF            shift and go to state 209


state 187

    (34) bloque -> LBRACE . estatuto RBRACE
    (17) estatuto -> . asignacion
    (18) estatuto -> . llamada_func
    (19) estatuto -> . objeto_metodo
    (20) estatuto -> . condicion
    (21) estatuto -> . lectura
    (22) estatuto -> . escritura
    (23) estatuto -> . ciclo
    (24) estatuto -> . estatuto asignacion
    (25) estatuto -> . estatuto llamada_func
    (26) estatuto -> . estatuto objeto_metodo
    (27) estatuto -> . estatuto condicion
    (28) estatuto -> . estatuto lectura
    (29) estatuto -> . estatuto escritura
    (30) estatuto -> . estatuto ciclo
    (81) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS expresion
    (84) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET cint RBRACKET EQUALS expresion
    (86) asignacion -> . ID EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (91) asignacion -> . ID LBRACKET cint RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (96) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET cint RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID EQUALS objeto_metodo
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (32) condicion -> . IF LPAREN expresion RPAREN bloque
    (33) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (35) lectura -> . READ LPAREN ID RPAREN
    (36) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (37) escritura -> . PRINT LPAREN aux5 RPAREN
    (31) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (134) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 17
    IF              shift and go to state 28
    READ            shift and go to state 29
    PRINT           shift and go to state 30
    WHILE           shift and go to state 31

    estatuto                       shift and go to state 210
    asignacion                     shift and go to state 20
    llamada_func                   shift and go to state 21
    objeto_metodo                  shift and go to state 22
    condicion                      shift and go to state 23
    lectura                        shift and go to state 24
    escritura                      shift and go to state 25
    ciclo                          shift and go to state 26
    objeto_aAcceso                 shift and go to state 27

state 188

    (42) aux5 -> aux5 COMMA expresion .
    (102) expresion -> expresion . AND exp_bool
    (103) expresion -> expresion . OR exp_bool
    (104) expresion -> expresion . AND exp_bool rel_op exp_bool
    (105) expresion -> expresion . OR exp_bool rel_op exp_bool

    RPAREN          reduce using rule 42 (aux5 -> aux5 COMMA expresion .)
    COMMA           reduce using rule 42 (aux5 -> aux5 COMMA expresion .)
    AND             shift and go to state 124
    OR              shift and go to state 125


state 189

    (43) aux5 -> aux5 COMMA llamada_func .

    RPAREN          reduce using rule 43 (aux5 -> aux5 COMMA llamada_func .)
    COMMA           reduce using rule 43 (aux5 -> aux5 COMMA llamada_func .)


state 190

    (44) aux5 -> aux5 COMMA objeto_metodo .

    RPAREN          reduce using rule 44 (aux5 -> aux5 COMMA objeto_metodo .)
    COMMA           reduce using rule 44 (aux5 -> aux5 COMMA objeto_metodo .)


state 191

    (45) aux5 -> aux5 COMMA CSTRING .

    RPAREN          reduce using rule 45 (aux5 -> aux5 COMMA CSTRING .)
    COMMA           reduce using rule 45 (aux5 -> aux5 COMMA CSTRING .)


state 192

    (31) ciclo -> WHILE LPAREN expresion RPAREN bloque .

    RBRACE          reduce using rule 31 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    ID              reduce using rule 31 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    IF              reduce using rule 31 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    READ            reduce using rule 31 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    PRINT           reduce using rule 31 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    WHILE           reduce using rule 31 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    RETURN          reduce using rule 31 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)


state 193

    (13) constructor -> PUBLIC ID LPAREN param RPAREN contexto_const .

    RBRACE          reduce using rule 13 (constructor -> PUBLIC ID LPAREN param RPAREN contexto_const .)
    VAR             reduce using rule 13 (constructor -> PUBLIC ID LPAREN param RPAREN contexto_const .)


state 194

    (14) contexto_const -> LBRACE . vars RBRACE
    (15) contexto_const -> LBRACE . estatuto RBRACE
    (16) contexto_const -> LBRACE . vars estatuto RBRACE
    (65) vars -> . VAR aux
    (66) vars -> . vars VAR aux
    (17) estatuto -> . asignacion
    (18) estatuto -> . llamada_func
    (19) estatuto -> . objeto_metodo
    (20) estatuto -> . condicion
    (21) estatuto -> . lectura
    (22) estatuto -> . escritura
    (23) estatuto -> . ciclo
    (24) estatuto -> . estatuto asignacion
    (25) estatuto -> . estatuto llamada_func
    (26) estatuto -> . estatuto objeto_metodo
    (27) estatuto -> . estatuto condicion
    (28) estatuto -> . estatuto lectura
    (29) estatuto -> . estatuto escritura
    (30) estatuto -> . estatuto ciclo
    (81) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS expresion
    (84) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET cint RBRACKET EQUALS expresion
    (86) asignacion -> . ID EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (91) asignacion -> . ID LBRACKET cint RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (96) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET cint RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID EQUALS objeto_metodo
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (32) condicion -> . IF LPAREN expresion RPAREN bloque
    (33) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (35) lectura -> . READ LPAREN ID RPAREN
    (36) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (37) escritura -> . PRINT LPAREN aux5 RPAREN
    (31) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (134) objeto_aAcceso -> . ID PERIOD ID

    VAR             shift and go to state 18
    ID              shift and go to state 17
    IF              shift and go to state 28
    READ            shift and go to state 29
    PRINT           shift and go to state 30
    WHILE           shift and go to state 31

    vars                           shift and go to state 211
    estatuto                       shift and go to state 212
    asignacion                     shift and go to state 20
    llamada_func                   shift and go to state 21
    objeto_metodo                  shift and go to state 22
    condicion                      shift and go to state 23
    lectura                        shift and go to state 24
    escritura                      shift and go to state 25
    ciclo                          shift and go to state 26
    objeto_aAcceso                 shift and go to state 27

state 195

    (61) aux4 -> aux4 COMMA tipo_simple . ID

    ID              shift and go to state 213


state 196

    (84) asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint . RBRACKET EQUALS expresion
    (90) asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint . RBRACKET EQUALS llamada_func
    (96) asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint . RBRACKET EQUALS objeto_metodo

    RBRACKET        shift and go to state 214


state 197

    (85) asignacion -> ID LBRACKET cint RBRACKET EQUALS expresion .
    (102) expresion -> expresion . AND exp_bool
    (103) expresion -> expresion . OR exp_bool
    (104) expresion -> expresion . AND exp_bool rel_op exp_bool
    (105) expresion -> expresion . OR exp_bool rel_op exp_bool

    RBRACE          reduce using rule 85 (asignacion -> ID LBRACKET cint RBRACKET EQUALS expresion .)
    ID              reduce using rule 85 (asignacion -> ID LBRACKET cint RBRACKET EQUALS expresion .)
    IF              reduce using rule 85 (asignacion -> ID LBRACKET cint RBRACKET EQUALS expresion .)
    READ            reduce using rule 85 (asignacion -> ID LBRACKET cint RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 85 (asignacion -> ID LBRACKET cint RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 85 (asignacion -> ID LBRACKET cint RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 85 (asignacion -> ID LBRACKET cint RBRACKET EQUALS expresion .)
    AND             shift and go to state 124
    OR              shift and go to state 125


state 198

    (91) asignacion -> ID LBRACKET cint RBRACKET EQUALS llamada_func .

    RBRACE          reduce using rule 91 (asignacion -> ID LBRACKET cint RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 91 (asignacion -> ID LBRACKET cint RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 91 (asignacion -> ID LBRACKET cint RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 91 (asignacion -> ID LBRACKET cint RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 91 (asignacion -> ID LBRACKET cint RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 91 (asignacion -> ID LBRACKET cint RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 91 (asignacion -> ID LBRACKET cint RBRACKET EQUALS llamada_func .)


state 199

    (97) asignacion -> ID LBRACKET cint RBRACKET EQUALS objeto_metodo .

    RBRACE          reduce using rule 97 (asignacion -> ID LBRACKET cint RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 97 (asignacion -> ID LBRACKET cint RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 97 (asignacion -> ID LBRACKET cint RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 97 (asignacion -> ID LBRACKET cint RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 97 (asignacion -> ID LBRACKET cint RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 97 (asignacion -> ID LBRACKET cint RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 97 (asignacion -> ID LBRACKET cint RBRACKET EQUALS objeto_metodo .)


state 200

    (104) expresion -> expresion AND exp_bool rel_op . exp_bool
    (106) exp_bool -> . TRUE
    (107) exp_bool -> . FALSE
    (108) exp_bool -> . exp
    (109) exp -> . termino
    (110) exp -> . exp PLUS termino
    (111) exp -> . exp MINUS termino
    (112) termino -> . factor
    (113) termino -> . termino TIMES factor
    (114) termino -> . termino DIVIDE factor
    (115) termino -> . termino MODULO factor
    (116) factor -> . LPAREN expresion RPAREN
    (117) factor -> . PLUS objeto_aAcceso
    (118) factor -> . MINUS objeto_aAcceso
    (119) factor -> . PLUS var
    (120) factor -> . MINUS var
    (121) factor -> . var
    (122) factor -> . objeto_aAcceso
    (123) var -> . ID
    (124) var -> . cint
    (125) var -> . cfloat
    (134) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER

    TRUE            shift and go to state 78
    FALSE           shift and go to state 79
    LPAREN          shift and go to state 77
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    ID              shift and go to state 90
    CINT            shift and go to state 71
    NUMBER          shift and go to state 89

    exp_bool                       shift and go to state 215
    exp                            shift and go to state 80
    termino                        shift and go to state 81
    factor                         shift and go to state 84
    objeto_aAcceso                 shift and go to state 85
    var                            shift and go to state 86
    cint                           shift and go to state 87
    cfloat                         shift and go to state 88

state 201

    (105) expresion -> expresion OR exp_bool rel_op . exp_bool
    (106) exp_bool -> . TRUE
    (107) exp_bool -> . FALSE
    (108) exp_bool -> . exp
    (109) exp -> . termino
    (110) exp -> . exp PLUS termino
    (111) exp -> . exp MINUS termino
    (112) termino -> . factor
    (113) termino -> . termino TIMES factor
    (114) termino -> . termino DIVIDE factor
    (115) termino -> . termino MODULO factor
    (116) factor -> . LPAREN expresion RPAREN
    (117) factor -> . PLUS objeto_aAcceso
    (118) factor -> . MINUS objeto_aAcceso
    (119) factor -> . PLUS var
    (120) factor -> . MINUS var
    (121) factor -> . var
    (122) factor -> . objeto_aAcceso
    (123) var -> . ID
    (124) var -> . cint
    (125) var -> . cfloat
    (134) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER

    TRUE            shift and go to state 78
    FALSE           shift and go to state 79
    LPAREN          shift and go to state 77
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    ID              shift and go to state 90
    CINT            shift and go to state 71
    NUMBER          shift and go to state 89

    exp_bool                       shift and go to state 216
    exp                            shift and go to state 80
    termino                        shift and go to state 81
    factor                         shift and go to state 84
    objeto_aAcceso                 shift and go to state 85
    var                            shift and go to state 86
    cint                           shift and go to state 87
    cfloat                         shift and go to state 88

state 202

    (70) aux -> ID LBRACKET cint RBRACKET LBRACKET . cint RBRACKET COLON tipo_simple
    (71) aux -> ID LBRACKET cint RBRACKET LBRACKET . cint RBRACKET COLON tipo_compuesto
    (126) cint -> . CINT

    CINT            shift and go to state 71

    cint                           shift and go to state 217

state 203

    (72) aux -> ID LBRACKET cint RBRACKET COLON . tipo_simple
    (73) aux -> ID LBRACKET cint RBRACKET COLON . tipo_compuesto
    (78) tipo_simple -> . INT
    (79) tipo_simple -> . FLOAT
    (80) tipo_compuesto -> . ID

    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    ID              shift and go to state 147

    tipo_simple                    shift and go to state 218
    tipo_compuesto                 shift and go to state 219

state 204

    (49) funcion -> scope DEF ID LPAREN param RPAREN . contexto_func
    (50) contexto_func -> . LBRACE vars RBRACE
    (51) contexto_func -> . LBRACE estatuto RBRACE
    (52) contexto_func -> . LBRACE vars estatuto RBRACE
    (53) contexto_func -> . LBRACE vars RETURN INT ID RBRACE
    (54) contexto_func -> . LBRACE vars RETURN FLOAT ID RBRACE
    (55) contexto_func -> . LBRACE estatuto RETURN INT ID RBRACE
    (56) contexto_func -> . LBRACE estatuto RETURN FLOAT ID RBRACE
    (57) contexto_func -> . LBRACE vars estatuto RETURN INT ID RBRACE
    (58) contexto_func -> . LBRACE vars estatuto RETURN FLOAT ID RBRACE

    LBRACE          shift and go to state 221

    contexto_func                  shift and go to state 220

state 205

    (81) asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint . RBRACKET EQUALS expresion
    (87) asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint . RBRACKET EQUALS llamada_func
    (93) asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint . RBRACKET EQUALS objeto_metodo

    RBRACKET        shift and go to state 222


state 206

    (82) asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion .
    (102) expresion -> expresion . AND exp_bool
    (103) expresion -> expresion . OR exp_bool
    (104) expresion -> expresion . AND exp_bool rel_op exp_bool
    (105) expresion -> expresion . OR exp_bool rel_op exp_bool

    RBRACE          reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion .)
    ID              reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion .)
    IF              reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion .)
    READ            reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion .)
    AND             shift and go to state 124
    OR              shift and go to state 125


state 207

    (88) asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func .

    RBRACE          reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func .)


state 208

    (94) asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo .

    RBRACE          reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo .)


state 209

    (33) condicion -> IF LPAREN expresion RPAREN bloque ELIF . LPAREN expresion RPAREN bloque

    LPAREN          shift and go to state 223


state 210

    (34) bloque -> LBRACE estatuto . RBRACE
    (24) estatuto -> estatuto . asignacion
    (25) estatuto -> estatuto . llamada_func
    (26) estatuto -> estatuto . objeto_metodo
    (27) estatuto -> estatuto . condicion
    (28) estatuto -> estatuto . lectura
    (29) estatuto -> estatuto . escritura
    (30) estatuto -> estatuto . ciclo
    (81) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS expresion
    (84) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET cint RBRACKET EQUALS expresion
    (86) asignacion -> . ID EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (91) asignacion -> . ID LBRACKET cint RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (96) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET cint RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID EQUALS objeto_metodo
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (32) condicion -> . IF LPAREN expresion RPAREN bloque
    (33) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (35) lectura -> . READ LPAREN ID RPAREN
    (36) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (37) escritura -> . PRINT LPAREN aux5 RPAREN
    (31) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (134) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          shift and go to state 224
    ID              shift and go to state 17
    IF              shift and go to state 28
    READ            shift and go to state 29
    PRINT           shift and go to state 30
    WHILE           shift and go to state 31

    asignacion                     shift and go to state 41
    llamada_func                   shift and go to state 42
    objeto_metodo                  shift and go to state 43
    condicion                      shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    ciclo                          shift and go to state 47
    objeto_aAcceso                 shift and go to state 27

state 211

    (14) contexto_const -> LBRACE vars . RBRACE
    (16) contexto_const -> LBRACE vars . estatuto RBRACE
    (66) vars -> vars . VAR aux
    (17) estatuto -> . asignacion
    (18) estatuto -> . llamada_func
    (19) estatuto -> . objeto_metodo
    (20) estatuto -> . condicion
    (21) estatuto -> . lectura
    (22) estatuto -> . escritura
    (23) estatuto -> . ciclo
    (24) estatuto -> . estatuto asignacion
    (25) estatuto -> . estatuto llamada_func
    (26) estatuto -> . estatuto objeto_metodo
    (27) estatuto -> . estatuto condicion
    (28) estatuto -> . estatuto lectura
    (29) estatuto -> . estatuto escritura
    (30) estatuto -> . estatuto ciclo
    (81) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS expresion
    (84) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET cint RBRACKET EQUALS expresion
    (86) asignacion -> . ID EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (91) asignacion -> . ID LBRACKET cint RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (96) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET cint RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID EQUALS objeto_metodo
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (32) condicion -> . IF LPAREN expresion RPAREN bloque
    (33) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (35) lectura -> . READ LPAREN ID RPAREN
    (36) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (37) escritura -> . PRINT LPAREN aux5 RPAREN
    (31) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (134) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          shift and go to state 225
    VAR             shift and go to state 38
    ID              shift and go to state 17
    IF              shift and go to state 28
    READ            shift and go to state 29
    PRINT           shift and go to state 30
    WHILE           shift and go to state 31

    estatuto                       shift and go to state 226
    asignacion                     shift and go to state 20
    llamada_func                   shift and go to state 21
    objeto_metodo                  shift and go to state 22
    condicion                      shift and go to state 23
    lectura                        shift and go to state 24
    escritura                      shift and go to state 25
    ciclo                          shift and go to state 26
    objeto_aAcceso                 shift and go to state 27

state 212

    (15) contexto_const -> LBRACE estatuto . RBRACE
    (24) estatuto -> estatuto . asignacion
    (25) estatuto -> estatuto . llamada_func
    (26) estatuto -> estatuto . objeto_metodo
    (27) estatuto -> estatuto . condicion
    (28) estatuto -> estatuto . lectura
    (29) estatuto -> estatuto . escritura
    (30) estatuto -> estatuto . ciclo
    (81) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS expresion
    (84) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET cint RBRACKET EQUALS expresion
    (86) asignacion -> . ID EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (91) asignacion -> . ID LBRACKET cint RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (96) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET cint RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID EQUALS objeto_metodo
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (32) condicion -> . IF LPAREN expresion RPAREN bloque
    (33) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (35) lectura -> . READ LPAREN ID RPAREN
    (36) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (37) escritura -> . PRINT LPAREN aux5 RPAREN
    (31) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (134) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          shift and go to state 227
    ID              shift and go to state 17
    IF              shift and go to state 28
    READ            shift and go to state 29
    PRINT           shift and go to state 30
    WHILE           shift and go to state 31

    asignacion                     shift and go to state 41
    llamada_func                   shift and go to state 42
    objeto_metodo                  shift and go to state 43
    condicion                      shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    ciclo                          shift and go to state 47
    objeto_aAcceso                 shift and go to state 27

state 213

    (61) aux4 -> aux4 COMMA tipo_simple ID .

    COMMA           reduce using rule 61 (aux4 -> aux4 COMMA tipo_simple ID .)
    RPAREN          reduce using rule 61 (aux4 -> aux4 COMMA tipo_simple ID .)


state 214

    (84) asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET . EQUALS expresion
    (90) asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET . EQUALS llamada_func
    (96) asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET . EQUALS objeto_metodo

    EQUALS          shift and go to state 228


state 215

    (104) expresion -> expresion AND exp_bool rel_op exp_bool .

    AND             reduce using rule 104 (expresion -> expresion AND exp_bool rel_op exp_bool .)
    OR              reduce using rule 104 (expresion -> expresion AND exp_bool rel_op exp_bool .)
    RBRACE          reduce using rule 104 (expresion -> expresion AND exp_bool rel_op exp_bool .)
    ID              reduce using rule 104 (expresion -> expresion AND exp_bool rel_op exp_bool .)
    IF              reduce using rule 104 (expresion -> expresion AND exp_bool rel_op exp_bool .)
    READ            reduce using rule 104 (expresion -> expresion AND exp_bool rel_op exp_bool .)
    PRINT           reduce using rule 104 (expresion -> expresion AND exp_bool rel_op exp_bool .)
    WHILE           reduce using rule 104 (expresion -> expresion AND exp_bool rel_op exp_bool .)
    RETURN          reduce using rule 104 (expresion -> expresion AND exp_bool rel_op exp_bool .)
    RPAREN          reduce using rule 104 (expresion -> expresion AND exp_bool rel_op exp_bool .)
    COMMA           reduce using rule 104 (expresion -> expresion AND exp_bool rel_op exp_bool .)


state 216

    (105) expresion -> expresion OR exp_bool rel_op exp_bool .

    AND             reduce using rule 105 (expresion -> expresion OR exp_bool rel_op exp_bool .)
    OR              reduce using rule 105 (expresion -> expresion OR exp_bool rel_op exp_bool .)
    RBRACE          reduce using rule 105 (expresion -> expresion OR exp_bool rel_op exp_bool .)
    ID              reduce using rule 105 (expresion -> expresion OR exp_bool rel_op exp_bool .)
    IF              reduce using rule 105 (expresion -> expresion OR exp_bool rel_op exp_bool .)
    READ            reduce using rule 105 (expresion -> expresion OR exp_bool rel_op exp_bool .)
    PRINT           reduce using rule 105 (expresion -> expresion OR exp_bool rel_op exp_bool .)
    WHILE           reduce using rule 105 (expresion -> expresion OR exp_bool rel_op exp_bool .)
    RETURN          reduce using rule 105 (expresion -> expresion OR exp_bool rel_op exp_bool .)
    RPAREN          reduce using rule 105 (expresion -> expresion OR exp_bool rel_op exp_bool .)
    COMMA           reduce using rule 105 (expresion -> expresion OR exp_bool rel_op exp_bool .)


state 217

    (70) aux -> ID LBRACKET cint RBRACKET LBRACKET cint . RBRACKET COLON tipo_simple
    (71) aux -> ID LBRACKET cint RBRACKET LBRACKET cint . RBRACKET COLON tipo_compuesto

    RBRACKET        shift and go to state 229


state 218

    (72) aux -> ID LBRACKET cint RBRACKET COLON tipo_simple .

    ID              reduce using rule 72 (aux -> ID LBRACKET cint RBRACKET COLON tipo_simple .)
    RBRACE          reduce using rule 72 (aux -> ID LBRACKET cint RBRACKET COLON tipo_simple .)
    VAR             reduce using rule 72 (aux -> ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PRIVATE         reduce using rule 72 (aux -> ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PUBLIC          reduce using rule 72 (aux -> ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PROTECTED       reduce using rule 72 (aux -> ID LBRACKET cint RBRACKET COLON tipo_simple .)
    IF              reduce using rule 72 (aux -> ID LBRACKET cint RBRACKET COLON tipo_simple .)
    READ            reduce using rule 72 (aux -> ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PRINT           reduce using rule 72 (aux -> ID LBRACKET cint RBRACKET COLON tipo_simple .)
    WHILE           reduce using rule 72 (aux -> ID LBRACKET cint RBRACKET COLON tipo_simple .)
    RETURN          reduce using rule 72 (aux -> ID LBRACKET cint RBRACKET COLON tipo_simple .)


state 219

    (73) aux -> ID LBRACKET cint RBRACKET COLON tipo_compuesto .

    ID              reduce using rule 73 (aux -> ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RBRACE          reduce using rule 73 (aux -> ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    VAR             reduce using rule 73 (aux -> ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRIVATE         reduce using rule 73 (aux -> ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PUBLIC          reduce using rule 73 (aux -> ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PROTECTED       reduce using rule 73 (aux -> ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    IF              reduce using rule 73 (aux -> ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    READ            reduce using rule 73 (aux -> ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRINT           reduce using rule 73 (aux -> ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    WHILE           reduce using rule 73 (aux -> ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RETURN          reduce using rule 73 (aux -> ID LBRACKET cint RBRACKET COLON tipo_compuesto .)


state 220

    (49) funcion -> scope DEF ID LPAREN param RPAREN contexto_func .

    RBRACE          reduce using rule 49 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    ID              reduce using rule 49 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    IF              reduce using rule 49 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    READ            reduce using rule 49 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    PRINT           reduce using rule 49 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    WHILE           reduce using rule 49 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)


state 221

    (50) contexto_func -> LBRACE . vars RBRACE
    (51) contexto_func -> LBRACE . estatuto RBRACE
    (52) contexto_func -> LBRACE . vars estatuto RBRACE
    (53) contexto_func -> LBRACE . vars RETURN INT ID RBRACE
    (54) contexto_func -> LBRACE . vars RETURN FLOAT ID RBRACE
    (55) contexto_func -> LBRACE . estatuto RETURN INT ID RBRACE
    (56) contexto_func -> LBRACE . estatuto RETURN FLOAT ID RBRACE
    (57) contexto_func -> LBRACE . vars estatuto RETURN INT ID RBRACE
    (58) contexto_func -> LBRACE . vars estatuto RETURN FLOAT ID RBRACE
    (65) vars -> . VAR aux
    (66) vars -> . vars VAR aux
    (17) estatuto -> . asignacion
    (18) estatuto -> . llamada_func
    (19) estatuto -> . objeto_metodo
    (20) estatuto -> . condicion
    (21) estatuto -> . lectura
    (22) estatuto -> . escritura
    (23) estatuto -> . ciclo
    (24) estatuto -> . estatuto asignacion
    (25) estatuto -> . estatuto llamada_func
    (26) estatuto -> . estatuto objeto_metodo
    (27) estatuto -> . estatuto condicion
    (28) estatuto -> . estatuto lectura
    (29) estatuto -> . estatuto escritura
    (30) estatuto -> . estatuto ciclo
    (81) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS expresion
    (84) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET cint RBRACKET EQUALS expresion
    (86) asignacion -> . ID EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (91) asignacion -> . ID LBRACKET cint RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (96) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET cint RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID EQUALS objeto_metodo
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (32) condicion -> . IF LPAREN expresion RPAREN bloque
    (33) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (35) lectura -> . READ LPAREN ID RPAREN
    (36) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (37) escritura -> . PRINT LPAREN aux5 RPAREN
    (31) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (134) objeto_aAcceso -> . ID PERIOD ID

    VAR             shift and go to state 18
    ID              shift and go to state 17
    IF              shift and go to state 28
    READ            shift and go to state 29
    PRINT           shift and go to state 30
    WHILE           shift and go to state 31

    vars                           shift and go to state 230
    estatuto                       shift and go to state 231
    asignacion                     shift and go to state 20
    llamada_func                   shift and go to state 21
    objeto_metodo                  shift and go to state 22
    condicion                      shift and go to state 23
    lectura                        shift and go to state 24
    escritura                      shift and go to state 25
    ciclo                          shift and go to state 26
    objeto_aAcceso                 shift and go to state 27

state 222

    (81) asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET . EQUALS expresion
    (87) asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET . EQUALS llamada_func
    (93) asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET . EQUALS objeto_metodo

    EQUALS          shift and go to state 232


state 223

    (33) condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN . expresion RPAREN bloque
    (100) expresion -> . exp_bool
    (101) expresion -> . exp_bool rel_op exp_bool
    (102) expresion -> . expresion AND exp_bool
    (103) expresion -> . expresion OR exp_bool
    (104) expresion -> . expresion AND exp_bool rel_op exp_bool
    (105) expresion -> . expresion OR exp_bool rel_op exp_bool
    (106) exp_bool -> . TRUE
    (107) exp_bool -> . FALSE
    (108) exp_bool -> . exp
    (109) exp -> . termino
    (110) exp -> . exp PLUS termino
    (111) exp -> . exp MINUS termino
    (112) termino -> . factor
    (113) termino -> . termino TIMES factor
    (114) termino -> . termino DIVIDE factor
    (115) termino -> . termino MODULO factor
    (116) factor -> . LPAREN expresion RPAREN
    (117) factor -> . PLUS objeto_aAcceso
    (118) factor -> . MINUS objeto_aAcceso
    (119) factor -> . PLUS var
    (120) factor -> . MINUS var
    (121) factor -> . var
    (122) factor -> . objeto_aAcceso
    (123) var -> . ID
    (124) var -> . cint
    (125) var -> . cfloat
    (134) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER

    TRUE            shift and go to state 78
    FALSE           shift and go to state 79
    LPAREN          shift and go to state 77
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    ID              shift and go to state 90
    CINT            shift and go to state 71
    NUMBER          shift and go to state 89

    expresion                      shift and go to state 233
    exp_bool                       shift and go to state 76
    exp                            shift and go to state 80
    termino                        shift and go to state 81
    factor                         shift and go to state 84
    objeto_aAcceso                 shift and go to state 85
    var                            shift and go to state 86
    cint                           shift and go to state 87
    cfloat                         shift and go to state 88

state 224

    (34) bloque -> LBRACE estatuto RBRACE .

    ELIF            reduce using rule 34 (bloque -> LBRACE estatuto RBRACE .)
    RBRACE          reduce using rule 34 (bloque -> LBRACE estatuto RBRACE .)
    ID              reduce using rule 34 (bloque -> LBRACE estatuto RBRACE .)
    IF              reduce using rule 34 (bloque -> LBRACE estatuto RBRACE .)
    READ            reduce using rule 34 (bloque -> LBRACE estatuto RBRACE .)
    PRINT           reduce using rule 34 (bloque -> LBRACE estatuto RBRACE .)
    WHILE           reduce using rule 34 (bloque -> LBRACE estatuto RBRACE .)
    RETURN          reduce using rule 34 (bloque -> LBRACE estatuto RBRACE .)


state 225

    (14) contexto_const -> LBRACE vars RBRACE .

    RBRACE          reduce using rule 14 (contexto_const -> LBRACE vars RBRACE .)
    VAR             reduce using rule 14 (contexto_const -> LBRACE vars RBRACE .)


state 226

    (16) contexto_const -> LBRACE vars estatuto . RBRACE
    (24) estatuto -> estatuto . asignacion
    (25) estatuto -> estatuto . llamada_func
    (26) estatuto -> estatuto . objeto_metodo
    (27) estatuto -> estatuto . condicion
    (28) estatuto -> estatuto . lectura
    (29) estatuto -> estatuto . escritura
    (30) estatuto -> estatuto . ciclo
    (81) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS expresion
    (84) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET cint RBRACKET EQUALS expresion
    (86) asignacion -> . ID EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (91) asignacion -> . ID LBRACKET cint RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (96) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET cint RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID EQUALS objeto_metodo
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (32) condicion -> . IF LPAREN expresion RPAREN bloque
    (33) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (35) lectura -> . READ LPAREN ID RPAREN
    (36) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (37) escritura -> . PRINT LPAREN aux5 RPAREN
    (31) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (134) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          shift and go to state 234
    ID              shift and go to state 17
    IF              shift and go to state 28
    READ            shift and go to state 29
    PRINT           shift and go to state 30
    WHILE           shift and go to state 31

    asignacion                     shift and go to state 41
    llamada_func                   shift and go to state 42
    objeto_metodo                  shift and go to state 43
    condicion                      shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    ciclo                          shift and go to state 47
    objeto_aAcceso                 shift and go to state 27

state 227

    (15) contexto_const -> LBRACE estatuto RBRACE .

    RBRACE          reduce using rule 15 (contexto_const -> LBRACE estatuto RBRACE .)
    VAR             reduce using rule 15 (contexto_const -> LBRACE estatuto RBRACE .)


state 228

    (84) asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS . expresion
    (90) asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS . llamada_func
    (96) asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS . objeto_metodo
    (100) expresion -> . exp_bool
    (101) expresion -> . exp_bool rel_op exp_bool
    (102) expresion -> . expresion AND exp_bool
    (103) expresion -> . expresion OR exp_bool
    (104) expresion -> . expresion AND exp_bool rel_op exp_bool
    (105) expresion -> . expresion OR exp_bool rel_op exp_bool
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (106) exp_bool -> . TRUE
    (107) exp_bool -> . FALSE
    (108) exp_bool -> . exp
    (109) exp -> . termino
    (110) exp -> . exp PLUS termino
    (111) exp -> . exp MINUS termino
    (112) termino -> . factor
    (113) termino -> . termino TIMES factor
    (114) termino -> . termino DIVIDE factor
    (115) termino -> . termino MODULO factor
    (116) factor -> . LPAREN expresion RPAREN
    (117) factor -> . PLUS objeto_aAcceso
    (118) factor -> . MINUS objeto_aAcceso
    (119) factor -> . PLUS var
    (120) factor -> . MINUS var
    (121) factor -> . var
    (122) factor -> . objeto_aAcceso
    (123) var -> . ID
    (124) var -> . cint
    (125) var -> . cfloat
    (134) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER

    ID              shift and go to state 72
    TRUE            shift and go to state 78
    FALSE           shift and go to state 79
    LPAREN          shift and go to state 77
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CINT            shift and go to state 71
    NUMBER          shift and go to state 89

    cint                           shift and go to state 87
    expresion                      shift and go to state 235
    llamada_func                   shift and go to state 236
    objeto_metodo                  shift and go to state 237
    exp_bool                       shift and go to state 76
    exp                            shift and go to state 80
    termino                        shift and go to state 81
    factor                         shift and go to state 84
    objeto_aAcceso                 shift and go to state 85
    var                            shift and go to state 86
    cfloat                         shift and go to state 88

state 229

    (70) aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET . COLON tipo_simple
    (71) aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET . COLON tipo_compuesto

    COLON           shift and go to state 238


state 230

    (50) contexto_func -> LBRACE vars . RBRACE
    (52) contexto_func -> LBRACE vars . estatuto RBRACE
    (53) contexto_func -> LBRACE vars . RETURN INT ID RBRACE
    (54) contexto_func -> LBRACE vars . RETURN FLOAT ID RBRACE
    (57) contexto_func -> LBRACE vars . estatuto RETURN INT ID RBRACE
    (58) contexto_func -> LBRACE vars . estatuto RETURN FLOAT ID RBRACE
    (66) vars -> vars . VAR aux
    (17) estatuto -> . asignacion
    (18) estatuto -> . llamada_func
    (19) estatuto -> . objeto_metodo
    (20) estatuto -> . condicion
    (21) estatuto -> . lectura
    (22) estatuto -> . escritura
    (23) estatuto -> . ciclo
    (24) estatuto -> . estatuto asignacion
    (25) estatuto -> . estatuto llamada_func
    (26) estatuto -> . estatuto objeto_metodo
    (27) estatuto -> . estatuto condicion
    (28) estatuto -> . estatuto lectura
    (29) estatuto -> . estatuto escritura
    (30) estatuto -> . estatuto ciclo
    (81) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS expresion
    (84) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET cint RBRACKET EQUALS expresion
    (86) asignacion -> . ID EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (91) asignacion -> . ID LBRACKET cint RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (96) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET cint RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID EQUALS objeto_metodo
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (32) condicion -> . IF LPAREN expresion RPAREN bloque
    (33) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (35) lectura -> . READ LPAREN ID RPAREN
    (36) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (37) escritura -> . PRINT LPAREN aux5 RPAREN
    (31) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (134) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          shift and go to state 239
    RETURN          shift and go to state 241
    VAR             shift and go to state 38
    ID              shift and go to state 17
    IF              shift and go to state 28
    READ            shift and go to state 29
    PRINT           shift and go to state 30
    WHILE           shift and go to state 31

    estatuto                       shift and go to state 240
    asignacion                     shift and go to state 20
    llamada_func                   shift and go to state 21
    objeto_metodo                  shift and go to state 22
    condicion                      shift and go to state 23
    lectura                        shift and go to state 24
    escritura                      shift and go to state 25
    ciclo                          shift and go to state 26
    objeto_aAcceso                 shift and go to state 27

state 231

    (51) contexto_func -> LBRACE estatuto . RBRACE
    (55) contexto_func -> LBRACE estatuto . RETURN INT ID RBRACE
    (56) contexto_func -> LBRACE estatuto . RETURN FLOAT ID RBRACE
    (24) estatuto -> estatuto . asignacion
    (25) estatuto -> estatuto . llamada_func
    (26) estatuto -> estatuto . objeto_metodo
    (27) estatuto -> estatuto . condicion
    (28) estatuto -> estatuto . lectura
    (29) estatuto -> estatuto . escritura
    (30) estatuto -> estatuto . ciclo
    (81) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS expresion
    (84) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET cint RBRACKET EQUALS expresion
    (86) asignacion -> . ID EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (91) asignacion -> . ID LBRACKET cint RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (96) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET cint RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID EQUALS objeto_metodo
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (32) condicion -> . IF LPAREN expresion RPAREN bloque
    (33) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (35) lectura -> . READ LPAREN ID RPAREN
    (36) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (37) escritura -> . PRINT LPAREN aux5 RPAREN
    (31) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (134) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          shift and go to state 242
    RETURN          shift and go to state 243
    ID              shift and go to state 17
    IF              shift and go to state 28
    READ            shift and go to state 29
    PRINT           shift and go to state 30
    WHILE           shift and go to state 31

    asignacion                     shift and go to state 41
    llamada_func                   shift and go to state 42
    objeto_metodo                  shift and go to state 43
    condicion                      shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    ciclo                          shift and go to state 47
    objeto_aAcceso                 shift and go to state 27

state 232

    (81) asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS . expresion
    (87) asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS . llamada_func
    (93) asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS . objeto_metodo
    (100) expresion -> . exp_bool
    (101) expresion -> . exp_bool rel_op exp_bool
    (102) expresion -> . expresion AND exp_bool
    (103) expresion -> . expresion OR exp_bool
    (104) expresion -> . expresion AND exp_bool rel_op exp_bool
    (105) expresion -> . expresion OR exp_bool rel_op exp_bool
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (106) exp_bool -> . TRUE
    (107) exp_bool -> . FALSE
    (108) exp_bool -> . exp
    (109) exp -> . termino
    (110) exp -> . exp PLUS termino
    (111) exp -> . exp MINUS termino
    (112) termino -> . factor
    (113) termino -> . termino TIMES factor
    (114) termino -> . termino DIVIDE factor
    (115) termino -> . termino MODULO factor
    (116) factor -> . LPAREN expresion RPAREN
    (117) factor -> . PLUS objeto_aAcceso
    (118) factor -> . MINUS objeto_aAcceso
    (119) factor -> . PLUS var
    (120) factor -> . MINUS var
    (121) factor -> . var
    (122) factor -> . objeto_aAcceso
    (123) var -> . ID
    (124) var -> . cint
    (125) var -> . cfloat
    (134) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER

    ID              shift and go to state 72
    TRUE            shift and go to state 78
    FALSE           shift and go to state 79
    LPAREN          shift and go to state 77
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    CINT            shift and go to state 71
    NUMBER          shift and go to state 89

    objeto_aAcceso                 shift and go to state 85
    cint                           shift and go to state 87
    expresion                      shift and go to state 244
    llamada_func                   shift and go to state 245
    objeto_metodo                  shift and go to state 246
    exp_bool                       shift and go to state 76
    exp                            shift and go to state 80
    termino                        shift and go to state 81
    factor                         shift and go to state 84
    var                            shift and go to state 86
    cfloat                         shift and go to state 88

state 233

    (33) condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion . RPAREN bloque
    (102) expresion -> expresion . AND exp_bool
    (103) expresion -> expresion . OR exp_bool
    (104) expresion -> expresion . AND exp_bool rel_op exp_bool
    (105) expresion -> expresion . OR exp_bool rel_op exp_bool

    RPAREN          shift and go to state 247
    AND             shift and go to state 124
    OR              shift and go to state 125


state 234

    (16) contexto_const -> LBRACE vars estatuto RBRACE .

    RBRACE          reduce using rule 16 (contexto_const -> LBRACE vars estatuto RBRACE .)
    VAR             reduce using rule 16 (contexto_const -> LBRACE vars estatuto RBRACE .)


state 235

    (84) asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion .
    (102) expresion -> expresion . AND exp_bool
    (103) expresion -> expresion . OR exp_bool
    (104) expresion -> expresion . AND exp_bool rel_op exp_bool
    (105) expresion -> expresion . OR exp_bool rel_op exp_bool

    RBRACE          reduce using rule 84 (asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion .)
    ID              reduce using rule 84 (asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion .)
    IF              reduce using rule 84 (asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion .)
    READ            reduce using rule 84 (asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 84 (asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 84 (asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 84 (asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion .)
    AND             shift and go to state 124
    OR              shift and go to state 125


state 236

    (90) asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func .

    RBRACE          reduce using rule 90 (asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 90 (asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 90 (asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 90 (asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 90 (asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 90 (asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 90 (asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func .)


state 237

    (96) asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo .

    RBRACE          reduce using rule 96 (asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 96 (asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 96 (asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 96 (asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 96 (asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 96 (asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 96 (asignacion -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo .)


state 238

    (70) aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON . tipo_simple
    (71) aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON . tipo_compuesto
    (78) tipo_simple -> . INT
    (79) tipo_simple -> . FLOAT
    (80) tipo_compuesto -> . ID

    INT             shift and go to state 121
    FLOAT           shift and go to state 122
    ID              shift and go to state 147

    tipo_simple                    shift and go to state 248
    tipo_compuesto                 shift and go to state 249

state 239

    (50) contexto_func -> LBRACE vars RBRACE .

    RBRACE          reduce using rule 50 (contexto_func -> LBRACE vars RBRACE .)
    ID              reduce using rule 50 (contexto_func -> LBRACE vars RBRACE .)
    IF              reduce using rule 50 (contexto_func -> LBRACE vars RBRACE .)
    READ            reduce using rule 50 (contexto_func -> LBRACE vars RBRACE .)
    PRINT           reduce using rule 50 (contexto_func -> LBRACE vars RBRACE .)
    WHILE           reduce using rule 50 (contexto_func -> LBRACE vars RBRACE .)


state 240

    (52) contexto_func -> LBRACE vars estatuto . RBRACE
    (57) contexto_func -> LBRACE vars estatuto . RETURN INT ID RBRACE
    (58) contexto_func -> LBRACE vars estatuto . RETURN FLOAT ID RBRACE
    (24) estatuto -> estatuto . asignacion
    (25) estatuto -> estatuto . llamada_func
    (26) estatuto -> estatuto . objeto_metodo
    (27) estatuto -> estatuto . condicion
    (28) estatuto -> estatuto . lectura
    (29) estatuto -> estatuto . escritura
    (30) estatuto -> estatuto . ciclo
    (81) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS expresion
    (84) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET cint RBRACKET EQUALS expresion
    (86) asignacion -> . ID EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func
    (91) asignacion -> . ID LBRACKET cint RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET cint RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (96) asignacion -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET cint RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID EQUALS objeto_metodo
    (46) llamada_func -> . ID LPAREN aux3 RPAREN
    (99) objeto_metodo -> . ID PERIOD llamada_func
    (32) condicion -> . IF LPAREN expresion RPAREN bloque
    (33) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (35) lectura -> . READ LPAREN ID RPAREN
    (36) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (37) escritura -> . PRINT LPAREN aux5 RPAREN
    (31) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (134) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          shift and go to state 250
    RETURN          shift and go to state 251
    ID              shift and go to state 17
    IF              shift and go to state 28
    READ            shift and go to state 29
    PRINT           shift and go to state 30
    WHILE           shift and go to state 31

    asignacion                     shift and go to state 41
    llamada_func                   shift and go to state 42
    objeto_metodo                  shift and go to state 43
    condicion                      shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    ciclo                          shift and go to state 47
    objeto_aAcceso                 shift and go to state 27

state 241

    (53) contexto_func -> LBRACE vars RETURN . INT ID RBRACE
    (54) contexto_func -> LBRACE vars RETURN . FLOAT ID RBRACE

    INT             shift and go to state 252
    FLOAT           shift and go to state 253


state 242

    (51) contexto_func -> LBRACE estatuto RBRACE .

    RBRACE          reduce using rule 51 (contexto_func -> LBRACE estatuto RBRACE .)
    ID              reduce using rule 51 (contexto_func -> LBRACE estatuto RBRACE .)
    IF              reduce using rule 51 (contexto_func -> LBRACE estatuto RBRACE .)
    READ            reduce using rule 51 (contexto_func -> LBRACE estatuto RBRACE .)
    PRINT           reduce using rule 51 (contexto_func -> LBRACE estatuto RBRACE .)
    WHILE           reduce using rule 51 (contexto_func -> LBRACE estatuto RBRACE .)


state 243

    (55) contexto_func -> LBRACE estatuto RETURN . INT ID RBRACE
    (56) contexto_func -> LBRACE estatuto RETURN . FLOAT ID RBRACE

    INT             shift and go to state 254
    FLOAT           shift and go to state 255


state 244

    (81) asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion .
    (102) expresion -> expresion . AND exp_bool
    (103) expresion -> expresion . OR exp_bool
    (104) expresion -> expresion . AND exp_bool rel_op exp_bool
    (105) expresion -> expresion . OR exp_bool rel_op exp_bool

    RBRACE          reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion .)
    ID              reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion .)
    IF              reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion .)
    READ            reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS expresion .)
    AND             shift and go to state 124
    OR              shift and go to state 125


state 245

    (87) asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func .

    RBRACE          reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS llamada_func .)


state 246

    (93) asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo .

    RBRACE          reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET cint RBRACKET LBRACKET cint RBRACKET EQUALS objeto_metodo .)


state 247

    (33) condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN . bloque
    (34) bloque -> . LBRACE estatuto RBRACE

    LBRACE          shift and go to state 187

    bloque                         shift and go to state 256

state 248

    (70) aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .

    ID              reduce using rule 70 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    RBRACE          reduce using rule 70 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    VAR             reduce using rule 70 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PRIVATE         reduce using rule 70 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PUBLIC          reduce using rule 70 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PROTECTED       reduce using rule 70 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    IF              reduce using rule 70 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    READ            reduce using rule 70 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PRINT           reduce using rule 70 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    WHILE           reduce using rule 70 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    RETURN          reduce using rule 70 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)


state 249

    (71) aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .

    ID              reduce using rule 71 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RBRACE          reduce using rule 71 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    VAR             reduce using rule 71 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRIVATE         reduce using rule 71 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PUBLIC          reduce using rule 71 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PROTECTED       reduce using rule 71 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    IF              reduce using rule 71 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    READ            reduce using rule 71 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRINT           reduce using rule 71 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    WHILE           reduce using rule 71 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RETURN          reduce using rule 71 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)


state 250

    (52) contexto_func -> LBRACE vars estatuto RBRACE .

    RBRACE          reduce using rule 52 (contexto_func -> LBRACE vars estatuto RBRACE .)
    ID              reduce using rule 52 (contexto_func -> LBRACE vars estatuto RBRACE .)
    IF              reduce using rule 52 (contexto_func -> LBRACE vars estatuto RBRACE .)
    READ            reduce using rule 52 (contexto_func -> LBRACE vars estatuto RBRACE .)
    PRINT           reduce using rule 52 (contexto_func -> LBRACE vars estatuto RBRACE .)
    WHILE           reduce using rule 52 (contexto_func -> LBRACE vars estatuto RBRACE .)


state 251

    (57) contexto_func -> LBRACE vars estatuto RETURN . INT ID RBRACE
    (58) contexto_func -> LBRACE vars estatuto RETURN . FLOAT ID RBRACE

    INT             shift and go to state 257
    FLOAT           shift and go to state 258


state 252

    (53) contexto_func -> LBRACE vars RETURN INT . ID RBRACE

    ID              shift and go to state 259


state 253

    (54) contexto_func -> LBRACE vars RETURN FLOAT . ID RBRACE

    ID              shift and go to state 260


state 254

    (55) contexto_func -> LBRACE estatuto RETURN INT . ID RBRACE

    ID              shift and go to state 261


state 255

    (56) contexto_func -> LBRACE estatuto RETURN FLOAT . ID RBRACE

    ID              shift and go to state 262


state 256

    (33) condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque .

    RBRACE          reduce using rule 33 (condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque .)
    ID              reduce using rule 33 (condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque .)
    IF              reduce using rule 33 (condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque .)
    READ            reduce using rule 33 (condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque .)
    PRINT           reduce using rule 33 (condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque .)
    WHILE           reduce using rule 33 (condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque .)
    RETURN          reduce using rule 33 (condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque .)


state 257

    (57) contexto_func -> LBRACE vars estatuto RETURN INT . ID RBRACE

    ID              shift and go to state 263


state 258

    (58) contexto_func -> LBRACE vars estatuto RETURN FLOAT . ID RBRACE

    ID              shift and go to state 264


state 259

    (53) contexto_func -> LBRACE vars RETURN INT ID . RBRACE

    RBRACE          shift and go to state 265


state 260

    (54) contexto_func -> LBRACE vars RETURN FLOAT ID . RBRACE

    RBRACE          shift and go to state 266


state 261

    (55) contexto_func -> LBRACE estatuto RETURN INT ID . RBRACE

    RBRACE          shift and go to state 267


state 262

    (56) contexto_func -> LBRACE estatuto RETURN FLOAT ID . RBRACE

    RBRACE          shift and go to state 268


state 263

    (57) contexto_func -> LBRACE vars estatuto RETURN INT ID . RBRACE

    RBRACE          shift and go to state 269


state 264

    (58) contexto_func -> LBRACE vars estatuto RETURN FLOAT ID . RBRACE

    RBRACE          shift and go to state 270


state 265

    (53) contexto_func -> LBRACE vars RETURN INT ID RBRACE .

    RBRACE          reduce using rule 53 (contexto_func -> LBRACE vars RETURN INT ID RBRACE .)
    ID              reduce using rule 53 (contexto_func -> LBRACE vars RETURN INT ID RBRACE .)
    IF              reduce using rule 53 (contexto_func -> LBRACE vars RETURN INT ID RBRACE .)
    READ            reduce using rule 53 (contexto_func -> LBRACE vars RETURN INT ID RBRACE .)
    PRINT           reduce using rule 53 (contexto_func -> LBRACE vars RETURN INT ID RBRACE .)
    WHILE           reduce using rule 53 (contexto_func -> LBRACE vars RETURN INT ID RBRACE .)


state 266

    (54) contexto_func -> LBRACE vars RETURN FLOAT ID RBRACE .

    RBRACE          reduce using rule 54 (contexto_func -> LBRACE vars RETURN FLOAT ID RBRACE .)
    ID              reduce using rule 54 (contexto_func -> LBRACE vars RETURN FLOAT ID RBRACE .)
    IF              reduce using rule 54 (contexto_func -> LBRACE vars RETURN FLOAT ID RBRACE .)
    READ            reduce using rule 54 (contexto_func -> LBRACE vars RETURN FLOAT ID RBRACE .)
    PRINT           reduce using rule 54 (contexto_func -> LBRACE vars RETURN FLOAT ID RBRACE .)
    WHILE           reduce using rule 54 (contexto_func -> LBRACE vars RETURN FLOAT ID RBRACE .)


state 267

    (55) contexto_func -> LBRACE estatuto RETURN INT ID RBRACE .

    RBRACE          reduce using rule 55 (contexto_func -> LBRACE estatuto RETURN INT ID RBRACE .)
    ID              reduce using rule 55 (contexto_func -> LBRACE estatuto RETURN INT ID RBRACE .)
    IF              reduce using rule 55 (contexto_func -> LBRACE estatuto RETURN INT ID RBRACE .)
    READ            reduce using rule 55 (contexto_func -> LBRACE estatuto RETURN INT ID RBRACE .)
    PRINT           reduce using rule 55 (contexto_func -> LBRACE estatuto RETURN INT ID RBRACE .)
    WHILE           reduce using rule 55 (contexto_func -> LBRACE estatuto RETURN INT ID RBRACE .)


state 268

    (56) contexto_func -> LBRACE estatuto RETURN FLOAT ID RBRACE .

    RBRACE          reduce using rule 56 (contexto_func -> LBRACE estatuto RETURN FLOAT ID RBRACE .)
    ID              reduce using rule 56 (contexto_func -> LBRACE estatuto RETURN FLOAT ID RBRACE .)
    IF              reduce using rule 56 (contexto_func -> LBRACE estatuto RETURN FLOAT ID RBRACE .)
    READ            reduce using rule 56 (contexto_func -> LBRACE estatuto RETURN FLOAT ID RBRACE .)
    PRINT           reduce using rule 56 (contexto_func -> LBRACE estatuto RETURN FLOAT ID RBRACE .)
    WHILE           reduce using rule 56 (contexto_func -> LBRACE estatuto RETURN FLOAT ID RBRACE .)


state 269

    (57) contexto_func -> LBRACE vars estatuto RETURN INT ID RBRACE .

    RBRACE          reduce using rule 57 (contexto_func -> LBRACE vars estatuto RETURN INT ID RBRACE .)
    ID              reduce using rule 57 (contexto_func -> LBRACE vars estatuto RETURN INT ID RBRACE .)
    IF              reduce using rule 57 (contexto_func -> LBRACE vars estatuto RETURN INT ID RBRACE .)
    READ            reduce using rule 57 (contexto_func -> LBRACE vars estatuto RETURN INT ID RBRACE .)
    PRINT           reduce using rule 57 (contexto_func -> LBRACE vars estatuto RETURN INT ID RBRACE .)
    WHILE           reduce using rule 57 (contexto_func -> LBRACE vars estatuto RETURN INT ID RBRACE .)


state 270

    (58) contexto_func -> LBRACE vars estatuto RETURN FLOAT ID RBRACE .

    RBRACE          reduce using rule 58 (contexto_func -> LBRACE vars estatuto RETURN FLOAT ID RBRACE .)
    ID              reduce using rule 58 (contexto_func -> LBRACE vars estatuto RETURN FLOAT ID RBRACE .)
    IF              reduce using rule 58 (contexto_func -> LBRACE vars estatuto RETURN FLOAT ID RBRACE .)
    READ            reduce using rule 58 (contexto_func -> LBRACE vars estatuto RETURN FLOAT ID RBRACE .)
    PRINT           reduce using rule 58 (contexto_func -> LBRACE vars estatuto RETURN FLOAT ID RBRACE .)
    WHILE           reduce using rule 58 (contexto_func -> LBRACE vars estatuto RETURN FLOAT ID RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 53 resolved as shift
WARNING: shift/reduce conflict for ID in state 68 resolved as shift
WARNING: shift/reduce conflict for ID in state 95 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 151 resolved as shift
