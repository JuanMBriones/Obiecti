Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID class
Rule 2     programa -> PROGRAM ID context
Rule 3     class -> scope CLASS ID context
Rule 4     class -> scope CLASS ID COLON ID context
Rule 5     context -> LBRACE aux6 RBRACE
Rule 6     aux6 -> aux6 aux6
Rule 7     aux6 -> funcion
Rule 8     aux6 -> vars
Rule 9     aux6 -> estatuto
Rule 10    aux6 -> constructor
Rule 11    constructor -> PUBLIC ID LPAREN param RPAREN contexto_const
Rule 12    contexto_const -> LBRACE vars RBRACE
Rule 13    contexto_const -> LBRACE estatuto RBRACE
Rule 14    contexto_const -> LBRACE vars estatuto RBRACE
Rule 15    estatuto -> asignacion
Rule 16    estatuto -> llamada_func
Rule 17    estatuto -> objeto_metodo
Rule 18    estatuto -> condicion
Rule 19    estatuto -> lectura
Rule 20    estatuto -> escritura
Rule 21    estatuto -> ciclo
Rule 22    estatuto -> estatuto asignacion
Rule 23    estatuto -> estatuto llamada_func
Rule 24    estatuto -> estatuto objeto_metodo
Rule 25    estatuto -> estatuto condicion
Rule 26    estatuto -> estatuto lectura
Rule 27    estatuto -> estatuto escritura
Rule 28    estatuto -> estatuto ciclo
Rule 29    ciclo -> WHILE LPAREN expresion RPAREN bloque
Rule 30    condicion -> IF LPAREN expresion RPAREN bloque
Rule 31    condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
Rule 32    bloque -> LBRACE estatuto RBRACE
Rule 33    lectura -> READ LPAREN ID RPAREN
Rule 34    lectura -> READ LPAREN objeto_aAcceso RPAREN
Rule 35    escritura -> PRINT LPAREN aux5 RPAREN
Rule 36    aux5 -> expresion
Rule 37    aux5 -> llamada_func
Rule 38    aux5 -> objeto_metodo
Rule 39    aux5 -> CSTRING
Rule 40    aux5 -> aux5 COMMA expresion
Rule 41    aux5 -> aux5 COMMA llamada_func
Rule 42    aux5 -> aux5 COMMA objeto_metodo
Rule 43    aux5 -> aux5 COMMA CSTRING
Rule 44    llamada_func -> ID LPAREN aux3 RPAREN
Rule 45    aux3 -> exp
Rule 46    aux3 -> aux3 COMMA exp
Rule 47    funcion -> scope DEF ID LPAREN param RPAREN contexto_func
Rule 48    contexto_func -> LBRACE vars RBRACE
Rule 49    contexto_func -> LBRACE estatuto RBRACE
Rule 50    contexto_func -> LBRACE vars estatuto RBRACE
Rule 51    contexto_func -> LBRACE vars RETURN INT ID RBRACE
Rule 52    contexto_func -> LBRACE vars RETURN FLOAT ID RBRACE
Rule 53    contexto_func -> LBRACE estatuto RETURN INT ID RBRACE
Rule 54    contexto_func -> LBRACE estatuto RETURN FLOAT ID RBRACE
Rule 55    contexto_func -> LBRACE vars estatuto RETURN INT ID RBRACE
Rule 56    contexto_func -> LBRACE vars estatuto RETURN FLOAT ID RBRACE
Rule 57    param -> aux4
Rule 58    aux4 -> tipo_simple ID
Rule 59    aux4 -> aux4 COMMA tipo_simple ID
Rule 60    scope -> PRIVATE
Rule 61    scope -> PUBLIC
Rule 62    scope -> PROTECTED
Rule 63    vars -> VAR aux
Rule 64    vars -> vars VAR aux
Rule 65    aux -> aux aux
Rule 66    aux -> ID COLON tipo_simple
Rule 67    aux -> ID COLON tipo_compuesto
Rule 68    aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
Rule 69    aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
Rule 70    aux -> ID LBRACKET cint RBRACKET COLON tipo_simple
Rule 71    aux -> ID LBRACKET cint RBRACKET COLON tipo_compuesto
Rule 72    aux -> ID aux2 COLON tipo_simple
Rule 73    aux -> ID aux2 COLON tipo_compuesto
Rule 74    aux2 -> aux2 aux2
Rule 75    aux2 -> COMMA ID
Rule 76    tipo_simple -> INT
Rule 77    tipo_simple -> FLOAT
Rule 78    tipo_compuesto -> ID
Rule 79    asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
Rule 80    asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
Rule 81    asignacion -> objeto_aAcceso EQUALS expresion
Rule 82    asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
Rule 83    asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion
Rule 84    asignacion -> ID EQUALS expresion
Rule 85    asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
Rule 86    asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
Rule 87    asignacion -> objeto_aAcceso EQUALS llamada_func
Rule 88    asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
Rule 89    asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func
Rule 90    asignacion -> ID EQUALS llamada_func
Rule 91    asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 92    asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 93    asignacion -> objeto_aAcceso EQUALS objeto_metodo
Rule 94    asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 95    asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 96    asignacion -> ID EQUALS objeto_metodo
Rule 97    objeto_metodo -> ID PERIOD llamada_func
Rule 98    expresion -> exp_bool
Rule 99    expresion -> exp_bool rel_op exp_bool
Rule 100   expresion -> expresion AND exp_bool
Rule 101   expresion -> expresion OR exp_bool
Rule 102   expresion -> expresion AND exp_bool rel_op exp_bool
Rule 103   expresion -> expresion OR exp_bool rel_op exp_bool
Rule 104   exp_bool -> TRUE
Rule 105   exp_bool -> FALSE
Rule 106   exp_bool -> exp
Rule 107   exp -> termino
Rule 108   exp -> exp PLUS termino
Rule 109   exp -> exp MINUS termino
Rule 110   termino -> factor
Rule 111   termino -> termino TIMES factor
Rule 112   termino -> termino DIVIDE factor
Rule 113   termino -> termino MODULO factor
Rule 114   factor -> LPAREN expresion RPAREN
Rule 115   factor -> PLUS objeto_aAcceso
Rule 116   factor -> MINUS objeto_aAcceso
Rule 117   factor -> PLUS var
Rule 118   factor -> MINUS var
Rule 119   factor -> var
Rule 120   factor -> objeto_aAcceso
Rule 121   var -> ID
Rule 122   var -> cint
Rule 123   var -> cfloat
Rule 124   cint -> CINT
Rule 125   cfloat -> NUMBER
Rule 126   rel_op -> LT
Rule 127   rel_op -> LE
Rule 128   rel_op -> GT
Rule 129   rel_op -> GE
Rule 130   rel_op -> EQ
Rule 131   rel_op -> NE
Rule 132   objeto_aAcceso -> ID PERIOD ID

Terminals, with rules where they appear

AND                  : 100 102
CINT                 : 124
CLASS                : 3 4
COLON                : 4 66 67 68 69 70 71 72 73
COMMA                : 40 41 42 43 46 59 75
CSTRING              : 39 43
DEF                  : 47
DIVIDE               : 112
ELIF                 : 31
EQ                   : 130
EQUALS               : 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96
FALSE                : 105
FLOAT                : 52 54 56 77
GE                   : 129
GT                   : 128
ID                   : 1 2 3 4 4 11 33 44 47 51 52 53 54 55 56 58 59 66 67 68 69 70 71 72 73 75 78 82 83 84 88 89 90 94 95 96 97 121 132 132
IF                   : 30 31
INT                  : 51 53 55 76
LBRACE               : 5 12 13 14 32 48 49 50 51 52 53 54 55 56
LBRACKET             : 68 68 69 69 70 71 79 79 80 82 82 83 85 85 86 88 88 89 91 91 92 94 94 95
LE                   : 127
LPAREN               : 11 29 30 31 31 33 34 35 44 47 114
LT                   : 126
MINUS                : 109 116 118
MODULO               : 113
NE                   : 131
NUMBER               : 125
OR                   : 101 103
PERIOD               : 97 132
PLUS                 : 108 115 117
PRINT                : 35
PRIVATE              : 60
PROGRAM              : 1 2
PROTECTED            : 62
PUBLIC               : 11 61
RBRACE               : 5 12 13 14 32 48 49 50 51 52 53 54 55 56
RBRACKET             : 68 68 69 69 70 71 79 79 80 82 82 83 85 85 86 88 88 89 91 91 92 94 94 95
READ                 : 33 34
RETURN               : 51 52 53 54 55 56
RPAREN               : 11 29 30 31 31 33 34 35 44 47 114
TIMES                : 111
TRUE                 : 104
VAR                  : 63 64
WHILE                : 29
error                : 

Nonterminals, with rules where they appear

asignacion           : 15 22
aux                  : 63 64 65 65
aux2                 : 72 73 74 74
aux3                 : 44 46
aux4                 : 57 59
aux5                 : 35 40 41 42 43
aux6                 : 5 6 6
bloque               : 29 30 31 31
cfloat               : 123
ciclo                : 21 28
cint                 : 68 68 69 69 70 71 122
class                : 1
condicion            : 18 25
constructor          : 10
context              : 2 3 4
contexto_const       : 11
contexto_func        : 47
escritura            : 20 27
estatuto             : 9 13 14 22 23 24 25 26 27 28 32 49 50 53 54 55 56
exp                  : 45 46 79 79 80 82 82 83 85 85 86 88 88 89 91 91 92 94 94 95 106 108 109
exp_bool             : 98 99 99 100 101 102 102 103 103
expresion            : 29 30 31 31 36 40 79 80 81 82 83 84 100 101 102 103 114
factor               : 110 111 112 113
funcion              : 7
lectura              : 19 26
llamada_func         : 16 23 37 41 85 86 87 88 89 90 97
objeto_aAcceso       : 34 79 80 81 85 86 87 91 92 93 115 116 120
objeto_metodo        : 17 24 38 42 91 92 93 94 95 96
param                : 11 47
programa             : 0
rel_op               : 99 102 103
scope                : 3 4 47
termino              : 107 108 109 111 112 113
tipo_compuesto       : 67 69 71 73
tipo_simple          : 58 59 66 68 70 72
var                  : 117 118 119
vars                 : 8 12 14 48 50 51 52 55 56 64

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID class
    (2) programa -> . PROGRAM ID context

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID class
    (2) programa -> PROGRAM . ID context

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . class
    (2) programa -> PROGRAM ID . context
    (3) class -> . scope CLASS ID context
    (4) class -> . scope CLASS ID COLON ID context
    (5) context -> . LBRACE aux6 RBRACE
    (60) scope -> . PRIVATE
    (61) scope -> . PUBLIC
    (62) scope -> . PROTECTED

    LBRACE          shift and go to state 7
    PRIVATE         shift and go to state 8
    PUBLIC          shift and go to state 9
    PROTECTED       shift and go to state 10

    class                          shift and go to state 4
    context                        shift and go to state 5
    scope                          shift and go to state 6

state 4

    (1) programa -> PROGRAM ID class .

    $end            reduce using rule 1 (programa -> PROGRAM ID class .)


state 5

    (2) programa -> PROGRAM ID context .

    $end            reduce using rule 2 (programa -> PROGRAM ID context .)


state 6

    (3) class -> scope . CLASS ID context
    (4) class -> scope . CLASS ID COLON ID context

    CLASS           shift and go to state 11


state 7

    (5) context -> LBRACE . aux6 RBRACE
    (6) aux6 -> . aux6 aux6
    (7) aux6 -> . funcion
    (8) aux6 -> . vars
    (9) aux6 -> . estatuto
    (10) aux6 -> . constructor
    (47) funcion -> . scope DEF ID LPAREN param RPAREN contexto_func
    (63) vars -> . VAR aux
    (64) vars -> . vars VAR aux
    (15) estatuto -> . asignacion
    (16) estatuto -> . llamada_func
    (17) estatuto -> . objeto_metodo
    (18) estatuto -> . condicion
    (19) estatuto -> . lectura
    (20) estatuto -> . escritura
    (21) estatuto -> . ciclo
    (22) estatuto -> . estatuto asignacion
    (23) estatuto -> . estatuto llamada_func
    (24) estatuto -> . estatuto objeto_metodo
    (25) estatuto -> . estatuto condicion
    (26) estatuto -> . estatuto lectura
    (27) estatuto -> . estatuto escritura
    (28) estatuto -> . estatuto ciclo
    (11) constructor -> . PUBLIC ID LPAREN param RPAREN contexto_const
    (60) scope -> . PRIVATE
    (61) scope -> . PUBLIC
    (62) scope -> . PROTECTED
    (79) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (80) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (81) asignacion -> . objeto_aAcceso EQUALS expresion
    (82) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> . ID EQUALS expresion
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID EQUALS llamada_func
    (91) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . ID EQUALS objeto_metodo
    (44) llamada_func -> . ID LPAREN aux3 RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (30) condicion -> . IF LPAREN expresion RPAREN bloque
    (31) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (33) lectura -> . READ LPAREN ID RPAREN
    (34) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (35) escritura -> . PRINT LPAREN aux5 RPAREN
    (29) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (132) objeto_aAcceso -> . ID PERIOD ID

    VAR             shift and go to state 19
    PUBLIC          shift and go to state 27
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 18
    IF              shift and go to state 29
    READ            shift and go to state 30
    PRINT           shift and go to state 31
    WHILE           shift and go to state 32

    aux6                           shift and go to state 12
    funcion                        shift and go to state 13
    vars                           shift and go to state 14
    estatuto                       shift and go to state 15
    constructor                    shift and go to state 16
    scope                          shift and go to state 17
    asignacion                     shift and go to state 20
    llamada_func                   shift and go to state 21
    objeto_metodo                  shift and go to state 22
    condicion                      shift and go to state 23
    lectura                        shift and go to state 24
    escritura                      shift and go to state 25
    ciclo                          shift and go to state 26
    objeto_aAcceso                 shift and go to state 28

state 8

    (60) scope -> PRIVATE .

    CLASS           reduce using rule 60 (scope -> PRIVATE .)
    DEF             reduce using rule 60 (scope -> PRIVATE .)


state 9

    (61) scope -> PUBLIC .

    CLASS           reduce using rule 61 (scope -> PUBLIC .)


state 10

    (62) scope -> PROTECTED .

    CLASS           reduce using rule 62 (scope -> PROTECTED .)
    DEF             reduce using rule 62 (scope -> PROTECTED .)


state 11

    (3) class -> scope CLASS . ID context
    (4) class -> scope CLASS . ID COLON ID context

    ID              shift and go to state 33


state 12

    (5) context -> LBRACE aux6 . RBRACE
    (6) aux6 -> aux6 . aux6
    (6) aux6 -> . aux6 aux6
    (7) aux6 -> . funcion
    (8) aux6 -> . vars
    (9) aux6 -> . estatuto
    (10) aux6 -> . constructor
    (47) funcion -> . scope DEF ID LPAREN param RPAREN contexto_func
    (63) vars -> . VAR aux
    (64) vars -> . vars VAR aux
    (15) estatuto -> . asignacion
    (16) estatuto -> . llamada_func
    (17) estatuto -> . objeto_metodo
    (18) estatuto -> . condicion
    (19) estatuto -> . lectura
    (20) estatuto -> . escritura
    (21) estatuto -> . ciclo
    (22) estatuto -> . estatuto asignacion
    (23) estatuto -> . estatuto llamada_func
    (24) estatuto -> . estatuto objeto_metodo
    (25) estatuto -> . estatuto condicion
    (26) estatuto -> . estatuto lectura
    (27) estatuto -> . estatuto escritura
    (28) estatuto -> . estatuto ciclo
    (11) constructor -> . PUBLIC ID LPAREN param RPAREN contexto_const
    (60) scope -> . PRIVATE
    (61) scope -> . PUBLIC
    (62) scope -> . PROTECTED
    (79) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (80) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (81) asignacion -> . objeto_aAcceso EQUALS expresion
    (82) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> . ID EQUALS expresion
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID EQUALS llamada_func
    (91) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . ID EQUALS objeto_metodo
    (44) llamada_func -> . ID LPAREN aux3 RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (30) condicion -> . IF LPAREN expresion RPAREN bloque
    (31) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (33) lectura -> . READ LPAREN ID RPAREN
    (34) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (35) escritura -> . PRINT LPAREN aux5 RPAREN
    (29) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (132) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          shift and go to state 35
    VAR             shift and go to state 19
    PUBLIC          shift and go to state 27
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 18
    IF              shift and go to state 29
    READ            shift and go to state 30
    PRINT           shift and go to state 31
    WHILE           shift and go to state 32

    aux6                           shift and go to state 34
    funcion                        shift and go to state 13
    vars                           shift and go to state 14
    estatuto                       shift and go to state 15
    constructor                    shift and go to state 16
    scope                          shift and go to state 17
    asignacion                     shift and go to state 20
    llamada_func                   shift and go to state 21
    objeto_metodo                  shift and go to state 22
    condicion                      shift and go to state 23
    lectura                        shift and go to state 24
    escritura                      shift and go to state 25
    ciclo                          shift and go to state 26
    objeto_aAcceso                 shift and go to state 28

state 13

    (7) aux6 -> funcion .

    RBRACE          reduce using rule 7 (aux6 -> funcion .)
    VAR             reduce using rule 7 (aux6 -> funcion .)
    PUBLIC          reduce using rule 7 (aux6 -> funcion .)
    PRIVATE         reduce using rule 7 (aux6 -> funcion .)
    PROTECTED       reduce using rule 7 (aux6 -> funcion .)
    ID              reduce using rule 7 (aux6 -> funcion .)
    IF              reduce using rule 7 (aux6 -> funcion .)
    READ            reduce using rule 7 (aux6 -> funcion .)
    PRINT           reduce using rule 7 (aux6 -> funcion .)
    WHILE           reduce using rule 7 (aux6 -> funcion .)


state 14

    (8) aux6 -> vars .
    (64) vars -> vars . VAR aux

  ! shift/reduce conflict for VAR resolved as shift
    RBRACE          reduce using rule 8 (aux6 -> vars .)
    PUBLIC          reduce using rule 8 (aux6 -> vars .)
    PRIVATE         reduce using rule 8 (aux6 -> vars .)
    PROTECTED       reduce using rule 8 (aux6 -> vars .)
    ID              reduce using rule 8 (aux6 -> vars .)
    IF              reduce using rule 8 (aux6 -> vars .)
    READ            reduce using rule 8 (aux6 -> vars .)
    PRINT           reduce using rule 8 (aux6 -> vars .)
    WHILE           reduce using rule 8 (aux6 -> vars .)
    VAR             shift and go to state 36

  ! VAR             [ reduce using rule 8 (aux6 -> vars .) ]


state 15

    (9) aux6 -> estatuto .
    (22) estatuto -> estatuto . asignacion
    (23) estatuto -> estatuto . llamada_func
    (24) estatuto -> estatuto . objeto_metodo
    (25) estatuto -> estatuto . condicion
    (26) estatuto -> estatuto . lectura
    (27) estatuto -> estatuto . escritura
    (28) estatuto -> estatuto . ciclo
    (79) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (80) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (81) asignacion -> . objeto_aAcceso EQUALS expresion
    (82) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> . ID EQUALS expresion
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID EQUALS llamada_func
    (91) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . ID EQUALS objeto_metodo
    (44) llamada_func -> . ID LPAREN aux3 RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (30) condicion -> . IF LPAREN expresion RPAREN bloque
    (31) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (33) lectura -> . READ LPAREN ID RPAREN
    (34) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (35) escritura -> . PRINT LPAREN aux5 RPAREN
    (29) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (132) objeto_aAcceso -> . ID PERIOD ID

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    RBRACE          reduce using rule 9 (aux6 -> estatuto .)
    VAR             reduce using rule 9 (aux6 -> estatuto .)
    PUBLIC          reduce using rule 9 (aux6 -> estatuto .)
    PRIVATE         reduce using rule 9 (aux6 -> estatuto .)
    PROTECTED       reduce using rule 9 (aux6 -> estatuto .)
    ID              shift and go to state 18
    IF              shift and go to state 29
    READ            shift and go to state 30
    PRINT           shift and go to state 31
    WHILE           shift and go to state 32

  ! ID              [ reduce using rule 9 (aux6 -> estatuto .) ]
  ! IF              [ reduce using rule 9 (aux6 -> estatuto .) ]
  ! READ            [ reduce using rule 9 (aux6 -> estatuto .) ]
  ! PRINT           [ reduce using rule 9 (aux6 -> estatuto .) ]
  ! WHILE           [ reduce using rule 9 (aux6 -> estatuto .) ]

    asignacion                     shift and go to state 37
    llamada_func                   shift and go to state 38
    objeto_metodo                  shift and go to state 39
    condicion                      shift and go to state 40
    lectura                        shift and go to state 41
    escritura                      shift and go to state 42
    ciclo                          shift and go to state 43
    objeto_aAcceso                 shift and go to state 28

state 16

    (10) aux6 -> constructor .

    RBRACE          reduce using rule 10 (aux6 -> constructor .)
    VAR             reduce using rule 10 (aux6 -> constructor .)
    PUBLIC          reduce using rule 10 (aux6 -> constructor .)
    PRIVATE         reduce using rule 10 (aux6 -> constructor .)
    PROTECTED       reduce using rule 10 (aux6 -> constructor .)
    ID              reduce using rule 10 (aux6 -> constructor .)
    IF              reduce using rule 10 (aux6 -> constructor .)
    READ            reduce using rule 10 (aux6 -> constructor .)
    PRINT           reduce using rule 10 (aux6 -> constructor .)
    WHILE           reduce using rule 10 (aux6 -> constructor .)


state 17

    (47) funcion -> scope . DEF ID LPAREN param RPAREN contexto_func

    DEF             shift and go to state 44


state 18

    (82) asignacion -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> ID . LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> ID . EQUALS expresion
    (88) asignacion -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> ID . LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> ID . EQUALS llamada_func
    (94) asignacion -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (95) asignacion -> ID . LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> ID . EQUALS objeto_metodo
    (44) llamada_func -> ID . LPAREN aux3 RPAREN
    (97) objeto_metodo -> ID . PERIOD llamada_func
    (132) objeto_aAcceso -> ID . PERIOD ID

    LBRACKET        shift and go to state 45
    EQUALS          shift and go to state 46
    LPAREN          shift and go to state 47
    PERIOD          shift and go to state 48


state 19

    (63) vars -> VAR . aux
    (65) aux -> . aux aux
    (66) aux -> . ID COLON tipo_simple
    (67) aux -> . ID COLON tipo_compuesto
    (68) aux -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (69) aux -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (70) aux -> . ID LBRACKET cint RBRACKET COLON tipo_simple
    (71) aux -> . ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (72) aux -> . ID aux2 COLON tipo_simple
    (73) aux -> . ID aux2 COLON tipo_compuesto

    ID              shift and go to state 50

    aux                            shift and go to state 49

state 20

    (15) estatuto -> asignacion .

    ID              reduce using rule 15 (estatuto -> asignacion .)
    IF              reduce using rule 15 (estatuto -> asignacion .)
    READ            reduce using rule 15 (estatuto -> asignacion .)
    PRINT           reduce using rule 15 (estatuto -> asignacion .)
    WHILE           reduce using rule 15 (estatuto -> asignacion .)
    RBRACE          reduce using rule 15 (estatuto -> asignacion .)
    VAR             reduce using rule 15 (estatuto -> asignacion .)
    PUBLIC          reduce using rule 15 (estatuto -> asignacion .)
    PRIVATE         reduce using rule 15 (estatuto -> asignacion .)
    PROTECTED       reduce using rule 15 (estatuto -> asignacion .)
    RETURN          reduce using rule 15 (estatuto -> asignacion .)


state 21

    (16) estatuto -> llamada_func .

    ID              reduce using rule 16 (estatuto -> llamada_func .)
    IF              reduce using rule 16 (estatuto -> llamada_func .)
    READ            reduce using rule 16 (estatuto -> llamada_func .)
    PRINT           reduce using rule 16 (estatuto -> llamada_func .)
    WHILE           reduce using rule 16 (estatuto -> llamada_func .)
    RBRACE          reduce using rule 16 (estatuto -> llamada_func .)
    VAR             reduce using rule 16 (estatuto -> llamada_func .)
    PUBLIC          reduce using rule 16 (estatuto -> llamada_func .)
    PRIVATE         reduce using rule 16 (estatuto -> llamada_func .)
    PROTECTED       reduce using rule 16 (estatuto -> llamada_func .)
    RETURN          reduce using rule 16 (estatuto -> llamada_func .)


state 22

    (17) estatuto -> objeto_metodo .

    ID              reduce using rule 17 (estatuto -> objeto_metodo .)
    IF              reduce using rule 17 (estatuto -> objeto_metodo .)
    READ            reduce using rule 17 (estatuto -> objeto_metodo .)
    PRINT           reduce using rule 17 (estatuto -> objeto_metodo .)
    WHILE           reduce using rule 17 (estatuto -> objeto_metodo .)
    RBRACE          reduce using rule 17 (estatuto -> objeto_metodo .)
    VAR             reduce using rule 17 (estatuto -> objeto_metodo .)
    PUBLIC          reduce using rule 17 (estatuto -> objeto_metodo .)
    PRIVATE         reduce using rule 17 (estatuto -> objeto_metodo .)
    PROTECTED       reduce using rule 17 (estatuto -> objeto_metodo .)
    RETURN          reduce using rule 17 (estatuto -> objeto_metodo .)


state 23

    (18) estatuto -> condicion .

    ID              reduce using rule 18 (estatuto -> condicion .)
    IF              reduce using rule 18 (estatuto -> condicion .)
    READ            reduce using rule 18 (estatuto -> condicion .)
    PRINT           reduce using rule 18 (estatuto -> condicion .)
    WHILE           reduce using rule 18 (estatuto -> condicion .)
    RBRACE          reduce using rule 18 (estatuto -> condicion .)
    VAR             reduce using rule 18 (estatuto -> condicion .)
    PUBLIC          reduce using rule 18 (estatuto -> condicion .)
    PRIVATE         reduce using rule 18 (estatuto -> condicion .)
    PROTECTED       reduce using rule 18 (estatuto -> condicion .)
    RETURN          reduce using rule 18 (estatuto -> condicion .)


state 24

    (19) estatuto -> lectura .

    ID              reduce using rule 19 (estatuto -> lectura .)
    IF              reduce using rule 19 (estatuto -> lectura .)
    READ            reduce using rule 19 (estatuto -> lectura .)
    PRINT           reduce using rule 19 (estatuto -> lectura .)
    WHILE           reduce using rule 19 (estatuto -> lectura .)
    RBRACE          reduce using rule 19 (estatuto -> lectura .)
    VAR             reduce using rule 19 (estatuto -> lectura .)
    PUBLIC          reduce using rule 19 (estatuto -> lectura .)
    PRIVATE         reduce using rule 19 (estatuto -> lectura .)
    PROTECTED       reduce using rule 19 (estatuto -> lectura .)
    RETURN          reduce using rule 19 (estatuto -> lectura .)


state 25

    (20) estatuto -> escritura .

    ID              reduce using rule 20 (estatuto -> escritura .)
    IF              reduce using rule 20 (estatuto -> escritura .)
    READ            reduce using rule 20 (estatuto -> escritura .)
    PRINT           reduce using rule 20 (estatuto -> escritura .)
    WHILE           reduce using rule 20 (estatuto -> escritura .)
    RBRACE          reduce using rule 20 (estatuto -> escritura .)
    VAR             reduce using rule 20 (estatuto -> escritura .)
    PUBLIC          reduce using rule 20 (estatuto -> escritura .)
    PRIVATE         reduce using rule 20 (estatuto -> escritura .)
    PROTECTED       reduce using rule 20 (estatuto -> escritura .)
    RETURN          reduce using rule 20 (estatuto -> escritura .)


state 26

    (21) estatuto -> ciclo .

    ID              reduce using rule 21 (estatuto -> ciclo .)
    IF              reduce using rule 21 (estatuto -> ciclo .)
    READ            reduce using rule 21 (estatuto -> ciclo .)
    PRINT           reduce using rule 21 (estatuto -> ciclo .)
    WHILE           reduce using rule 21 (estatuto -> ciclo .)
    RBRACE          reduce using rule 21 (estatuto -> ciclo .)
    VAR             reduce using rule 21 (estatuto -> ciclo .)
    PUBLIC          reduce using rule 21 (estatuto -> ciclo .)
    PRIVATE         reduce using rule 21 (estatuto -> ciclo .)
    PROTECTED       reduce using rule 21 (estatuto -> ciclo .)
    RETURN          reduce using rule 21 (estatuto -> ciclo .)


state 27

    (11) constructor -> PUBLIC . ID LPAREN param RPAREN contexto_const
    (61) scope -> PUBLIC .

    ID              shift and go to state 51
    DEF             reduce using rule 61 (scope -> PUBLIC .)


state 28

    (79) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (80) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET EQUALS expresion
    (81) asignacion -> objeto_aAcceso . EQUALS expresion
    (85) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> objeto_aAcceso . EQUALS llamada_func
    (91) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (92) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> objeto_aAcceso . EQUALS objeto_metodo

    LBRACKET        shift and go to state 52
    EQUALS          shift and go to state 53


state 29

    (30) condicion -> IF . LPAREN expresion RPAREN bloque
    (31) condicion -> IF . LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque

    LPAREN          shift and go to state 54


state 30

    (33) lectura -> READ . LPAREN ID RPAREN
    (34) lectura -> READ . LPAREN objeto_aAcceso RPAREN

    LPAREN          shift and go to state 55


state 31

    (35) escritura -> PRINT . LPAREN aux5 RPAREN

    LPAREN          shift and go to state 56


state 32

    (29) ciclo -> WHILE . LPAREN expresion RPAREN bloque

    LPAREN          shift and go to state 57


state 33

    (3) class -> scope CLASS ID . context
    (4) class -> scope CLASS ID . COLON ID context
    (5) context -> . LBRACE aux6 RBRACE

    COLON           shift and go to state 59
    LBRACE          shift and go to state 7

    context                        shift and go to state 58

state 34

    (6) aux6 -> aux6 aux6 .
    (6) aux6 -> aux6 . aux6
    (6) aux6 -> . aux6 aux6
    (7) aux6 -> . funcion
    (8) aux6 -> . vars
    (9) aux6 -> . estatuto
    (10) aux6 -> . constructor
    (47) funcion -> . scope DEF ID LPAREN param RPAREN contexto_func
    (63) vars -> . VAR aux
    (64) vars -> . vars VAR aux
    (15) estatuto -> . asignacion
    (16) estatuto -> . llamada_func
    (17) estatuto -> . objeto_metodo
    (18) estatuto -> . condicion
    (19) estatuto -> . lectura
    (20) estatuto -> . escritura
    (21) estatuto -> . ciclo
    (22) estatuto -> . estatuto asignacion
    (23) estatuto -> . estatuto llamada_func
    (24) estatuto -> . estatuto objeto_metodo
    (25) estatuto -> . estatuto condicion
    (26) estatuto -> . estatuto lectura
    (27) estatuto -> . estatuto escritura
    (28) estatuto -> . estatuto ciclo
    (11) constructor -> . PUBLIC ID LPAREN param RPAREN contexto_const
    (60) scope -> . PRIVATE
    (61) scope -> . PUBLIC
    (62) scope -> . PROTECTED
    (79) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (80) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (81) asignacion -> . objeto_aAcceso EQUALS expresion
    (82) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> . ID EQUALS expresion
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID EQUALS llamada_func
    (91) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . ID EQUALS objeto_metodo
    (44) llamada_func -> . ID LPAREN aux3 RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (30) condicion -> . IF LPAREN expresion RPAREN bloque
    (31) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (33) lectura -> . READ LPAREN ID RPAREN
    (34) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (35) escritura -> . PRINT LPAREN aux5 RPAREN
    (29) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (132) objeto_aAcceso -> . ID PERIOD ID

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    RBRACE          reduce using rule 6 (aux6 -> aux6 aux6 .)
    VAR             shift and go to state 19
    PUBLIC          shift and go to state 27
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 18
    IF              shift and go to state 29
    READ            shift and go to state 30
    PRINT           shift and go to state 31
    WHILE           shift and go to state 32

  ! VAR             [ reduce using rule 6 (aux6 -> aux6 aux6 .) ]
  ! PUBLIC          [ reduce using rule 6 (aux6 -> aux6 aux6 .) ]
  ! PRIVATE         [ reduce using rule 6 (aux6 -> aux6 aux6 .) ]
  ! PROTECTED       [ reduce using rule 6 (aux6 -> aux6 aux6 .) ]
  ! ID              [ reduce using rule 6 (aux6 -> aux6 aux6 .) ]
  ! IF              [ reduce using rule 6 (aux6 -> aux6 aux6 .) ]
  ! READ            [ reduce using rule 6 (aux6 -> aux6 aux6 .) ]
  ! PRINT           [ reduce using rule 6 (aux6 -> aux6 aux6 .) ]
  ! WHILE           [ reduce using rule 6 (aux6 -> aux6 aux6 .) ]

    aux6                           shift and go to state 34
    funcion                        shift and go to state 13
    vars                           shift and go to state 14
    estatuto                       shift and go to state 15
    constructor                    shift and go to state 16
    scope                          shift and go to state 17
    asignacion                     shift and go to state 20
    llamada_func                   shift and go to state 21
    objeto_metodo                  shift and go to state 22
    condicion                      shift and go to state 23
    lectura                        shift and go to state 24
    escritura                      shift and go to state 25
    ciclo                          shift and go to state 26
    objeto_aAcceso                 shift and go to state 28

state 35

    (5) context -> LBRACE aux6 RBRACE .

    $end            reduce using rule 5 (context -> LBRACE aux6 RBRACE .)


state 36

    (64) vars -> vars VAR . aux
    (65) aux -> . aux aux
    (66) aux -> . ID COLON tipo_simple
    (67) aux -> . ID COLON tipo_compuesto
    (68) aux -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (69) aux -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (70) aux -> . ID LBRACKET cint RBRACKET COLON tipo_simple
    (71) aux -> . ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (72) aux -> . ID aux2 COLON tipo_simple
    (73) aux -> . ID aux2 COLON tipo_compuesto

    ID              shift and go to state 50

    aux                            shift and go to state 60

state 37

    (22) estatuto -> estatuto asignacion .

    ID              reduce using rule 22 (estatuto -> estatuto asignacion .)
    IF              reduce using rule 22 (estatuto -> estatuto asignacion .)
    READ            reduce using rule 22 (estatuto -> estatuto asignacion .)
    PRINT           reduce using rule 22 (estatuto -> estatuto asignacion .)
    WHILE           reduce using rule 22 (estatuto -> estatuto asignacion .)
    RBRACE          reduce using rule 22 (estatuto -> estatuto asignacion .)
    VAR             reduce using rule 22 (estatuto -> estatuto asignacion .)
    PUBLIC          reduce using rule 22 (estatuto -> estatuto asignacion .)
    PRIVATE         reduce using rule 22 (estatuto -> estatuto asignacion .)
    PROTECTED       reduce using rule 22 (estatuto -> estatuto asignacion .)
    RETURN          reduce using rule 22 (estatuto -> estatuto asignacion .)


state 38

    (23) estatuto -> estatuto llamada_func .

    ID              reduce using rule 23 (estatuto -> estatuto llamada_func .)
    IF              reduce using rule 23 (estatuto -> estatuto llamada_func .)
    READ            reduce using rule 23 (estatuto -> estatuto llamada_func .)
    PRINT           reduce using rule 23 (estatuto -> estatuto llamada_func .)
    WHILE           reduce using rule 23 (estatuto -> estatuto llamada_func .)
    RBRACE          reduce using rule 23 (estatuto -> estatuto llamada_func .)
    VAR             reduce using rule 23 (estatuto -> estatuto llamada_func .)
    PUBLIC          reduce using rule 23 (estatuto -> estatuto llamada_func .)
    PRIVATE         reduce using rule 23 (estatuto -> estatuto llamada_func .)
    PROTECTED       reduce using rule 23 (estatuto -> estatuto llamada_func .)
    RETURN          reduce using rule 23 (estatuto -> estatuto llamada_func .)


state 39

    (24) estatuto -> estatuto objeto_metodo .

    ID              reduce using rule 24 (estatuto -> estatuto objeto_metodo .)
    IF              reduce using rule 24 (estatuto -> estatuto objeto_metodo .)
    READ            reduce using rule 24 (estatuto -> estatuto objeto_metodo .)
    PRINT           reduce using rule 24 (estatuto -> estatuto objeto_metodo .)
    WHILE           reduce using rule 24 (estatuto -> estatuto objeto_metodo .)
    RBRACE          reduce using rule 24 (estatuto -> estatuto objeto_metodo .)
    VAR             reduce using rule 24 (estatuto -> estatuto objeto_metodo .)
    PUBLIC          reduce using rule 24 (estatuto -> estatuto objeto_metodo .)
    PRIVATE         reduce using rule 24 (estatuto -> estatuto objeto_metodo .)
    PROTECTED       reduce using rule 24 (estatuto -> estatuto objeto_metodo .)
    RETURN          reduce using rule 24 (estatuto -> estatuto objeto_metodo .)


state 40

    (25) estatuto -> estatuto condicion .

    ID              reduce using rule 25 (estatuto -> estatuto condicion .)
    IF              reduce using rule 25 (estatuto -> estatuto condicion .)
    READ            reduce using rule 25 (estatuto -> estatuto condicion .)
    PRINT           reduce using rule 25 (estatuto -> estatuto condicion .)
    WHILE           reduce using rule 25 (estatuto -> estatuto condicion .)
    RBRACE          reduce using rule 25 (estatuto -> estatuto condicion .)
    VAR             reduce using rule 25 (estatuto -> estatuto condicion .)
    PUBLIC          reduce using rule 25 (estatuto -> estatuto condicion .)
    PRIVATE         reduce using rule 25 (estatuto -> estatuto condicion .)
    PROTECTED       reduce using rule 25 (estatuto -> estatuto condicion .)
    RETURN          reduce using rule 25 (estatuto -> estatuto condicion .)


state 41

    (26) estatuto -> estatuto lectura .

    ID              reduce using rule 26 (estatuto -> estatuto lectura .)
    IF              reduce using rule 26 (estatuto -> estatuto lectura .)
    READ            reduce using rule 26 (estatuto -> estatuto lectura .)
    PRINT           reduce using rule 26 (estatuto -> estatuto lectura .)
    WHILE           reduce using rule 26 (estatuto -> estatuto lectura .)
    RBRACE          reduce using rule 26 (estatuto -> estatuto lectura .)
    VAR             reduce using rule 26 (estatuto -> estatuto lectura .)
    PUBLIC          reduce using rule 26 (estatuto -> estatuto lectura .)
    PRIVATE         reduce using rule 26 (estatuto -> estatuto lectura .)
    PROTECTED       reduce using rule 26 (estatuto -> estatuto lectura .)
    RETURN          reduce using rule 26 (estatuto -> estatuto lectura .)


state 42

    (27) estatuto -> estatuto escritura .

    ID              reduce using rule 27 (estatuto -> estatuto escritura .)
    IF              reduce using rule 27 (estatuto -> estatuto escritura .)
    READ            reduce using rule 27 (estatuto -> estatuto escritura .)
    PRINT           reduce using rule 27 (estatuto -> estatuto escritura .)
    WHILE           reduce using rule 27 (estatuto -> estatuto escritura .)
    RBRACE          reduce using rule 27 (estatuto -> estatuto escritura .)
    VAR             reduce using rule 27 (estatuto -> estatuto escritura .)
    PUBLIC          reduce using rule 27 (estatuto -> estatuto escritura .)
    PRIVATE         reduce using rule 27 (estatuto -> estatuto escritura .)
    PROTECTED       reduce using rule 27 (estatuto -> estatuto escritura .)
    RETURN          reduce using rule 27 (estatuto -> estatuto escritura .)


state 43

    (28) estatuto -> estatuto ciclo .

    ID              reduce using rule 28 (estatuto -> estatuto ciclo .)
    IF              reduce using rule 28 (estatuto -> estatuto ciclo .)
    READ            reduce using rule 28 (estatuto -> estatuto ciclo .)
    PRINT           reduce using rule 28 (estatuto -> estatuto ciclo .)
    WHILE           reduce using rule 28 (estatuto -> estatuto ciclo .)
    RBRACE          reduce using rule 28 (estatuto -> estatuto ciclo .)
    VAR             reduce using rule 28 (estatuto -> estatuto ciclo .)
    PUBLIC          reduce using rule 28 (estatuto -> estatuto ciclo .)
    PRIVATE         reduce using rule 28 (estatuto -> estatuto ciclo .)
    PROTECTED       reduce using rule 28 (estatuto -> estatuto ciclo .)
    RETURN          reduce using rule 28 (estatuto -> estatuto ciclo .)


state 44

    (47) funcion -> scope DEF . ID LPAREN param RPAREN contexto_func

    ID              shift and go to state 61


state 45

    (82) asignacion -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> ID LBRACKET . exp RBRACKET EQUALS expresion
    (88) asignacion -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> ID LBRACKET . exp RBRACKET EQUALS llamada_func
    (94) asignacion -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (95) asignacion -> ID LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    ID              shift and go to state 62
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    exp                            shift and go to state 63
    termino                        shift and go to state 64
    factor                         shift and go to state 67
    objeto_aAcceso                 shift and go to state 69
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 46

    (84) asignacion -> ID EQUALS . expresion
    (90) asignacion -> ID EQUALS . llamada_func
    (96) asignacion -> ID EQUALS . objeto_metodo
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . expresion AND exp_bool
    (101) expresion -> . expresion OR exp_bool
    (102) expresion -> . expresion AND exp_bool rel_op exp_bool
    (103) expresion -> . expresion OR exp_bool rel_op exp_bool
    (44) llamada_func -> . ID LPAREN aux3 RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    ID              shift and go to state 75
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    expresion                      shift and go to state 76
    llamada_func                   shift and go to state 77
    objeto_metodo                  shift and go to state 78
    exp_bool                       shift and go to state 79
    exp                            shift and go to state 82
    termino                        shift and go to state 64
    factor                         shift and go to state 67
    objeto_aAcceso                 shift and go to state 69
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 47

    (44) llamada_func -> ID LPAREN . aux3 RPAREN
    (45) aux3 -> . exp
    (46) aux3 -> . aux3 COMMA exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    ID              shift and go to state 62
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    aux3                           shift and go to state 83
    exp                            shift and go to state 84
    termino                        shift and go to state 64
    factor                         shift and go to state 67
    objeto_aAcceso                 shift and go to state 69
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 48

    (97) objeto_metodo -> ID PERIOD . llamada_func
    (132) objeto_aAcceso -> ID PERIOD . ID
    (44) llamada_func -> . ID LPAREN aux3 RPAREN

    ID              shift and go to state 85

    llamada_func                   shift and go to state 86

state 49

    (63) vars -> VAR aux .
    (65) aux -> aux . aux
    (65) aux -> . aux aux
    (66) aux -> . ID COLON tipo_simple
    (67) aux -> . ID COLON tipo_compuesto
    (68) aux -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (69) aux -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (70) aux -> . ID LBRACKET cint RBRACKET COLON tipo_simple
    (71) aux -> . ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (72) aux -> . ID aux2 COLON tipo_simple
    (73) aux -> . ID aux2 COLON tipo_compuesto

  ! shift/reduce conflict for ID resolved as shift
    VAR             reduce using rule 63 (vars -> VAR aux .)
    RBRACE          reduce using rule 63 (vars -> VAR aux .)
    PUBLIC          reduce using rule 63 (vars -> VAR aux .)
    PRIVATE         reduce using rule 63 (vars -> VAR aux .)
    PROTECTED       reduce using rule 63 (vars -> VAR aux .)
    IF              reduce using rule 63 (vars -> VAR aux .)
    READ            reduce using rule 63 (vars -> VAR aux .)
    PRINT           reduce using rule 63 (vars -> VAR aux .)
    WHILE           reduce using rule 63 (vars -> VAR aux .)
    RETURN          reduce using rule 63 (vars -> VAR aux .)
    ID              shift and go to state 50

  ! ID              [ reduce using rule 63 (vars -> VAR aux .) ]

    aux                            shift and go to state 87

state 50

    (66) aux -> ID . COLON tipo_simple
    (67) aux -> ID . COLON tipo_compuesto
    (68) aux -> ID . LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (69) aux -> ID . LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (70) aux -> ID . LBRACKET cint RBRACKET COLON tipo_simple
    (71) aux -> ID . LBRACKET cint RBRACKET COLON tipo_compuesto
    (72) aux -> ID . aux2 COLON tipo_simple
    (73) aux -> ID . aux2 COLON tipo_compuesto
    (74) aux2 -> . aux2 aux2
    (75) aux2 -> . COMMA ID

    COLON           shift and go to state 88
    LBRACKET        shift and go to state 89
    COMMA           shift and go to state 91

    aux2                           shift and go to state 90

state 51

    (11) constructor -> PUBLIC ID . LPAREN param RPAREN contexto_const

    LPAREN          shift and go to state 92


state 52

    (79) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (80) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET EQUALS expresion
    (85) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET EQUALS llamada_func
    (91) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (92) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    ID              shift and go to state 62
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    objeto_aAcceso                 shift and go to state 69
    exp                            shift and go to state 93
    termino                        shift and go to state 64
    factor                         shift and go to state 67
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 53

    (81) asignacion -> objeto_aAcceso EQUALS . expresion
    (87) asignacion -> objeto_aAcceso EQUALS . llamada_func
    (93) asignacion -> objeto_aAcceso EQUALS . objeto_metodo
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . expresion AND exp_bool
    (101) expresion -> . expresion OR exp_bool
    (102) expresion -> . expresion AND exp_bool rel_op exp_bool
    (103) expresion -> . expresion OR exp_bool rel_op exp_bool
    (44) llamada_func -> . ID LPAREN aux3 RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    ID              shift and go to state 75
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    objeto_aAcceso                 shift and go to state 69
    expresion                      shift and go to state 94
    llamada_func                   shift and go to state 95
    objeto_metodo                  shift and go to state 96
    exp_bool                       shift and go to state 79
    exp                            shift and go to state 82
    termino                        shift and go to state 64
    factor                         shift and go to state 67
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 54

    (30) condicion -> IF LPAREN . expresion RPAREN bloque
    (31) condicion -> IF LPAREN . expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . expresion AND exp_bool
    (101) expresion -> . expresion OR exp_bool
    (102) expresion -> . expresion AND exp_bool rel_op exp_bool
    (103) expresion -> . expresion OR exp_bool rel_op exp_bool
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    ID              shift and go to state 62
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    expresion                      shift and go to state 97
    exp_bool                       shift and go to state 79
    exp                            shift and go to state 82
    termino                        shift and go to state 64
    factor                         shift and go to state 67
    objeto_aAcceso                 shift and go to state 69
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 55

    (33) lectura -> READ LPAREN . ID RPAREN
    (34) lectura -> READ LPAREN . objeto_aAcceso RPAREN
    (132) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 98

    objeto_aAcceso                 shift and go to state 99

state 56

    (35) escritura -> PRINT LPAREN . aux5 RPAREN
    (36) aux5 -> . expresion
    (37) aux5 -> . llamada_func
    (38) aux5 -> . objeto_metodo
    (39) aux5 -> . CSTRING
    (40) aux5 -> . aux5 COMMA expresion
    (41) aux5 -> . aux5 COMMA llamada_func
    (42) aux5 -> . aux5 COMMA objeto_metodo
    (43) aux5 -> . aux5 COMMA CSTRING
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . expresion AND exp_bool
    (101) expresion -> . expresion OR exp_bool
    (102) expresion -> . expresion AND exp_bool rel_op exp_bool
    (103) expresion -> . expresion OR exp_bool rel_op exp_bool
    (44) llamada_func -> . ID LPAREN aux3 RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    CSTRING         shift and go to state 104
    ID              shift and go to state 75
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    aux5                           shift and go to state 100
    expresion                      shift and go to state 101
    llamada_func                   shift and go to state 102
    objeto_metodo                  shift and go to state 103
    exp_bool                       shift and go to state 79
    exp                            shift and go to state 82
    termino                        shift and go to state 64
    factor                         shift and go to state 67
    objeto_aAcceso                 shift and go to state 69
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 57

    (29) ciclo -> WHILE LPAREN . expresion RPAREN bloque
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . expresion AND exp_bool
    (101) expresion -> . expresion OR exp_bool
    (102) expresion -> . expresion AND exp_bool rel_op exp_bool
    (103) expresion -> . expresion OR exp_bool rel_op exp_bool
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    ID              shift and go to state 62
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    expresion                      shift and go to state 105
    exp_bool                       shift and go to state 79
    exp                            shift and go to state 82
    termino                        shift and go to state 64
    factor                         shift and go to state 67
    objeto_aAcceso                 shift and go to state 69
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 58

    (3) class -> scope CLASS ID context .

    $end            reduce using rule 3 (class -> scope CLASS ID context .)


state 59

    (4) class -> scope CLASS ID COLON . ID context

    ID              shift and go to state 106


state 60

    (64) vars -> vars VAR aux .
    (65) aux -> aux . aux
    (65) aux -> . aux aux
    (66) aux -> . ID COLON tipo_simple
    (67) aux -> . ID COLON tipo_compuesto
    (68) aux -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (69) aux -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (70) aux -> . ID LBRACKET cint RBRACKET COLON tipo_simple
    (71) aux -> . ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (72) aux -> . ID aux2 COLON tipo_simple
    (73) aux -> . ID aux2 COLON tipo_compuesto

  ! shift/reduce conflict for ID resolved as shift
    VAR             reduce using rule 64 (vars -> vars VAR aux .)
    RBRACE          reduce using rule 64 (vars -> vars VAR aux .)
    PUBLIC          reduce using rule 64 (vars -> vars VAR aux .)
    PRIVATE         reduce using rule 64 (vars -> vars VAR aux .)
    PROTECTED       reduce using rule 64 (vars -> vars VAR aux .)
    IF              reduce using rule 64 (vars -> vars VAR aux .)
    READ            reduce using rule 64 (vars -> vars VAR aux .)
    PRINT           reduce using rule 64 (vars -> vars VAR aux .)
    WHILE           reduce using rule 64 (vars -> vars VAR aux .)
    RETURN          reduce using rule 64 (vars -> vars VAR aux .)
    ID              shift and go to state 50

  ! ID              [ reduce using rule 64 (vars -> vars VAR aux .) ]

    aux                            shift and go to state 87

state 61

    (47) funcion -> scope DEF ID . LPAREN param RPAREN contexto_func

    LPAREN          shift and go to state 107


state 62

    (121) var -> ID .
    (132) objeto_aAcceso -> ID . PERIOD ID

    TIMES           reduce using rule 121 (var -> ID .)
    DIVIDE          reduce using rule 121 (var -> ID .)
    MODULO          reduce using rule 121 (var -> ID .)
    RBRACKET        reduce using rule 121 (var -> ID .)
    PLUS            reduce using rule 121 (var -> ID .)
    MINUS           reduce using rule 121 (var -> ID .)
    RPAREN          reduce using rule 121 (var -> ID .)
    COMMA           reduce using rule 121 (var -> ID .)
    LT              reduce using rule 121 (var -> ID .)
    LE              reduce using rule 121 (var -> ID .)
    GT              reduce using rule 121 (var -> ID .)
    GE              reduce using rule 121 (var -> ID .)
    EQ              reduce using rule 121 (var -> ID .)
    NE              reduce using rule 121 (var -> ID .)
    AND             reduce using rule 121 (var -> ID .)
    OR              reduce using rule 121 (var -> ID .)
    ID              reduce using rule 121 (var -> ID .)
    IF              reduce using rule 121 (var -> ID .)
    READ            reduce using rule 121 (var -> ID .)
    PRINT           reduce using rule 121 (var -> ID .)
    WHILE           reduce using rule 121 (var -> ID .)
    RBRACE          reduce using rule 121 (var -> ID .)
    VAR             reduce using rule 121 (var -> ID .)
    PUBLIC          reduce using rule 121 (var -> ID .)
    PRIVATE         reduce using rule 121 (var -> ID .)
    PROTECTED       reduce using rule 121 (var -> ID .)
    RETURN          reduce using rule 121 (var -> ID .)
    PERIOD          shift and go to state 108


state 63

    (82) asignacion -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> ID LBRACKET exp . RBRACKET EQUALS expresion
    (88) asignacion -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> ID LBRACKET exp . RBRACKET EQUALS llamada_func
    (94) asignacion -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (95) asignacion -> ID LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (108) exp -> exp . PLUS termino
    (109) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 109
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111


state 64

    (107) exp -> termino .
    (111) termino -> termino . TIMES factor
    (112) termino -> termino . DIVIDE factor
    (113) termino -> termino . MODULO factor

    RBRACKET        reduce using rule 107 (exp -> termino .)
    PLUS            reduce using rule 107 (exp -> termino .)
    MINUS           reduce using rule 107 (exp -> termino .)
    LT              reduce using rule 107 (exp -> termino .)
    LE              reduce using rule 107 (exp -> termino .)
    GT              reduce using rule 107 (exp -> termino .)
    GE              reduce using rule 107 (exp -> termino .)
    EQ              reduce using rule 107 (exp -> termino .)
    NE              reduce using rule 107 (exp -> termino .)
    AND             reduce using rule 107 (exp -> termino .)
    OR              reduce using rule 107 (exp -> termino .)
    ID              reduce using rule 107 (exp -> termino .)
    IF              reduce using rule 107 (exp -> termino .)
    READ            reduce using rule 107 (exp -> termino .)
    PRINT           reduce using rule 107 (exp -> termino .)
    WHILE           reduce using rule 107 (exp -> termino .)
    RBRACE          reduce using rule 107 (exp -> termino .)
    VAR             reduce using rule 107 (exp -> termino .)
    PUBLIC          reduce using rule 107 (exp -> termino .)
    PRIVATE         reduce using rule 107 (exp -> termino .)
    PROTECTED       reduce using rule 107 (exp -> termino .)
    RETURN          reduce using rule 107 (exp -> termino .)
    RPAREN          reduce using rule 107 (exp -> termino .)
    COMMA           reduce using rule 107 (exp -> termino .)
    TIMES           shift and go to state 112
    DIVIDE          shift and go to state 113
    MODULO          shift and go to state 114


state 65

    (115) factor -> PLUS . objeto_aAcceso
    (117) factor -> PLUS . var
    (132) objeto_aAcceso -> . ID PERIOD ID
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    ID              shift and go to state 117
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    objeto_aAcceso                 shift and go to state 115
    var                            shift and go to state 116
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 66

    (116) factor -> MINUS . objeto_aAcceso
    (118) factor -> MINUS . var
    (132) objeto_aAcceso -> . ID PERIOD ID
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    ID              shift and go to state 117
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    objeto_aAcceso                 shift and go to state 118
    var                            shift and go to state 119
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 67

    (110) termino -> factor .

    TIMES           reduce using rule 110 (termino -> factor .)
    DIVIDE          reduce using rule 110 (termino -> factor .)
    MODULO          reduce using rule 110 (termino -> factor .)
    RBRACKET        reduce using rule 110 (termino -> factor .)
    PLUS            reduce using rule 110 (termino -> factor .)
    MINUS           reduce using rule 110 (termino -> factor .)
    LT              reduce using rule 110 (termino -> factor .)
    LE              reduce using rule 110 (termino -> factor .)
    GT              reduce using rule 110 (termino -> factor .)
    GE              reduce using rule 110 (termino -> factor .)
    EQ              reduce using rule 110 (termino -> factor .)
    NE              reduce using rule 110 (termino -> factor .)
    AND             reduce using rule 110 (termino -> factor .)
    OR              reduce using rule 110 (termino -> factor .)
    ID              reduce using rule 110 (termino -> factor .)
    IF              reduce using rule 110 (termino -> factor .)
    READ            reduce using rule 110 (termino -> factor .)
    PRINT           reduce using rule 110 (termino -> factor .)
    WHILE           reduce using rule 110 (termino -> factor .)
    RBRACE          reduce using rule 110 (termino -> factor .)
    VAR             reduce using rule 110 (termino -> factor .)
    PUBLIC          reduce using rule 110 (termino -> factor .)
    PRIVATE         reduce using rule 110 (termino -> factor .)
    PROTECTED       reduce using rule 110 (termino -> factor .)
    RETURN          reduce using rule 110 (termino -> factor .)
    RPAREN          reduce using rule 110 (termino -> factor .)
    COMMA           reduce using rule 110 (termino -> factor .)


state 68

    (114) factor -> LPAREN . expresion RPAREN
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . expresion AND exp_bool
    (101) expresion -> . expresion OR exp_bool
    (102) expresion -> . expresion AND exp_bool rel_op exp_bool
    (103) expresion -> . expresion OR exp_bool rel_op exp_bool
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    ID              shift and go to state 62
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    expresion                      shift and go to state 120
    exp_bool                       shift and go to state 79
    exp                            shift and go to state 82
    termino                        shift and go to state 64
    factor                         shift and go to state 67
    objeto_aAcceso                 shift and go to state 69
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 69

    (120) factor -> objeto_aAcceso .

    TIMES           reduce using rule 120 (factor -> objeto_aAcceso .)
    DIVIDE          reduce using rule 120 (factor -> objeto_aAcceso .)
    MODULO          reduce using rule 120 (factor -> objeto_aAcceso .)
    RBRACKET        reduce using rule 120 (factor -> objeto_aAcceso .)
    PLUS            reduce using rule 120 (factor -> objeto_aAcceso .)
    MINUS           reduce using rule 120 (factor -> objeto_aAcceso .)
    LT              reduce using rule 120 (factor -> objeto_aAcceso .)
    LE              reduce using rule 120 (factor -> objeto_aAcceso .)
    GT              reduce using rule 120 (factor -> objeto_aAcceso .)
    GE              reduce using rule 120 (factor -> objeto_aAcceso .)
    EQ              reduce using rule 120 (factor -> objeto_aAcceso .)
    NE              reduce using rule 120 (factor -> objeto_aAcceso .)
    AND             reduce using rule 120 (factor -> objeto_aAcceso .)
    OR              reduce using rule 120 (factor -> objeto_aAcceso .)
    ID              reduce using rule 120 (factor -> objeto_aAcceso .)
    IF              reduce using rule 120 (factor -> objeto_aAcceso .)
    READ            reduce using rule 120 (factor -> objeto_aAcceso .)
    PRINT           reduce using rule 120 (factor -> objeto_aAcceso .)
    WHILE           reduce using rule 120 (factor -> objeto_aAcceso .)
    RBRACE          reduce using rule 120 (factor -> objeto_aAcceso .)
    VAR             reduce using rule 120 (factor -> objeto_aAcceso .)
    PUBLIC          reduce using rule 120 (factor -> objeto_aAcceso .)
    PRIVATE         reduce using rule 120 (factor -> objeto_aAcceso .)
    PROTECTED       reduce using rule 120 (factor -> objeto_aAcceso .)
    RETURN          reduce using rule 120 (factor -> objeto_aAcceso .)
    RPAREN          reduce using rule 120 (factor -> objeto_aAcceso .)
    COMMA           reduce using rule 120 (factor -> objeto_aAcceso .)


state 70

    (119) factor -> var .

    TIMES           reduce using rule 119 (factor -> var .)
    DIVIDE          reduce using rule 119 (factor -> var .)
    MODULO          reduce using rule 119 (factor -> var .)
    RBRACKET        reduce using rule 119 (factor -> var .)
    PLUS            reduce using rule 119 (factor -> var .)
    MINUS           reduce using rule 119 (factor -> var .)
    LT              reduce using rule 119 (factor -> var .)
    LE              reduce using rule 119 (factor -> var .)
    GT              reduce using rule 119 (factor -> var .)
    GE              reduce using rule 119 (factor -> var .)
    EQ              reduce using rule 119 (factor -> var .)
    NE              reduce using rule 119 (factor -> var .)
    AND             reduce using rule 119 (factor -> var .)
    OR              reduce using rule 119 (factor -> var .)
    ID              reduce using rule 119 (factor -> var .)
    IF              reduce using rule 119 (factor -> var .)
    READ            reduce using rule 119 (factor -> var .)
    PRINT           reduce using rule 119 (factor -> var .)
    WHILE           reduce using rule 119 (factor -> var .)
    RBRACE          reduce using rule 119 (factor -> var .)
    VAR             reduce using rule 119 (factor -> var .)
    PUBLIC          reduce using rule 119 (factor -> var .)
    PRIVATE         reduce using rule 119 (factor -> var .)
    PROTECTED       reduce using rule 119 (factor -> var .)
    RETURN          reduce using rule 119 (factor -> var .)
    RPAREN          reduce using rule 119 (factor -> var .)
    COMMA           reduce using rule 119 (factor -> var .)


state 71

    (122) var -> cint .

    TIMES           reduce using rule 122 (var -> cint .)
    DIVIDE          reduce using rule 122 (var -> cint .)
    MODULO          reduce using rule 122 (var -> cint .)
    RBRACKET        reduce using rule 122 (var -> cint .)
    PLUS            reduce using rule 122 (var -> cint .)
    MINUS           reduce using rule 122 (var -> cint .)
    LT              reduce using rule 122 (var -> cint .)
    LE              reduce using rule 122 (var -> cint .)
    GT              reduce using rule 122 (var -> cint .)
    GE              reduce using rule 122 (var -> cint .)
    EQ              reduce using rule 122 (var -> cint .)
    NE              reduce using rule 122 (var -> cint .)
    AND             reduce using rule 122 (var -> cint .)
    OR              reduce using rule 122 (var -> cint .)
    ID              reduce using rule 122 (var -> cint .)
    IF              reduce using rule 122 (var -> cint .)
    READ            reduce using rule 122 (var -> cint .)
    PRINT           reduce using rule 122 (var -> cint .)
    WHILE           reduce using rule 122 (var -> cint .)
    RBRACE          reduce using rule 122 (var -> cint .)
    VAR             reduce using rule 122 (var -> cint .)
    PUBLIC          reduce using rule 122 (var -> cint .)
    PRIVATE         reduce using rule 122 (var -> cint .)
    PROTECTED       reduce using rule 122 (var -> cint .)
    RETURN          reduce using rule 122 (var -> cint .)
    RPAREN          reduce using rule 122 (var -> cint .)
    COMMA           reduce using rule 122 (var -> cint .)


state 72

    (123) var -> cfloat .

    TIMES           reduce using rule 123 (var -> cfloat .)
    DIVIDE          reduce using rule 123 (var -> cfloat .)
    MODULO          reduce using rule 123 (var -> cfloat .)
    RBRACKET        reduce using rule 123 (var -> cfloat .)
    PLUS            reduce using rule 123 (var -> cfloat .)
    MINUS           reduce using rule 123 (var -> cfloat .)
    LT              reduce using rule 123 (var -> cfloat .)
    LE              reduce using rule 123 (var -> cfloat .)
    GT              reduce using rule 123 (var -> cfloat .)
    GE              reduce using rule 123 (var -> cfloat .)
    EQ              reduce using rule 123 (var -> cfloat .)
    NE              reduce using rule 123 (var -> cfloat .)
    AND             reduce using rule 123 (var -> cfloat .)
    OR              reduce using rule 123 (var -> cfloat .)
    ID              reduce using rule 123 (var -> cfloat .)
    IF              reduce using rule 123 (var -> cfloat .)
    READ            reduce using rule 123 (var -> cfloat .)
    PRINT           reduce using rule 123 (var -> cfloat .)
    WHILE           reduce using rule 123 (var -> cfloat .)
    RBRACE          reduce using rule 123 (var -> cfloat .)
    VAR             reduce using rule 123 (var -> cfloat .)
    PUBLIC          reduce using rule 123 (var -> cfloat .)
    PRIVATE         reduce using rule 123 (var -> cfloat .)
    PROTECTED       reduce using rule 123 (var -> cfloat .)
    RETURN          reduce using rule 123 (var -> cfloat .)
    RPAREN          reduce using rule 123 (var -> cfloat .)
    COMMA           reduce using rule 123 (var -> cfloat .)


state 73

    (124) cint -> CINT .

    TIMES           reduce using rule 124 (cint -> CINT .)
    DIVIDE          reduce using rule 124 (cint -> CINT .)
    MODULO          reduce using rule 124 (cint -> CINT .)
    RBRACKET        reduce using rule 124 (cint -> CINT .)
    PLUS            reduce using rule 124 (cint -> CINT .)
    MINUS           reduce using rule 124 (cint -> CINT .)
    LT              reduce using rule 124 (cint -> CINT .)
    LE              reduce using rule 124 (cint -> CINT .)
    GT              reduce using rule 124 (cint -> CINT .)
    GE              reduce using rule 124 (cint -> CINT .)
    EQ              reduce using rule 124 (cint -> CINT .)
    NE              reduce using rule 124 (cint -> CINT .)
    AND             reduce using rule 124 (cint -> CINT .)
    OR              reduce using rule 124 (cint -> CINT .)
    ID              reduce using rule 124 (cint -> CINT .)
    IF              reduce using rule 124 (cint -> CINT .)
    READ            reduce using rule 124 (cint -> CINT .)
    PRINT           reduce using rule 124 (cint -> CINT .)
    WHILE           reduce using rule 124 (cint -> CINT .)
    RBRACE          reduce using rule 124 (cint -> CINT .)
    VAR             reduce using rule 124 (cint -> CINT .)
    PUBLIC          reduce using rule 124 (cint -> CINT .)
    PRIVATE         reduce using rule 124 (cint -> CINT .)
    PROTECTED       reduce using rule 124 (cint -> CINT .)
    RETURN          reduce using rule 124 (cint -> CINT .)
    RPAREN          reduce using rule 124 (cint -> CINT .)
    COMMA           reduce using rule 124 (cint -> CINT .)


state 74

    (125) cfloat -> NUMBER .

    TIMES           reduce using rule 125 (cfloat -> NUMBER .)
    DIVIDE          reduce using rule 125 (cfloat -> NUMBER .)
    MODULO          reduce using rule 125 (cfloat -> NUMBER .)
    RBRACKET        reduce using rule 125 (cfloat -> NUMBER .)
    PLUS            reduce using rule 125 (cfloat -> NUMBER .)
    MINUS           reduce using rule 125 (cfloat -> NUMBER .)
    LT              reduce using rule 125 (cfloat -> NUMBER .)
    LE              reduce using rule 125 (cfloat -> NUMBER .)
    GT              reduce using rule 125 (cfloat -> NUMBER .)
    GE              reduce using rule 125 (cfloat -> NUMBER .)
    EQ              reduce using rule 125 (cfloat -> NUMBER .)
    NE              reduce using rule 125 (cfloat -> NUMBER .)
    AND             reduce using rule 125 (cfloat -> NUMBER .)
    OR              reduce using rule 125 (cfloat -> NUMBER .)
    ID              reduce using rule 125 (cfloat -> NUMBER .)
    IF              reduce using rule 125 (cfloat -> NUMBER .)
    READ            reduce using rule 125 (cfloat -> NUMBER .)
    PRINT           reduce using rule 125 (cfloat -> NUMBER .)
    WHILE           reduce using rule 125 (cfloat -> NUMBER .)
    RBRACE          reduce using rule 125 (cfloat -> NUMBER .)
    VAR             reduce using rule 125 (cfloat -> NUMBER .)
    PUBLIC          reduce using rule 125 (cfloat -> NUMBER .)
    PRIVATE         reduce using rule 125 (cfloat -> NUMBER .)
    PROTECTED       reduce using rule 125 (cfloat -> NUMBER .)
    RETURN          reduce using rule 125 (cfloat -> NUMBER .)
    RPAREN          reduce using rule 125 (cfloat -> NUMBER .)
    COMMA           reduce using rule 125 (cfloat -> NUMBER .)


state 75

    (44) llamada_func -> ID . LPAREN aux3 RPAREN
    (97) objeto_metodo -> ID . PERIOD llamada_func
    (121) var -> ID .
    (132) objeto_aAcceso -> ID . PERIOD ID

    LPAREN          shift and go to state 47
    PERIOD          shift and go to state 48
    TIMES           reduce using rule 121 (var -> ID .)
    DIVIDE          reduce using rule 121 (var -> ID .)
    MODULO          reduce using rule 121 (var -> ID .)
    PLUS            reduce using rule 121 (var -> ID .)
    MINUS           reduce using rule 121 (var -> ID .)
    LT              reduce using rule 121 (var -> ID .)
    LE              reduce using rule 121 (var -> ID .)
    GT              reduce using rule 121 (var -> ID .)
    GE              reduce using rule 121 (var -> ID .)
    EQ              reduce using rule 121 (var -> ID .)
    NE              reduce using rule 121 (var -> ID .)
    AND             reduce using rule 121 (var -> ID .)
    OR              reduce using rule 121 (var -> ID .)
    ID              reduce using rule 121 (var -> ID .)
    IF              reduce using rule 121 (var -> ID .)
    READ            reduce using rule 121 (var -> ID .)
    PRINT           reduce using rule 121 (var -> ID .)
    WHILE           reduce using rule 121 (var -> ID .)
    RBRACE          reduce using rule 121 (var -> ID .)
    VAR             reduce using rule 121 (var -> ID .)
    PUBLIC          reduce using rule 121 (var -> ID .)
    PRIVATE         reduce using rule 121 (var -> ID .)
    PROTECTED       reduce using rule 121 (var -> ID .)
    RETURN          reduce using rule 121 (var -> ID .)
    RPAREN          reduce using rule 121 (var -> ID .)
    COMMA           reduce using rule 121 (var -> ID .)


state 76

    (84) asignacion -> ID EQUALS expresion .
    (100) expresion -> expresion . AND exp_bool
    (101) expresion -> expresion . OR exp_bool
    (102) expresion -> expresion . AND exp_bool rel_op exp_bool
    (103) expresion -> expresion . OR exp_bool rel_op exp_bool

    ID              reduce using rule 84 (asignacion -> ID EQUALS expresion .)
    IF              reduce using rule 84 (asignacion -> ID EQUALS expresion .)
    READ            reduce using rule 84 (asignacion -> ID EQUALS expresion .)
    PRINT           reduce using rule 84 (asignacion -> ID EQUALS expresion .)
    WHILE           reduce using rule 84 (asignacion -> ID EQUALS expresion .)
    RBRACE          reduce using rule 84 (asignacion -> ID EQUALS expresion .)
    VAR             reduce using rule 84 (asignacion -> ID EQUALS expresion .)
    PUBLIC          reduce using rule 84 (asignacion -> ID EQUALS expresion .)
    PRIVATE         reduce using rule 84 (asignacion -> ID EQUALS expresion .)
    PROTECTED       reduce using rule 84 (asignacion -> ID EQUALS expresion .)
    RETURN          reduce using rule 84 (asignacion -> ID EQUALS expresion .)
    AND             shift and go to state 121
    OR              shift and go to state 122


state 77

    (90) asignacion -> ID EQUALS llamada_func .

    ID              reduce using rule 90 (asignacion -> ID EQUALS llamada_func .)
    IF              reduce using rule 90 (asignacion -> ID EQUALS llamada_func .)
    READ            reduce using rule 90 (asignacion -> ID EQUALS llamada_func .)
    PRINT           reduce using rule 90 (asignacion -> ID EQUALS llamada_func .)
    WHILE           reduce using rule 90 (asignacion -> ID EQUALS llamada_func .)
    RBRACE          reduce using rule 90 (asignacion -> ID EQUALS llamada_func .)
    VAR             reduce using rule 90 (asignacion -> ID EQUALS llamada_func .)
    PUBLIC          reduce using rule 90 (asignacion -> ID EQUALS llamada_func .)
    PRIVATE         reduce using rule 90 (asignacion -> ID EQUALS llamada_func .)
    PROTECTED       reduce using rule 90 (asignacion -> ID EQUALS llamada_func .)
    RETURN          reduce using rule 90 (asignacion -> ID EQUALS llamada_func .)


state 78

    (96) asignacion -> ID EQUALS objeto_metodo .

    ID              reduce using rule 96 (asignacion -> ID EQUALS objeto_metodo .)
    IF              reduce using rule 96 (asignacion -> ID EQUALS objeto_metodo .)
    READ            reduce using rule 96 (asignacion -> ID EQUALS objeto_metodo .)
    PRINT           reduce using rule 96 (asignacion -> ID EQUALS objeto_metodo .)
    WHILE           reduce using rule 96 (asignacion -> ID EQUALS objeto_metodo .)
    RBRACE          reduce using rule 96 (asignacion -> ID EQUALS objeto_metodo .)
    VAR             reduce using rule 96 (asignacion -> ID EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 96 (asignacion -> ID EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 96 (asignacion -> ID EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 96 (asignacion -> ID EQUALS objeto_metodo .)
    RETURN          reduce using rule 96 (asignacion -> ID EQUALS objeto_metodo .)


state 79

    (98) expresion -> exp_bool .
    (99) expresion -> exp_bool . rel_op exp_bool
    (126) rel_op -> . LT
    (127) rel_op -> . LE
    (128) rel_op -> . GT
    (129) rel_op -> . GE
    (130) rel_op -> . EQ
    (131) rel_op -> . NE

    AND             reduce using rule 98 (expresion -> exp_bool .)
    OR              reduce using rule 98 (expresion -> exp_bool .)
    ID              reduce using rule 98 (expresion -> exp_bool .)
    IF              reduce using rule 98 (expresion -> exp_bool .)
    READ            reduce using rule 98 (expresion -> exp_bool .)
    PRINT           reduce using rule 98 (expresion -> exp_bool .)
    WHILE           reduce using rule 98 (expresion -> exp_bool .)
    RBRACE          reduce using rule 98 (expresion -> exp_bool .)
    VAR             reduce using rule 98 (expresion -> exp_bool .)
    PUBLIC          reduce using rule 98 (expresion -> exp_bool .)
    PRIVATE         reduce using rule 98 (expresion -> exp_bool .)
    PROTECTED       reduce using rule 98 (expresion -> exp_bool .)
    RETURN          reduce using rule 98 (expresion -> exp_bool .)
    RPAREN          reduce using rule 98 (expresion -> exp_bool .)
    COMMA           reduce using rule 98 (expresion -> exp_bool .)
    LT              shift and go to state 124
    LE              shift and go to state 125
    GT              shift and go to state 126
    GE              shift and go to state 127
    EQ              shift and go to state 128
    NE              shift and go to state 129

    rel_op                         shift and go to state 123

state 80

    (104) exp_bool -> TRUE .

    LT              reduce using rule 104 (exp_bool -> TRUE .)
    LE              reduce using rule 104 (exp_bool -> TRUE .)
    GT              reduce using rule 104 (exp_bool -> TRUE .)
    GE              reduce using rule 104 (exp_bool -> TRUE .)
    EQ              reduce using rule 104 (exp_bool -> TRUE .)
    NE              reduce using rule 104 (exp_bool -> TRUE .)
    AND             reduce using rule 104 (exp_bool -> TRUE .)
    OR              reduce using rule 104 (exp_bool -> TRUE .)
    ID              reduce using rule 104 (exp_bool -> TRUE .)
    IF              reduce using rule 104 (exp_bool -> TRUE .)
    READ            reduce using rule 104 (exp_bool -> TRUE .)
    PRINT           reduce using rule 104 (exp_bool -> TRUE .)
    WHILE           reduce using rule 104 (exp_bool -> TRUE .)
    RBRACE          reduce using rule 104 (exp_bool -> TRUE .)
    VAR             reduce using rule 104 (exp_bool -> TRUE .)
    PUBLIC          reduce using rule 104 (exp_bool -> TRUE .)
    PRIVATE         reduce using rule 104 (exp_bool -> TRUE .)
    PROTECTED       reduce using rule 104 (exp_bool -> TRUE .)
    RETURN          reduce using rule 104 (exp_bool -> TRUE .)
    RPAREN          reduce using rule 104 (exp_bool -> TRUE .)
    COMMA           reduce using rule 104 (exp_bool -> TRUE .)


state 81

    (105) exp_bool -> FALSE .

    LT              reduce using rule 105 (exp_bool -> FALSE .)
    LE              reduce using rule 105 (exp_bool -> FALSE .)
    GT              reduce using rule 105 (exp_bool -> FALSE .)
    GE              reduce using rule 105 (exp_bool -> FALSE .)
    EQ              reduce using rule 105 (exp_bool -> FALSE .)
    NE              reduce using rule 105 (exp_bool -> FALSE .)
    AND             reduce using rule 105 (exp_bool -> FALSE .)
    OR              reduce using rule 105 (exp_bool -> FALSE .)
    ID              reduce using rule 105 (exp_bool -> FALSE .)
    IF              reduce using rule 105 (exp_bool -> FALSE .)
    READ            reduce using rule 105 (exp_bool -> FALSE .)
    PRINT           reduce using rule 105 (exp_bool -> FALSE .)
    WHILE           reduce using rule 105 (exp_bool -> FALSE .)
    RBRACE          reduce using rule 105 (exp_bool -> FALSE .)
    VAR             reduce using rule 105 (exp_bool -> FALSE .)
    PUBLIC          reduce using rule 105 (exp_bool -> FALSE .)
    PRIVATE         reduce using rule 105 (exp_bool -> FALSE .)
    PROTECTED       reduce using rule 105 (exp_bool -> FALSE .)
    RETURN          reduce using rule 105 (exp_bool -> FALSE .)
    RPAREN          reduce using rule 105 (exp_bool -> FALSE .)
    COMMA           reduce using rule 105 (exp_bool -> FALSE .)


state 82

    (106) exp_bool -> exp .
    (108) exp -> exp . PLUS termino
    (109) exp -> exp . MINUS termino

    LT              reduce using rule 106 (exp_bool -> exp .)
    LE              reduce using rule 106 (exp_bool -> exp .)
    GT              reduce using rule 106 (exp_bool -> exp .)
    GE              reduce using rule 106 (exp_bool -> exp .)
    EQ              reduce using rule 106 (exp_bool -> exp .)
    NE              reduce using rule 106 (exp_bool -> exp .)
    AND             reduce using rule 106 (exp_bool -> exp .)
    OR              reduce using rule 106 (exp_bool -> exp .)
    ID              reduce using rule 106 (exp_bool -> exp .)
    IF              reduce using rule 106 (exp_bool -> exp .)
    READ            reduce using rule 106 (exp_bool -> exp .)
    PRINT           reduce using rule 106 (exp_bool -> exp .)
    WHILE           reduce using rule 106 (exp_bool -> exp .)
    RBRACE          reduce using rule 106 (exp_bool -> exp .)
    VAR             reduce using rule 106 (exp_bool -> exp .)
    PUBLIC          reduce using rule 106 (exp_bool -> exp .)
    PRIVATE         reduce using rule 106 (exp_bool -> exp .)
    PROTECTED       reduce using rule 106 (exp_bool -> exp .)
    RETURN          reduce using rule 106 (exp_bool -> exp .)
    RPAREN          reduce using rule 106 (exp_bool -> exp .)
    COMMA           reduce using rule 106 (exp_bool -> exp .)
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111


state 83

    (44) llamada_func -> ID LPAREN aux3 . RPAREN
    (46) aux3 -> aux3 . COMMA exp

    RPAREN          shift and go to state 130
    COMMA           shift and go to state 131


state 84

    (45) aux3 -> exp .
    (108) exp -> exp . PLUS termino
    (109) exp -> exp . MINUS termino

    RPAREN          reduce using rule 45 (aux3 -> exp .)
    COMMA           reduce using rule 45 (aux3 -> exp .)
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111


state 85

    (132) objeto_aAcceso -> ID PERIOD ID .
    (44) llamada_func -> ID . LPAREN aux3 RPAREN

    LBRACKET        reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    EQUALS          reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    TIMES           reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    DIVIDE          reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    MODULO          reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    PLUS            reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    MINUS           reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    LT              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    LE              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    GT              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    GE              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    EQ              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    NE              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    AND             reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    OR              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    ID              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    IF              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    READ            reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    PRINT           reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    WHILE           reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACE          reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    VAR             reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    PUBLIC          reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    PRIVATE         reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    PROTECTED       reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    RETURN          reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    RPAREN          reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    COMMA           reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    LPAREN          shift and go to state 47


state 86

    (97) objeto_metodo -> ID PERIOD llamada_func .

    ID              reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    IF              reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    READ            reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    PRINT           reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    WHILE           reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    RBRACE          reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    VAR             reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    PUBLIC          reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    PRIVATE         reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    PROTECTED       reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    RETURN          reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    RPAREN          reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    COMMA           reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)


state 87

    (65) aux -> aux aux .
    (65) aux -> aux . aux
    (65) aux -> . aux aux
    (66) aux -> . ID COLON tipo_simple
    (67) aux -> . ID COLON tipo_compuesto
    (68) aux -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (69) aux -> . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (70) aux -> . ID LBRACKET cint RBRACKET COLON tipo_simple
    (71) aux -> . ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (72) aux -> . ID aux2 COLON tipo_simple
    (73) aux -> . ID aux2 COLON tipo_compuesto

  ! shift/reduce conflict for ID resolved as shift
    VAR             reduce using rule 65 (aux -> aux aux .)
    RBRACE          reduce using rule 65 (aux -> aux aux .)
    PUBLIC          reduce using rule 65 (aux -> aux aux .)
    PRIVATE         reduce using rule 65 (aux -> aux aux .)
    PROTECTED       reduce using rule 65 (aux -> aux aux .)
    IF              reduce using rule 65 (aux -> aux aux .)
    READ            reduce using rule 65 (aux -> aux aux .)
    PRINT           reduce using rule 65 (aux -> aux aux .)
    WHILE           reduce using rule 65 (aux -> aux aux .)
    RETURN          reduce using rule 65 (aux -> aux aux .)
    ID              shift and go to state 50

  ! ID              [ reduce using rule 65 (aux -> aux aux .) ]

    aux                            shift and go to state 87

state 88

    (66) aux -> ID COLON . tipo_simple
    (67) aux -> ID COLON . tipo_compuesto
    (76) tipo_simple -> . INT
    (77) tipo_simple -> . FLOAT
    (78) tipo_compuesto -> . ID

    INT             shift and go to state 135
    FLOAT           shift and go to state 136
    ID              shift and go to state 132

    tipo_simple                    shift and go to state 133
    tipo_compuesto                 shift and go to state 134

state 89

    (68) aux -> ID LBRACKET . cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (69) aux -> ID LBRACKET . cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (70) aux -> ID LBRACKET . cint RBRACKET COLON tipo_simple
    (71) aux -> ID LBRACKET . cint RBRACKET COLON tipo_compuesto
    (124) cint -> . CINT

    CINT            shift and go to state 73

    cint                           shift and go to state 137

state 90

    (72) aux -> ID aux2 . COLON tipo_simple
    (73) aux -> ID aux2 . COLON tipo_compuesto
    (74) aux2 -> aux2 . aux2
    (74) aux2 -> . aux2 aux2
    (75) aux2 -> . COMMA ID

    COLON           shift and go to state 139
    COMMA           shift and go to state 91

    aux2                           shift and go to state 138

state 91

    (75) aux2 -> COMMA . ID

    ID              shift and go to state 140


state 92

    (11) constructor -> PUBLIC ID LPAREN . param RPAREN contexto_const
    (57) param -> . aux4
    (58) aux4 -> . tipo_simple ID
    (59) aux4 -> . aux4 COMMA tipo_simple ID
    (76) tipo_simple -> . INT
    (77) tipo_simple -> . FLOAT

    INT             shift and go to state 135
    FLOAT           shift and go to state 136

    param                          shift and go to state 141
    aux4                           shift and go to state 142
    tipo_simple                    shift and go to state 143

state 93

    (79) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (80) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET EQUALS expresion
    (85) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET EQUALS llamada_func
    (91) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (92) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (108) exp -> exp . PLUS termino
    (109) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 144
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111


state 94

    (81) asignacion -> objeto_aAcceso EQUALS expresion .
    (100) expresion -> expresion . AND exp_bool
    (101) expresion -> expresion . OR exp_bool
    (102) expresion -> expresion . AND exp_bool rel_op exp_bool
    (103) expresion -> expresion . OR exp_bool rel_op exp_bool

    ID              reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS expresion .)
    IF              reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS expresion .)
    READ            reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PRINT           reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS expresion .)
    WHILE           reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS expresion .)
    RBRACE          reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS expresion .)
    VAR             reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PUBLIC          reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PRIVATE         reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PROTECTED       reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS expresion .)
    RETURN          reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS expresion .)
    AND             shift and go to state 121
    OR              shift and go to state 122


state 95

    (87) asignacion -> objeto_aAcceso EQUALS llamada_func .

    ID              reduce using rule 87 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    IF              reduce using rule 87 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    READ            reduce using rule 87 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PRINT           reduce using rule 87 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    WHILE           reduce using rule 87 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    RBRACE          reduce using rule 87 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    VAR             reduce using rule 87 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PUBLIC          reduce using rule 87 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PRIVATE         reduce using rule 87 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PROTECTED       reduce using rule 87 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    RETURN          reduce using rule 87 (asignacion -> objeto_aAcceso EQUALS llamada_func .)


state 96

    (93) asignacion -> objeto_aAcceso EQUALS objeto_metodo .

    ID              reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    IF              reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    READ            reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PRINT           reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    WHILE           reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    RBRACE          reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    VAR             reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    RETURN          reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)


state 97

    (30) condicion -> IF LPAREN expresion . RPAREN bloque
    (31) condicion -> IF LPAREN expresion . RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (100) expresion -> expresion . AND exp_bool
    (101) expresion -> expresion . OR exp_bool
    (102) expresion -> expresion . AND exp_bool rel_op exp_bool
    (103) expresion -> expresion . OR exp_bool rel_op exp_bool

    RPAREN          shift and go to state 145
    AND             shift and go to state 121
    OR              shift and go to state 122


state 98

    (33) lectura -> READ LPAREN ID . RPAREN
    (132) objeto_aAcceso -> ID . PERIOD ID

    RPAREN          shift and go to state 146
    PERIOD          shift and go to state 108


state 99

    (34) lectura -> READ LPAREN objeto_aAcceso . RPAREN

    RPAREN          shift and go to state 147


state 100

    (35) escritura -> PRINT LPAREN aux5 . RPAREN
    (40) aux5 -> aux5 . COMMA expresion
    (41) aux5 -> aux5 . COMMA llamada_func
    (42) aux5 -> aux5 . COMMA objeto_metodo
    (43) aux5 -> aux5 . COMMA CSTRING

    RPAREN          shift and go to state 148
    COMMA           shift and go to state 149


state 101

    (36) aux5 -> expresion .
    (100) expresion -> expresion . AND exp_bool
    (101) expresion -> expresion . OR exp_bool
    (102) expresion -> expresion . AND exp_bool rel_op exp_bool
    (103) expresion -> expresion . OR exp_bool rel_op exp_bool

    RPAREN          reduce using rule 36 (aux5 -> expresion .)
    COMMA           reduce using rule 36 (aux5 -> expresion .)
    AND             shift and go to state 121
    OR              shift and go to state 122


state 102

    (37) aux5 -> llamada_func .

    RPAREN          reduce using rule 37 (aux5 -> llamada_func .)
    COMMA           reduce using rule 37 (aux5 -> llamada_func .)


state 103

    (38) aux5 -> objeto_metodo .

    RPAREN          reduce using rule 38 (aux5 -> objeto_metodo .)
    COMMA           reduce using rule 38 (aux5 -> objeto_metodo .)


state 104

    (39) aux5 -> CSTRING .

    RPAREN          reduce using rule 39 (aux5 -> CSTRING .)
    COMMA           reduce using rule 39 (aux5 -> CSTRING .)


state 105

    (29) ciclo -> WHILE LPAREN expresion . RPAREN bloque
    (100) expresion -> expresion . AND exp_bool
    (101) expresion -> expresion . OR exp_bool
    (102) expresion -> expresion . AND exp_bool rel_op exp_bool
    (103) expresion -> expresion . OR exp_bool rel_op exp_bool

    RPAREN          shift and go to state 150
    AND             shift and go to state 121
    OR              shift and go to state 122


state 106

    (4) class -> scope CLASS ID COLON ID . context
    (5) context -> . LBRACE aux6 RBRACE

    LBRACE          shift and go to state 7

    context                        shift and go to state 151

state 107

    (47) funcion -> scope DEF ID LPAREN . param RPAREN contexto_func
    (57) param -> . aux4
    (58) aux4 -> . tipo_simple ID
    (59) aux4 -> . aux4 COMMA tipo_simple ID
    (76) tipo_simple -> . INT
    (77) tipo_simple -> . FLOAT

    INT             shift and go to state 135
    FLOAT           shift and go to state 136

    param                          shift and go to state 152
    aux4                           shift and go to state 142
    tipo_simple                    shift and go to state 143

state 108

    (132) objeto_aAcceso -> ID PERIOD . ID

    ID              shift and go to state 153


state 109

    (82) asignacion -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> ID LBRACKET exp RBRACKET . EQUALS expresion
    (88) asignacion -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> ID LBRACKET exp RBRACKET . EQUALS llamada_func
    (94) asignacion -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS objeto_metodo
    (95) asignacion -> ID LBRACKET exp RBRACKET . EQUALS objeto_metodo

    LBRACKET        shift and go to state 154
    EQUALS          shift and go to state 155


state 110

    (108) exp -> exp PLUS . termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    ID              shift and go to state 62
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    termino                        shift and go to state 156
    factor                         shift and go to state 67
    objeto_aAcceso                 shift and go to state 69
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 111

    (109) exp -> exp MINUS . termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    ID              shift and go to state 62
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    termino                        shift and go to state 157
    factor                         shift and go to state 67
    objeto_aAcceso                 shift and go to state 69
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 112

    (111) termino -> termino TIMES . factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    ID              shift and go to state 62
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    factor                         shift and go to state 158
    objeto_aAcceso                 shift and go to state 69
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 113

    (112) termino -> termino DIVIDE . factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    ID              shift and go to state 62
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    factor                         shift and go to state 159
    objeto_aAcceso                 shift and go to state 69
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 114

    (113) termino -> termino MODULO . factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    ID              shift and go to state 62
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    factor                         shift and go to state 160
    objeto_aAcceso                 shift and go to state 69
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 115

    (115) factor -> PLUS objeto_aAcceso .

    TIMES           reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    DIVIDE          reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    MODULO          reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    RBRACKET        reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    PLUS            reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    MINUS           reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    LT              reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    LE              reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    GT              reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    GE              reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    EQ              reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    NE              reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    AND             reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    OR              reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    ID              reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    IF              reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    READ            reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    PRINT           reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    WHILE           reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    RBRACE          reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    VAR             reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    PUBLIC          reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    PRIVATE         reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    PROTECTED       reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    RETURN          reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    RPAREN          reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    COMMA           reduce using rule 115 (factor -> PLUS objeto_aAcceso .)


state 116

    (117) factor -> PLUS var .

    TIMES           reduce using rule 117 (factor -> PLUS var .)
    DIVIDE          reduce using rule 117 (factor -> PLUS var .)
    MODULO          reduce using rule 117 (factor -> PLUS var .)
    RBRACKET        reduce using rule 117 (factor -> PLUS var .)
    PLUS            reduce using rule 117 (factor -> PLUS var .)
    MINUS           reduce using rule 117 (factor -> PLUS var .)
    LT              reduce using rule 117 (factor -> PLUS var .)
    LE              reduce using rule 117 (factor -> PLUS var .)
    GT              reduce using rule 117 (factor -> PLUS var .)
    GE              reduce using rule 117 (factor -> PLUS var .)
    EQ              reduce using rule 117 (factor -> PLUS var .)
    NE              reduce using rule 117 (factor -> PLUS var .)
    AND             reduce using rule 117 (factor -> PLUS var .)
    OR              reduce using rule 117 (factor -> PLUS var .)
    ID              reduce using rule 117 (factor -> PLUS var .)
    IF              reduce using rule 117 (factor -> PLUS var .)
    READ            reduce using rule 117 (factor -> PLUS var .)
    PRINT           reduce using rule 117 (factor -> PLUS var .)
    WHILE           reduce using rule 117 (factor -> PLUS var .)
    RBRACE          reduce using rule 117 (factor -> PLUS var .)
    VAR             reduce using rule 117 (factor -> PLUS var .)
    PUBLIC          reduce using rule 117 (factor -> PLUS var .)
    PRIVATE         reduce using rule 117 (factor -> PLUS var .)
    PROTECTED       reduce using rule 117 (factor -> PLUS var .)
    RETURN          reduce using rule 117 (factor -> PLUS var .)
    RPAREN          reduce using rule 117 (factor -> PLUS var .)
    COMMA           reduce using rule 117 (factor -> PLUS var .)


state 117

    (132) objeto_aAcceso -> ID . PERIOD ID
    (121) var -> ID .

    PERIOD          shift and go to state 108
    TIMES           reduce using rule 121 (var -> ID .)
    DIVIDE          reduce using rule 121 (var -> ID .)
    MODULO          reduce using rule 121 (var -> ID .)
    RBRACKET        reduce using rule 121 (var -> ID .)
    PLUS            reduce using rule 121 (var -> ID .)
    MINUS           reduce using rule 121 (var -> ID .)
    LT              reduce using rule 121 (var -> ID .)
    LE              reduce using rule 121 (var -> ID .)
    GT              reduce using rule 121 (var -> ID .)
    GE              reduce using rule 121 (var -> ID .)
    EQ              reduce using rule 121 (var -> ID .)
    NE              reduce using rule 121 (var -> ID .)
    AND             reduce using rule 121 (var -> ID .)
    OR              reduce using rule 121 (var -> ID .)
    ID              reduce using rule 121 (var -> ID .)
    IF              reduce using rule 121 (var -> ID .)
    READ            reduce using rule 121 (var -> ID .)
    PRINT           reduce using rule 121 (var -> ID .)
    WHILE           reduce using rule 121 (var -> ID .)
    RBRACE          reduce using rule 121 (var -> ID .)
    VAR             reduce using rule 121 (var -> ID .)
    PUBLIC          reduce using rule 121 (var -> ID .)
    PRIVATE         reduce using rule 121 (var -> ID .)
    PROTECTED       reduce using rule 121 (var -> ID .)
    RETURN          reduce using rule 121 (var -> ID .)
    RPAREN          reduce using rule 121 (var -> ID .)
    COMMA           reduce using rule 121 (var -> ID .)


state 118

    (116) factor -> MINUS objeto_aAcceso .

    TIMES           reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    DIVIDE          reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    MODULO          reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    RBRACKET        reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    PLUS            reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    MINUS           reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    LT              reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    LE              reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    GT              reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    GE              reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    EQ              reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    NE              reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    AND             reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    OR              reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    ID              reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    IF              reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    READ            reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    PRINT           reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    WHILE           reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    RBRACE          reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    VAR             reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    PUBLIC          reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    PRIVATE         reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    PROTECTED       reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    RETURN          reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    RPAREN          reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    COMMA           reduce using rule 116 (factor -> MINUS objeto_aAcceso .)


state 119

    (118) factor -> MINUS var .

    TIMES           reduce using rule 118 (factor -> MINUS var .)
    DIVIDE          reduce using rule 118 (factor -> MINUS var .)
    MODULO          reduce using rule 118 (factor -> MINUS var .)
    RBRACKET        reduce using rule 118 (factor -> MINUS var .)
    PLUS            reduce using rule 118 (factor -> MINUS var .)
    MINUS           reduce using rule 118 (factor -> MINUS var .)
    LT              reduce using rule 118 (factor -> MINUS var .)
    LE              reduce using rule 118 (factor -> MINUS var .)
    GT              reduce using rule 118 (factor -> MINUS var .)
    GE              reduce using rule 118 (factor -> MINUS var .)
    EQ              reduce using rule 118 (factor -> MINUS var .)
    NE              reduce using rule 118 (factor -> MINUS var .)
    AND             reduce using rule 118 (factor -> MINUS var .)
    OR              reduce using rule 118 (factor -> MINUS var .)
    ID              reduce using rule 118 (factor -> MINUS var .)
    IF              reduce using rule 118 (factor -> MINUS var .)
    READ            reduce using rule 118 (factor -> MINUS var .)
    PRINT           reduce using rule 118 (factor -> MINUS var .)
    WHILE           reduce using rule 118 (factor -> MINUS var .)
    RBRACE          reduce using rule 118 (factor -> MINUS var .)
    VAR             reduce using rule 118 (factor -> MINUS var .)
    PUBLIC          reduce using rule 118 (factor -> MINUS var .)
    PRIVATE         reduce using rule 118 (factor -> MINUS var .)
    PROTECTED       reduce using rule 118 (factor -> MINUS var .)
    RETURN          reduce using rule 118 (factor -> MINUS var .)
    RPAREN          reduce using rule 118 (factor -> MINUS var .)
    COMMA           reduce using rule 118 (factor -> MINUS var .)


state 120

    (114) factor -> LPAREN expresion . RPAREN
    (100) expresion -> expresion . AND exp_bool
    (101) expresion -> expresion . OR exp_bool
    (102) expresion -> expresion . AND exp_bool rel_op exp_bool
    (103) expresion -> expresion . OR exp_bool rel_op exp_bool

    RPAREN          shift and go to state 161
    AND             shift and go to state 121
    OR              shift and go to state 122


state 121

    (100) expresion -> expresion AND . exp_bool
    (102) expresion -> expresion AND . exp_bool rel_op exp_bool
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    ID              shift and go to state 62
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    exp_bool                       shift and go to state 162
    exp                            shift and go to state 82
    termino                        shift and go to state 64
    factor                         shift and go to state 67
    objeto_aAcceso                 shift and go to state 69
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 122

    (101) expresion -> expresion OR . exp_bool
    (103) expresion -> expresion OR . exp_bool rel_op exp_bool
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    ID              shift and go to state 62
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    exp_bool                       shift and go to state 163
    exp                            shift and go to state 82
    termino                        shift and go to state 64
    factor                         shift and go to state 67
    objeto_aAcceso                 shift and go to state 69
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 123

    (99) expresion -> exp_bool rel_op . exp_bool
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    ID              shift and go to state 62
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    exp_bool                       shift and go to state 164
    exp                            shift and go to state 82
    termino                        shift and go to state 64
    factor                         shift and go to state 67
    objeto_aAcceso                 shift and go to state 69
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 124

    (126) rel_op -> LT .

    TRUE            reduce using rule 126 (rel_op -> LT .)
    FALSE           reduce using rule 126 (rel_op -> LT .)
    LPAREN          reduce using rule 126 (rel_op -> LT .)
    PLUS            reduce using rule 126 (rel_op -> LT .)
    MINUS           reduce using rule 126 (rel_op -> LT .)
    ID              reduce using rule 126 (rel_op -> LT .)
    CINT            reduce using rule 126 (rel_op -> LT .)
    NUMBER          reduce using rule 126 (rel_op -> LT .)


state 125

    (127) rel_op -> LE .

    TRUE            reduce using rule 127 (rel_op -> LE .)
    FALSE           reduce using rule 127 (rel_op -> LE .)
    LPAREN          reduce using rule 127 (rel_op -> LE .)
    PLUS            reduce using rule 127 (rel_op -> LE .)
    MINUS           reduce using rule 127 (rel_op -> LE .)
    ID              reduce using rule 127 (rel_op -> LE .)
    CINT            reduce using rule 127 (rel_op -> LE .)
    NUMBER          reduce using rule 127 (rel_op -> LE .)


state 126

    (128) rel_op -> GT .

    TRUE            reduce using rule 128 (rel_op -> GT .)
    FALSE           reduce using rule 128 (rel_op -> GT .)
    LPAREN          reduce using rule 128 (rel_op -> GT .)
    PLUS            reduce using rule 128 (rel_op -> GT .)
    MINUS           reduce using rule 128 (rel_op -> GT .)
    ID              reduce using rule 128 (rel_op -> GT .)
    CINT            reduce using rule 128 (rel_op -> GT .)
    NUMBER          reduce using rule 128 (rel_op -> GT .)


state 127

    (129) rel_op -> GE .

    TRUE            reduce using rule 129 (rel_op -> GE .)
    FALSE           reduce using rule 129 (rel_op -> GE .)
    LPAREN          reduce using rule 129 (rel_op -> GE .)
    PLUS            reduce using rule 129 (rel_op -> GE .)
    MINUS           reduce using rule 129 (rel_op -> GE .)
    ID              reduce using rule 129 (rel_op -> GE .)
    CINT            reduce using rule 129 (rel_op -> GE .)
    NUMBER          reduce using rule 129 (rel_op -> GE .)


state 128

    (130) rel_op -> EQ .

    TRUE            reduce using rule 130 (rel_op -> EQ .)
    FALSE           reduce using rule 130 (rel_op -> EQ .)
    LPAREN          reduce using rule 130 (rel_op -> EQ .)
    PLUS            reduce using rule 130 (rel_op -> EQ .)
    MINUS           reduce using rule 130 (rel_op -> EQ .)
    ID              reduce using rule 130 (rel_op -> EQ .)
    CINT            reduce using rule 130 (rel_op -> EQ .)
    NUMBER          reduce using rule 130 (rel_op -> EQ .)


state 129

    (131) rel_op -> NE .

    TRUE            reduce using rule 131 (rel_op -> NE .)
    FALSE           reduce using rule 131 (rel_op -> NE .)
    LPAREN          reduce using rule 131 (rel_op -> NE .)
    PLUS            reduce using rule 131 (rel_op -> NE .)
    MINUS           reduce using rule 131 (rel_op -> NE .)
    ID              reduce using rule 131 (rel_op -> NE .)
    CINT            reduce using rule 131 (rel_op -> NE .)
    NUMBER          reduce using rule 131 (rel_op -> NE .)


state 130

    (44) llamada_func -> ID LPAREN aux3 RPAREN .

    ID              reduce using rule 44 (llamada_func -> ID LPAREN aux3 RPAREN .)
    IF              reduce using rule 44 (llamada_func -> ID LPAREN aux3 RPAREN .)
    READ            reduce using rule 44 (llamada_func -> ID LPAREN aux3 RPAREN .)
    PRINT           reduce using rule 44 (llamada_func -> ID LPAREN aux3 RPAREN .)
    WHILE           reduce using rule 44 (llamada_func -> ID LPAREN aux3 RPAREN .)
    RBRACE          reduce using rule 44 (llamada_func -> ID LPAREN aux3 RPAREN .)
    VAR             reduce using rule 44 (llamada_func -> ID LPAREN aux3 RPAREN .)
    PUBLIC          reduce using rule 44 (llamada_func -> ID LPAREN aux3 RPAREN .)
    PRIVATE         reduce using rule 44 (llamada_func -> ID LPAREN aux3 RPAREN .)
    PROTECTED       reduce using rule 44 (llamada_func -> ID LPAREN aux3 RPAREN .)
    RETURN          reduce using rule 44 (llamada_func -> ID LPAREN aux3 RPAREN .)
    RPAREN          reduce using rule 44 (llamada_func -> ID LPAREN aux3 RPAREN .)
    COMMA           reduce using rule 44 (llamada_func -> ID LPAREN aux3 RPAREN .)


state 131

    (46) aux3 -> aux3 COMMA . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    ID              shift and go to state 62
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    exp                            shift and go to state 165
    termino                        shift and go to state 64
    factor                         shift and go to state 67
    objeto_aAcceso                 shift and go to state 69
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 132

    (78) tipo_compuesto -> ID .

    ID              reduce using rule 78 (tipo_compuesto -> ID .)
    VAR             reduce using rule 78 (tipo_compuesto -> ID .)
    RBRACE          reduce using rule 78 (tipo_compuesto -> ID .)
    PUBLIC          reduce using rule 78 (tipo_compuesto -> ID .)
    PRIVATE         reduce using rule 78 (tipo_compuesto -> ID .)
    PROTECTED       reduce using rule 78 (tipo_compuesto -> ID .)
    IF              reduce using rule 78 (tipo_compuesto -> ID .)
    READ            reduce using rule 78 (tipo_compuesto -> ID .)
    PRINT           reduce using rule 78 (tipo_compuesto -> ID .)
    WHILE           reduce using rule 78 (tipo_compuesto -> ID .)
    RETURN          reduce using rule 78 (tipo_compuesto -> ID .)


state 133

    (66) aux -> ID COLON tipo_simple .

    ID              reduce using rule 66 (aux -> ID COLON tipo_simple .)
    VAR             reduce using rule 66 (aux -> ID COLON tipo_simple .)
    RBRACE          reduce using rule 66 (aux -> ID COLON tipo_simple .)
    PUBLIC          reduce using rule 66 (aux -> ID COLON tipo_simple .)
    PRIVATE         reduce using rule 66 (aux -> ID COLON tipo_simple .)
    PROTECTED       reduce using rule 66 (aux -> ID COLON tipo_simple .)
    IF              reduce using rule 66 (aux -> ID COLON tipo_simple .)
    READ            reduce using rule 66 (aux -> ID COLON tipo_simple .)
    PRINT           reduce using rule 66 (aux -> ID COLON tipo_simple .)
    WHILE           reduce using rule 66 (aux -> ID COLON tipo_simple .)
    RETURN          reduce using rule 66 (aux -> ID COLON tipo_simple .)


state 134

    (67) aux -> ID COLON tipo_compuesto .

    ID              reduce using rule 67 (aux -> ID COLON tipo_compuesto .)
    VAR             reduce using rule 67 (aux -> ID COLON tipo_compuesto .)
    RBRACE          reduce using rule 67 (aux -> ID COLON tipo_compuesto .)
    PUBLIC          reduce using rule 67 (aux -> ID COLON tipo_compuesto .)
    PRIVATE         reduce using rule 67 (aux -> ID COLON tipo_compuesto .)
    PROTECTED       reduce using rule 67 (aux -> ID COLON tipo_compuesto .)
    IF              reduce using rule 67 (aux -> ID COLON tipo_compuesto .)
    READ            reduce using rule 67 (aux -> ID COLON tipo_compuesto .)
    PRINT           reduce using rule 67 (aux -> ID COLON tipo_compuesto .)
    WHILE           reduce using rule 67 (aux -> ID COLON tipo_compuesto .)
    RETURN          reduce using rule 67 (aux -> ID COLON tipo_compuesto .)


state 135

    (76) tipo_simple -> INT .

    ID              reduce using rule 76 (tipo_simple -> INT .)
    VAR             reduce using rule 76 (tipo_simple -> INT .)
    RBRACE          reduce using rule 76 (tipo_simple -> INT .)
    PUBLIC          reduce using rule 76 (tipo_simple -> INT .)
    PRIVATE         reduce using rule 76 (tipo_simple -> INT .)
    PROTECTED       reduce using rule 76 (tipo_simple -> INT .)
    IF              reduce using rule 76 (tipo_simple -> INT .)
    READ            reduce using rule 76 (tipo_simple -> INT .)
    PRINT           reduce using rule 76 (tipo_simple -> INT .)
    WHILE           reduce using rule 76 (tipo_simple -> INT .)
    RETURN          reduce using rule 76 (tipo_simple -> INT .)


state 136

    (77) tipo_simple -> FLOAT .

    ID              reduce using rule 77 (tipo_simple -> FLOAT .)
    VAR             reduce using rule 77 (tipo_simple -> FLOAT .)
    RBRACE          reduce using rule 77 (tipo_simple -> FLOAT .)
    PUBLIC          reduce using rule 77 (tipo_simple -> FLOAT .)
    PRIVATE         reduce using rule 77 (tipo_simple -> FLOAT .)
    PROTECTED       reduce using rule 77 (tipo_simple -> FLOAT .)
    IF              reduce using rule 77 (tipo_simple -> FLOAT .)
    READ            reduce using rule 77 (tipo_simple -> FLOAT .)
    PRINT           reduce using rule 77 (tipo_simple -> FLOAT .)
    WHILE           reduce using rule 77 (tipo_simple -> FLOAT .)
    RETURN          reduce using rule 77 (tipo_simple -> FLOAT .)


state 137

    (68) aux -> ID LBRACKET cint . RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (69) aux -> ID LBRACKET cint . RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (70) aux -> ID LBRACKET cint . RBRACKET COLON tipo_simple
    (71) aux -> ID LBRACKET cint . RBRACKET COLON tipo_compuesto

    RBRACKET        shift and go to state 166


state 138

    (74) aux2 -> aux2 aux2 .
    (74) aux2 -> aux2 . aux2
    (74) aux2 -> . aux2 aux2
    (75) aux2 -> . COMMA ID

  ! shift/reduce conflict for COMMA resolved as shift
    COLON           reduce using rule 74 (aux2 -> aux2 aux2 .)
    COMMA           shift and go to state 91

  ! COMMA           [ reduce using rule 74 (aux2 -> aux2 aux2 .) ]

    aux2                           shift and go to state 138

state 139

    (72) aux -> ID aux2 COLON . tipo_simple
    (73) aux -> ID aux2 COLON . tipo_compuesto
    (76) tipo_simple -> . INT
    (77) tipo_simple -> . FLOAT
    (78) tipo_compuesto -> . ID

    INT             shift and go to state 135
    FLOAT           shift and go to state 136
    ID              shift and go to state 132

    tipo_simple                    shift and go to state 167
    tipo_compuesto                 shift and go to state 168

state 140

    (75) aux2 -> COMMA ID .

    COLON           reduce using rule 75 (aux2 -> COMMA ID .)
    COMMA           reduce using rule 75 (aux2 -> COMMA ID .)


state 141

    (11) constructor -> PUBLIC ID LPAREN param . RPAREN contexto_const

    RPAREN          shift and go to state 169


state 142

    (57) param -> aux4 .
    (59) aux4 -> aux4 . COMMA tipo_simple ID

    RPAREN          reduce using rule 57 (param -> aux4 .)
    COMMA           shift and go to state 170


state 143

    (58) aux4 -> tipo_simple . ID

    ID              shift and go to state 171


state 144

    (79) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS expresion
    (80) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . EQUALS expresion
    (85) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . EQUALS llamada_func
    (91) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS objeto_metodo
    (92) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . EQUALS objeto_metodo

    LBRACKET        shift and go to state 172
    EQUALS          shift and go to state 173


state 145

    (30) condicion -> IF LPAREN expresion RPAREN . bloque
    (31) condicion -> IF LPAREN expresion RPAREN . bloque ELIF LPAREN expresion RPAREN bloque
    (32) bloque -> . LBRACE estatuto RBRACE

    LBRACE          shift and go to state 175

    bloque                         shift and go to state 174

state 146

    (33) lectura -> READ LPAREN ID RPAREN .

    ID              reduce using rule 33 (lectura -> READ LPAREN ID RPAREN .)
    IF              reduce using rule 33 (lectura -> READ LPAREN ID RPAREN .)
    READ            reduce using rule 33 (lectura -> READ LPAREN ID RPAREN .)
    PRINT           reduce using rule 33 (lectura -> READ LPAREN ID RPAREN .)
    WHILE           reduce using rule 33 (lectura -> READ LPAREN ID RPAREN .)
    RBRACE          reduce using rule 33 (lectura -> READ LPAREN ID RPAREN .)
    VAR             reduce using rule 33 (lectura -> READ LPAREN ID RPAREN .)
    PUBLIC          reduce using rule 33 (lectura -> READ LPAREN ID RPAREN .)
    PRIVATE         reduce using rule 33 (lectura -> READ LPAREN ID RPAREN .)
    PROTECTED       reduce using rule 33 (lectura -> READ LPAREN ID RPAREN .)
    RETURN          reduce using rule 33 (lectura -> READ LPAREN ID RPAREN .)


state 147

    (34) lectura -> READ LPAREN objeto_aAcceso RPAREN .

    ID              reduce using rule 34 (lectura -> READ LPAREN objeto_aAcceso RPAREN .)
    IF              reduce using rule 34 (lectura -> READ LPAREN objeto_aAcceso RPAREN .)
    READ            reduce using rule 34 (lectura -> READ LPAREN objeto_aAcceso RPAREN .)
    PRINT           reduce using rule 34 (lectura -> READ LPAREN objeto_aAcceso RPAREN .)
    WHILE           reduce using rule 34 (lectura -> READ LPAREN objeto_aAcceso RPAREN .)
    RBRACE          reduce using rule 34 (lectura -> READ LPAREN objeto_aAcceso RPAREN .)
    VAR             reduce using rule 34 (lectura -> READ LPAREN objeto_aAcceso RPAREN .)
    PUBLIC          reduce using rule 34 (lectura -> READ LPAREN objeto_aAcceso RPAREN .)
    PRIVATE         reduce using rule 34 (lectura -> READ LPAREN objeto_aAcceso RPAREN .)
    PROTECTED       reduce using rule 34 (lectura -> READ LPAREN objeto_aAcceso RPAREN .)
    RETURN          reduce using rule 34 (lectura -> READ LPAREN objeto_aAcceso RPAREN .)


state 148

    (35) escritura -> PRINT LPAREN aux5 RPAREN .

    ID              reduce using rule 35 (escritura -> PRINT LPAREN aux5 RPAREN .)
    IF              reduce using rule 35 (escritura -> PRINT LPAREN aux5 RPAREN .)
    READ            reduce using rule 35 (escritura -> PRINT LPAREN aux5 RPAREN .)
    PRINT           reduce using rule 35 (escritura -> PRINT LPAREN aux5 RPAREN .)
    WHILE           reduce using rule 35 (escritura -> PRINT LPAREN aux5 RPAREN .)
    RBRACE          reduce using rule 35 (escritura -> PRINT LPAREN aux5 RPAREN .)
    VAR             reduce using rule 35 (escritura -> PRINT LPAREN aux5 RPAREN .)
    PUBLIC          reduce using rule 35 (escritura -> PRINT LPAREN aux5 RPAREN .)
    PRIVATE         reduce using rule 35 (escritura -> PRINT LPAREN aux5 RPAREN .)
    PROTECTED       reduce using rule 35 (escritura -> PRINT LPAREN aux5 RPAREN .)
    RETURN          reduce using rule 35 (escritura -> PRINT LPAREN aux5 RPAREN .)


state 149

    (40) aux5 -> aux5 COMMA . expresion
    (41) aux5 -> aux5 COMMA . llamada_func
    (42) aux5 -> aux5 COMMA . objeto_metodo
    (43) aux5 -> aux5 COMMA . CSTRING
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . expresion AND exp_bool
    (101) expresion -> . expresion OR exp_bool
    (102) expresion -> . expresion AND exp_bool rel_op exp_bool
    (103) expresion -> . expresion OR exp_bool rel_op exp_bool
    (44) llamada_func -> . ID LPAREN aux3 RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    CSTRING         shift and go to state 179
    ID              shift and go to state 75
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    expresion                      shift and go to state 176
    llamada_func                   shift and go to state 177
    objeto_metodo                  shift and go to state 178
    exp_bool                       shift and go to state 79
    exp                            shift and go to state 82
    termino                        shift and go to state 64
    factor                         shift and go to state 67
    objeto_aAcceso                 shift and go to state 69
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 150

    (29) ciclo -> WHILE LPAREN expresion RPAREN . bloque
    (32) bloque -> . LBRACE estatuto RBRACE

    LBRACE          shift and go to state 175

    bloque                         shift and go to state 180

state 151

    (4) class -> scope CLASS ID COLON ID context .

    $end            reduce using rule 4 (class -> scope CLASS ID COLON ID context .)


state 152

    (47) funcion -> scope DEF ID LPAREN param . RPAREN contexto_func

    RPAREN          shift and go to state 181


state 153

    (132) objeto_aAcceso -> ID PERIOD ID .

    TIMES           reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    DIVIDE          reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    MODULO          reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACKET        reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    PLUS            reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    MINUS           reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    RPAREN          reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    COMMA           reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    LT              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    LE              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    GT              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    GE              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    EQ              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    NE              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    AND             reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    OR              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    ID              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    IF              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    READ            reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    PRINT           reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    WHILE           reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACE          reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    VAR             reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    PUBLIC          reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    PRIVATE         reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    PROTECTED       reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    RETURN          reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)


state 154

    (82) asignacion -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS expresion
    (88) asignacion -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS llamada_func
    (94) asignacion -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    ID              shift and go to state 62
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    exp                            shift and go to state 182
    termino                        shift and go to state 64
    factor                         shift and go to state 67
    objeto_aAcceso                 shift and go to state 69
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 155

    (83) asignacion -> ID LBRACKET exp RBRACKET EQUALS . expresion
    (89) asignacion -> ID LBRACKET exp RBRACKET EQUALS . llamada_func
    (95) asignacion -> ID LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . expresion AND exp_bool
    (101) expresion -> . expresion OR exp_bool
    (102) expresion -> . expresion AND exp_bool rel_op exp_bool
    (103) expresion -> . expresion OR exp_bool rel_op exp_bool
    (44) llamada_func -> . ID LPAREN aux3 RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    ID              shift and go to state 75
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    exp                            shift and go to state 82
    expresion                      shift and go to state 183
    llamada_func                   shift and go to state 184
    objeto_metodo                  shift and go to state 185
    exp_bool                       shift and go to state 79
    termino                        shift and go to state 64
    factor                         shift and go to state 67
    objeto_aAcceso                 shift and go to state 69
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 156

    (108) exp -> exp PLUS termino .
    (111) termino -> termino . TIMES factor
    (112) termino -> termino . DIVIDE factor
    (113) termino -> termino . MODULO factor

    RBRACKET        reduce using rule 108 (exp -> exp PLUS termino .)
    PLUS            reduce using rule 108 (exp -> exp PLUS termino .)
    MINUS           reduce using rule 108 (exp -> exp PLUS termino .)
    LT              reduce using rule 108 (exp -> exp PLUS termino .)
    LE              reduce using rule 108 (exp -> exp PLUS termino .)
    GT              reduce using rule 108 (exp -> exp PLUS termino .)
    GE              reduce using rule 108 (exp -> exp PLUS termino .)
    EQ              reduce using rule 108 (exp -> exp PLUS termino .)
    NE              reduce using rule 108 (exp -> exp PLUS termino .)
    AND             reduce using rule 108 (exp -> exp PLUS termino .)
    OR              reduce using rule 108 (exp -> exp PLUS termino .)
    ID              reduce using rule 108 (exp -> exp PLUS termino .)
    IF              reduce using rule 108 (exp -> exp PLUS termino .)
    READ            reduce using rule 108 (exp -> exp PLUS termino .)
    PRINT           reduce using rule 108 (exp -> exp PLUS termino .)
    WHILE           reduce using rule 108 (exp -> exp PLUS termino .)
    RBRACE          reduce using rule 108 (exp -> exp PLUS termino .)
    VAR             reduce using rule 108 (exp -> exp PLUS termino .)
    PUBLIC          reduce using rule 108 (exp -> exp PLUS termino .)
    PRIVATE         reduce using rule 108 (exp -> exp PLUS termino .)
    PROTECTED       reduce using rule 108 (exp -> exp PLUS termino .)
    RETURN          reduce using rule 108 (exp -> exp PLUS termino .)
    RPAREN          reduce using rule 108 (exp -> exp PLUS termino .)
    COMMA           reduce using rule 108 (exp -> exp PLUS termino .)
    TIMES           shift and go to state 112
    DIVIDE          shift and go to state 113
    MODULO          shift and go to state 114


state 157

    (109) exp -> exp MINUS termino .
    (111) termino -> termino . TIMES factor
    (112) termino -> termino . DIVIDE factor
    (113) termino -> termino . MODULO factor

    RBRACKET        reduce using rule 109 (exp -> exp MINUS termino .)
    PLUS            reduce using rule 109 (exp -> exp MINUS termino .)
    MINUS           reduce using rule 109 (exp -> exp MINUS termino .)
    LT              reduce using rule 109 (exp -> exp MINUS termino .)
    LE              reduce using rule 109 (exp -> exp MINUS termino .)
    GT              reduce using rule 109 (exp -> exp MINUS termino .)
    GE              reduce using rule 109 (exp -> exp MINUS termino .)
    EQ              reduce using rule 109 (exp -> exp MINUS termino .)
    NE              reduce using rule 109 (exp -> exp MINUS termino .)
    AND             reduce using rule 109 (exp -> exp MINUS termino .)
    OR              reduce using rule 109 (exp -> exp MINUS termino .)
    ID              reduce using rule 109 (exp -> exp MINUS termino .)
    IF              reduce using rule 109 (exp -> exp MINUS termino .)
    READ            reduce using rule 109 (exp -> exp MINUS termino .)
    PRINT           reduce using rule 109 (exp -> exp MINUS termino .)
    WHILE           reduce using rule 109 (exp -> exp MINUS termino .)
    RBRACE          reduce using rule 109 (exp -> exp MINUS termino .)
    VAR             reduce using rule 109 (exp -> exp MINUS termino .)
    PUBLIC          reduce using rule 109 (exp -> exp MINUS termino .)
    PRIVATE         reduce using rule 109 (exp -> exp MINUS termino .)
    PROTECTED       reduce using rule 109 (exp -> exp MINUS termino .)
    RETURN          reduce using rule 109 (exp -> exp MINUS termino .)
    RPAREN          reduce using rule 109 (exp -> exp MINUS termino .)
    COMMA           reduce using rule 109 (exp -> exp MINUS termino .)
    TIMES           shift and go to state 112
    DIVIDE          shift and go to state 113
    MODULO          shift and go to state 114


state 158

    (111) termino -> termino TIMES factor .

    TIMES           reduce using rule 111 (termino -> termino TIMES factor .)
    DIVIDE          reduce using rule 111 (termino -> termino TIMES factor .)
    MODULO          reduce using rule 111 (termino -> termino TIMES factor .)
    RBRACKET        reduce using rule 111 (termino -> termino TIMES factor .)
    PLUS            reduce using rule 111 (termino -> termino TIMES factor .)
    MINUS           reduce using rule 111 (termino -> termino TIMES factor .)
    LT              reduce using rule 111 (termino -> termino TIMES factor .)
    LE              reduce using rule 111 (termino -> termino TIMES factor .)
    GT              reduce using rule 111 (termino -> termino TIMES factor .)
    GE              reduce using rule 111 (termino -> termino TIMES factor .)
    EQ              reduce using rule 111 (termino -> termino TIMES factor .)
    NE              reduce using rule 111 (termino -> termino TIMES factor .)
    AND             reduce using rule 111 (termino -> termino TIMES factor .)
    OR              reduce using rule 111 (termino -> termino TIMES factor .)
    ID              reduce using rule 111 (termino -> termino TIMES factor .)
    IF              reduce using rule 111 (termino -> termino TIMES factor .)
    READ            reduce using rule 111 (termino -> termino TIMES factor .)
    PRINT           reduce using rule 111 (termino -> termino TIMES factor .)
    WHILE           reduce using rule 111 (termino -> termino TIMES factor .)
    RBRACE          reduce using rule 111 (termino -> termino TIMES factor .)
    VAR             reduce using rule 111 (termino -> termino TIMES factor .)
    PUBLIC          reduce using rule 111 (termino -> termino TIMES factor .)
    PRIVATE         reduce using rule 111 (termino -> termino TIMES factor .)
    PROTECTED       reduce using rule 111 (termino -> termino TIMES factor .)
    RETURN          reduce using rule 111 (termino -> termino TIMES factor .)
    RPAREN          reduce using rule 111 (termino -> termino TIMES factor .)
    COMMA           reduce using rule 111 (termino -> termino TIMES factor .)


state 159

    (112) termino -> termino DIVIDE factor .

    TIMES           reduce using rule 112 (termino -> termino DIVIDE factor .)
    DIVIDE          reduce using rule 112 (termino -> termino DIVIDE factor .)
    MODULO          reduce using rule 112 (termino -> termino DIVIDE factor .)
    RBRACKET        reduce using rule 112 (termino -> termino DIVIDE factor .)
    PLUS            reduce using rule 112 (termino -> termino DIVIDE factor .)
    MINUS           reduce using rule 112 (termino -> termino DIVIDE factor .)
    LT              reduce using rule 112 (termino -> termino DIVIDE factor .)
    LE              reduce using rule 112 (termino -> termino DIVIDE factor .)
    GT              reduce using rule 112 (termino -> termino DIVIDE factor .)
    GE              reduce using rule 112 (termino -> termino DIVIDE factor .)
    EQ              reduce using rule 112 (termino -> termino DIVIDE factor .)
    NE              reduce using rule 112 (termino -> termino DIVIDE factor .)
    AND             reduce using rule 112 (termino -> termino DIVIDE factor .)
    OR              reduce using rule 112 (termino -> termino DIVIDE factor .)
    ID              reduce using rule 112 (termino -> termino DIVIDE factor .)
    IF              reduce using rule 112 (termino -> termino DIVIDE factor .)
    READ            reduce using rule 112 (termino -> termino DIVIDE factor .)
    PRINT           reduce using rule 112 (termino -> termino DIVIDE factor .)
    WHILE           reduce using rule 112 (termino -> termino DIVIDE factor .)
    RBRACE          reduce using rule 112 (termino -> termino DIVIDE factor .)
    VAR             reduce using rule 112 (termino -> termino DIVIDE factor .)
    PUBLIC          reduce using rule 112 (termino -> termino DIVIDE factor .)
    PRIVATE         reduce using rule 112 (termino -> termino DIVIDE factor .)
    PROTECTED       reduce using rule 112 (termino -> termino DIVIDE factor .)
    RETURN          reduce using rule 112 (termino -> termino DIVIDE factor .)
    RPAREN          reduce using rule 112 (termino -> termino DIVIDE factor .)
    COMMA           reduce using rule 112 (termino -> termino DIVIDE factor .)


state 160

    (113) termino -> termino MODULO factor .

    TIMES           reduce using rule 113 (termino -> termino MODULO factor .)
    DIVIDE          reduce using rule 113 (termino -> termino MODULO factor .)
    MODULO          reduce using rule 113 (termino -> termino MODULO factor .)
    RBRACKET        reduce using rule 113 (termino -> termino MODULO factor .)
    PLUS            reduce using rule 113 (termino -> termino MODULO factor .)
    MINUS           reduce using rule 113 (termino -> termino MODULO factor .)
    LT              reduce using rule 113 (termino -> termino MODULO factor .)
    LE              reduce using rule 113 (termino -> termino MODULO factor .)
    GT              reduce using rule 113 (termino -> termino MODULO factor .)
    GE              reduce using rule 113 (termino -> termino MODULO factor .)
    EQ              reduce using rule 113 (termino -> termino MODULO factor .)
    NE              reduce using rule 113 (termino -> termino MODULO factor .)
    AND             reduce using rule 113 (termino -> termino MODULO factor .)
    OR              reduce using rule 113 (termino -> termino MODULO factor .)
    ID              reduce using rule 113 (termino -> termino MODULO factor .)
    IF              reduce using rule 113 (termino -> termino MODULO factor .)
    READ            reduce using rule 113 (termino -> termino MODULO factor .)
    PRINT           reduce using rule 113 (termino -> termino MODULO factor .)
    WHILE           reduce using rule 113 (termino -> termino MODULO factor .)
    RBRACE          reduce using rule 113 (termino -> termino MODULO factor .)
    VAR             reduce using rule 113 (termino -> termino MODULO factor .)
    PUBLIC          reduce using rule 113 (termino -> termino MODULO factor .)
    PRIVATE         reduce using rule 113 (termino -> termino MODULO factor .)
    PROTECTED       reduce using rule 113 (termino -> termino MODULO factor .)
    RETURN          reduce using rule 113 (termino -> termino MODULO factor .)
    RPAREN          reduce using rule 113 (termino -> termino MODULO factor .)
    COMMA           reduce using rule 113 (termino -> termino MODULO factor .)


state 161

    (114) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    MODULO          reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    LT              reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    LE              reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    GT              reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    GE              reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    EQ              reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    NE              reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    AND             reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    OR              reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    ID              reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    IF              reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    READ            reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    PRINT           reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    WHILE           reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    RBRACE          reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    VAR             reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    PUBLIC          reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    PRIVATE         reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    PROTECTED       reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    RETURN          reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 114 (factor -> LPAREN expresion RPAREN .)


state 162

    (100) expresion -> expresion AND exp_bool .
    (102) expresion -> expresion AND exp_bool . rel_op exp_bool
    (126) rel_op -> . LT
    (127) rel_op -> . LE
    (128) rel_op -> . GT
    (129) rel_op -> . GE
    (130) rel_op -> . EQ
    (131) rel_op -> . NE

    AND             reduce using rule 100 (expresion -> expresion AND exp_bool .)
    OR              reduce using rule 100 (expresion -> expresion AND exp_bool .)
    ID              reduce using rule 100 (expresion -> expresion AND exp_bool .)
    IF              reduce using rule 100 (expresion -> expresion AND exp_bool .)
    READ            reduce using rule 100 (expresion -> expresion AND exp_bool .)
    PRINT           reduce using rule 100 (expresion -> expresion AND exp_bool .)
    WHILE           reduce using rule 100 (expresion -> expresion AND exp_bool .)
    RBRACE          reduce using rule 100 (expresion -> expresion AND exp_bool .)
    VAR             reduce using rule 100 (expresion -> expresion AND exp_bool .)
    PUBLIC          reduce using rule 100 (expresion -> expresion AND exp_bool .)
    PRIVATE         reduce using rule 100 (expresion -> expresion AND exp_bool .)
    PROTECTED       reduce using rule 100 (expresion -> expresion AND exp_bool .)
    RETURN          reduce using rule 100 (expresion -> expresion AND exp_bool .)
    RPAREN          reduce using rule 100 (expresion -> expresion AND exp_bool .)
    COMMA           reduce using rule 100 (expresion -> expresion AND exp_bool .)
    LT              shift and go to state 124
    LE              shift and go to state 125
    GT              shift and go to state 126
    GE              shift and go to state 127
    EQ              shift and go to state 128
    NE              shift and go to state 129

    rel_op                         shift and go to state 186

state 163

    (101) expresion -> expresion OR exp_bool .
    (103) expresion -> expresion OR exp_bool . rel_op exp_bool
    (126) rel_op -> . LT
    (127) rel_op -> . LE
    (128) rel_op -> . GT
    (129) rel_op -> . GE
    (130) rel_op -> . EQ
    (131) rel_op -> . NE

    AND             reduce using rule 101 (expresion -> expresion OR exp_bool .)
    OR              reduce using rule 101 (expresion -> expresion OR exp_bool .)
    ID              reduce using rule 101 (expresion -> expresion OR exp_bool .)
    IF              reduce using rule 101 (expresion -> expresion OR exp_bool .)
    READ            reduce using rule 101 (expresion -> expresion OR exp_bool .)
    PRINT           reduce using rule 101 (expresion -> expresion OR exp_bool .)
    WHILE           reduce using rule 101 (expresion -> expresion OR exp_bool .)
    RBRACE          reduce using rule 101 (expresion -> expresion OR exp_bool .)
    VAR             reduce using rule 101 (expresion -> expresion OR exp_bool .)
    PUBLIC          reduce using rule 101 (expresion -> expresion OR exp_bool .)
    PRIVATE         reduce using rule 101 (expresion -> expresion OR exp_bool .)
    PROTECTED       reduce using rule 101 (expresion -> expresion OR exp_bool .)
    RETURN          reduce using rule 101 (expresion -> expresion OR exp_bool .)
    RPAREN          reduce using rule 101 (expresion -> expresion OR exp_bool .)
    COMMA           reduce using rule 101 (expresion -> expresion OR exp_bool .)
    LT              shift and go to state 124
    LE              shift and go to state 125
    GT              shift and go to state 126
    GE              shift and go to state 127
    EQ              shift and go to state 128
    NE              shift and go to state 129

    rel_op                         shift and go to state 187

state 164

    (99) expresion -> exp_bool rel_op exp_bool .

    AND             reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)
    OR              reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)
    ID              reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)
    IF              reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)
    READ            reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)
    PRINT           reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)
    WHILE           reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)
    RBRACE          reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)
    VAR             reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)
    PUBLIC          reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)
    PRIVATE         reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)
    PROTECTED       reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)
    RETURN          reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)
    RPAREN          reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)
    COMMA           reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)


state 165

    (46) aux3 -> aux3 COMMA exp .
    (108) exp -> exp . PLUS termino
    (109) exp -> exp . MINUS termino

    RPAREN          reduce using rule 46 (aux3 -> aux3 COMMA exp .)
    COMMA           reduce using rule 46 (aux3 -> aux3 COMMA exp .)
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111


state 166

    (68) aux -> ID LBRACKET cint RBRACKET . LBRACKET cint RBRACKET COLON tipo_simple
    (69) aux -> ID LBRACKET cint RBRACKET . LBRACKET cint RBRACKET COLON tipo_compuesto
    (70) aux -> ID LBRACKET cint RBRACKET . COLON tipo_simple
    (71) aux -> ID LBRACKET cint RBRACKET . COLON tipo_compuesto

    LBRACKET        shift and go to state 188
    COLON           shift and go to state 189


state 167

    (72) aux -> ID aux2 COLON tipo_simple .

    ID              reduce using rule 72 (aux -> ID aux2 COLON tipo_simple .)
    VAR             reduce using rule 72 (aux -> ID aux2 COLON tipo_simple .)
    RBRACE          reduce using rule 72 (aux -> ID aux2 COLON tipo_simple .)
    PUBLIC          reduce using rule 72 (aux -> ID aux2 COLON tipo_simple .)
    PRIVATE         reduce using rule 72 (aux -> ID aux2 COLON tipo_simple .)
    PROTECTED       reduce using rule 72 (aux -> ID aux2 COLON tipo_simple .)
    IF              reduce using rule 72 (aux -> ID aux2 COLON tipo_simple .)
    READ            reduce using rule 72 (aux -> ID aux2 COLON tipo_simple .)
    PRINT           reduce using rule 72 (aux -> ID aux2 COLON tipo_simple .)
    WHILE           reduce using rule 72 (aux -> ID aux2 COLON tipo_simple .)
    RETURN          reduce using rule 72 (aux -> ID aux2 COLON tipo_simple .)


state 168

    (73) aux -> ID aux2 COLON tipo_compuesto .

    ID              reduce using rule 73 (aux -> ID aux2 COLON tipo_compuesto .)
    VAR             reduce using rule 73 (aux -> ID aux2 COLON tipo_compuesto .)
    RBRACE          reduce using rule 73 (aux -> ID aux2 COLON tipo_compuesto .)
    PUBLIC          reduce using rule 73 (aux -> ID aux2 COLON tipo_compuesto .)
    PRIVATE         reduce using rule 73 (aux -> ID aux2 COLON tipo_compuesto .)
    PROTECTED       reduce using rule 73 (aux -> ID aux2 COLON tipo_compuesto .)
    IF              reduce using rule 73 (aux -> ID aux2 COLON tipo_compuesto .)
    READ            reduce using rule 73 (aux -> ID aux2 COLON tipo_compuesto .)
    PRINT           reduce using rule 73 (aux -> ID aux2 COLON tipo_compuesto .)
    WHILE           reduce using rule 73 (aux -> ID aux2 COLON tipo_compuesto .)
    RETURN          reduce using rule 73 (aux -> ID aux2 COLON tipo_compuesto .)


state 169

    (11) constructor -> PUBLIC ID LPAREN param RPAREN . contexto_const
    (12) contexto_const -> . LBRACE vars RBRACE
    (13) contexto_const -> . LBRACE estatuto RBRACE
    (14) contexto_const -> . LBRACE vars estatuto RBRACE

    LBRACE          shift and go to state 191

    contexto_const                 shift and go to state 190

state 170

    (59) aux4 -> aux4 COMMA . tipo_simple ID
    (76) tipo_simple -> . INT
    (77) tipo_simple -> . FLOAT

    INT             shift and go to state 135
    FLOAT           shift and go to state 136

    tipo_simple                    shift and go to state 192

state 171

    (58) aux4 -> tipo_simple ID .

    COMMA           reduce using rule 58 (aux4 -> tipo_simple ID .)
    RPAREN          reduce using rule 58 (aux4 -> tipo_simple ID .)


state 172

    (79) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS expresion
    (85) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS llamada_func
    (91) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    ID              shift and go to state 62
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    objeto_aAcceso                 shift and go to state 69
    exp                            shift and go to state 193
    termino                        shift and go to state 64
    factor                         shift and go to state 67
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 173

    (80) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS . expresion
    (86) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS . llamada_func
    (92) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . expresion AND exp_bool
    (101) expresion -> . expresion OR exp_bool
    (102) expresion -> . expresion AND exp_bool rel_op exp_bool
    (103) expresion -> . expresion OR exp_bool rel_op exp_bool
    (44) llamada_func -> . ID LPAREN aux3 RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    ID              shift and go to state 75
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    objeto_aAcceso                 shift and go to state 69
    exp                            shift and go to state 82
    expresion                      shift and go to state 194
    llamada_func                   shift and go to state 195
    objeto_metodo                  shift and go to state 196
    exp_bool                       shift and go to state 79
    termino                        shift and go to state 64
    factor                         shift and go to state 67
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 174

    (30) condicion -> IF LPAREN expresion RPAREN bloque .
    (31) condicion -> IF LPAREN expresion RPAREN bloque . ELIF LPAREN expresion RPAREN bloque

    ID              reduce using rule 30 (condicion -> IF LPAREN expresion RPAREN bloque .)
    IF              reduce using rule 30 (condicion -> IF LPAREN expresion RPAREN bloque .)
    READ            reduce using rule 30 (condicion -> IF LPAREN expresion RPAREN bloque .)
    PRINT           reduce using rule 30 (condicion -> IF LPAREN expresion RPAREN bloque .)
    WHILE           reduce using rule 30 (condicion -> IF LPAREN expresion RPAREN bloque .)
    RBRACE          reduce using rule 30 (condicion -> IF LPAREN expresion RPAREN bloque .)
    VAR             reduce using rule 30 (condicion -> IF LPAREN expresion RPAREN bloque .)
    PUBLIC          reduce using rule 30 (condicion -> IF LPAREN expresion RPAREN bloque .)
    PRIVATE         reduce using rule 30 (condicion -> IF LPAREN expresion RPAREN bloque .)
    PROTECTED       reduce using rule 30 (condicion -> IF LPAREN expresion RPAREN bloque .)
    RETURN          reduce using rule 30 (condicion -> IF LPAREN expresion RPAREN bloque .)
    ELIF            shift and go to state 197


state 175

    (32) bloque -> LBRACE . estatuto RBRACE
    (15) estatuto -> . asignacion
    (16) estatuto -> . llamada_func
    (17) estatuto -> . objeto_metodo
    (18) estatuto -> . condicion
    (19) estatuto -> . lectura
    (20) estatuto -> . escritura
    (21) estatuto -> . ciclo
    (22) estatuto -> . estatuto asignacion
    (23) estatuto -> . estatuto llamada_func
    (24) estatuto -> . estatuto objeto_metodo
    (25) estatuto -> . estatuto condicion
    (26) estatuto -> . estatuto lectura
    (27) estatuto -> . estatuto escritura
    (28) estatuto -> . estatuto ciclo
    (79) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (80) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (81) asignacion -> . objeto_aAcceso EQUALS expresion
    (82) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> . ID EQUALS expresion
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID EQUALS llamada_func
    (91) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . ID EQUALS objeto_metodo
    (44) llamada_func -> . ID LPAREN aux3 RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (30) condicion -> . IF LPAREN expresion RPAREN bloque
    (31) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (33) lectura -> . READ LPAREN ID RPAREN
    (34) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (35) escritura -> . PRINT LPAREN aux5 RPAREN
    (29) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (132) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 18
    IF              shift and go to state 29
    READ            shift and go to state 30
    PRINT           shift and go to state 31
    WHILE           shift and go to state 32

    estatuto                       shift and go to state 198
    asignacion                     shift and go to state 20
    llamada_func                   shift and go to state 21
    objeto_metodo                  shift and go to state 22
    condicion                      shift and go to state 23
    lectura                        shift and go to state 24
    escritura                      shift and go to state 25
    ciclo                          shift and go to state 26
    objeto_aAcceso                 shift and go to state 28

state 176

    (40) aux5 -> aux5 COMMA expresion .
    (100) expresion -> expresion . AND exp_bool
    (101) expresion -> expresion . OR exp_bool
    (102) expresion -> expresion . AND exp_bool rel_op exp_bool
    (103) expresion -> expresion . OR exp_bool rel_op exp_bool

    RPAREN          reduce using rule 40 (aux5 -> aux5 COMMA expresion .)
    COMMA           reduce using rule 40 (aux5 -> aux5 COMMA expresion .)
    AND             shift and go to state 121
    OR              shift and go to state 122


state 177

    (41) aux5 -> aux5 COMMA llamada_func .

    RPAREN          reduce using rule 41 (aux5 -> aux5 COMMA llamada_func .)
    COMMA           reduce using rule 41 (aux5 -> aux5 COMMA llamada_func .)


state 178

    (42) aux5 -> aux5 COMMA objeto_metodo .

    RPAREN          reduce using rule 42 (aux5 -> aux5 COMMA objeto_metodo .)
    COMMA           reduce using rule 42 (aux5 -> aux5 COMMA objeto_metodo .)


state 179

    (43) aux5 -> aux5 COMMA CSTRING .

    RPAREN          reduce using rule 43 (aux5 -> aux5 COMMA CSTRING .)
    COMMA           reduce using rule 43 (aux5 -> aux5 COMMA CSTRING .)


state 180

    (29) ciclo -> WHILE LPAREN expresion RPAREN bloque .

    ID              reduce using rule 29 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    IF              reduce using rule 29 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    READ            reduce using rule 29 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    PRINT           reduce using rule 29 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    WHILE           reduce using rule 29 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    RBRACE          reduce using rule 29 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    VAR             reduce using rule 29 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    PUBLIC          reduce using rule 29 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    PRIVATE         reduce using rule 29 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    PROTECTED       reduce using rule 29 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    RETURN          reduce using rule 29 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)


state 181

    (47) funcion -> scope DEF ID LPAREN param RPAREN . contexto_func
    (48) contexto_func -> . LBRACE vars RBRACE
    (49) contexto_func -> . LBRACE estatuto RBRACE
    (50) contexto_func -> . LBRACE vars estatuto RBRACE
    (51) contexto_func -> . LBRACE vars RETURN INT ID RBRACE
    (52) contexto_func -> . LBRACE vars RETURN FLOAT ID RBRACE
    (53) contexto_func -> . LBRACE estatuto RETURN INT ID RBRACE
    (54) contexto_func -> . LBRACE estatuto RETURN FLOAT ID RBRACE
    (55) contexto_func -> . LBRACE vars estatuto RETURN INT ID RBRACE
    (56) contexto_func -> . LBRACE vars estatuto RETURN FLOAT ID RBRACE

    LBRACE          shift and go to state 200

    contexto_func                  shift and go to state 199

state 182

    (82) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS expresion
    (88) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS llamada_func
    (94) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (108) exp -> exp . PLUS termino
    (109) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 201
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111


state 183

    (83) asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .
    (100) expresion -> expresion . AND exp_bool
    (101) expresion -> expresion . OR exp_bool
    (102) expresion -> expresion . AND exp_bool rel_op exp_bool
    (103) expresion -> expresion . OR exp_bool rel_op exp_bool

    ID              reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    VAR             reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    AND             shift and go to state 121
    OR              shift and go to state 122


state 184

    (89) asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .

    ID              reduce using rule 89 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 89 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 89 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 89 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 89 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 89 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    VAR             reduce using rule 89 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 89 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 89 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 89 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 89 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)


state 185

    (95) asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .

    ID              reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    VAR             reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 186

    (102) expresion -> expresion AND exp_bool rel_op . exp_bool
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    ID              shift and go to state 62
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    exp_bool                       shift and go to state 202
    exp                            shift and go to state 82
    termino                        shift and go to state 64
    factor                         shift and go to state 67
    objeto_aAcceso                 shift and go to state 69
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 187

    (103) expresion -> expresion OR exp_bool rel_op . exp_bool
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    ID              shift and go to state 62
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    exp_bool                       shift and go to state 203
    exp                            shift and go to state 82
    termino                        shift and go to state 64
    factor                         shift and go to state 67
    objeto_aAcceso                 shift and go to state 69
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 188

    (68) aux -> ID LBRACKET cint RBRACKET LBRACKET . cint RBRACKET COLON tipo_simple
    (69) aux -> ID LBRACKET cint RBRACKET LBRACKET . cint RBRACKET COLON tipo_compuesto
    (124) cint -> . CINT

    CINT            shift and go to state 73

    cint                           shift and go to state 204

state 189

    (70) aux -> ID LBRACKET cint RBRACKET COLON . tipo_simple
    (71) aux -> ID LBRACKET cint RBRACKET COLON . tipo_compuesto
    (76) tipo_simple -> . INT
    (77) tipo_simple -> . FLOAT
    (78) tipo_compuesto -> . ID

    INT             shift and go to state 135
    FLOAT           shift and go to state 136
    ID              shift and go to state 132

    tipo_simple                    shift and go to state 205
    tipo_compuesto                 shift and go to state 206

state 190

    (11) constructor -> PUBLIC ID LPAREN param RPAREN contexto_const .

    RBRACE          reduce using rule 11 (constructor -> PUBLIC ID LPAREN param RPAREN contexto_const .)
    VAR             reduce using rule 11 (constructor -> PUBLIC ID LPAREN param RPAREN contexto_const .)
    PUBLIC          reduce using rule 11 (constructor -> PUBLIC ID LPAREN param RPAREN contexto_const .)
    PRIVATE         reduce using rule 11 (constructor -> PUBLIC ID LPAREN param RPAREN contexto_const .)
    PROTECTED       reduce using rule 11 (constructor -> PUBLIC ID LPAREN param RPAREN contexto_const .)
    ID              reduce using rule 11 (constructor -> PUBLIC ID LPAREN param RPAREN contexto_const .)
    IF              reduce using rule 11 (constructor -> PUBLIC ID LPAREN param RPAREN contexto_const .)
    READ            reduce using rule 11 (constructor -> PUBLIC ID LPAREN param RPAREN contexto_const .)
    PRINT           reduce using rule 11 (constructor -> PUBLIC ID LPAREN param RPAREN contexto_const .)
    WHILE           reduce using rule 11 (constructor -> PUBLIC ID LPAREN param RPAREN contexto_const .)


state 191

    (12) contexto_const -> LBRACE . vars RBRACE
    (13) contexto_const -> LBRACE . estatuto RBRACE
    (14) contexto_const -> LBRACE . vars estatuto RBRACE
    (63) vars -> . VAR aux
    (64) vars -> . vars VAR aux
    (15) estatuto -> . asignacion
    (16) estatuto -> . llamada_func
    (17) estatuto -> . objeto_metodo
    (18) estatuto -> . condicion
    (19) estatuto -> . lectura
    (20) estatuto -> . escritura
    (21) estatuto -> . ciclo
    (22) estatuto -> . estatuto asignacion
    (23) estatuto -> . estatuto llamada_func
    (24) estatuto -> . estatuto objeto_metodo
    (25) estatuto -> . estatuto condicion
    (26) estatuto -> . estatuto lectura
    (27) estatuto -> . estatuto escritura
    (28) estatuto -> . estatuto ciclo
    (79) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (80) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (81) asignacion -> . objeto_aAcceso EQUALS expresion
    (82) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> . ID EQUALS expresion
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID EQUALS llamada_func
    (91) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . ID EQUALS objeto_metodo
    (44) llamada_func -> . ID LPAREN aux3 RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (30) condicion -> . IF LPAREN expresion RPAREN bloque
    (31) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (33) lectura -> . READ LPAREN ID RPAREN
    (34) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (35) escritura -> . PRINT LPAREN aux5 RPAREN
    (29) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (132) objeto_aAcceso -> . ID PERIOD ID

    VAR             shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 29
    READ            shift and go to state 30
    PRINT           shift and go to state 31
    WHILE           shift and go to state 32

    vars                           shift and go to state 207
    estatuto                       shift and go to state 208
    asignacion                     shift and go to state 20
    llamada_func                   shift and go to state 21
    objeto_metodo                  shift and go to state 22
    condicion                      shift and go to state 23
    lectura                        shift and go to state 24
    escritura                      shift and go to state 25
    ciclo                          shift and go to state 26
    objeto_aAcceso                 shift and go to state 28

state 192

    (59) aux4 -> aux4 COMMA tipo_simple . ID

    ID              shift and go to state 209


state 193

    (79) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS expresion
    (85) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS llamada_func
    (91) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (108) exp -> exp . PLUS termino
    (109) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 210
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111


state 194

    (80) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .
    (100) expresion -> expresion . AND exp_bool
    (101) expresion -> expresion . OR exp_bool
    (102) expresion -> expresion . AND exp_bool rel_op exp_bool
    (103) expresion -> expresion . OR exp_bool rel_op exp_bool

    ID              reduce using rule 80 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 80 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 80 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 80 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 80 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 80 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    VAR             reduce using rule 80 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 80 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 80 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 80 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 80 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    AND             shift and go to state 121
    OR              shift and go to state 122


state 195

    (86) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .

    ID              reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    VAR             reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)


state 196

    (92) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .

    ID              reduce using rule 92 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 92 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 92 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 92 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 92 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 92 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    VAR             reduce using rule 92 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 92 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 92 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 92 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 92 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 197

    (31) condicion -> IF LPAREN expresion RPAREN bloque ELIF . LPAREN expresion RPAREN bloque

    LPAREN          shift and go to state 211


state 198

    (32) bloque -> LBRACE estatuto . RBRACE
    (22) estatuto -> estatuto . asignacion
    (23) estatuto -> estatuto . llamada_func
    (24) estatuto -> estatuto . objeto_metodo
    (25) estatuto -> estatuto . condicion
    (26) estatuto -> estatuto . lectura
    (27) estatuto -> estatuto . escritura
    (28) estatuto -> estatuto . ciclo
    (79) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (80) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (81) asignacion -> . objeto_aAcceso EQUALS expresion
    (82) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> . ID EQUALS expresion
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID EQUALS llamada_func
    (91) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . ID EQUALS objeto_metodo
    (44) llamada_func -> . ID LPAREN aux3 RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (30) condicion -> . IF LPAREN expresion RPAREN bloque
    (31) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (33) lectura -> . READ LPAREN ID RPAREN
    (34) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (35) escritura -> . PRINT LPAREN aux5 RPAREN
    (29) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (132) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          shift and go to state 212
    ID              shift and go to state 18
    IF              shift and go to state 29
    READ            shift and go to state 30
    PRINT           shift and go to state 31
    WHILE           shift and go to state 32

    asignacion                     shift and go to state 37
    llamada_func                   shift and go to state 38
    objeto_metodo                  shift and go to state 39
    condicion                      shift and go to state 40
    lectura                        shift and go to state 41
    escritura                      shift and go to state 42
    ciclo                          shift and go to state 43
    objeto_aAcceso                 shift and go to state 28

state 199

    (47) funcion -> scope DEF ID LPAREN param RPAREN contexto_func .

    RBRACE          reduce using rule 47 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    VAR             reduce using rule 47 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    PUBLIC          reduce using rule 47 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    PRIVATE         reduce using rule 47 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    PROTECTED       reduce using rule 47 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    ID              reduce using rule 47 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    IF              reduce using rule 47 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    READ            reduce using rule 47 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    PRINT           reduce using rule 47 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    WHILE           reduce using rule 47 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)


state 200

    (48) contexto_func -> LBRACE . vars RBRACE
    (49) contexto_func -> LBRACE . estatuto RBRACE
    (50) contexto_func -> LBRACE . vars estatuto RBRACE
    (51) contexto_func -> LBRACE . vars RETURN INT ID RBRACE
    (52) contexto_func -> LBRACE . vars RETURN FLOAT ID RBRACE
    (53) contexto_func -> LBRACE . estatuto RETURN INT ID RBRACE
    (54) contexto_func -> LBRACE . estatuto RETURN FLOAT ID RBRACE
    (55) contexto_func -> LBRACE . vars estatuto RETURN INT ID RBRACE
    (56) contexto_func -> LBRACE . vars estatuto RETURN FLOAT ID RBRACE
    (63) vars -> . VAR aux
    (64) vars -> . vars VAR aux
    (15) estatuto -> . asignacion
    (16) estatuto -> . llamada_func
    (17) estatuto -> . objeto_metodo
    (18) estatuto -> . condicion
    (19) estatuto -> . lectura
    (20) estatuto -> . escritura
    (21) estatuto -> . ciclo
    (22) estatuto -> . estatuto asignacion
    (23) estatuto -> . estatuto llamada_func
    (24) estatuto -> . estatuto objeto_metodo
    (25) estatuto -> . estatuto condicion
    (26) estatuto -> . estatuto lectura
    (27) estatuto -> . estatuto escritura
    (28) estatuto -> . estatuto ciclo
    (79) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (80) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (81) asignacion -> . objeto_aAcceso EQUALS expresion
    (82) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> . ID EQUALS expresion
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID EQUALS llamada_func
    (91) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . ID EQUALS objeto_metodo
    (44) llamada_func -> . ID LPAREN aux3 RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (30) condicion -> . IF LPAREN expresion RPAREN bloque
    (31) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (33) lectura -> . READ LPAREN ID RPAREN
    (34) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (35) escritura -> . PRINT LPAREN aux5 RPAREN
    (29) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (132) objeto_aAcceso -> . ID PERIOD ID

    VAR             shift and go to state 19
    ID              shift and go to state 18
    IF              shift and go to state 29
    READ            shift and go to state 30
    PRINT           shift and go to state 31
    WHILE           shift and go to state 32

    vars                           shift and go to state 213
    estatuto                       shift and go to state 214
    asignacion                     shift and go to state 20
    llamada_func                   shift and go to state 21
    objeto_metodo                  shift and go to state 22
    condicion                      shift and go to state 23
    lectura                        shift and go to state 24
    escritura                      shift and go to state 25
    ciclo                          shift and go to state 26
    objeto_aAcceso                 shift and go to state 28

state 201

    (82) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS expresion
    (88) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS llamada_func
    (94) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS objeto_metodo

    EQUALS          shift and go to state 215


state 202

    (102) expresion -> expresion AND exp_bool rel_op exp_bool .

    AND             reduce using rule 102 (expresion -> expresion AND exp_bool rel_op exp_bool .)
    OR              reduce using rule 102 (expresion -> expresion AND exp_bool rel_op exp_bool .)
    ID              reduce using rule 102 (expresion -> expresion AND exp_bool rel_op exp_bool .)
    IF              reduce using rule 102 (expresion -> expresion AND exp_bool rel_op exp_bool .)
    READ            reduce using rule 102 (expresion -> expresion AND exp_bool rel_op exp_bool .)
    PRINT           reduce using rule 102 (expresion -> expresion AND exp_bool rel_op exp_bool .)
    WHILE           reduce using rule 102 (expresion -> expresion AND exp_bool rel_op exp_bool .)
    RBRACE          reduce using rule 102 (expresion -> expresion AND exp_bool rel_op exp_bool .)
    VAR             reduce using rule 102 (expresion -> expresion AND exp_bool rel_op exp_bool .)
    PUBLIC          reduce using rule 102 (expresion -> expresion AND exp_bool rel_op exp_bool .)
    PRIVATE         reduce using rule 102 (expresion -> expresion AND exp_bool rel_op exp_bool .)
    PROTECTED       reduce using rule 102 (expresion -> expresion AND exp_bool rel_op exp_bool .)
    RETURN          reduce using rule 102 (expresion -> expresion AND exp_bool rel_op exp_bool .)
    RPAREN          reduce using rule 102 (expresion -> expresion AND exp_bool rel_op exp_bool .)
    COMMA           reduce using rule 102 (expresion -> expresion AND exp_bool rel_op exp_bool .)


state 203

    (103) expresion -> expresion OR exp_bool rel_op exp_bool .

    AND             reduce using rule 103 (expresion -> expresion OR exp_bool rel_op exp_bool .)
    OR              reduce using rule 103 (expresion -> expresion OR exp_bool rel_op exp_bool .)
    ID              reduce using rule 103 (expresion -> expresion OR exp_bool rel_op exp_bool .)
    IF              reduce using rule 103 (expresion -> expresion OR exp_bool rel_op exp_bool .)
    READ            reduce using rule 103 (expresion -> expresion OR exp_bool rel_op exp_bool .)
    PRINT           reduce using rule 103 (expresion -> expresion OR exp_bool rel_op exp_bool .)
    WHILE           reduce using rule 103 (expresion -> expresion OR exp_bool rel_op exp_bool .)
    RBRACE          reduce using rule 103 (expresion -> expresion OR exp_bool rel_op exp_bool .)
    VAR             reduce using rule 103 (expresion -> expresion OR exp_bool rel_op exp_bool .)
    PUBLIC          reduce using rule 103 (expresion -> expresion OR exp_bool rel_op exp_bool .)
    PRIVATE         reduce using rule 103 (expresion -> expresion OR exp_bool rel_op exp_bool .)
    PROTECTED       reduce using rule 103 (expresion -> expresion OR exp_bool rel_op exp_bool .)
    RETURN          reduce using rule 103 (expresion -> expresion OR exp_bool rel_op exp_bool .)
    RPAREN          reduce using rule 103 (expresion -> expresion OR exp_bool rel_op exp_bool .)
    COMMA           reduce using rule 103 (expresion -> expresion OR exp_bool rel_op exp_bool .)


state 204

    (68) aux -> ID LBRACKET cint RBRACKET LBRACKET cint . RBRACKET COLON tipo_simple
    (69) aux -> ID LBRACKET cint RBRACKET LBRACKET cint . RBRACKET COLON tipo_compuesto

    RBRACKET        shift and go to state 216


state 205

    (70) aux -> ID LBRACKET cint RBRACKET COLON tipo_simple .

    ID              reduce using rule 70 (aux -> ID LBRACKET cint RBRACKET COLON tipo_simple .)
    VAR             reduce using rule 70 (aux -> ID LBRACKET cint RBRACKET COLON tipo_simple .)
    RBRACE          reduce using rule 70 (aux -> ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PUBLIC          reduce using rule 70 (aux -> ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PRIVATE         reduce using rule 70 (aux -> ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PROTECTED       reduce using rule 70 (aux -> ID LBRACKET cint RBRACKET COLON tipo_simple .)
    IF              reduce using rule 70 (aux -> ID LBRACKET cint RBRACKET COLON tipo_simple .)
    READ            reduce using rule 70 (aux -> ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PRINT           reduce using rule 70 (aux -> ID LBRACKET cint RBRACKET COLON tipo_simple .)
    WHILE           reduce using rule 70 (aux -> ID LBRACKET cint RBRACKET COLON tipo_simple .)
    RETURN          reduce using rule 70 (aux -> ID LBRACKET cint RBRACKET COLON tipo_simple .)


state 206

    (71) aux -> ID LBRACKET cint RBRACKET COLON tipo_compuesto .

    ID              reduce using rule 71 (aux -> ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    VAR             reduce using rule 71 (aux -> ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RBRACE          reduce using rule 71 (aux -> ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PUBLIC          reduce using rule 71 (aux -> ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRIVATE         reduce using rule 71 (aux -> ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PROTECTED       reduce using rule 71 (aux -> ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    IF              reduce using rule 71 (aux -> ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    READ            reduce using rule 71 (aux -> ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRINT           reduce using rule 71 (aux -> ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    WHILE           reduce using rule 71 (aux -> ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RETURN          reduce using rule 71 (aux -> ID LBRACKET cint RBRACKET COLON tipo_compuesto .)


state 207

    (12) contexto_const -> LBRACE vars . RBRACE
    (14) contexto_const -> LBRACE vars . estatuto RBRACE
    (64) vars -> vars . VAR aux
    (15) estatuto -> . asignacion
    (16) estatuto -> . llamada_func
    (17) estatuto -> . objeto_metodo
    (18) estatuto -> . condicion
    (19) estatuto -> . lectura
    (20) estatuto -> . escritura
    (21) estatuto -> . ciclo
    (22) estatuto -> . estatuto asignacion
    (23) estatuto -> . estatuto llamada_func
    (24) estatuto -> . estatuto objeto_metodo
    (25) estatuto -> . estatuto condicion
    (26) estatuto -> . estatuto lectura
    (27) estatuto -> . estatuto escritura
    (28) estatuto -> . estatuto ciclo
    (79) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (80) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (81) asignacion -> . objeto_aAcceso EQUALS expresion
    (82) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> . ID EQUALS expresion
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID EQUALS llamada_func
    (91) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . ID EQUALS objeto_metodo
    (44) llamada_func -> . ID LPAREN aux3 RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (30) condicion -> . IF LPAREN expresion RPAREN bloque
    (31) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (33) lectura -> . READ LPAREN ID RPAREN
    (34) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (35) escritura -> . PRINT LPAREN aux5 RPAREN
    (29) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (132) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          shift and go to state 217
    VAR             shift and go to state 36
    ID              shift and go to state 18
    IF              shift and go to state 29
    READ            shift and go to state 30
    PRINT           shift and go to state 31
    WHILE           shift and go to state 32

    estatuto                       shift and go to state 218
    asignacion                     shift and go to state 20
    llamada_func                   shift and go to state 21
    objeto_metodo                  shift and go to state 22
    condicion                      shift and go to state 23
    lectura                        shift and go to state 24
    escritura                      shift and go to state 25
    ciclo                          shift and go to state 26
    objeto_aAcceso                 shift and go to state 28

state 208

    (13) contexto_const -> LBRACE estatuto . RBRACE
    (22) estatuto -> estatuto . asignacion
    (23) estatuto -> estatuto . llamada_func
    (24) estatuto -> estatuto . objeto_metodo
    (25) estatuto -> estatuto . condicion
    (26) estatuto -> estatuto . lectura
    (27) estatuto -> estatuto . escritura
    (28) estatuto -> estatuto . ciclo
    (79) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (80) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (81) asignacion -> . objeto_aAcceso EQUALS expresion
    (82) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> . ID EQUALS expresion
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID EQUALS llamada_func
    (91) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . ID EQUALS objeto_metodo
    (44) llamada_func -> . ID LPAREN aux3 RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (30) condicion -> . IF LPAREN expresion RPAREN bloque
    (31) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (33) lectura -> . READ LPAREN ID RPAREN
    (34) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (35) escritura -> . PRINT LPAREN aux5 RPAREN
    (29) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (132) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          shift and go to state 219
    ID              shift and go to state 18
    IF              shift and go to state 29
    READ            shift and go to state 30
    PRINT           shift and go to state 31
    WHILE           shift and go to state 32

    asignacion                     shift and go to state 37
    llamada_func                   shift and go to state 38
    objeto_metodo                  shift and go to state 39
    condicion                      shift and go to state 40
    lectura                        shift and go to state 41
    escritura                      shift and go to state 42
    ciclo                          shift and go to state 43
    objeto_aAcceso                 shift and go to state 28

state 209

    (59) aux4 -> aux4 COMMA tipo_simple ID .

    COMMA           reduce using rule 59 (aux4 -> aux4 COMMA tipo_simple ID .)
    RPAREN          reduce using rule 59 (aux4 -> aux4 COMMA tipo_simple ID .)


state 210

    (79) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS expresion
    (85) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS llamada_func
    (91) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS objeto_metodo

    EQUALS          shift and go to state 220


state 211

    (31) condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN . expresion RPAREN bloque
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . expresion AND exp_bool
    (101) expresion -> . expresion OR exp_bool
    (102) expresion -> . expresion AND exp_bool rel_op exp_bool
    (103) expresion -> . expresion OR exp_bool rel_op exp_bool
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    ID              shift and go to state 62
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    expresion                      shift and go to state 221
    exp_bool                       shift and go to state 79
    exp                            shift and go to state 82
    termino                        shift and go to state 64
    factor                         shift and go to state 67
    objeto_aAcceso                 shift and go to state 69
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 212

    (32) bloque -> LBRACE estatuto RBRACE .

    ELIF            reduce using rule 32 (bloque -> LBRACE estatuto RBRACE .)
    ID              reduce using rule 32 (bloque -> LBRACE estatuto RBRACE .)
    IF              reduce using rule 32 (bloque -> LBRACE estatuto RBRACE .)
    READ            reduce using rule 32 (bloque -> LBRACE estatuto RBRACE .)
    PRINT           reduce using rule 32 (bloque -> LBRACE estatuto RBRACE .)
    WHILE           reduce using rule 32 (bloque -> LBRACE estatuto RBRACE .)
    RBRACE          reduce using rule 32 (bloque -> LBRACE estatuto RBRACE .)
    VAR             reduce using rule 32 (bloque -> LBRACE estatuto RBRACE .)
    PUBLIC          reduce using rule 32 (bloque -> LBRACE estatuto RBRACE .)
    PRIVATE         reduce using rule 32 (bloque -> LBRACE estatuto RBRACE .)
    PROTECTED       reduce using rule 32 (bloque -> LBRACE estatuto RBRACE .)
    RETURN          reduce using rule 32 (bloque -> LBRACE estatuto RBRACE .)


state 213

    (48) contexto_func -> LBRACE vars . RBRACE
    (50) contexto_func -> LBRACE vars . estatuto RBRACE
    (51) contexto_func -> LBRACE vars . RETURN INT ID RBRACE
    (52) contexto_func -> LBRACE vars . RETURN FLOAT ID RBRACE
    (55) contexto_func -> LBRACE vars . estatuto RETURN INT ID RBRACE
    (56) contexto_func -> LBRACE vars . estatuto RETURN FLOAT ID RBRACE
    (64) vars -> vars . VAR aux
    (15) estatuto -> . asignacion
    (16) estatuto -> . llamada_func
    (17) estatuto -> . objeto_metodo
    (18) estatuto -> . condicion
    (19) estatuto -> . lectura
    (20) estatuto -> . escritura
    (21) estatuto -> . ciclo
    (22) estatuto -> . estatuto asignacion
    (23) estatuto -> . estatuto llamada_func
    (24) estatuto -> . estatuto objeto_metodo
    (25) estatuto -> . estatuto condicion
    (26) estatuto -> . estatuto lectura
    (27) estatuto -> . estatuto escritura
    (28) estatuto -> . estatuto ciclo
    (79) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (80) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (81) asignacion -> . objeto_aAcceso EQUALS expresion
    (82) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> . ID EQUALS expresion
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID EQUALS llamada_func
    (91) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . ID EQUALS objeto_metodo
    (44) llamada_func -> . ID LPAREN aux3 RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (30) condicion -> . IF LPAREN expresion RPAREN bloque
    (31) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (33) lectura -> . READ LPAREN ID RPAREN
    (34) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (35) escritura -> . PRINT LPAREN aux5 RPAREN
    (29) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (132) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          shift and go to state 222
    RETURN          shift and go to state 224
    VAR             shift and go to state 36
    ID              shift and go to state 18
    IF              shift and go to state 29
    READ            shift and go to state 30
    PRINT           shift and go to state 31
    WHILE           shift and go to state 32

    estatuto                       shift and go to state 223
    asignacion                     shift and go to state 20
    llamada_func                   shift and go to state 21
    objeto_metodo                  shift and go to state 22
    condicion                      shift and go to state 23
    lectura                        shift and go to state 24
    escritura                      shift and go to state 25
    ciclo                          shift and go to state 26
    objeto_aAcceso                 shift and go to state 28

state 214

    (49) contexto_func -> LBRACE estatuto . RBRACE
    (53) contexto_func -> LBRACE estatuto . RETURN INT ID RBRACE
    (54) contexto_func -> LBRACE estatuto . RETURN FLOAT ID RBRACE
    (22) estatuto -> estatuto . asignacion
    (23) estatuto -> estatuto . llamada_func
    (24) estatuto -> estatuto . objeto_metodo
    (25) estatuto -> estatuto . condicion
    (26) estatuto -> estatuto . lectura
    (27) estatuto -> estatuto . escritura
    (28) estatuto -> estatuto . ciclo
    (79) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (80) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (81) asignacion -> . objeto_aAcceso EQUALS expresion
    (82) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> . ID EQUALS expresion
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID EQUALS llamada_func
    (91) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . ID EQUALS objeto_metodo
    (44) llamada_func -> . ID LPAREN aux3 RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (30) condicion -> . IF LPAREN expresion RPAREN bloque
    (31) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (33) lectura -> . READ LPAREN ID RPAREN
    (34) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (35) escritura -> . PRINT LPAREN aux5 RPAREN
    (29) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (132) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          shift and go to state 225
    RETURN          shift and go to state 226
    ID              shift and go to state 18
    IF              shift and go to state 29
    READ            shift and go to state 30
    PRINT           shift and go to state 31
    WHILE           shift and go to state 32

    asignacion                     shift and go to state 37
    llamada_func                   shift and go to state 38
    objeto_metodo                  shift and go to state 39
    condicion                      shift and go to state 40
    lectura                        shift and go to state 41
    escritura                      shift and go to state 42
    ciclo                          shift and go to state 43
    objeto_aAcceso                 shift and go to state 28

state 215

    (82) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . expresion
    (88) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . llamada_func
    (94) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . expresion AND exp_bool
    (101) expresion -> . expresion OR exp_bool
    (102) expresion -> . expresion AND exp_bool rel_op exp_bool
    (103) expresion -> . expresion OR exp_bool rel_op exp_bool
    (44) llamada_func -> . ID LPAREN aux3 RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    ID              shift and go to state 75
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    exp                            shift and go to state 82
    expresion                      shift and go to state 227
    llamada_func                   shift and go to state 228
    objeto_metodo                  shift and go to state 229
    exp_bool                       shift and go to state 79
    termino                        shift and go to state 64
    factor                         shift and go to state 67
    objeto_aAcceso                 shift and go to state 69
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 216

    (68) aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET . COLON tipo_simple
    (69) aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET . COLON tipo_compuesto

    COLON           shift and go to state 230


state 217

    (12) contexto_const -> LBRACE vars RBRACE .

    RBRACE          reduce using rule 12 (contexto_const -> LBRACE vars RBRACE .)
    VAR             reduce using rule 12 (contexto_const -> LBRACE vars RBRACE .)
    PUBLIC          reduce using rule 12 (contexto_const -> LBRACE vars RBRACE .)
    PRIVATE         reduce using rule 12 (contexto_const -> LBRACE vars RBRACE .)
    PROTECTED       reduce using rule 12 (contexto_const -> LBRACE vars RBRACE .)
    ID              reduce using rule 12 (contexto_const -> LBRACE vars RBRACE .)
    IF              reduce using rule 12 (contexto_const -> LBRACE vars RBRACE .)
    READ            reduce using rule 12 (contexto_const -> LBRACE vars RBRACE .)
    PRINT           reduce using rule 12 (contexto_const -> LBRACE vars RBRACE .)
    WHILE           reduce using rule 12 (contexto_const -> LBRACE vars RBRACE .)


state 218

    (14) contexto_const -> LBRACE vars estatuto . RBRACE
    (22) estatuto -> estatuto . asignacion
    (23) estatuto -> estatuto . llamada_func
    (24) estatuto -> estatuto . objeto_metodo
    (25) estatuto -> estatuto . condicion
    (26) estatuto -> estatuto . lectura
    (27) estatuto -> estatuto . escritura
    (28) estatuto -> estatuto . ciclo
    (79) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (80) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (81) asignacion -> . objeto_aAcceso EQUALS expresion
    (82) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> . ID EQUALS expresion
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID EQUALS llamada_func
    (91) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . ID EQUALS objeto_metodo
    (44) llamada_func -> . ID LPAREN aux3 RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (30) condicion -> . IF LPAREN expresion RPAREN bloque
    (31) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (33) lectura -> . READ LPAREN ID RPAREN
    (34) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (35) escritura -> . PRINT LPAREN aux5 RPAREN
    (29) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (132) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          shift and go to state 231
    ID              shift and go to state 18
    IF              shift and go to state 29
    READ            shift and go to state 30
    PRINT           shift and go to state 31
    WHILE           shift and go to state 32

    asignacion                     shift and go to state 37
    llamada_func                   shift and go to state 38
    objeto_metodo                  shift and go to state 39
    condicion                      shift and go to state 40
    lectura                        shift and go to state 41
    escritura                      shift and go to state 42
    ciclo                          shift and go to state 43
    objeto_aAcceso                 shift and go to state 28

state 219

    (13) contexto_const -> LBRACE estatuto RBRACE .

    RBRACE          reduce using rule 13 (contexto_const -> LBRACE estatuto RBRACE .)
    VAR             reduce using rule 13 (contexto_const -> LBRACE estatuto RBRACE .)
    PUBLIC          reduce using rule 13 (contexto_const -> LBRACE estatuto RBRACE .)
    PRIVATE         reduce using rule 13 (contexto_const -> LBRACE estatuto RBRACE .)
    PROTECTED       reduce using rule 13 (contexto_const -> LBRACE estatuto RBRACE .)
    ID              reduce using rule 13 (contexto_const -> LBRACE estatuto RBRACE .)
    IF              reduce using rule 13 (contexto_const -> LBRACE estatuto RBRACE .)
    READ            reduce using rule 13 (contexto_const -> LBRACE estatuto RBRACE .)
    PRINT           reduce using rule 13 (contexto_const -> LBRACE estatuto RBRACE .)
    WHILE           reduce using rule 13 (contexto_const -> LBRACE estatuto RBRACE .)


state 220

    (79) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . expresion
    (85) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . llamada_func
    (91) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . expresion AND exp_bool
    (101) expresion -> . expresion OR exp_bool
    (102) expresion -> . expresion AND exp_bool rel_op exp_bool
    (103) expresion -> . expresion OR exp_bool rel_op exp_bool
    (44) llamada_func -> . ID LPAREN aux3 RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    ID              shift and go to state 75
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    LPAREN          shift and go to state 68
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    CINT            shift and go to state 73
    NUMBER          shift and go to state 74

    objeto_aAcceso                 shift and go to state 69
    exp                            shift and go to state 82
    expresion                      shift and go to state 232
    llamada_func                   shift and go to state 233
    objeto_metodo                  shift and go to state 234
    exp_bool                       shift and go to state 79
    termino                        shift and go to state 64
    factor                         shift and go to state 67
    var                            shift and go to state 70
    cint                           shift and go to state 71
    cfloat                         shift and go to state 72

state 221

    (31) condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion . RPAREN bloque
    (100) expresion -> expresion . AND exp_bool
    (101) expresion -> expresion . OR exp_bool
    (102) expresion -> expresion . AND exp_bool rel_op exp_bool
    (103) expresion -> expresion . OR exp_bool rel_op exp_bool

    RPAREN          shift and go to state 235
    AND             shift and go to state 121
    OR              shift and go to state 122


state 222

    (48) contexto_func -> LBRACE vars RBRACE .

    RBRACE          reduce using rule 48 (contexto_func -> LBRACE vars RBRACE .)
    VAR             reduce using rule 48 (contexto_func -> LBRACE vars RBRACE .)
    PUBLIC          reduce using rule 48 (contexto_func -> LBRACE vars RBRACE .)
    PRIVATE         reduce using rule 48 (contexto_func -> LBRACE vars RBRACE .)
    PROTECTED       reduce using rule 48 (contexto_func -> LBRACE vars RBRACE .)
    ID              reduce using rule 48 (contexto_func -> LBRACE vars RBRACE .)
    IF              reduce using rule 48 (contexto_func -> LBRACE vars RBRACE .)
    READ            reduce using rule 48 (contexto_func -> LBRACE vars RBRACE .)
    PRINT           reduce using rule 48 (contexto_func -> LBRACE vars RBRACE .)
    WHILE           reduce using rule 48 (contexto_func -> LBRACE vars RBRACE .)


state 223

    (50) contexto_func -> LBRACE vars estatuto . RBRACE
    (55) contexto_func -> LBRACE vars estatuto . RETURN INT ID RBRACE
    (56) contexto_func -> LBRACE vars estatuto . RETURN FLOAT ID RBRACE
    (22) estatuto -> estatuto . asignacion
    (23) estatuto -> estatuto . llamada_func
    (24) estatuto -> estatuto . objeto_metodo
    (25) estatuto -> estatuto . condicion
    (26) estatuto -> estatuto . lectura
    (27) estatuto -> estatuto . escritura
    (28) estatuto -> estatuto . ciclo
    (79) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (80) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (81) asignacion -> . objeto_aAcceso EQUALS expresion
    (82) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> . ID EQUALS expresion
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID EQUALS llamada_func
    (91) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . ID EQUALS objeto_metodo
    (44) llamada_func -> . ID LPAREN aux3 RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (30) condicion -> . IF LPAREN expresion RPAREN bloque
    (31) condicion -> . IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque
    (33) lectura -> . READ LPAREN ID RPAREN
    (34) lectura -> . READ LPAREN objeto_aAcceso RPAREN
    (35) escritura -> . PRINT LPAREN aux5 RPAREN
    (29) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (132) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          shift and go to state 236
    RETURN          shift and go to state 237
    ID              shift and go to state 18
    IF              shift and go to state 29
    READ            shift and go to state 30
    PRINT           shift and go to state 31
    WHILE           shift and go to state 32

    asignacion                     shift and go to state 37
    llamada_func                   shift and go to state 38
    objeto_metodo                  shift and go to state 39
    condicion                      shift and go to state 40
    lectura                        shift and go to state 41
    escritura                      shift and go to state 42
    ciclo                          shift and go to state 43
    objeto_aAcceso                 shift and go to state 28

state 224

    (51) contexto_func -> LBRACE vars RETURN . INT ID RBRACE
    (52) contexto_func -> LBRACE vars RETURN . FLOAT ID RBRACE

    INT             shift and go to state 238
    FLOAT           shift and go to state 239


state 225

    (49) contexto_func -> LBRACE estatuto RBRACE .

    RBRACE          reduce using rule 49 (contexto_func -> LBRACE estatuto RBRACE .)
    VAR             reduce using rule 49 (contexto_func -> LBRACE estatuto RBRACE .)
    PUBLIC          reduce using rule 49 (contexto_func -> LBRACE estatuto RBRACE .)
    PRIVATE         reduce using rule 49 (contexto_func -> LBRACE estatuto RBRACE .)
    PROTECTED       reduce using rule 49 (contexto_func -> LBRACE estatuto RBRACE .)
    ID              reduce using rule 49 (contexto_func -> LBRACE estatuto RBRACE .)
    IF              reduce using rule 49 (contexto_func -> LBRACE estatuto RBRACE .)
    READ            reduce using rule 49 (contexto_func -> LBRACE estatuto RBRACE .)
    PRINT           reduce using rule 49 (contexto_func -> LBRACE estatuto RBRACE .)
    WHILE           reduce using rule 49 (contexto_func -> LBRACE estatuto RBRACE .)


state 226

    (53) contexto_func -> LBRACE estatuto RETURN . INT ID RBRACE
    (54) contexto_func -> LBRACE estatuto RETURN . FLOAT ID RBRACE

    INT             shift and go to state 240
    FLOAT           shift and go to state 241


state 227

    (82) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .
    (100) expresion -> expresion . AND exp_bool
    (101) expresion -> expresion . OR exp_bool
    (102) expresion -> expresion . AND exp_bool rel_op exp_bool
    (103) expresion -> expresion . OR exp_bool rel_op exp_bool

    ID              reduce using rule 82 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 82 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 82 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 82 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 82 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 82 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    VAR             reduce using rule 82 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 82 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 82 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 82 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 82 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    AND             shift and go to state 121
    OR              shift and go to state 122


state 228

    (88) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .

    ID              reduce using rule 88 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 88 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 88 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 88 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 88 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 88 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    VAR             reduce using rule 88 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 88 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 88 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 88 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 88 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)


state 229

    (94) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .

    ID              reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    VAR             reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 230

    (68) aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON . tipo_simple
    (69) aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON . tipo_compuesto
    (76) tipo_simple -> . INT
    (77) tipo_simple -> . FLOAT
    (78) tipo_compuesto -> . ID

    INT             shift and go to state 135
    FLOAT           shift and go to state 136
    ID              shift and go to state 132

    tipo_simple                    shift and go to state 242
    tipo_compuesto                 shift and go to state 243

state 231

    (14) contexto_const -> LBRACE vars estatuto RBRACE .

    RBRACE          reduce using rule 14 (contexto_const -> LBRACE vars estatuto RBRACE .)
    VAR             reduce using rule 14 (contexto_const -> LBRACE vars estatuto RBRACE .)
    PUBLIC          reduce using rule 14 (contexto_const -> LBRACE vars estatuto RBRACE .)
    PRIVATE         reduce using rule 14 (contexto_const -> LBRACE vars estatuto RBRACE .)
    PROTECTED       reduce using rule 14 (contexto_const -> LBRACE vars estatuto RBRACE .)
    ID              reduce using rule 14 (contexto_const -> LBRACE vars estatuto RBRACE .)
    IF              reduce using rule 14 (contexto_const -> LBRACE vars estatuto RBRACE .)
    READ            reduce using rule 14 (contexto_const -> LBRACE vars estatuto RBRACE .)
    PRINT           reduce using rule 14 (contexto_const -> LBRACE vars estatuto RBRACE .)
    WHILE           reduce using rule 14 (contexto_const -> LBRACE vars estatuto RBRACE .)


state 232

    (79) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .
    (100) expresion -> expresion . AND exp_bool
    (101) expresion -> expresion . OR exp_bool
    (102) expresion -> expresion . AND exp_bool rel_op exp_bool
    (103) expresion -> expresion . OR exp_bool rel_op exp_bool

    ID              reduce using rule 79 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 79 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 79 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 79 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 79 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 79 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    VAR             reduce using rule 79 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 79 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 79 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 79 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 79 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    AND             shift and go to state 121
    OR              shift and go to state 122


state 233

    (85) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .

    ID              reduce using rule 85 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 85 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 85 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 85 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 85 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 85 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    VAR             reduce using rule 85 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 85 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 85 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 85 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 85 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)


state 234

    (91) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .

    ID              reduce using rule 91 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 91 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 91 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 91 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 91 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 91 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    VAR             reduce using rule 91 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 91 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 91 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 91 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 91 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 235

    (31) condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN . bloque
    (32) bloque -> . LBRACE estatuto RBRACE

    LBRACE          shift and go to state 175

    bloque                         shift and go to state 244

state 236

    (50) contexto_func -> LBRACE vars estatuto RBRACE .

    RBRACE          reduce using rule 50 (contexto_func -> LBRACE vars estatuto RBRACE .)
    VAR             reduce using rule 50 (contexto_func -> LBRACE vars estatuto RBRACE .)
    PUBLIC          reduce using rule 50 (contexto_func -> LBRACE vars estatuto RBRACE .)
    PRIVATE         reduce using rule 50 (contexto_func -> LBRACE vars estatuto RBRACE .)
    PROTECTED       reduce using rule 50 (contexto_func -> LBRACE vars estatuto RBRACE .)
    ID              reduce using rule 50 (contexto_func -> LBRACE vars estatuto RBRACE .)
    IF              reduce using rule 50 (contexto_func -> LBRACE vars estatuto RBRACE .)
    READ            reduce using rule 50 (contexto_func -> LBRACE vars estatuto RBRACE .)
    PRINT           reduce using rule 50 (contexto_func -> LBRACE vars estatuto RBRACE .)
    WHILE           reduce using rule 50 (contexto_func -> LBRACE vars estatuto RBRACE .)


state 237

    (55) contexto_func -> LBRACE vars estatuto RETURN . INT ID RBRACE
    (56) contexto_func -> LBRACE vars estatuto RETURN . FLOAT ID RBRACE

    INT             shift and go to state 245
    FLOAT           shift and go to state 246


state 238

    (51) contexto_func -> LBRACE vars RETURN INT . ID RBRACE

    ID              shift and go to state 247


state 239

    (52) contexto_func -> LBRACE vars RETURN FLOAT . ID RBRACE

    ID              shift and go to state 248


state 240

    (53) contexto_func -> LBRACE estatuto RETURN INT . ID RBRACE

    ID              shift and go to state 249


state 241

    (54) contexto_func -> LBRACE estatuto RETURN FLOAT . ID RBRACE

    ID              shift and go to state 250


state 242

    (68) aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .

    ID              reduce using rule 68 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    VAR             reduce using rule 68 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    RBRACE          reduce using rule 68 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PUBLIC          reduce using rule 68 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PRIVATE         reduce using rule 68 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PROTECTED       reduce using rule 68 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    IF              reduce using rule 68 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    READ            reduce using rule 68 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PRINT           reduce using rule 68 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    WHILE           reduce using rule 68 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    RETURN          reduce using rule 68 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)


state 243

    (69) aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .

    ID              reduce using rule 69 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    VAR             reduce using rule 69 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RBRACE          reduce using rule 69 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PUBLIC          reduce using rule 69 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRIVATE         reduce using rule 69 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PROTECTED       reduce using rule 69 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    IF              reduce using rule 69 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    READ            reduce using rule 69 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRINT           reduce using rule 69 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    WHILE           reduce using rule 69 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RETURN          reduce using rule 69 (aux -> ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)


state 244

    (31) condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque .

    ID              reduce using rule 31 (condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque .)
    IF              reduce using rule 31 (condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque .)
    READ            reduce using rule 31 (condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque .)
    PRINT           reduce using rule 31 (condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque .)
    WHILE           reduce using rule 31 (condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque .)
    RBRACE          reduce using rule 31 (condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque .)
    VAR             reduce using rule 31 (condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque .)
    PUBLIC          reduce using rule 31 (condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque .)
    PRIVATE         reduce using rule 31 (condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque .)
    PROTECTED       reduce using rule 31 (condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque .)
    RETURN          reduce using rule 31 (condicion -> IF LPAREN expresion RPAREN bloque ELIF LPAREN expresion RPAREN bloque .)


state 245

    (55) contexto_func -> LBRACE vars estatuto RETURN INT . ID RBRACE

    ID              shift and go to state 251


state 246

    (56) contexto_func -> LBRACE vars estatuto RETURN FLOAT . ID RBRACE

    ID              shift and go to state 252


state 247

    (51) contexto_func -> LBRACE vars RETURN INT ID . RBRACE

    RBRACE          shift and go to state 253


state 248

    (52) contexto_func -> LBRACE vars RETURN FLOAT ID . RBRACE

    RBRACE          shift and go to state 254


state 249

    (53) contexto_func -> LBRACE estatuto RETURN INT ID . RBRACE

    RBRACE          shift and go to state 255


state 250

    (54) contexto_func -> LBRACE estatuto RETURN FLOAT ID . RBRACE

    RBRACE          shift and go to state 256


state 251

    (55) contexto_func -> LBRACE vars estatuto RETURN INT ID . RBRACE

    RBRACE          shift and go to state 257


state 252

    (56) contexto_func -> LBRACE vars estatuto RETURN FLOAT ID . RBRACE

    RBRACE          shift and go to state 258


state 253

    (51) contexto_func -> LBRACE vars RETURN INT ID RBRACE .

    RBRACE          reduce using rule 51 (contexto_func -> LBRACE vars RETURN INT ID RBRACE .)
    VAR             reduce using rule 51 (contexto_func -> LBRACE vars RETURN INT ID RBRACE .)
    PUBLIC          reduce using rule 51 (contexto_func -> LBRACE vars RETURN INT ID RBRACE .)
    PRIVATE         reduce using rule 51 (contexto_func -> LBRACE vars RETURN INT ID RBRACE .)
    PROTECTED       reduce using rule 51 (contexto_func -> LBRACE vars RETURN INT ID RBRACE .)
    ID              reduce using rule 51 (contexto_func -> LBRACE vars RETURN INT ID RBRACE .)
    IF              reduce using rule 51 (contexto_func -> LBRACE vars RETURN INT ID RBRACE .)
    READ            reduce using rule 51 (contexto_func -> LBRACE vars RETURN INT ID RBRACE .)
    PRINT           reduce using rule 51 (contexto_func -> LBRACE vars RETURN INT ID RBRACE .)
    WHILE           reduce using rule 51 (contexto_func -> LBRACE vars RETURN INT ID RBRACE .)


state 254

    (52) contexto_func -> LBRACE vars RETURN FLOAT ID RBRACE .

    RBRACE          reduce using rule 52 (contexto_func -> LBRACE vars RETURN FLOAT ID RBRACE .)
    VAR             reduce using rule 52 (contexto_func -> LBRACE vars RETURN FLOAT ID RBRACE .)
    PUBLIC          reduce using rule 52 (contexto_func -> LBRACE vars RETURN FLOAT ID RBRACE .)
    PRIVATE         reduce using rule 52 (contexto_func -> LBRACE vars RETURN FLOAT ID RBRACE .)
    PROTECTED       reduce using rule 52 (contexto_func -> LBRACE vars RETURN FLOAT ID RBRACE .)
    ID              reduce using rule 52 (contexto_func -> LBRACE vars RETURN FLOAT ID RBRACE .)
    IF              reduce using rule 52 (contexto_func -> LBRACE vars RETURN FLOAT ID RBRACE .)
    READ            reduce using rule 52 (contexto_func -> LBRACE vars RETURN FLOAT ID RBRACE .)
    PRINT           reduce using rule 52 (contexto_func -> LBRACE vars RETURN FLOAT ID RBRACE .)
    WHILE           reduce using rule 52 (contexto_func -> LBRACE vars RETURN FLOAT ID RBRACE .)


state 255

    (53) contexto_func -> LBRACE estatuto RETURN INT ID RBRACE .

    RBRACE          reduce using rule 53 (contexto_func -> LBRACE estatuto RETURN INT ID RBRACE .)
    VAR             reduce using rule 53 (contexto_func -> LBRACE estatuto RETURN INT ID RBRACE .)
    PUBLIC          reduce using rule 53 (contexto_func -> LBRACE estatuto RETURN INT ID RBRACE .)
    PRIVATE         reduce using rule 53 (contexto_func -> LBRACE estatuto RETURN INT ID RBRACE .)
    PROTECTED       reduce using rule 53 (contexto_func -> LBRACE estatuto RETURN INT ID RBRACE .)
    ID              reduce using rule 53 (contexto_func -> LBRACE estatuto RETURN INT ID RBRACE .)
    IF              reduce using rule 53 (contexto_func -> LBRACE estatuto RETURN INT ID RBRACE .)
    READ            reduce using rule 53 (contexto_func -> LBRACE estatuto RETURN INT ID RBRACE .)
    PRINT           reduce using rule 53 (contexto_func -> LBRACE estatuto RETURN INT ID RBRACE .)
    WHILE           reduce using rule 53 (contexto_func -> LBRACE estatuto RETURN INT ID RBRACE .)


state 256

    (54) contexto_func -> LBRACE estatuto RETURN FLOAT ID RBRACE .

    RBRACE          reduce using rule 54 (contexto_func -> LBRACE estatuto RETURN FLOAT ID RBRACE .)
    VAR             reduce using rule 54 (contexto_func -> LBRACE estatuto RETURN FLOAT ID RBRACE .)
    PUBLIC          reduce using rule 54 (contexto_func -> LBRACE estatuto RETURN FLOAT ID RBRACE .)
    PRIVATE         reduce using rule 54 (contexto_func -> LBRACE estatuto RETURN FLOAT ID RBRACE .)
    PROTECTED       reduce using rule 54 (contexto_func -> LBRACE estatuto RETURN FLOAT ID RBRACE .)
    ID              reduce using rule 54 (contexto_func -> LBRACE estatuto RETURN FLOAT ID RBRACE .)
    IF              reduce using rule 54 (contexto_func -> LBRACE estatuto RETURN FLOAT ID RBRACE .)
    READ            reduce using rule 54 (contexto_func -> LBRACE estatuto RETURN FLOAT ID RBRACE .)
    PRINT           reduce using rule 54 (contexto_func -> LBRACE estatuto RETURN FLOAT ID RBRACE .)
    WHILE           reduce using rule 54 (contexto_func -> LBRACE estatuto RETURN FLOAT ID RBRACE .)


state 257

    (55) contexto_func -> LBRACE vars estatuto RETURN INT ID RBRACE .

    RBRACE          reduce using rule 55 (contexto_func -> LBRACE vars estatuto RETURN INT ID RBRACE .)
    VAR             reduce using rule 55 (contexto_func -> LBRACE vars estatuto RETURN INT ID RBRACE .)
    PUBLIC          reduce using rule 55 (contexto_func -> LBRACE vars estatuto RETURN INT ID RBRACE .)
    PRIVATE         reduce using rule 55 (contexto_func -> LBRACE vars estatuto RETURN INT ID RBRACE .)
    PROTECTED       reduce using rule 55 (contexto_func -> LBRACE vars estatuto RETURN INT ID RBRACE .)
    ID              reduce using rule 55 (contexto_func -> LBRACE vars estatuto RETURN INT ID RBRACE .)
    IF              reduce using rule 55 (contexto_func -> LBRACE vars estatuto RETURN INT ID RBRACE .)
    READ            reduce using rule 55 (contexto_func -> LBRACE vars estatuto RETURN INT ID RBRACE .)
    PRINT           reduce using rule 55 (contexto_func -> LBRACE vars estatuto RETURN INT ID RBRACE .)
    WHILE           reduce using rule 55 (contexto_func -> LBRACE vars estatuto RETURN INT ID RBRACE .)


state 258

    (56) contexto_func -> LBRACE vars estatuto RETURN FLOAT ID RBRACE .

    RBRACE          reduce using rule 56 (contexto_func -> LBRACE vars estatuto RETURN FLOAT ID RBRACE .)
    VAR             reduce using rule 56 (contexto_func -> LBRACE vars estatuto RETURN FLOAT ID RBRACE .)
    PUBLIC          reduce using rule 56 (contexto_func -> LBRACE vars estatuto RETURN FLOAT ID RBRACE .)
    PRIVATE         reduce using rule 56 (contexto_func -> LBRACE vars estatuto RETURN FLOAT ID RBRACE .)
    PROTECTED       reduce using rule 56 (contexto_func -> LBRACE vars estatuto RETURN FLOAT ID RBRACE .)
    ID              reduce using rule 56 (contexto_func -> LBRACE vars estatuto RETURN FLOAT ID RBRACE .)
    IF              reduce using rule 56 (contexto_func -> LBRACE vars estatuto RETURN FLOAT ID RBRACE .)
    READ            reduce using rule 56 (contexto_func -> LBRACE vars estatuto RETURN FLOAT ID RBRACE .)
    PRINT           reduce using rule 56 (contexto_func -> LBRACE vars estatuto RETURN FLOAT ID RBRACE .)
    WHILE           reduce using rule 56 (contexto_func -> LBRACE vars estatuto RETURN FLOAT ID RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 14 resolved as shift
WARNING: shift/reduce conflict for ID in state 15 resolved as shift
WARNING: shift/reduce conflict for IF in state 15 resolved as shift
WARNING: shift/reduce conflict for READ in state 15 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 15 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 15 resolved as shift
WARNING: shift/reduce conflict for VAR in state 34 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 34 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 34 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 34 resolved as shift
WARNING: shift/reduce conflict for ID in state 34 resolved as shift
WARNING: shift/reduce conflict for IF in state 34 resolved as shift
WARNING: shift/reduce conflict for READ in state 34 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 34 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 34 resolved as shift
WARNING: shift/reduce conflict for ID in state 49 resolved as shift
WARNING: shift/reduce conflict for ID in state 60 resolved as shift
WARNING: shift/reduce conflict for ID in state 87 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 138 resolved as shift
