Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID aux_program class context
Rule 2     programa -> PROGRAM ID aux_program context
Rule 3     aux_program -> <empty>
Rule 4     class -> scope CLASS ID
Rule 5     class -> scope CLASS ID COLON ID
Rule 6     context -> LBRACE aux6 RBRACE
Rule 7     aux6 -> vars
Rule 8     aux6 -> constructor
Rule 9     aux6 -> funcion
Rule 10    aux6 -> estatuto
Rule 11    aux6 -> condicion
Rule 12    aux6 -> ciclo
Rule 13    aux6 -> vars aux6
Rule 14    aux6 -> constructor aux6
Rule 15    aux6 -> funcion aux6
Rule 16    aux6 -> estatuto aux6
Rule 17    aux6 -> condicion aux6
Rule 18    aux6 -> ciclo aux6
Rule 19    condicion -> IF LPAREN gotoF RPAREN bloque
Rule 20    condicion -> IF LPAREN gotoF RPAREN bloque elif
Rule 21    elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque
Rule 22    elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif
Rule 23    aux_elif -> <empty>
Rule 24    ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque
Rule 25    aux_ciclo -> <empty>
Rule 26    constructor -> PUBLIC ID LPAREN param RPAREN bloque
Rule 27    bloque -> LBRACE aux5 RBRACE
Rule 28    funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func
Rule 29    funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
Rule 30    id -> ID
Rule 31    type -> INT
Rule 32    type -> FLOAT
Rule 33    type -> CHAR
Rule 34    contexto_func -> LBRACE aux_contexto_func RBRACE
Rule 35    aux_contexto_func -> vars
Rule 36    aux_contexto_func -> estatuto
Rule 37    aux_contexto_func -> ciclo
Rule 38    aux_contexto_func -> RETURN exp_cond aux_return
Rule 39    aux_contexto_func -> vars aux_contexto_func
Rule 40    aux_contexto_func -> estatuto aux_contexto_func
Rule 41    aux_contexto_func -> ciclo aux_contexto_func
Rule 42    aux_contexto_func -> RETURN exp_cond aux_return aux_contexto_func
Rule 43    aux_return -> <empty>
Rule 44    aux5 -> estatuto
Rule 45    aux5 -> estatuto aux5
Rule 46    param -> <empty>
Rule 47    param -> tipo_simple ID
Rule 48    param -> tipo_simple ID COMMA param
Rule 49    aux_param -> <empty>
Rule 50    scope -> <empty>
Rule 51    scope -> PRIVATE
Rule 52    scope -> PUBLIC
Rule 53    scope -> PROTECTED
Rule 54    estatuto -> asignacion
Rule 55    estatuto -> escritura
Rule 56    estatuto -> llamada_func
Rule 57    estatuto -> objeto_metodo
Rule 58    estatuto -> lectura
Rule 59    lectura -> READ LPAREN aux4 RPAREN
Rule 60    aux4 -> ID
Rule 61    aux4 -> objeto_aAcceso
Rule 62    aux4 -> ID COMMA aux4
Rule 63    aux4 -> objeto_aAcceso COMMA aux4
Rule 64    escritura -> PRINT LPAREN aux3 RPAREN
Rule 65    aux3 -> expresion
Rule 66    aux3 -> llamada_func
Rule 67    aux3 -> objeto_metodo
Rule 68    aux3 -> CSTRING
Rule 69    aux3 -> expresion COMMA aux3
Rule 70    aux3 -> llamada_func COMMA aux3
Rule 71    aux3 -> objeto_metodo COMMA aux3
Rule 72    aux3 -> CSTRING COMMA aux3
Rule 73    vars -> VAR aux2 COLON tipo_simple
Rule 74    vars -> VAR aux2 COLON tipo_compuesto
Rule 75    vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple
Rule 76    vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
Rule 77    vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
Rule 78    vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
Rule 79    aux2 -> ID
Rule 80    aux2 -> ID COMMA aux2
Rule 81    tipo_simple -> INT
Rule 82    tipo_simple -> FLOAT
Rule 83    tipo_simple -> CHAR
Rule 84    tipo_compuesto -> ID
Rule 85    asignacion -> ID EQUALS expresion
Rule 86    asignacion -> ID EQUALS llamada_func
Rule 87    asignacion -> ID EQUALS objeto_metodo
Rule 88    asignacion -> objeto_aAcceso EQUALS expresion
Rule 89    asignacion -> objeto_aAcceso EQUALS llamada_func
Rule 90    asignacion -> objeto_aAcceso EQUALS objeto_metodo
Rule 91    asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion
Rule 92    asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func
Rule 93    asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 94    asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
Rule 95    asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
Rule 96    asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 97    asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
Rule 98    asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
Rule 99    asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 100   asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
Rule 101   asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
Rule 102   asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 103   objeto_metodo -> ID PERIOD llamada_func
Rule 104   llamada_func -> llamada_id llamada_lparen aux llamada_rparen
Rule 105   llamada_id -> ID
Rule 106   llamada_lparen -> LPAREN
Rule 107   llamada_rparen -> RPAREN
Rule 108   aux -> exp aux_exp
Rule 109   aux -> exp aux_exp aux_comma aux
Rule 110   aux_exp -> <empty>
Rule 111   aux_comma -> COMMA
Rule 112   gotoF -> exp_cond
Rule 113   exp_cond -> exp_bool
Rule 114   exp_cond -> exp_bool AND exp_cond
Rule 115   exp_cond -> exp_bool OR exp_cond
Rule 116   exp_bool -> TRUE
Rule 117   exp_bool -> FALSE
Rule 118   exp_bool -> expresion
Rule 119   expresion -> exp
Rule 120   expresion -> exp LT expresion
Rule 121   expresion -> exp GT expresion
Rule 122   expresion -> exp GE expresion
Rule 123   expresion -> exp LE expresion
Rule 124   expresion -> exp EQ expresion
Rule 125   expresion -> exp NE expresion
Rule 126   exp -> termino
Rule 127   exp -> exp PLUS termino
Rule 128   exp -> exp MINUS termino
Rule 129   termino -> factor
Rule 130   termino -> termino TIMES factor
Rule 131   termino -> termino DIVIDE factor
Rule 132   termino -> termino MODULO factor
Rule 133   factor -> LPAREN exp_cond RPAREN
Rule 134   factor -> PLUS objeto_aAcceso
Rule 135   factor -> MINUS objeto_aAcceso
Rule 136   factor -> PLUS var
Rule 137   factor -> MINUS var
Rule 138   factor -> var
Rule 139   factor -> objeto_aAcceso
Rule 140   var -> ID
Rule 141   var -> cint
Rule 142   var -> cfloat
Rule 143   var -> cchar
Rule 144   cint -> CINT
Rule 145   cfloat -> NUMBER
Rule 146   cchar -> CCHAR
Rule 147   objeto_aAcceso -> ID PERIOD ID

Terminals, with rules where they appear

AND                  : 114
CCHAR                : 146
CHAR                 : 33 83
CINT                 : 144
CLASS                : 4 5
COLON                : 5 73 74 75 76 77 78
COMMA                : 48 62 63 69 70 71 72 80 111
CSTRING              : 68 72
DEF                  : 28 29
DIVIDE               : 131
ELIF                 : 21 22
EQ                   : 124
EQUALS               : 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102
FALSE                : 117
FLOAT                : 32 82
GE                   : 122
GT                   : 121
ID                   : 1 2 4 5 5 26 30 47 48 60 62 75 76 77 78 79 80 84 85 86 87 91 92 93 97 98 99 103 105 140 147 147
IF                   : 19 20
INT                  : 31 81
LBRACE               : 6 27 34
LBRACKET             : 75 76 77 77 78 78 91 92 93 94 95 96 97 97 98 98 99 99 100 100 101 101 102 102
LE                   : 123
LPAREN               : 19 20 21 22 24 26 28 29 59 64 106 133
LT                   : 120
MINUS                : 128 135 137
MODULO               : 132
NE                   : 125
NUMBER               : 145
OR                   : 115
PERIOD               : 103 147
PLUS                 : 127 134 136
PRINT                : 64
PRIVATE              : 51
PROGRAM              : 1 2
PROTECTED            : 53
PUBLIC               : 26 52
RBRACE               : 6 27 34
RBRACKET             : 75 76 77 77 78 78 91 92 93 94 95 96 97 97 98 98 99 99 100 100 101 101 102 102
READ                 : 59
RETURN               : 38 42
RPAREN               : 19 20 21 22 24 26 28 29 59 64 107 133
TIMES                : 130
TRUE                 : 116
VAR                  : 73 74 75 76 77 78
VOID                 : 29
WHILE                : 24
error                : 

Nonterminals, with rules where they appear

asignacion           : 54
aux                  : 104 109
aux2                 : 73 74 80
aux3                 : 64 69 70 71 72
aux4                 : 59 62 63
aux5                 : 27 45
aux6                 : 6 13 14 15 16 17 18
aux_ciclo            : 24
aux_comma            : 109
aux_contexto_func    : 34 39 40 41 42
aux_elif             : 21 22
aux_exp              : 108 109
aux_param            : 28 29
aux_program          : 1 2
aux_return           : 38 42
bloque               : 19 20 21 22 24 26
cchar                : 143
cfloat               : 142
ciclo                : 12 18 37 41
cint                 : 75 76 77 77 78 78 141
class                : 1
condicion            : 11 17
constructor          : 8 14
context              : 1 2
contexto_func        : 28 29
elif                 : 20 22
escritura            : 55
estatuto             : 10 16 36 40 44 45
exp                  : 91 92 93 94 95 96 97 97 98 98 99 99 100 100 101 101 102 102 108 109 119 120 121 122 123 124 125 127 128
exp_bool             : 113 114 115
exp_cond             : 38 42 112 114 115 133
expresion            : 65 69 85 88 91 94 97 100 118 120 121 122 123 124 125
factor               : 129 130 131 132
funcion              : 9 15
gotoF                : 19 20 21 22 24
id                   : 28 29
lectura              : 58
llamada_func         : 56 66 70 86 89 92 95 98 101 103
llamada_id           : 104
llamada_lparen       : 104
llamada_rparen       : 104
objeto_aAcceso       : 61 63 88 89 90 94 95 96 100 101 102 134 135 139
objeto_metodo        : 57 67 71 87 90 93 96 99 102
param                : 26 28 29 48
programa             : 0
scope                : 4 5 28 29
termino              : 126 127 128 130 131 132
tipo_compuesto       : 74 76 78
tipo_simple          : 47 48 73 75 77
type                 : 28
var                  : 136 137 138
vars                 : 7 13 35 39

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID aux_program class context
    (2) programa -> . PROGRAM ID aux_program context

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID aux_program class context
    (2) programa -> PROGRAM . ID aux_program context

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . aux_program class context
    (2) programa -> PROGRAM ID . aux_program context
    (3) aux_program -> .

    LBRACE          reduce using rule 3 (aux_program -> .)
    PRIVATE         reduce using rule 3 (aux_program -> .)
    PUBLIC          reduce using rule 3 (aux_program -> .)
    PROTECTED       reduce using rule 3 (aux_program -> .)
    CLASS           reduce using rule 3 (aux_program -> .)

    aux_program                    shift and go to state 4

state 4

    (1) programa -> PROGRAM ID aux_program . class context
    (2) programa -> PROGRAM ID aux_program . context
    (4) class -> . scope CLASS ID
    (5) class -> . scope CLASS ID COLON ID
    (6) context -> . LBRACE aux6 RBRACE
    (50) scope -> .
    (51) scope -> . PRIVATE
    (52) scope -> . PUBLIC
    (53) scope -> . PROTECTED

    LBRACE          shift and go to state 8
    CLASS           reduce using rule 50 (scope -> .)
    PRIVATE         shift and go to state 9
    PUBLIC          shift and go to state 10
    PROTECTED       shift and go to state 11

    class                          shift and go to state 5
    context                        shift and go to state 6
    scope                          shift and go to state 7

state 5

    (1) programa -> PROGRAM ID aux_program class . context
    (6) context -> . LBRACE aux6 RBRACE

    LBRACE          shift and go to state 8

    context                        shift and go to state 12

state 6

    (2) programa -> PROGRAM ID aux_program context .

    $end            reduce using rule 2 (programa -> PROGRAM ID aux_program context .)


state 7

    (4) class -> scope . CLASS ID
    (5) class -> scope . CLASS ID COLON ID

    CLASS           shift and go to state 13


state 8

    (6) context -> LBRACE . aux6 RBRACE
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (73) vars -> . VAR aux2 COLON tipo_simple
    (74) vars -> . VAR aux2 COLON tipo_compuesto
    (75) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (76) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (77) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (78) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (26) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (28) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (29) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (54) estatuto -> . asignacion
    (55) estatuto -> . escritura
    (56) estatuto -> . llamada_func
    (57) estatuto -> . objeto_metodo
    (58) estatuto -> . lectura
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque
    (20) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (50) scope -> .
    (51) scope -> . PRIVATE
    (52) scope -> . PUBLIC
    (53) scope -> . PROTECTED
    (85) asignacion -> . ID EQUALS expresion
    (86) asignacion -> . ID EQUALS llamada_func
    (87) asignacion -> . ID EQUALS objeto_metodo
    (88) asignacion -> . objeto_aAcceso EQUALS expresion
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (91) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (102) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (64) escritura -> . PRINT LPAREN aux3 RPAREN
    (104) llamada_func -> . llamada_id llamada_lparen aux llamada_rparen
    (103) objeto_metodo -> . ID PERIOD llamada_func
    (59) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (147) objeto_aAcceso -> . ID PERIOD ID
    (105) llamada_id -> . ID

    VAR             shift and go to state 21
    PUBLIC          shift and go to state 23
    IF              shift and go to state 30
    VOID            reduce using rule 50 (scope -> .)
    INT             reduce using rule 50 (scope -> .)
    FLOAT           reduce using rule 50 (scope -> .)
    CHAR            reduce using rule 50 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    aux6                           shift and go to state 14
    vars                           shift and go to state 15
    constructor                    shift and go to state 16
    funcion                        shift and go to state 17
    estatuto                       shift and go to state 18
    condicion                      shift and go to state 19
    ciclo                          shift and go to state 20
    scope                          shift and go to state 24
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 9

    (51) scope -> PRIVATE .

    CLASS           reduce using rule 51 (scope -> PRIVATE .)
    VOID            reduce using rule 51 (scope -> PRIVATE .)
    INT             reduce using rule 51 (scope -> PRIVATE .)
    FLOAT           reduce using rule 51 (scope -> PRIVATE .)
    CHAR            reduce using rule 51 (scope -> PRIVATE .)


state 10

    (52) scope -> PUBLIC .

    CLASS           reduce using rule 52 (scope -> PUBLIC .)


state 11

    (53) scope -> PROTECTED .

    CLASS           reduce using rule 53 (scope -> PROTECTED .)
    VOID            reduce using rule 53 (scope -> PROTECTED .)
    INT             reduce using rule 53 (scope -> PROTECTED .)
    FLOAT           reduce using rule 53 (scope -> PROTECTED .)
    CHAR            reduce using rule 53 (scope -> PROTECTED .)


state 12

    (1) programa -> PROGRAM ID aux_program class context .

    $end            reduce using rule 1 (programa -> PROGRAM ID aux_program class context .)


state 13

    (4) class -> scope CLASS . ID
    (5) class -> scope CLASS . ID COLON ID

    ID              shift and go to state 36


state 14

    (6) context -> LBRACE aux6 . RBRACE

    RBRACE          shift and go to state 37


state 15

    (7) aux6 -> vars .
    (13) aux6 -> vars . aux6
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (73) vars -> . VAR aux2 COLON tipo_simple
    (74) vars -> . VAR aux2 COLON tipo_compuesto
    (75) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (76) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (77) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (78) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (26) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (28) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (29) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (54) estatuto -> . asignacion
    (55) estatuto -> . escritura
    (56) estatuto -> . llamada_func
    (57) estatuto -> . objeto_metodo
    (58) estatuto -> . lectura
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque
    (20) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (50) scope -> .
    (51) scope -> . PRIVATE
    (52) scope -> . PUBLIC
    (53) scope -> . PROTECTED
    (85) asignacion -> . ID EQUALS expresion
    (86) asignacion -> . ID EQUALS llamada_func
    (87) asignacion -> . ID EQUALS objeto_metodo
    (88) asignacion -> . objeto_aAcceso EQUALS expresion
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (91) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (102) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (64) escritura -> . PRINT LPAREN aux3 RPAREN
    (104) llamada_func -> . llamada_id llamada_lparen aux llamada_rparen
    (103) objeto_metodo -> . ID PERIOD llamada_func
    (59) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (147) objeto_aAcceso -> . ID PERIOD ID
    (105) llamada_id -> . ID

    RBRACE          reduce using rule 7 (aux6 -> vars .)
    VAR             shift and go to state 21
    PUBLIC          shift and go to state 23
    IF              shift and go to state 30
    VOID            reduce using rule 50 (scope -> .)
    INT             reduce using rule 50 (scope -> .)
    FLOAT           reduce using rule 50 (scope -> .)
    CHAR            reduce using rule 50 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    vars                           shift and go to state 15
    aux6                           shift and go to state 38
    constructor                    shift and go to state 16
    funcion                        shift and go to state 17
    estatuto                       shift and go to state 18
    condicion                      shift and go to state 19
    ciclo                          shift and go to state 20
    scope                          shift and go to state 24
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 16

    (8) aux6 -> constructor .
    (14) aux6 -> constructor . aux6
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (73) vars -> . VAR aux2 COLON tipo_simple
    (74) vars -> . VAR aux2 COLON tipo_compuesto
    (75) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (76) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (77) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (78) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (26) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (28) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (29) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (54) estatuto -> . asignacion
    (55) estatuto -> . escritura
    (56) estatuto -> . llamada_func
    (57) estatuto -> . objeto_metodo
    (58) estatuto -> . lectura
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque
    (20) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (50) scope -> .
    (51) scope -> . PRIVATE
    (52) scope -> . PUBLIC
    (53) scope -> . PROTECTED
    (85) asignacion -> . ID EQUALS expresion
    (86) asignacion -> . ID EQUALS llamada_func
    (87) asignacion -> . ID EQUALS objeto_metodo
    (88) asignacion -> . objeto_aAcceso EQUALS expresion
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (91) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (102) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (64) escritura -> . PRINT LPAREN aux3 RPAREN
    (104) llamada_func -> . llamada_id llamada_lparen aux llamada_rparen
    (103) objeto_metodo -> . ID PERIOD llamada_func
    (59) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (147) objeto_aAcceso -> . ID PERIOD ID
    (105) llamada_id -> . ID

    RBRACE          reduce using rule 8 (aux6 -> constructor .)
    VAR             shift and go to state 21
    PUBLIC          shift and go to state 23
    IF              shift and go to state 30
    VOID            reduce using rule 50 (scope -> .)
    INT             reduce using rule 50 (scope -> .)
    FLOAT           reduce using rule 50 (scope -> .)
    CHAR            reduce using rule 50 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    constructor                    shift and go to state 16
    aux6                           shift and go to state 39
    vars                           shift and go to state 15
    funcion                        shift and go to state 17
    estatuto                       shift and go to state 18
    condicion                      shift and go to state 19
    ciclo                          shift and go to state 20
    scope                          shift and go to state 24
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 17

    (9) aux6 -> funcion .
    (15) aux6 -> funcion . aux6
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (73) vars -> . VAR aux2 COLON tipo_simple
    (74) vars -> . VAR aux2 COLON tipo_compuesto
    (75) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (76) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (77) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (78) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (26) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (28) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (29) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (54) estatuto -> . asignacion
    (55) estatuto -> . escritura
    (56) estatuto -> . llamada_func
    (57) estatuto -> . objeto_metodo
    (58) estatuto -> . lectura
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque
    (20) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (50) scope -> .
    (51) scope -> . PRIVATE
    (52) scope -> . PUBLIC
    (53) scope -> . PROTECTED
    (85) asignacion -> . ID EQUALS expresion
    (86) asignacion -> . ID EQUALS llamada_func
    (87) asignacion -> . ID EQUALS objeto_metodo
    (88) asignacion -> . objeto_aAcceso EQUALS expresion
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (91) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (102) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (64) escritura -> . PRINT LPAREN aux3 RPAREN
    (104) llamada_func -> . llamada_id llamada_lparen aux llamada_rparen
    (103) objeto_metodo -> . ID PERIOD llamada_func
    (59) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (147) objeto_aAcceso -> . ID PERIOD ID
    (105) llamada_id -> . ID

    RBRACE          reduce using rule 9 (aux6 -> funcion .)
    VAR             shift and go to state 21
    PUBLIC          shift and go to state 23
    IF              shift and go to state 30
    VOID            reduce using rule 50 (scope -> .)
    INT             reduce using rule 50 (scope -> .)
    FLOAT           reduce using rule 50 (scope -> .)
    CHAR            reduce using rule 50 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    funcion                        shift and go to state 17
    aux6                           shift and go to state 40
    vars                           shift and go to state 15
    constructor                    shift and go to state 16
    estatuto                       shift and go to state 18
    condicion                      shift and go to state 19
    ciclo                          shift and go to state 20
    scope                          shift and go to state 24
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 18

    (10) aux6 -> estatuto .
    (16) aux6 -> estatuto . aux6
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (73) vars -> . VAR aux2 COLON tipo_simple
    (74) vars -> . VAR aux2 COLON tipo_compuesto
    (75) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (76) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (77) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (78) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (26) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (28) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (29) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (54) estatuto -> . asignacion
    (55) estatuto -> . escritura
    (56) estatuto -> . llamada_func
    (57) estatuto -> . objeto_metodo
    (58) estatuto -> . lectura
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque
    (20) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (50) scope -> .
    (51) scope -> . PRIVATE
    (52) scope -> . PUBLIC
    (53) scope -> . PROTECTED
    (85) asignacion -> . ID EQUALS expresion
    (86) asignacion -> . ID EQUALS llamada_func
    (87) asignacion -> . ID EQUALS objeto_metodo
    (88) asignacion -> . objeto_aAcceso EQUALS expresion
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (91) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (102) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (64) escritura -> . PRINT LPAREN aux3 RPAREN
    (104) llamada_func -> . llamada_id llamada_lparen aux llamada_rparen
    (103) objeto_metodo -> . ID PERIOD llamada_func
    (59) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (147) objeto_aAcceso -> . ID PERIOD ID
    (105) llamada_id -> . ID

    RBRACE          reduce using rule 10 (aux6 -> estatuto .)
    VAR             shift and go to state 21
    PUBLIC          shift and go to state 23
    IF              shift and go to state 30
    VOID            reduce using rule 50 (scope -> .)
    INT             reduce using rule 50 (scope -> .)
    FLOAT           reduce using rule 50 (scope -> .)
    CHAR            reduce using rule 50 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    estatuto                       shift and go to state 18
    aux6                           shift and go to state 41
    vars                           shift and go to state 15
    constructor                    shift and go to state 16
    funcion                        shift and go to state 17
    condicion                      shift and go to state 19
    ciclo                          shift and go to state 20
    scope                          shift and go to state 24
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 19

    (11) aux6 -> condicion .
    (17) aux6 -> condicion . aux6
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (73) vars -> . VAR aux2 COLON tipo_simple
    (74) vars -> . VAR aux2 COLON tipo_compuesto
    (75) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (76) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (77) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (78) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (26) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (28) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (29) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (54) estatuto -> . asignacion
    (55) estatuto -> . escritura
    (56) estatuto -> . llamada_func
    (57) estatuto -> . objeto_metodo
    (58) estatuto -> . lectura
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque
    (20) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (50) scope -> .
    (51) scope -> . PRIVATE
    (52) scope -> . PUBLIC
    (53) scope -> . PROTECTED
    (85) asignacion -> . ID EQUALS expresion
    (86) asignacion -> . ID EQUALS llamada_func
    (87) asignacion -> . ID EQUALS objeto_metodo
    (88) asignacion -> . objeto_aAcceso EQUALS expresion
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (91) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (102) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (64) escritura -> . PRINT LPAREN aux3 RPAREN
    (104) llamada_func -> . llamada_id llamada_lparen aux llamada_rparen
    (103) objeto_metodo -> . ID PERIOD llamada_func
    (59) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (147) objeto_aAcceso -> . ID PERIOD ID
    (105) llamada_id -> . ID

    RBRACE          reduce using rule 11 (aux6 -> condicion .)
    VAR             shift and go to state 21
    PUBLIC          shift and go to state 23
    IF              shift and go to state 30
    VOID            reduce using rule 50 (scope -> .)
    INT             reduce using rule 50 (scope -> .)
    FLOAT           reduce using rule 50 (scope -> .)
    CHAR            reduce using rule 50 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    condicion                      shift and go to state 19
    aux6                           shift and go to state 42
    vars                           shift and go to state 15
    constructor                    shift and go to state 16
    funcion                        shift and go to state 17
    estatuto                       shift and go to state 18
    ciclo                          shift and go to state 20
    scope                          shift and go to state 24
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 20

    (12) aux6 -> ciclo .
    (18) aux6 -> ciclo . aux6
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (73) vars -> . VAR aux2 COLON tipo_simple
    (74) vars -> . VAR aux2 COLON tipo_compuesto
    (75) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (76) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (77) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (78) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (26) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (28) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (29) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (54) estatuto -> . asignacion
    (55) estatuto -> . escritura
    (56) estatuto -> . llamada_func
    (57) estatuto -> . objeto_metodo
    (58) estatuto -> . lectura
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque
    (20) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (50) scope -> .
    (51) scope -> . PRIVATE
    (52) scope -> . PUBLIC
    (53) scope -> . PROTECTED
    (85) asignacion -> . ID EQUALS expresion
    (86) asignacion -> . ID EQUALS llamada_func
    (87) asignacion -> . ID EQUALS objeto_metodo
    (88) asignacion -> . objeto_aAcceso EQUALS expresion
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (91) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (102) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (64) escritura -> . PRINT LPAREN aux3 RPAREN
    (104) llamada_func -> . llamada_id llamada_lparen aux llamada_rparen
    (103) objeto_metodo -> . ID PERIOD llamada_func
    (59) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (147) objeto_aAcceso -> . ID PERIOD ID
    (105) llamada_id -> . ID

    RBRACE          reduce using rule 12 (aux6 -> ciclo .)
    VAR             shift and go to state 21
    PUBLIC          shift and go to state 23
    IF              shift and go to state 30
    VOID            reduce using rule 50 (scope -> .)
    INT             reduce using rule 50 (scope -> .)
    FLOAT           reduce using rule 50 (scope -> .)
    CHAR            reduce using rule 50 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    ciclo                          shift and go to state 20
    aux6                           shift and go to state 43
    vars                           shift and go to state 15
    constructor                    shift and go to state 16
    funcion                        shift and go to state 17
    estatuto                       shift and go to state 18
    condicion                      shift and go to state 19
    scope                          shift and go to state 24
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 21

    (73) vars -> VAR . aux2 COLON tipo_simple
    (74) vars -> VAR . aux2 COLON tipo_compuesto
    (75) vars -> VAR . ID LBRACKET cint RBRACKET COLON tipo_simple
    (76) vars -> VAR . ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (77) vars -> VAR . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (78) vars -> VAR . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (79) aux2 -> . ID
    (80) aux2 -> . ID COMMA aux2

    ID              shift and go to state 45

    aux2                           shift and go to state 44

state 22

    (85) asignacion -> ID . EQUALS expresion
    (86) asignacion -> ID . EQUALS llamada_func
    (87) asignacion -> ID . EQUALS objeto_metodo
    (91) asignacion -> ID . LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> ID . LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> ID . LBRACKET exp RBRACKET EQUALS objeto_metodo
    (97) asignacion -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (98) asignacion -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (99) asignacion -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (103) objeto_metodo -> ID . PERIOD llamada_func
    (147) objeto_aAcceso -> ID . PERIOD ID
    (105) llamada_id -> ID .

    EQUALS          shift and go to state 46
    LBRACKET        shift and go to state 47
    PERIOD          shift and go to state 48
    LPAREN          reduce using rule 105 (llamada_id -> ID .)


state 23

    (26) constructor -> PUBLIC . ID LPAREN param RPAREN bloque
    (52) scope -> PUBLIC .

    ID              shift and go to state 49
    VOID            reduce using rule 52 (scope -> PUBLIC .)
    INT             reduce using rule 52 (scope -> PUBLIC .)
    FLOAT           reduce using rule 52 (scope -> PUBLIC .)
    CHAR            reduce using rule 52 (scope -> PUBLIC .)


state 24

    (28) funcion -> scope . type DEF id LPAREN param aux_param RPAREN contexto_func
    (29) funcion -> scope . VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (31) type -> . INT
    (32) type -> . FLOAT
    (33) type -> . CHAR

    VOID            shift and go to state 51
    INT             shift and go to state 52
    FLOAT           shift and go to state 53
    CHAR            shift and go to state 54

    type                           shift and go to state 50

state 25

    (54) estatuto -> asignacion .

    VAR             reduce using rule 54 (estatuto -> asignacion .)
    PUBLIC          reduce using rule 54 (estatuto -> asignacion .)
    IF              reduce using rule 54 (estatuto -> asignacion .)
    PRIVATE         reduce using rule 54 (estatuto -> asignacion .)
    PROTECTED       reduce using rule 54 (estatuto -> asignacion .)
    ID              reduce using rule 54 (estatuto -> asignacion .)
    PRINT           reduce using rule 54 (estatuto -> asignacion .)
    READ            reduce using rule 54 (estatuto -> asignacion .)
    VOID            reduce using rule 54 (estatuto -> asignacion .)
    INT             reduce using rule 54 (estatuto -> asignacion .)
    FLOAT           reduce using rule 54 (estatuto -> asignacion .)
    CHAR            reduce using rule 54 (estatuto -> asignacion .)
    WHILE           reduce using rule 54 (estatuto -> asignacion .)
    RBRACE          reduce using rule 54 (estatuto -> asignacion .)
    RETURN          reduce using rule 54 (estatuto -> asignacion .)


state 26

    (55) estatuto -> escritura .

    VAR             reduce using rule 55 (estatuto -> escritura .)
    PUBLIC          reduce using rule 55 (estatuto -> escritura .)
    IF              reduce using rule 55 (estatuto -> escritura .)
    PRIVATE         reduce using rule 55 (estatuto -> escritura .)
    PROTECTED       reduce using rule 55 (estatuto -> escritura .)
    ID              reduce using rule 55 (estatuto -> escritura .)
    PRINT           reduce using rule 55 (estatuto -> escritura .)
    READ            reduce using rule 55 (estatuto -> escritura .)
    VOID            reduce using rule 55 (estatuto -> escritura .)
    INT             reduce using rule 55 (estatuto -> escritura .)
    FLOAT           reduce using rule 55 (estatuto -> escritura .)
    CHAR            reduce using rule 55 (estatuto -> escritura .)
    WHILE           reduce using rule 55 (estatuto -> escritura .)
    RBRACE          reduce using rule 55 (estatuto -> escritura .)
    RETURN          reduce using rule 55 (estatuto -> escritura .)


state 27

    (56) estatuto -> llamada_func .

    VAR             reduce using rule 56 (estatuto -> llamada_func .)
    PUBLIC          reduce using rule 56 (estatuto -> llamada_func .)
    IF              reduce using rule 56 (estatuto -> llamada_func .)
    PRIVATE         reduce using rule 56 (estatuto -> llamada_func .)
    PROTECTED       reduce using rule 56 (estatuto -> llamada_func .)
    ID              reduce using rule 56 (estatuto -> llamada_func .)
    PRINT           reduce using rule 56 (estatuto -> llamada_func .)
    READ            reduce using rule 56 (estatuto -> llamada_func .)
    VOID            reduce using rule 56 (estatuto -> llamada_func .)
    INT             reduce using rule 56 (estatuto -> llamada_func .)
    FLOAT           reduce using rule 56 (estatuto -> llamada_func .)
    CHAR            reduce using rule 56 (estatuto -> llamada_func .)
    WHILE           reduce using rule 56 (estatuto -> llamada_func .)
    RBRACE          reduce using rule 56 (estatuto -> llamada_func .)
    RETURN          reduce using rule 56 (estatuto -> llamada_func .)


state 28

    (57) estatuto -> objeto_metodo .

    VAR             reduce using rule 57 (estatuto -> objeto_metodo .)
    PUBLIC          reduce using rule 57 (estatuto -> objeto_metodo .)
    IF              reduce using rule 57 (estatuto -> objeto_metodo .)
    PRIVATE         reduce using rule 57 (estatuto -> objeto_metodo .)
    PROTECTED       reduce using rule 57 (estatuto -> objeto_metodo .)
    ID              reduce using rule 57 (estatuto -> objeto_metodo .)
    PRINT           reduce using rule 57 (estatuto -> objeto_metodo .)
    READ            reduce using rule 57 (estatuto -> objeto_metodo .)
    VOID            reduce using rule 57 (estatuto -> objeto_metodo .)
    INT             reduce using rule 57 (estatuto -> objeto_metodo .)
    FLOAT           reduce using rule 57 (estatuto -> objeto_metodo .)
    CHAR            reduce using rule 57 (estatuto -> objeto_metodo .)
    WHILE           reduce using rule 57 (estatuto -> objeto_metodo .)
    RBRACE          reduce using rule 57 (estatuto -> objeto_metodo .)
    RETURN          reduce using rule 57 (estatuto -> objeto_metodo .)


state 29

    (58) estatuto -> lectura .

    VAR             reduce using rule 58 (estatuto -> lectura .)
    PUBLIC          reduce using rule 58 (estatuto -> lectura .)
    IF              reduce using rule 58 (estatuto -> lectura .)
    PRIVATE         reduce using rule 58 (estatuto -> lectura .)
    PROTECTED       reduce using rule 58 (estatuto -> lectura .)
    ID              reduce using rule 58 (estatuto -> lectura .)
    PRINT           reduce using rule 58 (estatuto -> lectura .)
    READ            reduce using rule 58 (estatuto -> lectura .)
    VOID            reduce using rule 58 (estatuto -> lectura .)
    INT             reduce using rule 58 (estatuto -> lectura .)
    FLOAT           reduce using rule 58 (estatuto -> lectura .)
    CHAR            reduce using rule 58 (estatuto -> lectura .)
    WHILE           reduce using rule 58 (estatuto -> lectura .)
    RBRACE          reduce using rule 58 (estatuto -> lectura .)
    RETURN          reduce using rule 58 (estatuto -> lectura .)


state 30

    (19) condicion -> IF . LPAREN gotoF RPAREN bloque
    (20) condicion -> IF . LPAREN gotoF RPAREN bloque elif

    LPAREN          shift and go to state 55


state 31

    (24) ciclo -> aux_ciclo . WHILE LPAREN gotoF RPAREN bloque

    WHILE           shift and go to state 56


state 32

    (88) asignacion -> objeto_aAcceso . EQUALS expresion
    (89) asignacion -> objeto_aAcceso . EQUALS llamada_func
    (90) asignacion -> objeto_aAcceso . EQUALS objeto_metodo
    (94) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> objeto_aAcceso . LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (101) asignacion -> objeto_aAcceso . LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (102) asignacion -> objeto_aAcceso . LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo

    EQUALS          shift and go to state 57
    LBRACKET        shift and go to state 58


state 33

    (64) escritura -> PRINT . LPAREN aux3 RPAREN

    LPAREN          shift and go to state 59


state 34

    (104) llamada_func -> llamada_id . llamada_lparen aux llamada_rparen
    (106) llamada_lparen -> . LPAREN

    LPAREN          shift and go to state 61

    llamada_lparen                 shift and go to state 60

state 35

    (59) lectura -> READ . LPAREN aux4 RPAREN

    LPAREN          shift and go to state 62


state 36

    (4) class -> scope CLASS ID .
    (5) class -> scope CLASS ID . COLON ID

    LBRACE          reduce using rule 4 (class -> scope CLASS ID .)
    COLON           shift and go to state 63


state 37

    (6) context -> LBRACE aux6 RBRACE .

    $end            reduce using rule 6 (context -> LBRACE aux6 RBRACE .)


state 38

    (13) aux6 -> vars aux6 .

    RBRACE          reduce using rule 13 (aux6 -> vars aux6 .)


state 39

    (14) aux6 -> constructor aux6 .

    RBRACE          reduce using rule 14 (aux6 -> constructor aux6 .)


state 40

    (15) aux6 -> funcion aux6 .

    RBRACE          reduce using rule 15 (aux6 -> funcion aux6 .)


state 41

    (16) aux6 -> estatuto aux6 .

    RBRACE          reduce using rule 16 (aux6 -> estatuto aux6 .)


state 42

    (17) aux6 -> condicion aux6 .

    RBRACE          reduce using rule 17 (aux6 -> condicion aux6 .)


state 43

    (18) aux6 -> ciclo aux6 .

    RBRACE          reduce using rule 18 (aux6 -> ciclo aux6 .)


state 44

    (73) vars -> VAR aux2 . COLON tipo_simple
    (74) vars -> VAR aux2 . COLON tipo_compuesto

    COLON           shift and go to state 64


state 45

    (75) vars -> VAR ID . LBRACKET cint RBRACKET COLON tipo_simple
    (76) vars -> VAR ID . LBRACKET cint RBRACKET COLON tipo_compuesto
    (77) vars -> VAR ID . LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (78) vars -> VAR ID . LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (79) aux2 -> ID .
    (80) aux2 -> ID . COMMA aux2

    LBRACKET        shift and go to state 65
    COLON           reduce using rule 79 (aux2 -> ID .)
    COMMA           shift and go to state 66


state 46

    (85) asignacion -> ID EQUALS . expresion
    (86) asignacion -> ID EQUALS . llamada_func
    (87) asignacion -> ID EQUALS . objeto_metodo
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (104) llamada_func -> . llamada_id llamada_lparen aux llamada_rparen
    (103) objeto_metodo -> . ID PERIOD llamada_func
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (105) llamada_id -> . ID
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    ID              shift and go to state 67
    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    expresion                      shift and go to state 68
    llamada_func                   shift and go to state 69
    objeto_metodo                  shift and go to state 70
    exp                            shift and go to state 71
    llamada_id                     shift and go to state 34
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 47

    (91) asignacion -> ID LBRACKET . exp RBRACKET EQUALS expresion
    (92) asignacion -> ID LBRACKET . exp RBRACKET EQUALS llamada_func
    (93) asignacion -> ID LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (97) asignacion -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (98) asignacion -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (99) asignacion -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 85
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    exp                            shift and go to state 86
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 48

    (103) objeto_metodo -> ID PERIOD . llamada_func
    (147) objeto_aAcceso -> ID PERIOD . ID
    (104) llamada_func -> . llamada_id llamada_lparen aux llamada_rparen
    (105) llamada_id -> . ID

    ID              shift and go to state 87

    llamada_func                   shift and go to state 88
    llamada_id                     shift and go to state 34

state 49

    (26) constructor -> PUBLIC ID . LPAREN param RPAREN bloque

    LPAREN          shift and go to state 89


state 50

    (28) funcion -> scope type . DEF id LPAREN param aux_param RPAREN contexto_func

    DEF             shift and go to state 90


state 51

    (29) funcion -> scope VOID . DEF id LPAREN param aux_param RPAREN contexto_func

    DEF             shift and go to state 91


state 52

    (31) type -> INT .

    DEF             reduce using rule 31 (type -> INT .)


state 53

    (32) type -> FLOAT .

    DEF             reduce using rule 32 (type -> FLOAT .)


state 54

    (33) type -> CHAR .

    DEF             reduce using rule 33 (type -> CHAR .)


state 55

    (19) condicion -> IF LPAREN . gotoF RPAREN bloque
    (20) condicion -> IF LPAREN . gotoF RPAREN bloque elif
    (112) gotoF -> . exp_cond
    (113) exp_cond -> . exp_bool
    (114) exp_cond -> . exp_bool AND exp_cond
    (115) exp_cond -> . exp_bool OR exp_cond
    (116) exp_bool -> . TRUE
    (117) exp_bool -> . FALSE
    (118) exp_bool -> . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 85
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    gotoF                          shift and go to state 92
    exp_cond                       shift and go to state 93
    exp_bool                       shift and go to state 94
    expresion                      shift and go to state 97
    exp                            shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 56

    (24) ciclo -> aux_ciclo WHILE . LPAREN gotoF RPAREN bloque

    LPAREN          shift and go to state 98


state 57

    (88) asignacion -> objeto_aAcceso EQUALS . expresion
    (89) asignacion -> objeto_aAcceso EQUALS . llamada_func
    (90) asignacion -> objeto_aAcceso EQUALS . objeto_metodo
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (104) llamada_func -> . llamada_id llamada_lparen aux llamada_rparen
    (103) objeto_metodo -> . ID PERIOD llamada_func
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (105) llamada_id -> . ID
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    ID              shift and go to state 67
    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    objeto_aAcceso                 shift and go to state 77
    expresion                      shift and go to state 99
    llamada_func                   shift and go to state 100
    objeto_metodo                  shift and go to state 101
    exp                            shift and go to state 71
    llamada_id                     shift and go to state 34
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 58

    (94) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET EQUALS expresion
    (95) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET EQUALS llamada_func
    (96) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> objeto_aAcceso LBRACKET . LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (101) asignacion -> objeto_aAcceso LBRACKET . LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (102) asignacion -> objeto_aAcceso LBRACKET . LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    LBRACKET        shift and go to state 102
    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 85
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    objeto_aAcceso                 shift and go to state 77
    exp                            shift and go to state 103
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 59

    (64) escritura -> PRINT LPAREN . aux3 RPAREN
    (65) aux3 -> . expresion
    (66) aux3 -> . llamada_func
    (67) aux3 -> . objeto_metodo
    (68) aux3 -> . CSTRING
    (69) aux3 -> . expresion COMMA aux3
    (70) aux3 -> . llamada_func COMMA aux3
    (71) aux3 -> . objeto_metodo COMMA aux3
    (72) aux3 -> . CSTRING COMMA aux3
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (104) llamada_func -> . llamada_id llamada_lparen aux llamada_rparen
    (103) objeto_metodo -> . ID PERIOD llamada_func
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (105) llamada_id -> . ID
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    CSTRING         shift and go to state 108
    ID              shift and go to state 67
    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    aux3                           shift and go to state 104
    expresion                      shift and go to state 105
    llamada_func                   shift and go to state 106
    objeto_metodo                  shift and go to state 107
    exp                            shift and go to state 71
    llamada_id                     shift and go to state 34
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 60

    (104) llamada_func -> llamada_id llamada_lparen . aux llamada_rparen
    (108) aux -> . exp aux_exp
    (109) aux -> . exp aux_exp aux_comma aux
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 85
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    aux                            shift and go to state 109
    exp                            shift and go to state 110
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 61

    (106) llamada_lparen -> LPAREN .

    LPAREN          reduce using rule 106 (llamada_lparen -> LPAREN .)
    PLUS            reduce using rule 106 (llamada_lparen -> LPAREN .)
    MINUS           reduce using rule 106 (llamada_lparen -> LPAREN .)
    ID              reduce using rule 106 (llamada_lparen -> LPAREN .)
    CINT            reduce using rule 106 (llamada_lparen -> LPAREN .)
    NUMBER          reduce using rule 106 (llamada_lparen -> LPAREN .)
    CCHAR           reduce using rule 106 (llamada_lparen -> LPAREN .)


state 62

    (59) lectura -> READ LPAREN . aux4 RPAREN
    (60) aux4 -> . ID
    (61) aux4 -> . objeto_aAcceso
    (62) aux4 -> . ID COMMA aux4
    (63) aux4 -> . objeto_aAcceso COMMA aux4
    (147) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 112

    aux4                           shift and go to state 111
    objeto_aAcceso                 shift and go to state 113

state 63

    (5) class -> scope CLASS ID COLON . ID

    ID              shift and go to state 114


state 64

    (73) vars -> VAR aux2 COLON . tipo_simple
    (74) vars -> VAR aux2 COLON . tipo_compuesto
    (81) tipo_simple -> . INT
    (82) tipo_simple -> . FLOAT
    (83) tipo_simple -> . CHAR
    (84) tipo_compuesto -> . ID

    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    CHAR            shift and go to state 119
    ID              shift and go to state 120

    tipo_simple                    shift and go to state 115
    tipo_compuesto                 shift and go to state 116

state 65

    (75) vars -> VAR ID LBRACKET . cint RBRACKET COLON tipo_simple
    (76) vars -> VAR ID LBRACKET . cint RBRACKET COLON tipo_compuesto
    (77) vars -> VAR ID LBRACKET . cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (78) vars -> VAR ID LBRACKET . cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (144) cint -> . CINT

    CINT            shift and go to state 82

    cint                           shift and go to state 121

state 66

    (80) aux2 -> ID COMMA . aux2
    (79) aux2 -> . ID
    (80) aux2 -> . ID COMMA aux2

    ID              shift and go to state 122

    aux2                           shift and go to state 123

state 67

    (103) objeto_metodo -> ID . PERIOD llamada_func
    (105) llamada_id -> ID .
    (140) var -> ID .
    (147) objeto_aAcceso -> ID . PERIOD ID

    PERIOD          shift and go to state 48
    LPAREN          reduce using rule 105 (llamada_id -> ID .)
    TIMES           reduce using rule 140 (var -> ID .)
    DIVIDE          reduce using rule 140 (var -> ID .)
    MODULO          reduce using rule 140 (var -> ID .)
    LT              reduce using rule 140 (var -> ID .)
    GT              reduce using rule 140 (var -> ID .)
    GE              reduce using rule 140 (var -> ID .)
    LE              reduce using rule 140 (var -> ID .)
    EQ              reduce using rule 140 (var -> ID .)
    NE              reduce using rule 140 (var -> ID .)
    PLUS            reduce using rule 140 (var -> ID .)
    MINUS           reduce using rule 140 (var -> ID .)
    VAR             reduce using rule 140 (var -> ID .)
    PUBLIC          reduce using rule 140 (var -> ID .)
    IF              reduce using rule 140 (var -> ID .)
    PRIVATE         reduce using rule 140 (var -> ID .)
    PROTECTED       reduce using rule 140 (var -> ID .)
    ID              reduce using rule 140 (var -> ID .)
    PRINT           reduce using rule 140 (var -> ID .)
    READ            reduce using rule 140 (var -> ID .)
    VOID            reduce using rule 140 (var -> ID .)
    INT             reduce using rule 140 (var -> ID .)
    FLOAT           reduce using rule 140 (var -> ID .)
    CHAR            reduce using rule 140 (var -> ID .)
    WHILE           reduce using rule 140 (var -> ID .)
    RBRACE          reduce using rule 140 (var -> ID .)
    RETURN          reduce using rule 140 (var -> ID .)
    COMMA           reduce using rule 140 (var -> ID .)
    RPAREN          reduce using rule 140 (var -> ID .)


state 68

    (85) asignacion -> ID EQUALS expresion .

    VAR             reduce using rule 85 (asignacion -> ID EQUALS expresion .)
    PUBLIC          reduce using rule 85 (asignacion -> ID EQUALS expresion .)
    IF              reduce using rule 85 (asignacion -> ID EQUALS expresion .)
    PRIVATE         reduce using rule 85 (asignacion -> ID EQUALS expresion .)
    PROTECTED       reduce using rule 85 (asignacion -> ID EQUALS expresion .)
    ID              reduce using rule 85 (asignacion -> ID EQUALS expresion .)
    PRINT           reduce using rule 85 (asignacion -> ID EQUALS expresion .)
    READ            reduce using rule 85 (asignacion -> ID EQUALS expresion .)
    VOID            reduce using rule 85 (asignacion -> ID EQUALS expresion .)
    INT             reduce using rule 85 (asignacion -> ID EQUALS expresion .)
    FLOAT           reduce using rule 85 (asignacion -> ID EQUALS expresion .)
    CHAR            reduce using rule 85 (asignacion -> ID EQUALS expresion .)
    WHILE           reduce using rule 85 (asignacion -> ID EQUALS expresion .)
    RBRACE          reduce using rule 85 (asignacion -> ID EQUALS expresion .)
    RETURN          reduce using rule 85 (asignacion -> ID EQUALS expresion .)


state 69

    (86) asignacion -> ID EQUALS llamada_func .

    VAR             reduce using rule 86 (asignacion -> ID EQUALS llamada_func .)
    PUBLIC          reduce using rule 86 (asignacion -> ID EQUALS llamada_func .)
    IF              reduce using rule 86 (asignacion -> ID EQUALS llamada_func .)
    PRIVATE         reduce using rule 86 (asignacion -> ID EQUALS llamada_func .)
    PROTECTED       reduce using rule 86 (asignacion -> ID EQUALS llamada_func .)
    ID              reduce using rule 86 (asignacion -> ID EQUALS llamada_func .)
    PRINT           reduce using rule 86 (asignacion -> ID EQUALS llamada_func .)
    READ            reduce using rule 86 (asignacion -> ID EQUALS llamada_func .)
    VOID            reduce using rule 86 (asignacion -> ID EQUALS llamada_func .)
    INT             reduce using rule 86 (asignacion -> ID EQUALS llamada_func .)
    FLOAT           reduce using rule 86 (asignacion -> ID EQUALS llamada_func .)
    CHAR            reduce using rule 86 (asignacion -> ID EQUALS llamada_func .)
    WHILE           reduce using rule 86 (asignacion -> ID EQUALS llamada_func .)
    RBRACE          reduce using rule 86 (asignacion -> ID EQUALS llamada_func .)
    RETURN          reduce using rule 86 (asignacion -> ID EQUALS llamada_func .)


state 70

    (87) asignacion -> ID EQUALS objeto_metodo .

    VAR             reduce using rule 87 (asignacion -> ID EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 87 (asignacion -> ID EQUALS objeto_metodo .)
    IF              reduce using rule 87 (asignacion -> ID EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 87 (asignacion -> ID EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 87 (asignacion -> ID EQUALS objeto_metodo .)
    ID              reduce using rule 87 (asignacion -> ID EQUALS objeto_metodo .)
    PRINT           reduce using rule 87 (asignacion -> ID EQUALS objeto_metodo .)
    READ            reduce using rule 87 (asignacion -> ID EQUALS objeto_metodo .)
    VOID            reduce using rule 87 (asignacion -> ID EQUALS objeto_metodo .)
    INT             reduce using rule 87 (asignacion -> ID EQUALS objeto_metodo .)
    FLOAT           reduce using rule 87 (asignacion -> ID EQUALS objeto_metodo .)
    CHAR            reduce using rule 87 (asignacion -> ID EQUALS objeto_metodo .)
    WHILE           reduce using rule 87 (asignacion -> ID EQUALS objeto_metodo .)
    RBRACE          reduce using rule 87 (asignacion -> ID EQUALS objeto_metodo .)
    RETURN          reduce using rule 87 (asignacion -> ID EQUALS objeto_metodo .)


state 71

    (119) expresion -> exp .
    (120) expresion -> exp . LT expresion
    (121) expresion -> exp . GT expresion
    (122) expresion -> exp . GE expresion
    (123) expresion -> exp . LE expresion
    (124) expresion -> exp . EQ expresion
    (125) expresion -> exp . NE expresion
    (127) exp -> exp . PLUS termino
    (128) exp -> exp . MINUS termino

    VAR             reduce using rule 119 (expresion -> exp .)
    PUBLIC          reduce using rule 119 (expresion -> exp .)
    IF              reduce using rule 119 (expresion -> exp .)
    PRIVATE         reduce using rule 119 (expresion -> exp .)
    PROTECTED       reduce using rule 119 (expresion -> exp .)
    ID              reduce using rule 119 (expresion -> exp .)
    PRINT           reduce using rule 119 (expresion -> exp .)
    READ            reduce using rule 119 (expresion -> exp .)
    VOID            reduce using rule 119 (expresion -> exp .)
    INT             reduce using rule 119 (expresion -> exp .)
    FLOAT           reduce using rule 119 (expresion -> exp .)
    CHAR            reduce using rule 119 (expresion -> exp .)
    WHILE           reduce using rule 119 (expresion -> exp .)
    RBRACE          reduce using rule 119 (expresion -> exp .)
    RETURN          reduce using rule 119 (expresion -> exp .)
    AND             reduce using rule 119 (expresion -> exp .)
    OR              reduce using rule 119 (expresion -> exp .)
    RPAREN          reduce using rule 119 (expresion -> exp .)
    COMMA           reduce using rule 119 (expresion -> exp .)
    LT              shift and go to state 124
    GT              shift and go to state 125
    GE              shift and go to state 126
    LE              shift and go to state 127
    EQ              shift and go to state 128
    NE              shift and go to state 129
    PLUS            shift and go to state 130
    MINUS           shift and go to state 131


state 72

    (126) exp -> termino .
    (130) termino -> termino . TIMES factor
    (131) termino -> termino . DIVIDE factor
    (132) termino -> termino . MODULO factor

    LT              reduce using rule 126 (exp -> termino .)
    GT              reduce using rule 126 (exp -> termino .)
    GE              reduce using rule 126 (exp -> termino .)
    LE              reduce using rule 126 (exp -> termino .)
    EQ              reduce using rule 126 (exp -> termino .)
    NE              reduce using rule 126 (exp -> termino .)
    PLUS            reduce using rule 126 (exp -> termino .)
    MINUS           reduce using rule 126 (exp -> termino .)
    VAR             reduce using rule 126 (exp -> termino .)
    PUBLIC          reduce using rule 126 (exp -> termino .)
    IF              reduce using rule 126 (exp -> termino .)
    PRIVATE         reduce using rule 126 (exp -> termino .)
    PROTECTED       reduce using rule 126 (exp -> termino .)
    ID              reduce using rule 126 (exp -> termino .)
    PRINT           reduce using rule 126 (exp -> termino .)
    READ            reduce using rule 126 (exp -> termino .)
    VOID            reduce using rule 126 (exp -> termino .)
    INT             reduce using rule 126 (exp -> termino .)
    FLOAT           reduce using rule 126 (exp -> termino .)
    CHAR            reduce using rule 126 (exp -> termino .)
    WHILE           reduce using rule 126 (exp -> termino .)
    RBRACE          reduce using rule 126 (exp -> termino .)
    RETURN          reduce using rule 126 (exp -> termino .)
    RBRACKET        reduce using rule 126 (exp -> termino .)
    AND             reduce using rule 126 (exp -> termino .)
    OR              reduce using rule 126 (exp -> termino .)
    RPAREN          reduce using rule 126 (exp -> termino .)
    COMMA           reduce using rule 126 (exp -> termino .)
    TIMES           shift and go to state 132
    DIVIDE          shift and go to state 133
    MODULO          shift and go to state 134


state 73

    (134) factor -> PLUS . objeto_aAcceso
    (136) factor -> PLUS . var
    (147) objeto_aAcceso -> . ID PERIOD ID
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    ID              shift and go to state 137
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    objeto_aAcceso                 shift and go to state 135
    var                            shift and go to state 136
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 74

    (135) factor -> MINUS . objeto_aAcceso
    (137) factor -> MINUS . var
    (147) objeto_aAcceso -> . ID PERIOD ID
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    ID              shift and go to state 137
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    objeto_aAcceso                 shift and go to state 138
    var                            shift and go to state 139
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 75

    (129) termino -> factor .

    TIMES           reduce using rule 129 (termino -> factor .)
    DIVIDE          reduce using rule 129 (termino -> factor .)
    MODULO          reduce using rule 129 (termino -> factor .)
    LT              reduce using rule 129 (termino -> factor .)
    GT              reduce using rule 129 (termino -> factor .)
    GE              reduce using rule 129 (termino -> factor .)
    LE              reduce using rule 129 (termino -> factor .)
    EQ              reduce using rule 129 (termino -> factor .)
    NE              reduce using rule 129 (termino -> factor .)
    PLUS            reduce using rule 129 (termino -> factor .)
    MINUS           reduce using rule 129 (termino -> factor .)
    VAR             reduce using rule 129 (termino -> factor .)
    PUBLIC          reduce using rule 129 (termino -> factor .)
    IF              reduce using rule 129 (termino -> factor .)
    PRIVATE         reduce using rule 129 (termino -> factor .)
    PROTECTED       reduce using rule 129 (termino -> factor .)
    ID              reduce using rule 129 (termino -> factor .)
    PRINT           reduce using rule 129 (termino -> factor .)
    READ            reduce using rule 129 (termino -> factor .)
    VOID            reduce using rule 129 (termino -> factor .)
    INT             reduce using rule 129 (termino -> factor .)
    FLOAT           reduce using rule 129 (termino -> factor .)
    CHAR            reduce using rule 129 (termino -> factor .)
    WHILE           reduce using rule 129 (termino -> factor .)
    RBRACE          reduce using rule 129 (termino -> factor .)
    RETURN          reduce using rule 129 (termino -> factor .)
    RBRACKET        reduce using rule 129 (termino -> factor .)
    AND             reduce using rule 129 (termino -> factor .)
    OR              reduce using rule 129 (termino -> factor .)
    RPAREN          reduce using rule 129 (termino -> factor .)
    COMMA           reduce using rule 129 (termino -> factor .)


state 76

    (133) factor -> LPAREN . exp_cond RPAREN
    (113) exp_cond -> . exp_bool
    (114) exp_cond -> . exp_bool AND exp_cond
    (115) exp_cond -> . exp_bool OR exp_cond
    (116) exp_bool -> . TRUE
    (117) exp_bool -> . FALSE
    (118) exp_bool -> . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 85
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    exp_cond                       shift and go to state 140
    exp_bool                       shift and go to state 94
    expresion                      shift and go to state 97
    exp                            shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 77

    (139) factor -> objeto_aAcceso .

    TIMES           reduce using rule 139 (factor -> objeto_aAcceso .)
    DIVIDE          reduce using rule 139 (factor -> objeto_aAcceso .)
    MODULO          reduce using rule 139 (factor -> objeto_aAcceso .)
    LT              reduce using rule 139 (factor -> objeto_aAcceso .)
    GT              reduce using rule 139 (factor -> objeto_aAcceso .)
    GE              reduce using rule 139 (factor -> objeto_aAcceso .)
    LE              reduce using rule 139 (factor -> objeto_aAcceso .)
    EQ              reduce using rule 139 (factor -> objeto_aAcceso .)
    NE              reduce using rule 139 (factor -> objeto_aAcceso .)
    PLUS            reduce using rule 139 (factor -> objeto_aAcceso .)
    MINUS           reduce using rule 139 (factor -> objeto_aAcceso .)
    VAR             reduce using rule 139 (factor -> objeto_aAcceso .)
    PUBLIC          reduce using rule 139 (factor -> objeto_aAcceso .)
    IF              reduce using rule 139 (factor -> objeto_aAcceso .)
    PRIVATE         reduce using rule 139 (factor -> objeto_aAcceso .)
    PROTECTED       reduce using rule 139 (factor -> objeto_aAcceso .)
    ID              reduce using rule 139 (factor -> objeto_aAcceso .)
    PRINT           reduce using rule 139 (factor -> objeto_aAcceso .)
    READ            reduce using rule 139 (factor -> objeto_aAcceso .)
    VOID            reduce using rule 139 (factor -> objeto_aAcceso .)
    INT             reduce using rule 139 (factor -> objeto_aAcceso .)
    FLOAT           reduce using rule 139 (factor -> objeto_aAcceso .)
    CHAR            reduce using rule 139 (factor -> objeto_aAcceso .)
    WHILE           reduce using rule 139 (factor -> objeto_aAcceso .)
    RBRACE          reduce using rule 139 (factor -> objeto_aAcceso .)
    RETURN          reduce using rule 139 (factor -> objeto_aAcceso .)
    RBRACKET        reduce using rule 139 (factor -> objeto_aAcceso .)
    AND             reduce using rule 139 (factor -> objeto_aAcceso .)
    OR              reduce using rule 139 (factor -> objeto_aAcceso .)
    RPAREN          reduce using rule 139 (factor -> objeto_aAcceso .)
    COMMA           reduce using rule 139 (factor -> objeto_aAcceso .)


state 78

    (138) factor -> var .

    TIMES           reduce using rule 138 (factor -> var .)
    DIVIDE          reduce using rule 138 (factor -> var .)
    MODULO          reduce using rule 138 (factor -> var .)
    LT              reduce using rule 138 (factor -> var .)
    GT              reduce using rule 138 (factor -> var .)
    GE              reduce using rule 138 (factor -> var .)
    LE              reduce using rule 138 (factor -> var .)
    EQ              reduce using rule 138 (factor -> var .)
    NE              reduce using rule 138 (factor -> var .)
    PLUS            reduce using rule 138 (factor -> var .)
    MINUS           reduce using rule 138 (factor -> var .)
    VAR             reduce using rule 138 (factor -> var .)
    PUBLIC          reduce using rule 138 (factor -> var .)
    IF              reduce using rule 138 (factor -> var .)
    PRIVATE         reduce using rule 138 (factor -> var .)
    PROTECTED       reduce using rule 138 (factor -> var .)
    ID              reduce using rule 138 (factor -> var .)
    PRINT           reduce using rule 138 (factor -> var .)
    READ            reduce using rule 138 (factor -> var .)
    VOID            reduce using rule 138 (factor -> var .)
    INT             reduce using rule 138 (factor -> var .)
    FLOAT           reduce using rule 138 (factor -> var .)
    CHAR            reduce using rule 138 (factor -> var .)
    WHILE           reduce using rule 138 (factor -> var .)
    RBRACE          reduce using rule 138 (factor -> var .)
    RETURN          reduce using rule 138 (factor -> var .)
    RBRACKET        reduce using rule 138 (factor -> var .)
    AND             reduce using rule 138 (factor -> var .)
    OR              reduce using rule 138 (factor -> var .)
    RPAREN          reduce using rule 138 (factor -> var .)
    COMMA           reduce using rule 138 (factor -> var .)


state 79

    (141) var -> cint .

    TIMES           reduce using rule 141 (var -> cint .)
    DIVIDE          reduce using rule 141 (var -> cint .)
    MODULO          reduce using rule 141 (var -> cint .)
    LT              reduce using rule 141 (var -> cint .)
    GT              reduce using rule 141 (var -> cint .)
    GE              reduce using rule 141 (var -> cint .)
    LE              reduce using rule 141 (var -> cint .)
    EQ              reduce using rule 141 (var -> cint .)
    NE              reduce using rule 141 (var -> cint .)
    PLUS            reduce using rule 141 (var -> cint .)
    MINUS           reduce using rule 141 (var -> cint .)
    VAR             reduce using rule 141 (var -> cint .)
    PUBLIC          reduce using rule 141 (var -> cint .)
    IF              reduce using rule 141 (var -> cint .)
    PRIVATE         reduce using rule 141 (var -> cint .)
    PROTECTED       reduce using rule 141 (var -> cint .)
    ID              reduce using rule 141 (var -> cint .)
    PRINT           reduce using rule 141 (var -> cint .)
    READ            reduce using rule 141 (var -> cint .)
    VOID            reduce using rule 141 (var -> cint .)
    INT             reduce using rule 141 (var -> cint .)
    FLOAT           reduce using rule 141 (var -> cint .)
    CHAR            reduce using rule 141 (var -> cint .)
    WHILE           reduce using rule 141 (var -> cint .)
    RBRACE          reduce using rule 141 (var -> cint .)
    RETURN          reduce using rule 141 (var -> cint .)
    RBRACKET        reduce using rule 141 (var -> cint .)
    AND             reduce using rule 141 (var -> cint .)
    OR              reduce using rule 141 (var -> cint .)
    RPAREN          reduce using rule 141 (var -> cint .)
    COMMA           reduce using rule 141 (var -> cint .)


state 80

    (142) var -> cfloat .

    TIMES           reduce using rule 142 (var -> cfloat .)
    DIVIDE          reduce using rule 142 (var -> cfloat .)
    MODULO          reduce using rule 142 (var -> cfloat .)
    LT              reduce using rule 142 (var -> cfloat .)
    GT              reduce using rule 142 (var -> cfloat .)
    GE              reduce using rule 142 (var -> cfloat .)
    LE              reduce using rule 142 (var -> cfloat .)
    EQ              reduce using rule 142 (var -> cfloat .)
    NE              reduce using rule 142 (var -> cfloat .)
    PLUS            reduce using rule 142 (var -> cfloat .)
    MINUS           reduce using rule 142 (var -> cfloat .)
    VAR             reduce using rule 142 (var -> cfloat .)
    PUBLIC          reduce using rule 142 (var -> cfloat .)
    IF              reduce using rule 142 (var -> cfloat .)
    PRIVATE         reduce using rule 142 (var -> cfloat .)
    PROTECTED       reduce using rule 142 (var -> cfloat .)
    ID              reduce using rule 142 (var -> cfloat .)
    PRINT           reduce using rule 142 (var -> cfloat .)
    READ            reduce using rule 142 (var -> cfloat .)
    VOID            reduce using rule 142 (var -> cfloat .)
    INT             reduce using rule 142 (var -> cfloat .)
    FLOAT           reduce using rule 142 (var -> cfloat .)
    CHAR            reduce using rule 142 (var -> cfloat .)
    WHILE           reduce using rule 142 (var -> cfloat .)
    RBRACE          reduce using rule 142 (var -> cfloat .)
    RETURN          reduce using rule 142 (var -> cfloat .)
    RBRACKET        reduce using rule 142 (var -> cfloat .)
    AND             reduce using rule 142 (var -> cfloat .)
    OR              reduce using rule 142 (var -> cfloat .)
    RPAREN          reduce using rule 142 (var -> cfloat .)
    COMMA           reduce using rule 142 (var -> cfloat .)


state 81

    (143) var -> cchar .

    TIMES           reduce using rule 143 (var -> cchar .)
    DIVIDE          reduce using rule 143 (var -> cchar .)
    MODULO          reduce using rule 143 (var -> cchar .)
    LT              reduce using rule 143 (var -> cchar .)
    GT              reduce using rule 143 (var -> cchar .)
    GE              reduce using rule 143 (var -> cchar .)
    LE              reduce using rule 143 (var -> cchar .)
    EQ              reduce using rule 143 (var -> cchar .)
    NE              reduce using rule 143 (var -> cchar .)
    PLUS            reduce using rule 143 (var -> cchar .)
    MINUS           reduce using rule 143 (var -> cchar .)
    VAR             reduce using rule 143 (var -> cchar .)
    PUBLIC          reduce using rule 143 (var -> cchar .)
    IF              reduce using rule 143 (var -> cchar .)
    PRIVATE         reduce using rule 143 (var -> cchar .)
    PROTECTED       reduce using rule 143 (var -> cchar .)
    ID              reduce using rule 143 (var -> cchar .)
    PRINT           reduce using rule 143 (var -> cchar .)
    READ            reduce using rule 143 (var -> cchar .)
    VOID            reduce using rule 143 (var -> cchar .)
    INT             reduce using rule 143 (var -> cchar .)
    FLOAT           reduce using rule 143 (var -> cchar .)
    CHAR            reduce using rule 143 (var -> cchar .)
    WHILE           reduce using rule 143 (var -> cchar .)
    RBRACE          reduce using rule 143 (var -> cchar .)
    RETURN          reduce using rule 143 (var -> cchar .)
    RBRACKET        reduce using rule 143 (var -> cchar .)
    AND             reduce using rule 143 (var -> cchar .)
    OR              reduce using rule 143 (var -> cchar .)
    RPAREN          reduce using rule 143 (var -> cchar .)
    COMMA           reduce using rule 143 (var -> cchar .)


state 82

    (144) cint -> CINT .

    TIMES           reduce using rule 144 (cint -> CINT .)
    DIVIDE          reduce using rule 144 (cint -> CINT .)
    MODULO          reduce using rule 144 (cint -> CINT .)
    LT              reduce using rule 144 (cint -> CINT .)
    GT              reduce using rule 144 (cint -> CINT .)
    GE              reduce using rule 144 (cint -> CINT .)
    LE              reduce using rule 144 (cint -> CINT .)
    EQ              reduce using rule 144 (cint -> CINT .)
    NE              reduce using rule 144 (cint -> CINT .)
    PLUS            reduce using rule 144 (cint -> CINT .)
    MINUS           reduce using rule 144 (cint -> CINT .)
    VAR             reduce using rule 144 (cint -> CINT .)
    PUBLIC          reduce using rule 144 (cint -> CINT .)
    IF              reduce using rule 144 (cint -> CINT .)
    PRIVATE         reduce using rule 144 (cint -> CINT .)
    PROTECTED       reduce using rule 144 (cint -> CINT .)
    ID              reduce using rule 144 (cint -> CINT .)
    PRINT           reduce using rule 144 (cint -> CINT .)
    READ            reduce using rule 144 (cint -> CINT .)
    VOID            reduce using rule 144 (cint -> CINT .)
    INT             reduce using rule 144 (cint -> CINT .)
    FLOAT           reduce using rule 144 (cint -> CINT .)
    CHAR            reduce using rule 144 (cint -> CINT .)
    WHILE           reduce using rule 144 (cint -> CINT .)
    RBRACE          reduce using rule 144 (cint -> CINT .)
    RETURN          reduce using rule 144 (cint -> CINT .)
    RBRACKET        reduce using rule 144 (cint -> CINT .)
    AND             reduce using rule 144 (cint -> CINT .)
    OR              reduce using rule 144 (cint -> CINT .)
    RPAREN          reduce using rule 144 (cint -> CINT .)
    COMMA           reduce using rule 144 (cint -> CINT .)


state 83

    (145) cfloat -> NUMBER .

    TIMES           reduce using rule 145 (cfloat -> NUMBER .)
    DIVIDE          reduce using rule 145 (cfloat -> NUMBER .)
    MODULO          reduce using rule 145 (cfloat -> NUMBER .)
    LT              reduce using rule 145 (cfloat -> NUMBER .)
    GT              reduce using rule 145 (cfloat -> NUMBER .)
    GE              reduce using rule 145 (cfloat -> NUMBER .)
    LE              reduce using rule 145 (cfloat -> NUMBER .)
    EQ              reduce using rule 145 (cfloat -> NUMBER .)
    NE              reduce using rule 145 (cfloat -> NUMBER .)
    PLUS            reduce using rule 145 (cfloat -> NUMBER .)
    MINUS           reduce using rule 145 (cfloat -> NUMBER .)
    VAR             reduce using rule 145 (cfloat -> NUMBER .)
    PUBLIC          reduce using rule 145 (cfloat -> NUMBER .)
    IF              reduce using rule 145 (cfloat -> NUMBER .)
    PRIVATE         reduce using rule 145 (cfloat -> NUMBER .)
    PROTECTED       reduce using rule 145 (cfloat -> NUMBER .)
    ID              reduce using rule 145 (cfloat -> NUMBER .)
    PRINT           reduce using rule 145 (cfloat -> NUMBER .)
    READ            reduce using rule 145 (cfloat -> NUMBER .)
    VOID            reduce using rule 145 (cfloat -> NUMBER .)
    INT             reduce using rule 145 (cfloat -> NUMBER .)
    FLOAT           reduce using rule 145 (cfloat -> NUMBER .)
    CHAR            reduce using rule 145 (cfloat -> NUMBER .)
    WHILE           reduce using rule 145 (cfloat -> NUMBER .)
    RBRACE          reduce using rule 145 (cfloat -> NUMBER .)
    RETURN          reduce using rule 145 (cfloat -> NUMBER .)
    RBRACKET        reduce using rule 145 (cfloat -> NUMBER .)
    AND             reduce using rule 145 (cfloat -> NUMBER .)
    OR              reduce using rule 145 (cfloat -> NUMBER .)
    RPAREN          reduce using rule 145 (cfloat -> NUMBER .)
    COMMA           reduce using rule 145 (cfloat -> NUMBER .)


state 84

    (146) cchar -> CCHAR .

    TIMES           reduce using rule 146 (cchar -> CCHAR .)
    DIVIDE          reduce using rule 146 (cchar -> CCHAR .)
    MODULO          reduce using rule 146 (cchar -> CCHAR .)
    LT              reduce using rule 146 (cchar -> CCHAR .)
    GT              reduce using rule 146 (cchar -> CCHAR .)
    GE              reduce using rule 146 (cchar -> CCHAR .)
    LE              reduce using rule 146 (cchar -> CCHAR .)
    EQ              reduce using rule 146 (cchar -> CCHAR .)
    NE              reduce using rule 146 (cchar -> CCHAR .)
    PLUS            reduce using rule 146 (cchar -> CCHAR .)
    MINUS           reduce using rule 146 (cchar -> CCHAR .)
    VAR             reduce using rule 146 (cchar -> CCHAR .)
    PUBLIC          reduce using rule 146 (cchar -> CCHAR .)
    IF              reduce using rule 146 (cchar -> CCHAR .)
    PRIVATE         reduce using rule 146 (cchar -> CCHAR .)
    PROTECTED       reduce using rule 146 (cchar -> CCHAR .)
    ID              reduce using rule 146 (cchar -> CCHAR .)
    PRINT           reduce using rule 146 (cchar -> CCHAR .)
    READ            reduce using rule 146 (cchar -> CCHAR .)
    VOID            reduce using rule 146 (cchar -> CCHAR .)
    INT             reduce using rule 146 (cchar -> CCHAR .)
    FLOAT           reduce using rule 146 (cchar -> CCHAR .)
    CHAR            reduce using rule 146 (cchar -> CCHAR .)
    WHILE           reduce using rule 146 (cchar -> CCHAR .)
    RBRACE          reduce using rule 146 (cchar -> CCHAR .)
    RETURN          reduce using rule 146 (cchar -> CCHAR .)
    RBRACKET        reduce using rule 146 (cchar -> CCHAR .)
    AND             reduce using rule 146 (cchar -> CCHAR .)
    OR              reduce using rule 146 (cchar -> CCHAR .)
    RPAREN          reduce using rule 146 (cchar -> CCHAR .)
    COMMA           reduce using rule 146 (cchar -> CCHAR .)


state 85

    (140) var -> ID .
    (147) objeto_aAcceso -> ID . PERIOD ID

    TIMES           reduce using rule 140 (var -> ID .)
    DIVIDE          reduce using rule 140 (var -> ID .)
    MODULO          reduce using rule 140 (var -> ID .)
    RBRACKET        reduce using rule 140 (var -> ID .)
    PLUS            reduce using rule 140 (var -> ID .)
    MINUS           reduce using rule 140 (var -> ID .)
    LT              reduce using rule 140 (var -> ID .)
    GT              reduce using rule 140 (var -> ID .)
    GE              reduce using rule 140 (var -> ID .)
    LE              reduce using rule 140 (var -> ID .)
    EQ              reduce using rule 140 (var -> ID .)
    NE              reduce using rule 140 (var -> ID .)
    AND             reduce using rule 140 (var -> ID .)
    OR              reduce using rule 140 (var -> ID .)
    RPAREN          reduce using rule 140 (var -> ID .)
    COMMA           reduce using rule 140 (var -> ID .)
    VAR             reduce using rule 140 (var -> ID .)
    PUBLIC          reduce using rule 140 (var -> ID .)
    IF              reduce using rule 140 (var -> ID .)
    PRIVATE         reduce using rule 140 (var -> ID .)
    PROTECTED       reduce using rule 140 (var -> ID .)
    ID              reduce using rule 140 (var -> ID .)
    PRINT           reduce using rule 140 (var -> ID .)
    READ            reduce using rule 140 (var -> ID .)
    VOID            reduce using rule 140 (var -> ID .)
    INT             reduce using rule 140 (var -> ID .)
    FLOAT           reduce using rule 140 (var -> ID .)
    CHAR            reduce using rule 140 (var -> ID .)
    WHILE           reduce using rule 140 (var -> ID .)
    RBRACE          reduce using rule 140 (var -> ID .)
    RETURN          reduce using rule 140 (var -> ID .)
    PERIOD          shift and go to state 141


state 86

    (91) asignacion -> ID LBRACKET exp . RBRACKET EQUALS expresion
    (92) asignacion -> ID LBRACKET exp . RBRACKET EQUALS llamada_func
    (93) asignacion -> ID LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (97) asignacion -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (98) asignacion -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (99) asignacion -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (127) exp -> exp . PLUS termino
    (128) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 142
    PLUS            shift and go to state 130
    MINUS           shift and go to state 131


state 87

    (147) objeto_aAcceso -> ID PERIOD ID .
    (105) llamada_id -> ID .

    EQUALS          reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    LBRACKET        reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    TIMES           reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    DIVIDE          reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    MODULO          reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    LT              reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    GT              reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    GE              reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    LE              reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    EQ              reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    NE              reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    PLUS            reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    MINUS           reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    VAR             reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    PUBLIC          reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    IF              reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    PRIVATE         reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    PROTECTED       reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    ID              reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    PRINT           reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    READ            reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    VOID            reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    INT             reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    FLOAT           reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    CHAR            reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    WHILE           reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACE          reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    RETURN          reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    COMMA           reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    RPAREN          reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    LPAREN          reduce using rule 105 (llamada_id -> ID .)


state 88

    (103) objeto_metodo -> ID PERIOD llamada_func .

    VAR             reduce using rule 103 (objeto_metodo -> ID PERIOD llamada_func .)
    PUBLIC          reduce using rule 103 (objeto_metodo -> ID PERIOD llamada_func .)
    IF              reduce using rule 103 (objeto_metodo -> ID PERIOD llamada_func .)
    PRIVATE         reduce using rule 103 (objeto_metodo -> ID PERIOD llamada_func .)
    PROTECTED       reduce using rule 103 (objeto_metodo -> ID PERIOD llamada_func .)
    ID              reduce using rule 103 (objeto_metodo -> ID PERIOD llamada_func .)
    PRINT           reduce using rule 103 (objeto_metodo -> ID PERIOD llamada_func .)
    READ            reduce using rule 103 (objeto_metodo -> ID PERIOD llamada_func .)
    VOID            reduce using rule 103 (objeto_metodo -> ID PERIOD llamada_func .)
    INT             reduce using rule 103 (objeto_metodo -> ID PERIOD llamada_func .)
    FLOAT           reduce using rule 103 (objeto_metodo -> ID PERIOD llamada_func .)
    CHAR            reduce using rule 103 (objeto_metodo -> ID PERIOD llamada_func .)
    WHILE           reduce using rule 103 (objeto_metodo -> ID PERIOD llamada_func .)
    RBRACE          reduce using rule 103 (objeto_metodo -> ID PERIOD llamada_func .)
    RETURN          reduce using rule 103 (objeto_metodo -> ID PERIOD llamada_func .)
    COMMA           reduce using rule 103 (objeto_metodo -> ID PERIOD llamada_func .)
    RPAREN          reduce using rule 103 (objeto_metodo -> ID PERIOD llamada_func .)


state 89

    (26) constructor -> PUBLIC ID LPAREN . param RPAREN bloque
    (46) param -> .
    (47) param -> . tipo_simple ID
    (48) param -> . tipo_simple ID COMMA param
    (81) tipo_simple -> . INT
    (82) tipo_simple -> . FLOAT
    (83) tipo_simple -> . CHAR

    RPAREN          reduce using rule 46 (param -> .)
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    CHAR            shift and go to state 119

    param                          shift and go to state 143
    tipo_simple                    shift and go to state 144

state 90

    (28) funcion -> scope type DEF . id LPAREN param aux_param RPAREN contexto_func
    (30) id -> . ID

    ID              shift and go to state 146

    id                             shift and go to state 145

state 91

    (29) funcion -> scope VOID DEF . id LPAREN param aux_param RPAREN contexto_func
    (30) id -> . ID

    ID              shift and go to state 146

    id                             shift and go to state 147

state 92

    (19) condicion -> IF LPAREN gotoF . RPAREN bloque
    (20) condicion -> IF LPAREN gotoF . RPAREN bloque elif

    RPAREN          shift and go to state 148


state 93

    (112) gotoF -> exp_cond .

    RPAREN          reduce using rule 112 (gotoF -> exp_cond .)


state 94

    (113) exp_cond -> exp_bool .
    (114) exp_cond -> exp_bool . AND exp_cond
    (115) exp_cond -> exp_bool . OR exp_cond

    RPAREN          reduce using rule 113 (exp_cond -> exp_bool .)
    RETURN          reduce using rule 113 (exp_cond -> exp_bool .)
    VAR             reduce using rule 113 (exp_cond -> exp_bool .)
    ID              reduce using rule 113 (exp_cond -> exp_bool .)
    PRINT           reduce using rule 113 (exp_cond -> exp_bool .)
    READ            reduce using rule 113 (exp_cond -> exp_bool .)
    WHILE           reduce using rule 113 (exp_cond -> exp_bool .)
    RBRACE          reduce using rule 113 (exp_cond -> exp_bool .)
    AND             shift and go to state 149
    OR              shift and go to state 150


state 95

    (116) exp_bool -> TRUE .

    AND             reduce using rule 116 (exp_bool -> TRUE .)
    OR              reduce using rule 116 (exp_bool -> TRUE .)
    RPAREN          reduce using rule 116 (exp_bool -> TRUE .)
    RETURN          reduce using rule 116 (exp_bool -> TRUE .)
    VAR             reduce using rule 116 (exp_bool -> TRUE .)
    ID              reduce using rule 116 (exp_bool -> TRUE .)
    PRINT           reduce using rule 116 (exp_bool -> TRUE .)
    READ            reduce using rule 116 (exp_bool -> TRUE .)
    WHILE           reduce using rule 116 (exp_bool -> TRUE .)
    RBRACE          reduce using rule 116 (exp_bool -> TRUE .)


state 96

    (117) exp_bool -> FALSE .

    AND             reduce using rule 117 (exp_bool -> FALSE .)
    OR              reduce using rule 117 (exp_bool -> FALSE .)
    RPAREN          reduce using rule 117 (exp_bool -> FALSE .)
    RETURN          reduce using rule 117 (exp_bool -> FALSE .)
    VAR             reduce using rule 117 (exp_bool -> FALSE .)
    ID              reduce using rule 117 (exp_bool -> FALSE .)
    PRINT           reduce using rule 117 (exp_bool -> FALSE .)
    READ            reduce using rule 117 (exp_bool -> FALSE .)
    WHILE           reduce using rule 117 (exp_bool -> FALSE .)
    RBRACE          reduce using rule 117 (exp_bool -> FALSE .)


state 97

    (118) exp_bool -> expresion .

    AND             reduce using rule 118 (exp_bool -> expresion .)
    OR              reduce using rule 118 (exp_bool -> expresion .)
    RPAREN          reduce using rule 118 (exp_bool -> expresion .)
    RETURN          reduce using rule 118 (exp_bool -> expresion .)
    VAR             reduce using rule 118 (exp_bool -> expresion .)
    ID              reduce using rule 118 (exp_bool -> expresion .)
    PRINT           reduce using rule 118 (exp_bool -> expresion .)
    READ            reduce using rule 118 (exp_bool -> expresion .)
    WHILE           reduce using rule 118 (exp_bool -> expresion .)
    RBRACE          reduce using rule 118 (exp_bool -> expresion .)


state 98

    (24) ciclo -> aux_ciclo WHILE LPAREN . gotoF RPAREN bloque
    (112) gotoF -> . exp_cond
    (113) exp_cond -> . exp_bool
    (114) exp_cond -> . exp_bool AND exp_cond
    (115) exp_cond -> . exp_bool OR exp_cond
    (116) exp_bool -> . TRUE
    (117) exp_bool -> . FALSE
    (118) exp_bool -> . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 85
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    gotoF                          shift and go to state 151
    exp_cond                       shift and go to state 93
    exp_bool                       shift and go to state 94
    expresion                      shift and go to state 97
    exp                            shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 99

    (88) asignacion -> objeto_aAcceso EQUALS expresion .

    VAR             reduce using rule 88 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PUBLIC          reduce using rule 88 (asignacion -> objeto_aAcceso EQUALS expresion .)
    IF              reduce using rule 88 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PRIVATE         reduce using rule 88 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PROTECTED       reduce using rule 88 (asignacion -> objeto_aAcceso EQUALS expresion .)
    ID              reduce using rule 88 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PRINT           reduce using rule 88 (asignacion -> objeto_aAcceso EQUALS expresion .)
    READ            reduce using rule 88 (asignacion -> objeto_aAcceso EQUALS expresion .)
    VOID            reduce using rule 88 (asignacion -> objeto_aAcceso EQUALS expresion .)
    INT             reduce using rule 88 (asignacion -> objeto_aAcceso EQUALS expresion .)
    FLOAT           reduce using rule 88 (asignacion -> objeto_aAcceso EQUALS expresion .)
    CHAR            reduce using rule 88 (asignacion -> objeto_aAcceso EQUALS expresion .)
    WHILE           reduce using rule 88 (asignacion -> objeto_aAcceso EQUALS expresion .)
    RBRACE          reduce using rule 88 (asignacion -> objeto_aAcceso EQUALS expresion .)
    RETURN          reduce using rule 88 (asignacion -> objeto_aAcceso EQUALS expresion .)


state 100

    (89) asignacion -> objeto_aAcceso EQUALS llamada_func .

    VAR             reduce using rule 89 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PUBLIC          reduce using rule 89 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    IF              reduce using rule 89 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PRIVATE         reduce using rule 89 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PROTECTED       reduce using rule 89 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    ID              reduce using rule 89 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PRINT           reduce using rule 89 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    READ            reduce using rule 89 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    VOID            reduce using rule 89 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    INT             reduce using rule 89 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    FLOAT           reduce using rule 89 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    CHAR            reduce using rule 89 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    WHILE           reduce using rule 89 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    RBRACE          reduce using rule 89 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    RETURN          reduce using rule 89 (asignacion -> objeto_aAcceso EQUALS llamada_func .)


state 101

    (90) asignacion -> objeto_aAcceso EQUALS objeto_metodo .

    VAR             reduce using rule 90 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 90 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    IF              reduce using rule 90 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 90 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 90 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    ID              reduce using rule 90 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PRINT           reduce using rule 90 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    READ            reduce using rule 90 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    VOID            reduce using rule 90 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    INT             reduce using rule 90 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    FLOAT           reduce using rule 90 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    CHAR            reduce using rule 90 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    WHILE           reduce using rule 90 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    RBRACE          reduce using rule 90 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    RETURN          reduce using rule 90 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)


state 102

    (100) asignacion -> objeto_aAcceso LBRACKET LBRACKET . exp RBRACKET exp RBRACKET EQUALS expresion
    (101) asignacion -> objeto_aAcceso LBRACKET LBRACKET . exp RBRACKET exp RBRACKET EQUALS llamada_func
    (102) asignacion -> objeto_aAcceso LBRACKET LBRACKET . exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 85
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    objeto_aAcceso                 shift and go to state 77
    exp                            shift and go to state 152
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 103

    (94) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET EQUALS expresion
    (95) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET EQUALS llamada_func
    (96) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (127) exp -> exp . PLUS termino
    (128) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 153
    PLUS            shift and go to state 130
    MINUS           shift and go to state 131


state 104

    (64) escritura -> PRINT LPAREN aux3 . RPAREN

    RPAREN          shift and go to state 154


state 105

    (65) aux3 -> expresion .
    (69) aux3 -> expresion . COMMA aux3

    RPAREN          reduce using rule 65 (aux3 -> expresion .)
    COMMA           shift and go to state 155


state 106

    (66) aux3 -> llamada_func .
    (70) aux3 -> llamada_func . COMMA aux3

    RPAREN          reduce using rule 66 (aux3 -> llamada_func .)
    COMMA           shift and go to state 156


state 107

    (67) aux3 -> objeto_metodo .
    (71) aux3 -> objeto_metodo . COMMA aux3

    RPAREN          reduce using rule 67 (aux3 -> objeto_metodo .)
    COMMA           shift and go to state 157


state 108

    (68) aux3 -> CSTRING .
    (72) aux3 -> CSTRING . COMMA aux3

    RPAREN          reduce using rule 68 (aux3 -> CSTRING .)
    COMMA           shift and go to state 158


state 109

    (104) llamada_func -> llamada_id llamada_lparen aux . llamada_rparen
    (107) llamada_rparen -> . RPAREN

    RPAREN          shift and go to state 160

    llamada_rparen                 shift and go to state 159

state 110

    (108) aux -> exp . aux_exp
    (109) aux -> exp . aux_exp aux_comma aux
    (127) exp -> exp . PLUS termino
    (128) exp -> exp . MINUS termino
    (110) aux_exp -> .

    PLUS            shift and go to state 130
    MINUS           shift and go to state 131
    COMMA           reduce using rule 110 (aux_exp -> .)
    RPAREN          reduce using rule 110 (aux_exp -> .)

    aux_exp                        shift and go to state 161

state 111

    (59) lectura -> READ LPAREN aux4 . RPAREN

    RPAREN          shift and go to state 162


state 112

    (60) aux4 -> ID .
    (62) aux4 -> ID . COMMA aux4
    (147) objeto_aAcceso -> ID . PERIOD ID

    RPAREN          reduce using rule 60 (aux4 -> ID .)
    COMMA           shift and go to state 163
    PERIOD          shift and go to state 141


state 113

    (61) aux4 -> objeto_aAcceso .
    (63) aux4 -> objeto_aAcceso . COMMA aux4

    RPAREN          reduce using rule 61 (aux4 -> objeto_aAcceso .)
    COMMA           shift and go to state 164


state 114

    (5) class -> scope CLASS ID COLON ID .

    LBRACE          reduce using rule 5 (class -> scope CLASS ID COLON ID .)


state 115

    (73) vars -> VAR aux2 COLON tipo_simple .

    VAR             reduce using rule 73 (vars -> VAR aux2 COLON tipo_simple .)
    PUBLIC          reduce using rule 73 (vars -> VAR aux2 COLON tipo_simple .)
    IF              reduce using rule 73 (vars -> VAR aux2 COLON tipo_simple .)
    PRIVATE         reduce using rule 73 (vars -> VAR aux2 COLON tipo_simple .)
    PROTECTED       reduce using rule 73 (vars -> VAR aux2 COLON tipo_simple .)
    ID              reduce using rule 73 (vars -> VAR aux2 COLON tipo_simple .)
    PRINT           reduce using rule 73 (vars -> VAR aux2 COLON tipo_simple .)
    READ            reduce using rule 73 (vars -> VAR aux2 COLON tipo_simple .)
    VOID            reduce using rule 73 (vars -> VAR aux2 COLON tipo_simple .)
    INT             reduce using rule 73 (vars -> VAR aux2 COLON tipo_simple .)
    FLOAT           reduce using rule 73 (vars -> VAR aux2 COLON tipo_simple .)
    CHAR            reduce using rule 73 (vars -> VAR aux2 COLON tipo_simple .)
    WHILE           reduce using rule 73 (vars -> VAR aux2 COLON tipo_simple .)
    RBRACE          reduce using rule 73 (vars -> VAR aux2 COLON tipo_simple .)
    RETURN          reduce using rule 73 (vars -> VAR aux2 COLON tipo_simple .)


state 116

    (74) vars -> VAR aux2 COLON tipo_compuesto .

    VAR             reduce using rule 74 (vars -> VAR aux2 COLON tipo_compuesto .)
    PUBLIC          reduce using rule 74 (vars -> VAR aux2 COLON tipo_compuesto .)
    IF              reduce using rule 74 (vars -> VAR aux2 COLON tipo_compuesto .)
    PRIVATE         reduce using rule 74 (vars -> VAR aux2 COLON tipo_compuesto .)
    PROTECTED       reduce using rule 74 (vars -> VAR aux2 COLON tipo_compuesto .)
    ID              reduce using rule 74 (vars -> VAR aux2 COLON tipo_compuesto .)
    PRINT           reduce using rule 74 (vars -> VAR aux2 COLON tipo_compuesto .)
    READ            reduce using rule 74 (vars -> VAR aux2 COLON tipo_compuesto .)
    VOID            reduce using rule 74 (vars -> VAR aux2 COLON tipo_compuesto .)
    INT             reduce using rule 74 (vars -> VAR aux2 COLON tipo_compuesto .)
    FLOAT           reduce using rule 74 (vars -> VAR aux2 COLON tipo_compuesto .)
    CHAR            reduce using rule 74 (vars -> VAR aux2 COLON tipo_compuesto .)
    WHILE           reduce using rule 74 (vars -> VAR aux2 COLON tipo_compuesto .)
    RBRACE          reduce using rule 74 (vars -> VAR aux2 COLON tipo_compuesto .)
    RETURN          reduce using rule 74 (vars -> VAR aux2 COLON tipo_compuesto .)


state 117

    (81) tipo_simple -> INT .

    VAR             reduce using rule 81 (tipo_simple -> INT .)
    PUBLIC          reduce using rule 81 (tipo_simple -> INT .)
    IF              reduce using rule 81 (tipo_simple -> INT .)
    PRIVATE         reduce using rule 81 (tipo_simple -> INT .)
    PROTECTED       reduce using rule 81 (tipo_simple -> INT .)
    ID              reduce using rule 81 (tipo_simple -> INT .)
    PRINT           reduce using rule 81 (tipo_simple -> INT .)
    READ            reduce using rule 81 (tipo_simple -> INT .)
    VOID            reduce using rule 81 (tipo_simple -> INT .)
    INT             reduce using rule 81 (tipo_simple -> INT .)
    FLOAT           reduce using rule 81 (tipo_simple -> INT .)
    CHAR            reduce using rule 81 (tipo_simple -> INT .)
    WHILE           reduce using rule 81 (tipo_simple -> INT .)
    RBRACE          reduce using rule 81 (tipo_simple -> INT .)
    RETURN          reduce using rule 81 (tipo_simple -> INT .)


state 118

    (82) tipo_simple -> FLOAT .

    VAR             reduce using rule 82 (tipo_simple -> FLOAT .)
    PUBLIC          reduce using rule 82 (tipo_simple -> FLOAT .)
    IF              reduce using rule 82 (tipo_simple -> FLOAT .)
    PRIVATE         reduce using rule 82 (tipo_simple -> FLOAT .)
    PROTECTED       reduce using rule 82 (tipo_simple -> FLOAT .)
    ID              reduce using rule 82 (tipo_simple -> FLOAT .)
    PRINT           reduce using rule 82 (tipo_simple -> FLOAT .)
    READ            reduce using rule 82 (tipo_simple -> FLOAT .)
    VOID            reduce using rule 82 (tipo_simple -> FLOAT .)
    INT             reduce using rule 82 (tipo_simple -> FLOAT .)
    FLOAT           reduce using rule 82 (tipo_simple -> FLOAT .)
    CHAR            reduce using rule 82 (tipo_simple -> FLOAT .)
    WHILE           reduce using rule 82 (tipo_simple -> FLOAT .)
    RBRACE          reduce using rule 82 (tipo_simple -> FLOAT .)
    RETURN          reduce using rule 82 (tipo_simple -> FLOAT .)


state 119

    (83) tipo_simple -> CHAR .

    VAR             reduce using rule 83 (tipo_simple -> CHAR .)
    PUBLIC          reduce using rule 83 (tipo_simple -> CHAR .)
    IF              reduce using rule 83 (tipo_simple -> CHAR .)
    PRIVATE         reduce using rule 83 (tipo_simple -> CHAR .)
    PROTECTED       reduce using rule 83 (tipo_simple -> CHAR .)
    ID              reduce using rule 83 (tipo_simple -> CHAR .)
    PRINT           reduce using rule 83 (tipo_simple -> CHAR .)
    READ            reduce using rule 83 (tipo_simple -> CHAR .)
    VOID            reduce using rule 83 (tipo_simple -> CHAR .)
    INT             reduce using rule 83 (tipo_simple -> CHAR .)
    FLOAT           reduce using rule 83 (tipo_simple -> CHAR .)
    CHAR            reduce using rule 83 (tipo_simple -> CHAR .)
    WHILE           reduce using rule 83 (tipo_simple -> CHAR .)
    RBRACE          reduce using rule 83 (tipo_simple -> CHAR .)
    RETURN          reduce using rule 83 (tipo_simple -> CHAR .)


state 120

    (84) tipo_compuesto -> ID .

    VAR             reduce using rule 84 (tipo_compuesto -> ID .)
    PUBLIC          reduce using rule 84 (tipo_compuesto -> ID .)
    IF              reduce using rule 84 (tipo_compuesto -> ID .)
    PRIVATE         reduce using rule 84 (tipo_compuesto -> ID .)
    PROTECTED       reduce using rule 84 (tipo_compuesto -> ID .)
    ID              reduce using rule 84 (tipo_compuesto -> ID .)
    PRINT           reduce using rule 84 (tipo_compuesto -> ID .)
    READ            reduce using rule 84 (tipo_compuesto -> ID .)
    VOID            reduce using rule 84 (tipo_compuesto -> ID .)
    INT             reduce using rule 84 (tipo_compuesto -> ID .)
    FLOAT           reduce using rule 84 (tipo_compuesto -> ID .)
    CHAR            reduce using rule 84 (tipo_compuesto -> ID .)
    WHILE           reduce using rule 84 (tipo_compuesto -> ID .)
    RBRACE          reduce using rule 84 (tipo_compuesto -> ID .)
    RETURN          reduce using rule 84 (tipo_compuesto -> ID .)


state 121

    (75) vars -> VAR ID LBRACKET cint . RBRACKET COLON tipo_simple
    (76) vars -> VAR ID LBRACKET cint . RBRACKET COLON tipo_compuesto
    (77) vars -> VAR ID LBRACKET cint . RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (78) vars -> VAR ID LBRACKET cint . RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto

    RBRACKET        shift and go to state 165


state 122

    (79) aux2 -> ID .
    (80) aux2 -> ID . COMMA aux2

    COLON           reduce using rule 79 (aux2 -> ID .)
    COMMA           shift and go to state 66


state 123

    (80) aux2 -> ID COMMA aux2 .

    COLON           reduce using rule 80 (aux2 -> ID COMMA aux2 .)


state 124

    (120) expresion -> exp LT . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 85
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    exp                            shift and go to state 71
    expresion                      shift and go to state 166
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 125

    (121) expresion -> exp GT . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 85
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    exp                            shift and go to state 71
    expresion                      shift and go to state 167
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 126

    (122) expresion -> exp GE . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 85
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    exp                            shift and go to state 71
    expresion                      shift and go to state 168
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 127

    (123) expresion -> exp LE . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 85
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    exp                            shift and go to state 71
    expresion                      shift and go to state 169
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 128

    (124) expresion -> exp EQ . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 85
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    exp                            shift and go to state 71
    expresion                      shift and go to state 170
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 129

    (125) expresion -> exp NE . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 85
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    exp                            shift and go to state 71
    expresion                      shift and go to state 171
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 130

    (127) exp -> exp PLUS . termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 85
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    termino                        shift and go to state 172
    factor                         shift and go to state 75
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 131

    (128) exp -> exp MINUS . termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 85
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    termino                        shift and go to state 173
    factor                         shift and go to state 75
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 132

    (130) termino -> termino TIMES . factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 85
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    factor                         shift and go to state 174
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 133

    (131) termino -> termino DIVIDE . factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 85
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    factor                         shift and go to state 175
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 134

    (132) termino -> termino MODULO . factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 85
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    factor                         shift and go to state 176
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 135

    (134) factor -> PLUS objeto_aAcceso .

    TIMES           reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    DIVIDE          reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    MODULO          reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    LT              reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    GT              reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    GE              reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    LE              reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    EQ              reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    NE              reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    PLUS            reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    MINUS           reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    VAR             reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    PUBLIC          reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    IF              reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    PRIVATE         reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    PROTECTED       reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    ID              reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    PRINT           reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    READ            reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    VOID            reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    INT             reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    FLOAT           reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    CHAR            reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    WHILE           reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    RBRACE          reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    RETURN          reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    RBRACKET        reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    AND             reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    OR              reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    RPAREN          reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    COMMA           reduce using rule 134 (factor -> PLUS objeto_aAcceso .)


state 136

    (136) factor -> PLUS var .

    TIMES           reduce using rule 136 (factor -> PLUS var .)
    DIVIDE          reduce using rule 136 (factor -> PLUS var .)
    MODULO          reduce using rule 136 (factor -> PLUS var .)
    LT              reduce using rule 136 (factor -> PLUS var .)
    GT              reduce using rule 136 (factor -> PLUS var .)
    GE              reduce using rule 136 (factor -> PLUS var .)
    LE              reduce using rule 136 (factor -> PLUS var .)
    EQ              reduce using rule 136 (factor -> PLUS var .)
    NE              reduce using rule 136 (factor -> PLUS var .)
    PLUS            reduce using rule 136 (factor -> PLUS var .)
    MINUS           reduce using rule 136 (factor -> PLUS var .)
    VAR             reduce using rule 136 (factor -> PLUS var .)
    PUBLIC          reduce using rule 136 (factor -> PLUS var .)
    IF              reduce using rule 136 (factor -> PLUS var .)
    PRIVATE         reduce using rule 136 (factor -> PLUS var .)
    PROTECTED       reduce using rule 136 (factor -> PLUS var .)
    ID              reduce using rule 136 (factor -> PLUS var .)
    PRINT           reduce using rule 136 (factor -> PLUS var .)
    READ            reduce using rule 136 (factor -> PLUS var .)
    VOID            reduce using rule 136 (factor -> PLUS var .)
    INT             reduce using rule 136 (factor -> PLUS var .)
    FLOAT           reduce using rule 136 (factor -> PLUS var .)
    CHAR            reduce using rule 136 (factor -> PLUS var .)
    WHILE           reduce using rule 136 (factor -> PLUS var .)
    RBRACE          reduce using rule 136 (factor -> PLUS var .)
    RETURN          reduce using rule 136 (factor -> PLUS var .)
    RBRACKET        reduce using rule 136 (factor -> PLUS var .)
    AND             reduce using rule 136 (factor -> PLUS var .)
    OR              reduce using rule 136 (factor -> PLUS var .)
    RPAREN          reduce using rule 136 (factor -> PLUS var .)
    COMMA           reduce using rule 136 (factor -> PLUS var .)


state 137

    (147) objeto_aAcceso -> ID . PERIOD ID
    (140) var -> ID .

    PERIOD          shift and go to state 141
    TIMES           reduce using rule 140 (var -> ID .)
    DIVIDE          reduce using rule 140 (var -> ID .)
    MODULO          reduce using rule 140 (var -> ID .)
    LT              reduce using rule 140 (var -> ID .)
    GT              reduce using rule 140 (var -> ID .)
    GE              reduce using rule 140 (var -> ID .)
    LE              reduce using rule 140 (var -> ID .)
    EQ              reduce using rule 140 (var -> ID .)
    NE              reduce using rule 140 (var -> ID .)
    PLUS            reduce using rule 140 (var -> ID .)
    MINUS           reduce using rule 140 (var -> ID .)
    VAR             reduce using rule 140 (var -> ID .)
    PUBLIC          reduce using rule 140 (var -> ID .)
    IF              reduce using rule 140 (var -> ID .)
    PRIVATE         reduce using rule 140 (var -> ID .)
    PROTECTED       reduce using rule 140 (var -> ID .)
    ID              reduce using rule 140 (var -> ID .)
    PRINT           reduce using rule 140 (var -> ID .)
    READ            reduce using rule 140 (var -> ID .)
    VOID            reduce using rule 140 (var -> ID .)
    INT             reduce using rule 140 (var -> ID .)
    FLOAT           reduce using rule 140 (var -> ID .)
    CHAR            reduce using rule 140 (var -> ID .)
    WHILE           reduce using rule 140 (var -> ID .)
    RBRACE          reduce using rule 140 (var -> ID .)
    RETURN          reduce using rule 140 (var -> ID .)
    RBRACKET        reduce using rule 140 (var -> ID .)
    AND             reduce using rule 140 (var -> ID .)
    OR              reduce using rule 140 (var -> ID .)
    RPAREN          reduce using rule 140 (var -> ID .)
    COMMA           reduce using rule 140 (var -> ID .)


state 138

    (135) factor -> MINUS objeto_aAcceso .

    TIMES           reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    DIVIDE          reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    MODULO          reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    LT              reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    GT              reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    GE              reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    LE              reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    EQ              reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    NE              reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    PLUS            reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    MINUS           reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    VAR             reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    PUBLIC          reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    IF              reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    PRIVATE         reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    PROTECTED       reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    ID              reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    PRINT           reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    READ            reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    VOID            reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    INT             reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    FLOAT           reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    CHAR            reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    WHILE           reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    RBRACE          reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    RETURN          reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    RBRACKET        reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    AND             reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    OR              reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    RPAREN          reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    COMMA           reduce using rule 135 (factor -> MINUS objeto_aAcceso .)


state 139

    (137) factor -> MINUS var .

    TIMES           reduce using rule 137 (factor -> MINUS var .)
    DIVIDE          reduce using rule 137 (factor -> MINUS var .)
    MODULO          reduce using rule 137 (factor -> MINUS var .)
    LT              reduce using rule 137 (factor -> MINUS var .)
    GT              reduce using rule 137 (factor -> MINUS var .)
    GE              reduce using rule 137 (factor -> MINUS var .)
    LE              reduce using rule 137 (factor -> MINUS var .)
    EQ              reduce using rule 137 (factor -> MINUS var .)
    NE              reduce using rule 137 (factor -> MINUS var .)
    PLUS            reduce using rule 137 (factor -> MINUS var .)
    MINUS           reduce using rule 137 (factor -> MINUS var .)
    VAR             reduce using rule 137 (factor -> MINUS var .)
    PUBLIC          reduce using rule 137 (factor -> MINUS var .)
    IF              reduce using rule 137 (factor -> MINUS var .)
    PRIVATE         reduce using rule 137 (factor -> MINUS var .)
    PROTECTED       reduce using rule 137 (factor -> MINUS var .)
    ID              reduce using rule 137 (factor -> MINUS var .)
    PRINT           reduce using rule 137 (factor -> MINUS var .)
    READ            reduce using rule 137 (factor -> MINUS var .)
    VOID            reduce using rule 137 (factor -> MINUS var .)
    INT             reduce using rule 137 (factor -> MINUS var .)
    FLOAT           reduce using rule 137 (factor -> MINUS var .)
    CHAR            reduce using rule 137 (factor -> MINUS var .)
    WHILE           reduce using rule 137 (factor -> MINUS var .)
    RBRACE          reduce using rule 137 (factor -> MINUS var .)
    RETURN          reduce using rule 137 (factor -> MINUS var .)
    RBRACKET        reduce using rule 137 (factor -> MINUS var .)
    AND             reduce using rule 137 (factor -> MINUS var .)
    OR              reduce using rule 137 (factor -> MINUS var .)
    RPAREN          reduce using rule 137 (factor -> MINUS var .)
    COMMA           reduce using rule 137 (factor -> MINUS var .)


state 140

    (133) factor -> LPAREN exp_cond . RPAREN

    RPAREN          shift and go to state 177


state 141

    (147) objeto_aAcceso -> ID PERIOD . ID

    ID              shift and go to state 178


state 142

    (91) asignacion -> ID LBRACKET exp RBRACKET . EQUALS expresion
    (92) asignacion -> ID LBRACKET exp RBRACKET . EQUALS llamada_func
    (93) asignacion -> ID LBRACKET exp RBRACKET . EQUALS objeto_metodo
    (97) asignacion -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS expresion
    (98) asignacion -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS llamada_func
    (99) asignacion -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS objeto_metodo

    EQUALS          shift and go to state 180
    LBRACKET        shift and go to state 179


state 143

    (26) constructor -> PUBLIC ID LPAREN param . RPAREN bloque

    RPAREN          shift and go to state 181


state 144

    (47) param -> tipo_simple . ID
    (48) param -> tipo_simple . ID COMMA param

    ID              shift and go to state 182


state 145

    (28) funcion -> scope type DEF id . LPAREN param aux_param RPAREN contexto_func

    LPAREN          shift and go to state 183


state 146

    (30) id -> ID .

    LPAREN          reduce using rule 30 (id -> ID .)


state 147

    (29) funcion -> scope VOID DEF id . LPAREN param aux_param RPAREN contexto_func

    LPAREN          shift and go to state 184


state 148

    (19) condicion -> IF LPAREN gotoF RPAREN . bloque
    (20) condicion -> IF LPAREN gotoF RPAREN . bloque elif
    (27) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 186

    bloque                         shift and go to state 185

state 149

    (114) exp_cond -> exp_bool AND . exp_cond
    (113) exp_cond -> . exp_bool
    (114) exp_cond -> . exp_bool AND exp_cond
    (115) exp_cond -> . exp_bool OR exp_cond
    (116) exp_bool -> . TRUE
    (117) exp_bool -> . FALSE
    (118) exp_bool -> . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 85
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    exp_bool                       shift and go to state 94
    exp_cond                       shift and go to state 187
    expresion                      shift and go to state 97
    exp                            shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 150

    (115) exp_cond -> exp_bool OR . exp_cond
    (113) exp_cond -> . exp_bool
    (114) exp_cond -> . exp_bool AND exp_cond
    (115) exp_cond -> . exp_bool OR exp_cond
    (116) exp_bool -> . TRUE
    (117) exp_bool -> . FALSE
    (118) exp_bool -> . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 85
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    exp_bool                       shift and go to state 94
    exp_cond                       shift and go to state 188
    expresion                      shift and go to state 97
    exp                            shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 151

    (24) ciclo -> aux_ciclo WHILE LPAREN gotoF . RPAREN bloque

    RPAREN          shift and go to state 189


state 152

    (100) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp . RBRACKET exp RBRACKET EQUALS expresion
    (101) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp . RBRACKET exp RBRACKET EQUALS llamada_func
    (102) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp . RBRACKET exp RBRACKET EQUALS objeto_metodo
    (127) exp -> exp . PLUS termino
    (128) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 190
    PLUS            shift and go to state 130
    MINUS           shift and go to state 131


state 153

    (94) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . EQUALS expresion
    (95) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . EQUALS llamada_func
    (96) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . EQUALS objeto_metodo

    EQUALS          shift and go to state 191


state 154

    (64) escritura -> PRINT LPAREN aux3 RPAREN .

    VAR             reduce using rule 64 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PUBLIC          reduce using rule 64 (escritura -> PRINT LPAREN aux3 RPAREN .)
    IF              reduce using rule 64 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PRIVATE         reduce using rule 64 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PROTECTED       reduce using rule 64 (escritura -> PRINT LPAREN aux3 RPAREN .)
    ID              reduce using rule 64 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PRINT           reduce using rule 64 (escritura -> PRINT LPAREN aux3 RPAREN .)
    READ            reduce using rule 64 (escritura -> PRINT LPAREN aux3 RPAREN .)
    VOID            reduce using rule 64 (escritura -> PRINT LPAREN aux3 RPAREN .)
    INT             reduce using rule 64 (escritura -> PRINT LPAREN aux3 RPAREN .)
    FLOAT           reduce using rule 64 (escritura -> PRINT LPAREN aux3 RPAREN .)
    CHAR            reduce using rule 64 (escritura -> PRINT LPAREN aux3 RPAREN .)
    WHILE           reduce using rule 64 (escritura -> PRINT LPAREN aux3 RPAREN .)
    RBRACE          reduce using rule 64 (escritura -> PRINT LPAREN aux3 RPAREN .)
    RETURN          reduce using rule 64 (escritura -> PRINT LPAREN aux3 RPAREN .)


state 155

    (69) aux3 -> expresion COMMA . aux3
    (65) aux3 -> . expresion
    (66) aux3 -> . llamada_func
    (67) aux3 -> . objeto_metodo
    (68) aux3 -> . CSTRING
    (69) aux3 -> . expresion COMMA aux3
    (70) aux3 -> . llamada_func COMMA aux3
    (71) aux3 -> . objeto_metodo COMMA aux3
    (72) aux3 -> . CSTRING COMMA aux3
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (104) llamada_func -> . llamada_id llamada_lparen aux llamada_rparen
    (103) objeto_metodo -> . ID PERIOD llamada_func
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (105) llamada_id -> . ID
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    CSTRING         shift and go to state 108
    ID              shift and go to state 67
    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    expresion                      shift and go to state 105
    aux3                           shift and go to state 192
    llamada_func                   shift and go to state 106
    objeto_metodo                  shift and go to state 107
    exp                            shift and go to state 71
    llamada_id                     shift and go to state 34
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 156

    (70) aux3 -> llamada_func COMMA . aux3
    (65) aux3 -> . expresion
    (66) aux3 -> . llamada_func
    (67) aux3 -> . objeto_metodo
    (68) aux3 -> . CSTRING
    (69) aux3 -> . expresion COMMA aux3
    (70) aux3 -> . llamada_func COMMA aux3
    (71) aux3 -> . objeto_metodo COMMA aux3
    (72) aux3 -> . CSTRING COMMA aux3
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (104) llamada_func -> . llamada_id llamada_lparen aux llamada_rparen
    (103) objeto_metodo -> . ID PERIOD llamada_func
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (105) llamada_id -> . ID
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    CSTRING         shift and go to state 108
    ID              shift and go to state 67
    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    llamada_func                   shift and go to state 106
    aux3                           shift and go to state 193
    expresion                      shift and go to state 105
    objeto_metodo                  shift and go to state 107
    exp                            shift and go to state 71
    llamada_id                     shift and go to state 34
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 157

    (71) aux3 -> objeto_metodo COMMA . aux3
    (65) aux3 -> . expresion
    (66) aux3 -> . llamada_func
    (67) aux3 -> . objeto_metodo
    (68) aux3 -> . CSTRING
    (69) aux3 -> . expresion COMMA aux3
    (70) aux3 -> . llamada_func COMMA aux3
    (71) aux3 -> . objeto_metodo COMMA aux3
    (72) aux3 -> . CSTRING COMMA aux3
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (104) llamada_func -> . llamada_id llamada_lparen aux llamada_rparen
    (103) objeto_metodo -> . ID PERIOD llamada_func
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (105) llamada_id -> . ID
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    CSTRING         shift and go to state 108
    ID              shift and go to state 67
    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    objeto_metodo                  shift and go to state 107
    aux3                           shift and go to state 194
    expresion                      shift and go to state 105
    llamada_func                   shift and go to state 106
    exp                            shift and go to state 71
    llamada_id                     shift and go to state 34
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 158

    (72) aux3 -> CSTRING COMMA . aux3
    (65) aux3 -> . expresion
    (66) aux3 -> . llamada_func
    (67) aux3 -> . objeto_metodo
    (68) aux3 -> . CSTRING
    (69) aux3 -> . expresion COMMA aux3
    (70) aux3 -> . llamada_func COMMA aux3
    (71) aux3 -> . objeto_metodo COMMA aux3
    (72) aux3 -> . CSTRING COMMA aux3
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (104) llamada_func -> . llamada_id llamada_lparen aux llamada_rparen
    (103) objeto_metodo -> . ID PERIOD llamada_func
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (105) llamada_id -> . ID
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    CSTRING         shift and go to state 108
    ID              shift and go to state 67
    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    aux3                           shift and go to state 195
    expresion                      shift and go to state 105
    llamada_func                   shift and go to state 106
    objeto_metodo                  shift and go to state 107
    exp                            shift and go to state 71
    llamada_id                     shift and go to state 34
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 159

    (104) llamada_func -> llamada_id llamada_lparen aux llamada_rparen .

    VAR             reduce using rule 104 (llamada_func -> llamada_id llamada_lparen aux llamada_rparen .)
    PUBLIC          reduce using rule 104 (llamada_func -> llamada_id llamada_lparen aux llamada_rparen .)
    IF              reduce using rule 104 (llamada_func -> llamada_id llamada_lparen aux llamada_rparen .)
    PRIVATE         reduce using rule 104 (llamada_func -> llamada_id llamada_lparen aux llamada_rparen .)
    PROTECTED       reduce using rule 104 (llamada_func -> llamada_id llamada_lparen aux llamada_rparen .)
    ID              reduce using rule 104 (llamada_func -> llamada_id llamada_lparen aux llamada_rparen .)
    PRINT           reduce using rule 104 (llamada_func -> llamada_id llamada_lparen aux llamada_rparen .)
    READ            reduce using rule 104 (llamada_func -> llamada_id llamada_lparen aux llamada_rparen .)
    VOID            reduce using rule 104 (llamada_func -> llamada_id llamada_lparen aux llamada_rparen .)
    INT             reduce using rule 104 (llamada_func -> llamada_id llamada_lparen aux llamada_rparen .)
    FLOAT           reduce using rule 104 (llamada_func -> llamada_id llamada_lparen aux llamada_rparen .)
    CHAR            reduce using rule 104 (llamada_func -> llamada_id llamada_lparen aux llamada_rparen .)
    WHILE           reduce using rule 104 (llamada_func -> llamada_id llamada_lparen aux llamada_rparen .)
    RBRACE          reduce using rule 104 (llamada_func -> llamada_id llamada_lparen aux llamada_rparen .)
    RETURN          reduce using rule 104 (llamada_func -> llamada_id llamada_lparen aux llamada_rparen .)
    COMMA           reduce using rule 104 (llamada_func -> llamada_id llamada_lparen aux llamada_rparen .)
    RPAREN          reduce using rule 104 (llamada_func -> llamada_id llamada_lparen aux llamada_rparen .)


state 160

    (107) llamada_rparen -> RPAREN .

    VAR             reduce using rule 107 (llamada_rparen -> RPAREN .)
    PUBLIC          reduce using rule 107 (llamada_rparen -> RPAREN .)
    IF              reduce using rule 107 (llamada_rparen -> RPAREN .)
    PRIVATE         reduce using rule 107 (llamada_rparen -> RPAREN .)
    PROTECTED       reduce using rule 107 (llamada_rparen -> RPAREN .)
    ID              reduce using rule 107 (llamada_rparen -> RPAREN .)
    PRINT           reduce using rule 107 (llamada_rparen -> RPAREN .)
    READ            reduce using rule 107 (llamada_rparen -> RPAREN .)
    VOID            reduce using rule 107 (llamada_rparen -> RPAREN .)
    INT             reduce using rule 107 (llamada_rparen -> RPAREN .)
    FLOAT           reduce using rule 107 (llamada_rparen -> RPAREN .)
    CHAR            reduce using rule 107 (llamada_rparen -> RPAREN .)
    WHILE           reduce using rule 107 (llamada_rparen -> RPAREN .)
    RBRACE          reduce using rule 107 (llamada_rparen -> RPAREN .)
    RETURN          reduce using rule 107 (llamada_rparen -> RPAREN .)
    COMMA           reduce using rule 107 (llamada_rparen -> RPAREN .)
    RPAREN          reduce using rule 107 (llamada_rparen -> RPAREN .)


state 161

    (108) aux -> exp aux_exp .
    (109) aux -> exp aux_exp . aux_comma aux
    (111) aux_comma -> . COMMA

    RPAREN          reduce using rule 108 (aux -> exp aux_exp .)
    COMMA           shift and go to state 197

    aux_comma                      shift and go to state 196

state 162

    (59) lectura -> READ LPAREN aux4 RPAREN .

    VAR             reduce using rule 59 (lectura -> READ LPAREN aux4 RPAREN .)
    PUBLIC          reduce using rule 59 (lectura -> READ LPAREN aux4 RPAREN .)
    IF              reduce using rule 59 (lectura -> READ LPAREN aux4 RPAREN .)
    PRIVATE         reduce using rule 59 (lectura -> READ LPAREN aux4 RPAREN .)
    PROTECTED       reduce using rule 59 (lectura -> READ LPAREN aux4 RPAREN .)
    ID              reduce using rule 59 (lectura -> READ LPAREN aux4 RPAREN .)
    PRINT           reduce using rule 59 (lectura -> READ LPAREN aux4 RPAREN .)
    READ            reduce using rule 59 (lectura -> READ LPAREN aux4 RPAREN .)
    VOID            reduce using rule 59 (lectura -> READ LPAREN aux4 RPAREN .)
    INT             reduce using rule 59 (lectura -> READ LPAREN aux4 RPAREN .)
    FLOAT           reduce using rule 59 (lectura -> READ LPAREN aux4 RPAREN .)
    CHAR            reduce using rule 59 (lectura -> READ LPAREN aux4 RPAREN .)
    WHILE           reduce using rule 59 (lectura -> READ LPAREN aux4 RPAREN .)
    RBRACE          reduce using rule 59 (lectura -> READ LPAREN aux4 RPAREN .)
    RETURN          reduce using rule 59 (lectura -> READ LPAREN aux4 RPAREN .)


state 163

    (62) aux4 -> ID COMMA . aux4
    (60) aux4 -> . ID
    (61) aux4 -> . objeto_aAcceso
    (62) aux4 -> . ID COMMA aux4
    (63) aux4 -> . objeto_aAcceso COMMA aux4
    (147) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 112

    aux4                           shift and go to state 198
    objeto_aAcceso                 shift and go to state 113

state 164

    (63) aux4 -> objeto_aAcceso COMMA . aux4
    (60) aux4 -> . ID
    (61) aux4 -> . objeto_aAcceso
    (62) aux4 -> . ID COMMA aux4
    (63) aux4 -> . objeto_aAcceso COMMA aux4
    (147) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 112

    objeto_aAcceso                 shift and go to state 113
    aux4                           shift and go to state 199

state 165

    (75) vars -> VAR ID LBRACKET cint RBRACKET . COLON tipo_simple
    (76) vars -> VAR ID LBRACKET cint RBRACKET . COLON tipo_compuesto
    (77) vars -> VAR ID LBRACKET cint RBRACKET . LBRACKET cint RBRACKET COLON tipo_simple
    (78) vars -> VAR ID LBRACKET cint RBRACKET . LBRACKET cint RBRACKET COLON tipo_compuesto

    COLON           shift and go to state 201
    LBRACKET        shift and go to state 200


state 166

    (120) expresion -> exp LT expresion .

    VAR             reduce using rule 120 (expresion -> exp LT expresion .)
    PUBLIC          reduce using rule 120 (expresion -> exp LT expresion .)
    IF              reduce using rule 120 (expresion -> exp LT expresion .)
    PRIVATE         reduce using rule 120 (expresion -> exp LT expresion .)
    PROTECTED       reduce using rule 120 (expresion -> exp LT expresion .)
    ID              reduce using rule 120 (expresion -> exp LT expresion .)
    PRINT           reduce using rule 120 (expresion -> exp LT expresion .)
    READ            reduce using rule 120 (expresion -> exp LT expresion .)
    VOID            reduce using rule 120 (expresion -> exp LT expresion .)
    INT             reduce using rule 120 (expresion -> exp LT expresion .)
    FLOAT           reduce using rule 120 (expresion -> exp LT expresion .)
    CHAR            reduce using rule 120 (expresion -> exp LT expresion .)
    WHILE           reduce using rule 120 (expresion -> exp LT expresion .)
    RBRACE          reduce using rule 120 (expresion -> exp LT expresion .)
    RETURN          reduce using rule 120 (expresion -> exp LT expresion .)
    AND             reduce using rule 120 (expresion -> exp LT expresion .)
    OR              reduce using rule 120 (expresion -> exp LT expresion .)
    RPAREN          reduce using rule 120 (expresion -> exp LT expresion .)
    COMMA           reduce using rule 120 (expresion -> exp LT expresion .)


state 167

    (121) expresion -> exp GT expresion .

    VAR             reduce using rule 121 (expresion -> exp GT expresion .)
    PUBLIC          reduce using rule 121 (expresion -> exp GT expresion .)
    IF              reduce using rule 121 (expresion -> exp GT expresion .)
    PRIVATE         reduce using rule 121 (expresion -> exp GT expresion .)
    PROTECTED       reduce using rule 121 (expresion -> exp GT expresion .)
    ID              reduce using rule 121 (expresion -> exp GT expresion .)
    PRINT           reduce using rule 121 (expresion -> exp GT expresion .)
    READ            reduce using rule 121 (expresion -> exp GT expresion .)
    VOID            reduce using rule 121 (expresion -> exp GT expresion .)
    INT             reduce using rule 121 (expresion -> exp GT expresion .)
    FLOAT           reduce using rule 121 (expresion -> exp GT expresion .)
    CHAR            reduce using rule 121 (expresion -> exp GT expresion .)
    WHILE           reduce using rule 121 (expresion -> exp GT expresion .)
    RBRACE          reduce using rule 121 (expresion -> exp GT expresion .)
    RETURN          reduce using rule 121 (expresion -> exp GT expresion .)
    AND             reduce using rule 121 (expresion -> exp GT expresion .)
    OR              reduce using rule 121 (expresion -> exp GT expresion .)
    RPAREN          reduce using rule 121 (expresion -> exp GT expresion .)
    COMMA           reduce using rule 121 (expresion -> exp GT expresion .)


state 168

    (122) expresion -> exp GE expresion .

    VAR             reduce using rule 122 (expresion -> exp GE expresion .)
    PUBLIC          reduce using rule 122 (expresion -> exp GE expresion .)
    IF              reduce using rule 122 (expresion -> exp GE expresion .)
    PRIVATE         reduce using rule 122 (expresion -> exp GE expresion .)
    PROTECTED       reduce using rule 122 (expresion -> exp GE expresion .)
    ID              reduce using rule 122 (expresion -> exp GE expresion .)
    PRINT           reduce using rule 122 (expresion -> exp GE expresion .)
    READ            reduce using rule 122 (expresion -> exp GE expresion .)
    VOID            reduce using rule 122 (expresion -> exp GE expresion .)
    INT             reduce using rule 122 (expresion -> exp GE expresion .)
    FLOAT           reduce using rule 122 (expresion -> exp GE expresion .)
    CHAR            reduce using rule 122 (expresion -> exp GE expresion .)
    WHILE           reduce using rule 122 (expresion -> exp GE expresion .)
    RBRACE          reduce using rule 122 (expresion -> exp GE expresion .)
    RETURN          reduce using rule 122 (expresion -> exp GE expresion .)
    AND             reduce using rule 122 (expresion -> exp GE expresion .)
    OR              reduce using rule 122 (expresion -> exp GE expresion .)
    RPAREN          reduce using rule 122 (expresion -> exp GE expresion .)
    COMMA           reduce using rule 122 (expresion -> exp GE expresion .)


state 169

    (123) expresion -> exp LE expresion .

    VAR             reduce using rule 123 (expresion -> exp LE expresion .)
    PUBLIC          reduce using rule 123 (expresion -> exp LE expresion .)
    IF              reduce using rule 123 (expresion -> exp LE expresion .)
    PRIVATE         reduce using rule 123 (expresion -> exp LE expresion .)
    PROTECTED       reduce using rule 123 (expresion -> exp LE expresion .)
    ID              reduce using rule 123 (expresion -> exp LE expresion .)
    PRINT           reduce using rule 123 (expresion -> exp LE expresion .)
    READ            reduce using rule 123 (expresion -> exp LE expresion .)
    VOID            reduce using rule 123 (expresion -> exp LE expresion .)
    INT             reduce using rule 123 (expresion -> exp LE expresion .)
    FLOAT           reduce using rule 123 (expresion -> exp LE expresion .)
    CHAR            reduce using rule 123 (expresion -> exp LE expresion .)
    WHILE           reduce using rule 123 (expresion -> exp LE expresion .)
    RBRACE          reduce using rule 123 (expresion -> exp LE expresion .)
    RETURN          reduce using rule 123 (expresion -> exp LE expresion .)
    AND             reduce using rule 123 (expresion -> exp LE expresion .)
    OR              reduce using rule 123 (expresion -> exp LE expresion .)
    RPAREN          reduce using rule 123 (expresion -> exp LE expresion .)
    COMMA           reduce using rule 123 (expresion -> exp LE expresion .)


state 170

    (124) expresion -> exp EQ expresion .

    VAR             reduce using rule 124 (expresion -> exp EQ expresion .)
    PUBLIC          reduce using rule 124 (expresion -> exp EQ expresion .)
    IF              reduce using rule 124 (expresion -> exp EQ expresion .)
    PRIVATE         reduce using rule 124 (expresion -> exp EQ expresion .)
    PROTECTED       reduce using rule 124 (expresion -> exp EQ expresion .)
    ID              reduce using rule 124 (expresion -> exp EQ expresion .)
    PRINT           reduce using rule 124 (expresion -> exp EQ expresion .)
    READ            reduce using rule 124 (expresion -> exp EQ expresion .)
    VOID            reduce using rule 124 (expresion -> exp EQ expresion .)
    INT             reduce using rule 124 (expresion -> exp EQ expresion .)
    FLOAT           reduce using rule 124 (expresion -> exp EQ expresion .)
    CHAR            reduce using rule 124 (expresion -> exp EQ expresion .)
    WHILE           reduce using rule 124 (expresion -> exp EQ expresion .)
    RBRACE          reduce using rule 124 (expresion -> exp EQ expresion .)
    RETURN          reduce using rule 124 (expresion -> exp EQ expresion .)
    AND             reduce using rule 124 (expresion -> exp EQ expresion .)
    OR              reduce using rule 124 (expresion -> exp EQ expresion .)
    RPAREN          reduce using rule 124 (expresion -> exp EQ expresion .)
    COMMA           reduce using rule 124 (expresion -> exp EQ expresion .)


state 171

    (125) expresion -> exp NE expresion .

    VAR             reduce using rule 125 (expresion -> exp NE expresion .)
    PUBLIC          reduce using rule 125 (expresion -> exp NE expresion .)
    IF              reduce using rule 125 (expresion -> exp NE expresion .)
    PRIVATE         reduce using rule 125 (expresion -> exp NE expresion .)
    PROTECTED       reduce using rule 125 (expresion -> exp NE expresion .)
    ID              reduce using rule 125 (expresion -> exp NE expresion .)
    PRINT           reduce using rule 125 (expresion -> exp NE expresion .)
    READ            reduce using rule 125 (expresion -> exp NE expresion .)
    VOID            reduce using rule 125 (expresion -> exp NE expresion .)
    INT             reduce using rule 125 (expresion -> exp NE expresion .)
    FLOAT           reduce using rule 125 (expresion -> exp NE expresion .)
    CHAR            reduce using rule 125 (expresion -> exp NE expresion .)
    WHILE           reduce using rule 125 (expresion -> exp NE expresion .)
    RBRACE          reduce using rule 125 (expresion -> exp NE expresion .)
    RETURN          reduce using rule 125 (expresion -> exp NE expresion .)
    AND             reduce using rule 125 (expresion -> exp NE expresion .)
    OR              reduce using rule 125 (expresion -> exp NE expresion .)
    RPAREN          reduce using rule 125 (expresion -> exp NE expresion .)
    COMMA           reduce using rule 125 (expresion -> exp NE expresion .)


state 172

    (127) exp -> exp PLUS termino .
    (130) termino -> termino . TIMES factor
    (131) termino -> termino . DIVIDE factor
    (132) termino -> termino . MODULO factor

    LT              reduce using rule 127 (exp -> exp PLUS termino .)
    GT              reduce using rule 127 (exp -> exp PLUS termino .)
    GE              reduce using rule 127 (exp -> exp PLUS termino .)
    LE              reduce using rule 127 (exp -> exp PLUS termino .)
    EQ              reduce using rule 127 (exp -> exp PLUS termino .)
    NE              reduce using rule 127 (exp -> exp PLUS termino .)
    PLUS            reduce using rule 127 (exp -> exp PLUS termino .)
    MINUS           reduce using rule 127 (exp -> exp PLUS termino .)
    VAR             reduce using rule 127 (exp -> exp PLUS termino .)
    PUBLIC          reduce using rule 127 (exp -> exp PLUS termino .)
    IF              reduce using rule 127 (exp -> exp PLUS termino .)
    PRIVATE         reduce using rule 127 (exp -> exp PLUS termino .)
    PROTECTED       reduce using rule 127 (exp -> exp PLUS termino .)
    ID              reduce using rule 127 (exp -> exp PLUS termino .)
    PRINT           reduce using rule 127 (exp -> exp PLUS termino .)
    READ            reduce using rule 127 (exp -> exp PLUS termino .)
    VOID            reduce using rule 127 (exp -> exp PLUS termino .)
    INT             reduce using rule 127 (exp -> exp PLUS termino .)
    FLOAT           reduce using rule 127 (exp -> exp PLUS termino .)
    CHAR            reduce using rule 127 (exp -> exp PLUS termino .)
    WHILE           reduce using rule 127 (exp -> exp PLUS termino .)
    RBRACE          reduce using rule 127 (exp -> exp PLUS termino .)
    RETURN          reduce using rule 127 (exp -> exp PLUS termino .)
    RBRACKET        reduce using rule 127 (exp -> exp PLUS termino .)
    AND             reduce using rule 127 (exp -> exp PLUS termino .)
    OR              reduce using rule 127 (exp -> exp PLUS termino .)
    RPAREN          reduce using rule 127 (exp -> exp PLUS termino .)
    COMMA           reduce using rule 127 (exp -> exp PLUS termino .)
    TIMES           shift and go to state 132
    DIVIDE          shift and go to state 133
    MODULO          shift and go to state 134


state 173

    (128) exp -> exp MINUS termino .
    (130) termino -> termino . TIMES factor
    (131) termino -> termino . DIVIDE factor
    (132) termino -> termino . MODULO factor

    LT              reduce using rule 128 (exp -> exp MINUS termino .)
    GT              reduce using rule 128 (exp -> exp MINUS termino .)
    GE              reduce using rule 128 (exp -> exp MINUS termino .)
    LE              reduce using rule 128 (exp -> exp MINUS termino .)
    EQ              reduce using rule 128 (exp -> exp MINUS termino .)
    NE              reduce using rule 128 (exp -> exp MINUS termino .)
    PLUS            reduce using rule 128 (exp -> exp MINUS termino .)
    MINUS           reduce using rule 128 (exp -> exp MINUS termino .)
    VAR             reduce using rule 128 (exp -> exp MINUS termino .)
    PUBLIC          reduce using rule 128 (exp -> exp MINUS termino .)
    IF              reduce using rule 128 (exp -> exp MINUS termino .)
    PRIVATE         reduce using rule 128 (exp -> exp MINUS termino .)
    PROTECTED       reduce using rule 128 (exp -> exp MINUS termino .)
    ID              reduce using rule 128 (exp -> exp MINUS termino .)
    PRINT           reduce using rule 128 (exp -> exp MINUS termino .)
    READ            reduce using rule 128 (exp -> exp MINUS termino .)
    VOID            reduce using rule 128 (exp -> exp MINUS termino .)
    INT             reduce using rule 128 (exp -> exp MINUS termino .)
    FLOAT           reduce using rule 128 (exp -> exp MINUS termino .)
    CHAR            reduce using rule 128 (exp -> exp MINUS termino .)
    WHILE           reduce using rule 128 (exp -> exp MINUS termino .)
    RBRACE          reduce using rule 128 (exp -> exp MINUS termino .)
    RETURN          reduce using rule 128 (exp -> exp MINUS termino .)
    RBRACKET        reduce using rule 128 (exp -> exp MINUS termino .)
    AND             reduce using rule 128 (exp -> exp MINUS termino .)
    OR              reduce using rule 128 (exp -> exp MINUS termino .)
    RPAREN          reduce using rule 128 (exp -> exp MINUS termino .)
    COMMA           reduce using rule 128 (exp -> exp MINUS termino .)
    TIMES           shift and go to state 132
    DIVIDE          shift and go to state 133
    MODULO          shift and go to state 134


state 174

    (130) termino -> termino TIMES factor .

    TIMES           reduce using rule 130 (termino -> termino TIMES factor .)
    DIVIDE          reduce using rule 130 (termino -> termino TIMES factor .)
    MODULO          reduce using rule 130 (termino -> termino TIMES factor .)
    LT              reduce using rule 130 (termino -> termino TIMES factor .)
    GT              reduce using rule 130 (termino -> termino TIMES factor .)
    GE              reduce using rule 130 (termino -> termino TIMES factor .)
    LE              reduce using rule 130 (termino -> termino TIMES factor .)
    EQ              reduce using rule 130 (termino -> termino TIMES factor .)
    NE              reduce using rule 130 (termino -> termino TIMES factor .)
    PLUS            reduce using rule 130 (termino -> termino TIMES factor .)
    MINUS           reduce using rule 130 (termino -> termino TIMES factor .)
    VAR             reduce using rule 130 (termino -> termino TIMES factor .)
    PUBLIC          reduce using rule 130 (termino -> termino TIMES factor .)
    IF              reduce using rule 130 (termino -> termino TIMES factor .)
    PRIVATE         reduce using rule 130 (termino -> termino TIMES factor .)
    PROTECTED       reduce using rule 130 (termino -> termino TIMES factor .)
    ID              reduce using rule 130 (termino -> termino TIMES factor .)
    PRINT           reduce using rule 130 (termino -> termino TIMES factor .)
    READ            reduce using rule 130 (termino -> termino TIMES factor .)
    VOID            reduce using rule 130 (termino -> termino TIMES factor .)
    INT             reduce using rule 130 (termino -> termino TIMES factor .)
    FLOAT           reduce using rule 130 (termino -> termino TIMES factor .)
    CHAR            reduce using rule 130 (termino -> termino TIMES factor .)
    WHILE           reduce using rule 130 (termino -> termino TIMES factor .)
    RBRACE          reduce using rule 130 (termino -> termino TIMES factor .)
    RETURN          reduce using rule 130 (termino -> termino TIMES factor .)
    RBRACKET        reduce using rule 130 (termino -> termino TIMES factor .)
    AND             reduce using rule 130 (termino -> termino TIMES factor .)
    OR              reduce using rule 130 (termino -> termino TIMES factor .)
    RPAREN          reduce using rule 130 (termino -> termino TIMES factor .)
    COMMA           reduce using rule 130 (termino -> termino TIMES factor .)


state 175

    (131) termino -> termino DIVIDE factor .

    TIMES           reduce using rule 131 (termino -> termino DIVIDE factor .)
    DIVIDE          reduce using rule 131 (termino -> termino DIVIDE factor .)
    MODULO          reduce using rule 131 (termino -> termino DIVIDE factor .)
    LT              reduce using rule 131 (termino -> termino DIVIDE factor .)
    GT              reduce using rule 131 (termino -> termino DIVIDE factor .)
    GE              reduce using rule 131 (termino -> termino DIVIDE factor .)
    LE              reduce using rule 131 (termino -> termino DIVIDE factor .)
    EQ              reduce using rule 131 (termino -> termino DIVIDE factor .)
    NE              reduce using rule 131 (termino -> termino DIVIDE factor .)
    PLUS            reduce using rule 131 (termino -> termino DIVIDE factor .)
    MINUS           reduce using rule 131 (termino -> termino DIVIDE factor .)
    VAR             reduce using rule 131 (termino -> termino DIVIDE factor .)
    PUBLIC          reduce using rule 131 (termino -> termino DIVIDE factor .)
    IF              reduce using rule 131 (termino -> termino DIVIDE factor .)
    PRIVATE         reduce using rule 131 (termino -> termino DIVIDE factor .)
    PROTECTED       reduce using rule 131 (termino -> termino DIVIDE factor .)
    ID              reduce using rule 131 (termino -> termino DIVIDE factor .)
    PRINT           reduce using rule 131 (termino -> termino DIVIDE factor .)
    READ            reduce using rule 131 (termino -> termino DIVIDE factor .)
    VOID            reduce using rule 131 (termino -> termino DIVIDE factor .)
    INT             reduce using rule 131 (termino -> termino DIVIDE factor .)
    FLOAT           reduce using rule 131 (termino -> termino DIVIDE factor .)
    CHAR            reduce using rule 131 (termino -> termino DIVIDE factor .)
    WHILE           reduce using rule 131 (termino -> termino DIVIDE factor .)
    RBRACE          reduce using rule 131 (termino -> termino DIVIDE factor .)
    RETURN          reduce using rule 131 (termino -> termino DIVIDE factor .)
    RBRACKET        reduce using rule 131 (termino -> termino DIVIDE factor .)
    AND             reduce using rule 131 (termino -> termino DIVIDE factor .)
    OR              reduce using rule 131 (termino -> termino DIVIDE factor .)
    RPAREN          reduce using rule 131 (termino -> termino DIVIDE factor .)
    COMMA           reduce using rule 131 (termino -> termino DIVIDE factor .)


state 176

    (132) termino -> termino MODULO factor .

    TIMES           reduce using rule 132 (termino -> termino MODULO factor .)
    DIVIDE          reduce using rule 132 (termino -> termino MODULO factor .)
    MODULO          reduce using rule 132 (termino -> termino MODULO factor .)
    LT              reduce using rule 132 (termino -> termino MODULO factor .)
    GT              reduce using rule 132 (termino -> termino MODULO factor .)
    GE              reduce using rule 132 (termino -> termino MODULO factor .)
    LE              reduce using rule 132 (termino -> termino MODULO factor .)
    EQ              reduce using rule 132 (termino -> termino MODULO factor .)
    NE              reduce using rule 132 (termino -> termino MODULO factor .)
    PLUS            reduce using rule 132 (termino -> termino MODULO factor .)
    MINUS           reduce using rule 132 (termino -> termino MODULO factor .)
    VAR             reduce using rule 132 (termino -> termino MODULO factor .)
    PUBLIC          reduce using rule 132 (termino -> termino MODULO factor .)
    IF              reduce using rule 132 (termino -> termino MODULO factor .)
    PRIVATE         reduce using rule 132 (termino -> termino MODULO factor .)
    PROTECTED       reduce using rule 132 (termino -> termino MODULO factor .)
    ID              reduce using rule 132 (termino -> termino MODULO factor .)
    PRINT           reduce using rule 132 (termino -> termino MODULO factor .)
    READ            reduce using rule 132 (termino -> termino MODULO factor .)
    VOID            reduce using rule 132 (termino -> termino MODULO factor .)
    INT             reduce using rule 132 (termino -> termino MODULO factor .)
    FLOAT           reduce using rule 132 (termino -> termino MODULO factor .)
    CHAR            reduce using rule 132 (termino -> termino MODULO factor .)
    WHILE           reduce using rule 132 (termino -> termino MODULO factor .)
    RBRACE          reduce using rule 132 (termino -> termino MODULO factor .)
    RETURN          reduce using rule 132 (termino -> termino MODULO factor .)
    RBRACKET        reduce using rule 132 (termino -> termino MODULO factor .)
    AND             reduce using rule 132 (termino -> termino MODULO factor .)
    OR              reduce using rule 132 (termino -> termino MODULO factor .)
    RPAREN          reduce using rule 132 (termino -> termino MODULO factor .)
    COMMA           reduce using rule 132 (termino -> termino MODULO factor .)


state 177

    (133) factor -> LPAREN exp_cond RPAREN .

    TIMES           reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    DIVIDE          reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    MODULO          reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    LT              reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    GT              reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    GE              reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    LE              reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    EQ              reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    NE              reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    PLUS            reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    MINUS           reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    VAR             reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    PUBLIC          reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    IF              reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    PRIVATE         reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    PROTECTED       reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    ID              reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    PRINT           reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    READ            reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    VOID            reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    INT             reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    FLOAT           reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    CHAR            reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    WHILE           reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    RBRACE          reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    RETURN          reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    RBRACKET        reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    AND             reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    OR              reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    RPAREN          reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    COMMA           reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)


state 178

    (147) objeto_aAcceso -> ID PERIOD ID .

    TIMES           reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    DIVIDE          reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    MODULO          reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACKET        reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    PLUS            reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    MINUS           reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    LT              reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    GT              reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    GE              reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    LE              reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    EQ              reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    NE              reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    AND             reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    OR              reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    RPAREN          reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    COMMA           reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    VAR             reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    PUBLIC          reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    IF              reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    PRIVATE         reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    PROTECTED       reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    ID              reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    PRINT           reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    READ            reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    VOID            reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    INT             reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    FLOAT           reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    CHAR            reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    WHILE           reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACE          reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)
    RETURN          reduce using rule 147 (objeto_aAcceso -> ID PERIOD ID .)


state 179

    (97) asignacion -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS expresion
    (98) asignacion -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS llamada_func
    (99) asignacion -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 85
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    exp                            shift and go to state 202
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 180

    (91) asignacion -> ID LBRACKET exp RBRACKET EQUALS . expresion
    (92) asignacion -> ID LBRACKET exp RBRACKET EQUALS . llamada_func
    (93) asignacion -> ID LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (104) llamada_func -> . llamada_id llamada_lparen aux llamada_rparen
    (103) objeto_metodo -> . ID PERIOD llamada_func
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (105) llamada_id -> . ID
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    ID              shift and go to state 67
    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    exp                            shift and go to state 71
    expresion                      shift and go to state 203
    llamada_func                   shift and go to state 204
    objeto_metodo                  shift and go to state 205
    llamada_id                     shift and go to state 34
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 181

    (26) constructor -> PUBLIC ID LPAREN param RPAREN . bloque
    (27) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 186

    bloque                         shift and go to state 206

state 182

    (47) param -> tipo_simple ID .
    (48) param -> tipo_simple ID . COMMA param

    RPAREN          reduce using rule 47 (param -> tipo_simple ID .)
    COMMA           shift and go to state 207


state 183

    (28) funcion -> scope type DEF id LPAREN . param aux_param RPAREN contexto_func
    (46) param -> .
    (47) param -> . tipo_simple ID
    (48) param -> . tipo_simple ID COMMA param
    (81) tipo_simple -> . INT
    (82) tipo_simple -> . FLOAT
    (83) tipo_simple -> . CHAR

    RPAREN          reduce using rule 46 (param -> .)
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    CHAR            shift and go to state 119

    param                          shift and go to state 208
    tipo_simple                    shift and go to state 144

state 184

    (29) funcion -> scope VOID DEF id LPAREN . param aux_param RPAREN contexto_func
    (46) param -> .
    (47) param -> . tipo_simple ID
    (48) param -> . tipo_simple ID COMMA param
    (81) tipo_simple -> . INT
    (82) tipo_simple -> . FLOAT
    (83) tipo_simple -> . CHAR

    RPAREN          reduce using rule 46 (param -> .)
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    CHAR            shift and go to state 119

    param                          shift and go to state 209
    tipo_simple                    shift and go to state 144

state 185

    (19) condicion -> IF LPAREN gotoF RPAREN bloque .
    (20) condicion -> IF LPAREN gotoF RPAREN bloque . elif
    (21) elif -> . aux_elif ELIF LPAREN gotoF RPAREN bloque
    (22) elif -> . aux_elif ELIF LPAREN gotoF RPAREN bloque elif
    (23) aux_elif -> .

    VAR             reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    PUBLIC          reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    IF              reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    PRIVATE         reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    PROTECTED       reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    ID              reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    PRINT           reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    READ            reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    VOID            reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    INT             reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    FLOAT           reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    CHAR            reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    WHILE           reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    RBRACE          reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    ELIF            reduce using rule 23 (aux_elif -> .)

    elif                           shift and go to state 210
    aux_elif                       shift and go to state 211

state 186

    (27) bloque -> LBRACE . aux5 RBRACE
    (44) aux5 -> . estatuto
    (45) aux5 -> . estatuto aux5
    (54) estatuto -> . asignacion
    (55) estatuto -> . escritura
    (56) estatuto -> . llamada_func
    (57) estatuto -> . objeto_metodo
    (58) estatuto -> . lectura
    (85) asignacion -> . ID EQUALS expresion
    (86) asignacion -> . ID EQUALS llamada_func
    (87) asignacion -> . ID EQUALS objeto_metodo
    (88) asignacion -> . objeto_aAcceso EQUALS expresion
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (91) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (102) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (64) escritura -> . PRINT LPAREN aux3 RPAREN
    (104) llamada_func -> . llamada_id llamada_lparen aux llamada_rparen
    (103) objeto_metodo -> . ID PERIOD llamada_func
    (59) lectura -> . READ LPAREN aux4 RPAREN
    (147) objeto_aAcceso -> . ID PERIOD ID
    (105) llamada_id -> . ID

    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35

    aux5                           shift and go to state 212
    estatuto                       shift and go to state 213
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 187

    (114) exp_cond -> exp_bool AND exp_cond .

    RPAREN          reduce using rule 114 (exp_cond -> exp_bool AND exp_cond .)
    RETURN          reduce using rule 114 (exp_cond -> exp_bool AND exp_cond .)
    VAR             reduce using rule 114 (exp_cond -> exp_bool AND exp_cond .)
    ID              reduce using rule 114 (exp_cond -> exp_bool AND exp_cond .)
    PRINT           reduce using rule 114 (exp_cond -> exp_bool AND exp_cond .)
    READ            reduce using rule 114 (exp_cond -> exp_bool AND exp_cond .)
    WHILE           reduce using rule 114 (exp_cond -> exp_bool AND exp_cond .)
    RBRACE          reduce using rule 114 (exp_cond -> exp_bool AND exp_cond .)


state 188

    (115) exp_cond -> exp_bool OR exp_cond .

    RPAREN          reduce using rule 115 (exp_cond -> exp_bool OR exp_cond .)
    RETURN          reduce using rule 115 (exp_cond -> exp_bool OR exp_cond .)
    VAR             reduce using rule 115 (exp_cond -> exp_bool OR exp_cond .)
    ID              reduce using rule 115 (exp_cond -> exp_bool OR exp_cond .)
    PRINT           reduce using rule 115 (exp_cond -> exp_bool OR exp_cond .)
    READ            reduce using rule 115 (exp_cond -> exp_bool OR exp_cond .)
    WHILE           reduce using rule 115 (exp_cond -> exp_bool OR exp_cond .)
    RBRACE          reduce using rule 115 (exp_cond -> exp_bool OR exp_cond .)


state 189

    (24) ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN . bloque
    (27) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 186

    bloque                         shift and go to state 214

state 190

    (100) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET . exp RBRACKET EQUALS expresion
    (101) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET . exp RBRACKET EQUALS llamada_func
    (102) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET . exp RBRACKET EQUALS objeto_metodo
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 85
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    objeto_aAcceso                 shift and go to state 77
    exp                            shift and go to state 215
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 191

    (94) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS . expresion
    (95) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS . llamada_func
    (96) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (104) llamada_func -> . llamada_id llamada_lparen aux llamada_rparen
    (103) objeto_metodo -> . ID PERIOD llamada_func
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (105) llamada_id -> . ID
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    ID              shift and go to state 67
    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    objeto_aAcceso                 shift and go to state 77
    exp                            shift and go to state 71
    expresion                      shift and go to state 216
    llamada_func                   shift and go to state 217
    objeto_metodo                  shift and go to state 218
    llamada_id                     shift and go to state 34
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 192

    (69) aux3 -> expresion COMMA aux3 .

    RPAREN          reduce using rule 69 (aux3 -> expresion COMMA aux3 .)


state 193

    (70) aux3 -> llamada_func COMMA aux3 .

    RPAREN          reduce using rule 70 (aux3 -> llamada_func COMMA aux3 .)


state 194

    (71) aux3 -> objeto_metodo COMMA aux3 .

    RPAREN          reduce using rule 71 (aux3 -> objeto_metodo COMMA aux3 .)


state 195

    (72) aux3 -> CSTRING COMMA aux3 .

    RPAREN          reduce using rule 72 (aux3 -> CSTRING COMMA aux3 .)


state 196

    (109) aux -> exp aux_exp aux_comma . aux
    (108) aux -> . exp aux_exp
    (109) aux -> . exp aux_exp aux_comma aux
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 85
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    exp                            shift and go to state 110
    aux                            shift and go to state 219
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 197

    (111) aux_comma -> COMMA .

    LPAREN          reduce using rule 111 (aux_comma -> COMMA .)
    PLUS            reduce using rule 111 (aux_comma -> COMMA .)
    MINUS           reduce using rule 111 (aux_comma -> COMMA .)
    ID              reduce using rule 111 (aux_comma -> COMMA .)
    CINT            reduce using rule 111 (aux_comma -> COMMA .)
    NUMBER          reduce using rule 111 (aux_comma -> COMMA .)
    CCHAR           reduce using rule 111 (aux_comma -> COMMA .)


state 198

    (62) aux4 -> ID COMMA aux4 .

    RPAREN          reduce using rule 62 (aux4 -> ID COMMA aux4 .)


state 199

    (63) aux4 -> objeto_aAcceso COMMA aux4 .

    RPAREN          reduce using rule 63 (aux4 -> objeto_aAcceso COMMA aux4 .)


state 200

    (77) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET . cint RBRACKET COLON tipo_simple
    (78) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET . cint RBRACKET COLON tipo_compuesto
    (144) cint -> . CINT

    CINT            shift and go to state 82

    cint                           shift and go to state 220

state 201

    (75) vars -> VAR ID LBRACKET cint RBRACKET COLON . tipo_simple
    (76) vars -> VAR ID LBRACKET cint RBRACKET COLON . tipo_compuesto
    (81) tipo_simple -> . INT
    (82) tipo_simple -> . FLOAT
    (83) tipo_simple -> . CHAR
    (84) tipo_compuesto -> . ID

    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    CHAR            shift and go to state 119
    ID              shift and go to state 120

    tipo_simple                    shift and go to state 221
    tipo_compuesto                 shift and go to state 222

state 202

    (97) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS expresion
    (98) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS llamada_func
    (99) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (127) exp -> exp . PLUS termino
    (128) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 223
    PLUS            shift and go to state 130
    MINUS           shift and go to state 131


state 203

    (91) asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .

    VAR             reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    ID              reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    VOID            reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    INT             reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    FLOAT           reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    CHAR            reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)


state 204

    (92) asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .

    VAR             reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    VOID            reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    INT             reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    FLOAT           reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    CHAR            reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)


state 205

    (93) asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    VOID            reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    INT             reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    FLOAT           reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    CHAR            reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 206

    (26) constructor -> PUBLIC ID LPAREN param RPAREN bloque .

    VAR             reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PUBLIC          reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    IF              reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PRIVATE         reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PROTECTED       reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    ID              reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PRINT           reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    READ            reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    VOID            reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    INT             reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    FLOAT           reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    CHAR            reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    WHILE           reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    RBRACE          reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)


state 207

    (48) param -> tipo_simple ID COMMA . param
    (46) param -> .
    (47) param -> . tipo_simple ID
    (48) param -> . tipo_simple ID COMMA param
    (81) tipo_simple -> . INT
    (82) tipo_simple -> . FLOAT
    (83) tipo_simple -> . CHAR

    RPAREN          reduce using rule 46 (param -> .)
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    CHAR            shift and go to state 119

    tipo_simple                    shift and go to state 144
    param                          shift and go to state 224

state 208

    (28) funcion -> scope type DEF id LPAREN param . aux_param RPAREN contexto_func
    (49) aux_param -> .

    RPAREN          reduce using rule 49 (aux_param -> .)

    aux_param                      shift and go to state 225

state 209

    (29) funcion -> scope VOID DEF id LPAREN param . aux_param RPAREN contexto_func
    (49) aux_param -> .

    RPAREN          reduce using rule 49 (aux_param -> .)

    aux_param                      shift and go to state 226

state 210

    (20) condicion -> IF LPAREN gotoF RPAREN bloque elif .

    VAR             reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    PUBLIC          reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    IF              reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    PRIVATE         reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    PROTECTED       reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    ID              reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    PRINT           reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    READ            reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    VOID            reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    INT             reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    FLOAT           reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    CHAR            reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    WHILE           reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    RBRACE          reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)


state 211

    (21) elif -> aux_elif . ELIF LPAREN gotoF RPAREN bloque
    (22) elif -> aux_elif . ELIF LPAREN gotoF RPAREN bloque elif

    ELIF            shift and go to state 227


state 212

    (27) bloque -> LBRACE aux5 . RBRACE

    RBRACE          shift and go to state 228


state 213

    (44) aux5 -> estatuto .
    (45) aux5 -> estatuto . aux5
    (44) aux5 -> . estatuto
    (45) aux5 -> . estatuto aux5
    (54) estatuto -> . asignacion
    (55) estatuto -> . escritura
    (56) estatuto -> . llamada_func
    (57) estatuto -> . objeto_metodo
    (58) estatuto -> . lectura
    (85) asignacion -> . ID EQUALS expresion
    (86) asignacion -> . ID EQUALS llamada_func
    (87) asignacion -> . ID EQUALS objeto_metodo
    (88) asignacion -> . objeto_aAcceso EQUALS expresion
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (91) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (102) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (64) escritura -> . PRINT LPAREN aux3 RPAREN
    (104) llamada_func -> . llamada_id llamada_lparen aux llamada_rparen
    (103) objeto_metodo -> . ID PERIOD llamada_func
    (59) lectura -> . READ LPAREN aux4 RPAREN
    (147) objeto_aAcceso -> . ID PERIOD ID
    (105) llamada_id -> . ID

    RBRACE          reduce using rule 44 (aux5 -> estatuto .)
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35

    estatuto                       shift and go to state 213
    aux5                           shift and go to state 229
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 214

    (24) ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .

    VAR             reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    PUBLIC          reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    IF              reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    PRIVATE         reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    PROTECTED       reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    ID              reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    PRINT           reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    READ            reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    VOID            reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    INT             reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    FLOAT           reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    CHAR            reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    WHILE           reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    RBRACE          reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    RETURN          reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)


state 215

    (100) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp . RBRACKET EQUALS expresion
    (101) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp . RBRACKET EQUALS llamada_func
    (102) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp . RBRACKET EQUALS objeto_metodo
    (127) exp -> exp . PLUS termino
    (128) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 230
    PLUS            shift and go to state 130
    MINUS           shift and go to state 131


state 216

    (94) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .

    VAR             reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    ID              reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    VOID            reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    INT             reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    FLOAT           reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    CHAR            reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)


state 217

    (95) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .

    VAR             reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    VOID            reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    INT             reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    FLOAT           reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    CHAR            reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)


state 218

    (96) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    VOID            reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    INT             reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    FLOAT           reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    CHAR            reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 219

    (109) aux -> exp aux_exp aux_comma aux .

    RPAREN          reduce using rule 109 (aux -> exp aux_exp aux_comma aux .)


state 220

    (77) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint . RBRACKET COLON tipo_simple
    (78) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint . RBRACKET COLON tipo_compuesto

    RBRACKET        shift and go to state 231


state 221

    (75) vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .

    VAR             reduce using rule 75 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PUBLIC          reduce using rule 75 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    IF              reduce using rule 75 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PRIVATE         reduce using rule 75 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PROTECTED       reduce using rule 75 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    ID              reduce using rule 75 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PRINT           reduce using rule 75 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    READ            reduce using rule 75 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    VOID            reduce using rule 75 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    INT             reduce using rule 75 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    FLOAT           reduce using rule 75 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    CHAR            reduce using rule 75 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    WHILE           reduce using rule 75 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    RBRACE          reduce using rule 75 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    RETURN          reduce using rule 75 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)


state 222

    (76) vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .

    VAR             reduce using rule 76 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PUBLIC          reduce using rule 76 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    IF              reduce using rule 76 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRIVATE         reduce using rule 76 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PROTECTED       reduce using rule 76 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    ID              reduce using rule 76 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRINT           reduce using rule 76 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    READ            reduce using rule 76 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    VOID            reduce using rule 76 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    INT             reduce using rule 76 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    FLOAT           reduce using rule 76 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    CHAR            reduce using rule 76 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    WHILE           reduce using rule 76 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RBRACE          reduce using rule 76 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RETURN          reduce using rule 76 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)


state 223

    (97) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS expresion
    (98) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS llamada_func
    (99) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS objeto_metodo

    EQUALS          shift and go to state 232


state 224

    (48) param -> tipo_simple ID COMMA param .

    RPAREN          reduce using rule 48 (param -> tipo_simple ID COMMA param .)


state 225

    (28) funcion -> scope type DEF id LPAREN param aux_param . RPAREN contexto_func

    RPAREN          shift and go to state 233


state 226

    (29) funcion -> scope VOID DEF id LPAREN param aux_param . RPAREN contexto_func

    RPAREN          shift and go to state 234


state 227

    (21) elif -> aux_elif ELIF . LPAREN gotoF RPAREN bloque
    (22) elif -> aux_elif ELIF . LPAREN gotoF RPAREN bloque elif

    LPAREN          shift and go to state 235


state 228

    (27) bloque -> LBRACE aux5 RBRACE .

    ELIF            reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    VAR             reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    PUBLIC          reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    IF              reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    PRIVATE         reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    PROTECTED       reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    ID              reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    PRINT           reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    READ            reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    VOID            reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    INT             reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    FLOAT           reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    CHAR            reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    WHILE           reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    RBRACE          reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    RETURN          reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)


state 229

    (45) aux5 -> estatuto aux5 .

    RBRACE          reduce using rule 45 (aux5 -> estatuto aux5 .)


state 230

    (100) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET . EQUALS expresion
    (101) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET . EQUALS llamada_func
    (102) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET . EQUALS objeto_metodo

    EQUALS          shift and go to state 236


state 231

    (77) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET . COLON tipo_simple
    (78) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET . COLON tipo_compuesto

    COLON           shift and go to state 237


state 232

    (97) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . expresion
    (98) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . llamada_func
    (99) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (104) llamada_func -> . llamada_id llamada_lparen aux llamada_rparen
    (103) objeto_metodo -> . ID PERIOD llamada_func
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (105) llamada_id -> . ID
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    ID              shift and go to state 67
    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    exp                            shift and go to state 71
    expresion                      shift and go to state 238
    llamada_func                   shift and go to state 239
    objeto_metodo                  shift and go to state 240
    llamada_id                     shift and go to state 34
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 233

    (28) funcion -> scope type DEF id LPAREN param aux_param RPAREN . contexto_func
    (34) contexto_func -> . LBRACE aux_contexto_func RBRACE

    LBRACE          shift and go to state 242

    contexto_func                  shift and go to state 241

state 234

    (29) funcion -> scope VOID DEF id LPAREN param aux_param RPAREN . contexto_func
    (34) contexto_func -> . LBRACE aux_contexto_func RBRACE

    LBRACE          shift and go to state 242

    contexto_func                  shift and go to state 243

state 235

    (21) elif -> aux_elif ELIF LPAREN . gotoF RPAREN bloque
    (22) elif -> aux_elif ELIF LPAREN . gotoF RPAREN bloque elif
    (112) gotoF -> . exp_cond
    (113) exp_cond -> . exp_bool
    (114) exp_cond -> . exp_bool AND exp_cond
    (115) exp_cond -> . exp_bool OR exp_cond
    (116) exp_bool -> . TRUE
    (117) exp_bool -> . FALSE
    (118) exp_bool -> . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 85
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    gotoF                          shift and go to state 244
    exp_cond                       shift and go to state 93
    exp_bool                       shift and go to state 94
    expresion                      shift and go to state 97
    exp                            shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 236

    (100) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS . expresion
    (101) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS . llamada_func
    (102) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS . objeto_metodo
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (104) llamada_func -> . llamada_id llamada_lparen aux llamada_rparen
    (103) objeto_metodo -> . ID PERIOD llamada_func
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (105) llamada_id -> . ID
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    ID              shift and go to state 67
    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    objeto_aAcceso                 shift and go to state 77
    exp                            shift and go to state 71
    expresion                      shift and go to state 245
    llamada_func                   shift and go to state 246
    objeto_metodo                  shift and go to state 247
    llamada_id                     shift and go to state 34
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 237

    (77) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON . tipo_simple
    (78) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON . tipo_compuesto
    (81) tipo_simple -> . INT
    (82) tipo_simple -> . FLOAT
    (83) tipo_simple -> . CHAR
    (84) tipo_compuesto -> . ID

    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    CHAR            shift and go to state 119
    ID              shift and go to state 120

    tipo_simple                    shift and go to state 248
    tipo_compuesto                 shift and go to state 249

state 238

    (97) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .

    VAR             reduce using rule 97 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 97 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 97 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 97 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 97 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    ID              reduce using rule 97 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 97 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 97 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    VOID            reduce using rule 97 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    INT             reduce using rule 97 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    FLOAT           reduce using rule 97 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    CHAR            reduce using rule 97 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 97 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 97 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 97 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)


state 239

    (98) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .

    VAR             reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    VOID            reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    INT             reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    FLOAT           reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    CHAR            reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)


state 240

    (99) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    VOID            reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    INT             reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    FLOAT           reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    CHAR            reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 241

    (28) funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .

    VAR             reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    PUBLIC          reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    IF              reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    PRIVATE         reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    PROTECTED       reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    ID              reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    PRINT           reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    READ            reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    VOID            reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    INT             reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    FLOAT           reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    CHAR            reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    WHILE           reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    RBRACE          reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)


state 242

    (34) contexto_func -> LBRACE . aux_contexto_func RBRACE
    (35) aux_contexto_func -> . vars
    (36) aux_contexto_func -> . estatuto
    (37) aux_contexto_func -> . ciclo
    (38) aux_contexto_func -> . RETURN exp_cond aux_return
    (39) aux_contexto_func -> . vars aux_contexto_func
    (40) aux_contexto_func -> . estatuto aux_contexto_func
    (41) aux_contexto_func -> . ciclo aux_contexto_func
    (42) aux_contexto_func -> . RETURN exp_cond aux_return aux_contexto_func
    (73) vars -> . VAR aux2 COLON tipo_simple
    (74) vars -> . VAR aux2 COLON tipo_compuesto
    (75) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (76) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (77) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (78) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (54) estatuto -> . asignacion
    (55) estatuto -> . escritura
    (56) estatuto -> . llamada_func
    (57) estatuto -> . objeto_metodo
    (58) estatuto -> . lectura
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (85) asignacion -> . ID EQUALS expresion
    (86) asignacion -> . ID EQUALS llamada_func
    (87) asignacion -> . ID EQUALS objeto_metodo
    (88) asignacion -> . objeto_aAcceso EQUALS expresion
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (91) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (102) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (64) escritura -> . PRINT LPAREN aux3 RPAREN
    (104) llamada_func -> . llamada_id llamada_lparen aux llamada_rparen
    (103) objeto_metodo -> . ID PERIOD llamada_func
    (59) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (147) objeto_aAcceso -> . ID PERIOD ID
    (105) llamada_id -> . ID

    RETURN          shift and go to state 254
    VAR             shift and go to state 21
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    aux_contexto_func              shift and go to state 250
    vars                           shift and go to state 251
    estatuto                       shift and go to state 252
    ciclo                          shift and go to state 253
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 243

    (29) funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .

    VAR             reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    PUBLIC          reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    IF              reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    PRIVATE         reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    PROTECTED       reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    ID              reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    PRINT           reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    READ            reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    VOID            reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    INT             reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    FLOAT           reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    CHAR            reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    WHILE           reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    RBRACE          reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)


state 244

    (21) elif -> aux_elif ELIF LPAREN gotoF . RPAREN bloque
    (22) elif -> aux_elif ELIF LPAREN gotoF . RPAREN bloque elif

    RPAREN          shift and go to state 255


state 245

    (100) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .

    VAR             reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    ID              reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    VOID            reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    INT             reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    FLOAT           reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    CHAR            reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)


state 246

    (101) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .

    VAR             reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    VOID            reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    INT             reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    FLOAT           reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    CHAR            reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)


state 247

    (102) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 102 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 102 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 102 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 102 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 102 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 102 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 102 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 102 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    VOID            reduce using rule 102 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    INT             reduce using rule 102 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    FLOAT           reduce using rule 102 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    CHAR            reduce using rule 102 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 102 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 102 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 102 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 248

    (77) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .

    VAR             reduce using rule 77 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PUBLIC          reduce using rule 77 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    IF              reduce using rule 77 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PRIVATE         reduce using rule 77 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PROTECTED       reduce using rule 77 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    ID              reduce using rule 77 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PRINT           reduce using rule 77 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    READ            reduce using rule 77 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    VOID            reduce using rule 77 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    INT             reduce using rule 77 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    FLOAT           reduce using rule 77 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    CHAR            reduce using rule 77 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    WHILE           reduce using rule 77 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    RBRACE          reduce using rule 77 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    RETURN          reduce using rule 77 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)


state 249

    (78) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .

    VAR             reduce using rule 78 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PUBLIC          reduce using rule 78 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    IF              reduce using rule 78 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRIVATE         reduce using rule 78 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PROTECTED       reduce using rule 78 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    ID              reduce using rule 78 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRINT           reduce using rule 78 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    READ            reduce using rule 78 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    VOID            reduce using rule 78 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    INT             reduce using rule 78 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    FLOAT           reduce using rule 78 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    CHAR            reduce using rule 78 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    WHILE           reduce using rule 78 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RBRACE          reduce using rule 78 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RETURN          reduce using rule 78 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)


state 250

    (34) contexto_func -> LBRACE aux_contexto_func . RBRACE

    RBRACE          shift and go to state 256


state 251

    (35) aux_contexto_func -> vars .
    (39) aux_contexto_func -> vars . aux_contexto_func
    (35) aux_contexto_func -> . vars
    (36) aux_contexto_func -> . estatuto
    (37) aux_contexto_func -> . ciclo
    (38) aux_contexto_func -> . RETURN exp_cond aux_return
    (39) aux_contexto_func -> . vars aux_contexto_func
    (40) aux_contexto_func -> . estatuto aux_contexto_func
    (41) aux_contexto_func -> . ciclo aux_contexto_func
    (42) aux_contexto_func -> . RETURN exp_cond aux_return aux_contexto_func
    (73) vars -> . VAR aux2 COLON tipo_simple
    (74) vars -> . VAR aux2 COLON tipo_compuesto
    (75) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (76) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (77) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (78) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (54) estatuto -> . asignacion
    (55) estatuto -> . escritura
    (56) estatuto -> . llamada_func
    (57) estatuto -> . objeto_metodo
    (58) estatuto -> . lectura
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (85) asignacion -> . ID EQUALS expresion
    (86) asignacion -> . ID EQUALS llamada_func
    (87) asignacion -> . ID EQUALS objeto_metodo
    (88) asignacion -> . objeto_aAcceso EQUALS expresion
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (91) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (102) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (64) escritura -> . PRINT LPAREN aux3 RPAREN
    (104) llamada_func -> . llamada_id llamada_lparen aux llamada_rparen
    (103) objeto_metodo -> . ID PERIOD llamada_func
    (59) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (147) objeto_aAcceso -> . ID PERIOD ID
    (105) llamada_id -> . ID

    RBRACE          reduce using rule 35 (aux_contexto_func -> vars .)
    RETURN          shift and go to state 254
    VAR             shift and go to state 21
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    vars                           shift and go to state 251
    aux_contexto_func              shift and go to state 257
    estatuto                       shift and go to state 252
    ciclo                          shift and go to state 253
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 252

    (36) aux_contexto_func -> estatuto .
    (40) aux_contexto_func -> estatuto . aux_contexto_func
    (35) aux_contexto_func -> . vars
    (36) aux_contexto_func -> . estatuto
    (37) aux_contexto_func -> . ciclo
    (38) aux_contexto_func -> . RETURN exp_cond aux_return
    (39) aux_contexto_func -> . vars aux_contexto_func
    (40) aux_contexto_func -> . estatuto aux_contexto_func
    (41) aux_contexto_func -> . ciclo aux_contexto_func
    (42) aux_contexto_func -> . RETURN exp_cond aux_return aux_contexto_func
    (73) vars -> . VAR aux2 COLON tipo_simple
    (74) vars -> . VAR aux2 COLON tipo_compuesto
    (75) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (76) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (77) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (78) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (54) estatuto -> . asignacion
    (55) estatuto -> . escritura
    (56) estatuto -> . llamada_func
    (57) estatuto -> . objeto_metodo
    (58) estatuto -> . lectura
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (85) asignacion -> . ID EQUALS expresion
    (86) asignacion -> . ID EQUALS llamada_func
    (87) asignacion -> . ID EQUALS objeto_metodo
    (88) asignacion -> . objeto_aAcceso EQUALS expresion
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (91) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (102) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (64) escritura -> . PRINT LPAREN aux3 RPAREN
    (104) llamada_func -> . llamada_id llamada_lparen aux llamada_rparen
    (103) objeto_metodo -> . ID PERIOD llamada_func
    (59) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (147) objeto_aAcceso -> . ID PERIOD ID
    (105) llamada_id -> . ID

    RBRACE          reduce using rule 36 (aux_contexto_func -> estatuto .)
    RETURN          shift and go to state 254
    VAR             shift and go to state 21
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    estatuto                       shift and go to state 252
    aux_contexto_func              shift and go to state 258
    vars                           shift and go to state 251
    ciclo                          shift and go to state 253
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 253

    (37) aux_contexto_func -> ciclo .
    (41) aux_contexto_func -> ciclo . aux_contexto_func
    (35) aux_contexto_func -> . vars
    (36) aux_contexto_func -> . estatuto
    (37) aux_contexto_func -> . ciclo
    (38) aux_contexto_func -> . RETURN exp_cond aux_return
    (39) aux_contexto_func -> . vars aux_contexto_func
    (40) aux_contexto_func -> . estatuto aux_contexto_func
    (41) aux_contexto_func -> . ciclo aux_contexto_func
    (42) aux_contexto_func -> . RETURN exp_cond aux_return aux_contexto_func
    (73) vars -> . VAR aux2 COLON tipo_simple
    (74) vars -> . VAR aux2 COLON tipo_compuesto
    (75) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (76) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (77) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (78) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (54) estatuto -> . asignacion
    (55) estatuto -> . escritura
    (56) estatuto -> . llamada_func
    (57) estatuto -> . objeto_metodo
    (58) estatuto -> . lectura
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (85) asignacion -> . ID EQUALS expresion
    (86) asignacion -> . ID EQUALS llamada_func
    (87) asignacion -> . ID EQUALS objeto_metodo
    (88) asignacion -> . objeto_aAcceso EQUALS expresion
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (91) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (102) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (64) escritura -> . PRINT LPAREN aux3 RPAREN
    (104) llamada_func -> . llamada_id llamada_lparen aux llamada_rparen
    (103) objeto_metodo -> . ID PERIOD llamada_func
    (59) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (147) objeto_aAcceso -> . ID PERIOD ID
    (105) llamada_id -> . ID

    RBRACE          reduce using rule 37 (aux_contexto_func -> ciclo .)
    RETURN          shift and go to state 254
    VAR             shift and go to state 21
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    ciclo                          shift and go to state 253
    aux_contexto_func              shift and go to state 259
    vars                           shift and go to state 251
    estatuto                       shift and go to state 252
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 254

    (38) aux_contexto_func -> RETURN . exp_cond aux_return
    (42) aux_contexto_func -> RETURN . exp_cond aux_return aux_contexto_func
    (113) exp_cond -> . exp_bool
    (114) exp_cond -> . exp_bool AND exp_cond
    (115) exp_cond -> . exp_bool OR exp_cond
    (116) exp_bool -> . TRUE
    (117) exp_bool -> . FALSE
    (118) exp_bool -> . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) var -> . ID
    (141) var -> . cint
    (142) var -> . cfloat
    (143) var -> . cchar
    (147) objeto_aAcceso -> . ID PERIOD ID
    (144) cint -> . CINT
    (145) cfloat -> . NUMBER
    (146) cchar -> . CCHAR

    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LPAREN          shift and go to state 76
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 85
    CINT            shift and go to state 82
    NUMBER          shift and go to state 83
    CCHAR           shift and go to state 84

    exp_cond                       shift and go to state 260
    exp_bool                       shift and go to state 94
    expresion                      shift and go to state 97
    exp                            shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 75
    objeto_aAcceso                 shift and go to state 77
    var                            shift and go to state 78
    cint                           shift and go to state 79
    cfloat                         shift and go to state 80
    cchar                          shift and go to state 81

state 255

    (21) elif -> aux_elif ELIF LPAREN gotoF RPAREN . bloque
    (22) elif -> aux_elif ELIF LPAREN gotoF RPAREN . bloque elif
    (27) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 186

    bloque                         shift and go to state 261

state 256

    (34) contexto_func -> LBRACE aux_contexto_func RBRACE .

    VAR             reduce using rule 34 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    PUBLIC          reduce using rule 34 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    IF              reduce using rule 34 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    PRIVATE         reduce using rule 34 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    PROTECTED       reduce using rule 34 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    ID              reduce using rule 34 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    PRINT           reduce using rule 34 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    READ            reduce using rule 34 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    VOID            reduce using rule 34 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    INT             reduce using rule 34 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    FLOAT           reduce using rule 34 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    CHAR            reduce using rule 34 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    WHILE           reduce using rule 34 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    RBRACE          reduce using rule 34 (contexto_func -> LBRACE aux_contexto_func RBRACE .)


state 257

    (39) aux_contexto_func -> vars aux_contexto_func .

    RBRACE          reduce using rule 39 (aux_contexto_func -> vars aux_contexto_func .)


state 258

    (40) aux_contexto_func -> estatuto aux_contexto_func .

    RBRACE          reduce using rule 40 (aux_contexto_func -> estatuto aux_contexto_func .)


state 259

    (41) aux_contexto_func -> ciclo aux_contexto_func .

    RBRACE          reduce using rule 41 (aux_contexto_func -> ciclo aux_contexto_func .)


state 260

    (38) aux_contexto_func -> RETURN exp_cond . aux_return
    (42) aux_contexto_func -> RETURN exp_cond . aux_return aux_contexto_func
    (43) aux_return -> .

    RETURN          reduce using rule 43 (aux_return -> .)
    VAR             reduce using rule 43 (aux_return -> .)
    ID              reduce using rule 43 (aux_return -> .)
    PRINT           reduce using rule 43 (aux_return -> .)
    READ            reduce using rule 43 (aux_return -> .)
    WHILE           reduce using rule 43 (aux_return -> .)
    RBRACE          reduce using rule 43 (aux_return -> .)

    aux_return                     shift and go to state 262

state 261

    (21) elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .
    (22) elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque . elif
    (21) elif -> . aux_elif ELIF LPAREN gotoF RPAREN bloque
    (22) elif -> . aux_elif ELIF LPAREN gotoF RPAREN bloque elif
    (23) aux_elif -> .

    VAR             reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    PUBLIC          reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    IF              reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    PRIVATE         reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    PROTECTED       reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    ID              reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    PRINT           reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    READ            reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    VOID            reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    INT             reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    FLOAT           reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    CHAR            reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    WHILE           reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    RBRACE          reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    ELIF            reduce using rule 23 (aux_elif -> .)

    aux_elif                       shift and go to state 211
    elif                           shift and go to state 263

state 262

    (38) aux_contexto_func -> RETURN exp_cond aux_return .
    (42) aux_contexto_func -> RETURN exp_cond aux_return . aux_contexto_func
    (35) aux_contexto_func -> . vars
    (36) aux_contexto_func -> . estatuto
    (37) aux_contexto_func -> . ciclo
    (38) aux_contexto_func -> . RETURN exp_cond aux_return
    (39) aux_contexto_func -> . vars aux_contexto_func
    (40) aux_contexto_func -> . estatuto aux_contexto_func
    (41) aux_contexto_func -> . ciclo aux_contexto_func
    (42) aux_contexto_func -> . RETURN exp_cond aux_return aux_contexto_func
    (73) vars -> . VAR aux2 COLON tipo_simple
    (74) vars -> . VAR aux2 COLON tipo_compuesto
    (75) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (76) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (77) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (78) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (54) estatuto -> . asignacion
    (55) estatuto -> . escritura
    (56) estatuto -> . llamada_func
    (57) estatuto -> . objeto_metodo
    (58) estatuto -> . lectura
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (85) asignacion -> . ID EQUALS expresion
    (86) asignacion -> . ID EQUALS llamada_func
    (87) asignacion -> . ID EQUALS objeto_metodo
    (88) asignacion -> . objeto_aAcceso EQUALS expresion
    (89) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (90) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (91) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (97) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (102) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (64) escritura -> . PRINT LPAREN aux3 RPAREN
    (104) llamada_func -> . llamada_id llamada_lparen aux llamada_rparen
    (103) objeto_metodo -> . ID PERIOD llamada_func
    (59) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (147) objeto_aAcceso -> . ID PERIOD ID
    (105) llamada_id -> . ID

    RBRACE          reduce using rule 38 (aux_contexto_func -> RETURN exp_cond aux_return .)
    RETURN          shift and go to state 254
    VAR             shift and go to state 21
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    aux_contexto_func              shift and go to state 264
    vars                           shift and go to state 251
    estatuto                       shift and go to state 252
    ciclo                          shift and go to state 253
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 263

    (22) elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .

    VAR             reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    PUBLIC          reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    IF              reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    PRIVATE         reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    PROTECTED       reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    ID              reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    PRINT           reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    READ            reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    VOID            reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    INT             reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    FLOAT           reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    CHAR            reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    WHILE           reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    RBRACE          reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)


state 264

    (42) aux_contexto_func -> RETURN exp_cond aux_return aux_contexto_func .

    RBRACE          reduce using rule 42 (aux_contexto_func -> RETURN exp_cond aux_return aux_contexto_func .)

