Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID aux_program class context
Rule 2     programa -> PROGRAM ID aux_program context
Rule 3     aux_program -> <empty>
Rule 4     class -> scope CLASS ID
Rule 5     class -> scope CLASS ID COLON ID
Rule 6     context -> LBRACE aux6 RBRACE
Rule 7     aux6 -> vars
Rule 8     aux6 -> constructor
Rule 9     aux6 -> funcion
Rule 10    aux6 -> estatuto
Rule 11    aux6 -> condicion
Rule 12    aux6 -> ciclo
Rule 13    aux6 -> vars aux6
Rule 14    aux6 -> constructor aux6
Rule 15    aux6 -> funcion aux6
Rule 16    aux6 -> estatuto aux6
Rule 17    aux6 -> condicion aux6
Rule 18    aux6 -> ciclo aux6
Rule 19    aux6 -> sort_p
Rule 20    aux6 -> find_p
Rule 21    aux6 -> sort_p aux6
Rule 22    aux6 -> find_p aux6
Rule 23    sort_p -> ID PERIOD SORT LPAREN aux_sort RPAREN
Rule 24    aux_sort -> <empty>
Rule 25    find_p -> ID PERIOD FIND LPAREN var RPAREN
Rule 26    condicion -> IF LPAREN gotoF RPAREN bloque
Rule 27    condicion -> IF LPAREN gotoF RPAREN bloque elif
Rule 28    elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque
Rule 29    elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif
Rule 30    aux_elif -> <empty>
Rule 31    ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque
Rule 32    aux_ciclo -> <empty>
Rule 33    constructor -> PUBLIC ID LPAREN param RPAREN bloque
Rule 34    bloque -> LBRACE aux5 RBRACE
Rule 35    funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func
Rule 36    funcion -> scope VOID DEF id_void LPAREN param aux_param RPAREN contexto_func
Rule 37    id -> ID
Rule 38    id_void -> ID
Rule 39    type -> INT
Rule 40    type -> FLOAT
Rule 41    type -> CHAR
Rule 42    type -> STRING
Rule 43    type -> BOOL
Rule 44    contexto_func -> LBRACE aux_contexto_func RBRACE
Rule 45    aux_contexto_func -> vars
Rule 46    aux_contexto_func -> estatuto
Rule 47    aux_contexto_func -> ciclo
Rule 48    aux_contexto_func -> condicion
Rule 49    aux_contexto_func -> RETURN exp_cond aux_return
Rule 50    aux_contexto_func -> vars aux_contexto_func
Rule 51    aux_contexto_func -> estatuto aux_contexto_func
Rule 52    aux_contexto_func -> ciclo aux_contexto_func
Rule 53    aux_contexto_func -> condicion aux_contexto_func
Rule 54    aux_contexto_func -> RETURN exp_cond aux_return aux_contexto_func
Rule 55    aux_contexto_func -> sort_p
Rule 56    aux_contexto_func -> find_p
Rule 57    aux_contexto_func -> sort_p aux_contexto_func
Rule 58    aux_contexto_func -> find_p aux_contexto_func
Rule 59    aux_return -> <empty>
Rule 60    aux5 -> estatuto
Rule 61    aux5 -> RETURN exp_cond aux_return
Rule 62    aux5 -> estatuto aux5
Rule 63    aux5 -> RETURN exp_cond aux_return aux5
Rule 64    param -> <empty>
Rule 65    param -> tipo_simple ID
Rule 66    param -> tipo_simple ID COMMA param
Rule 67    aux_param -> <empty>
Rule 68    scope -> <empty>
Rule 69    scope -> PRIVATE
Rule 70    scope -> PUBLIC
Rule 71    scope -> PROTECTED
Rule 72    estatuto -> asignacion
Rule 73    estatuto -> escritura
Rule 74    estatuto -> llamada_func
Rule 75    estatuto -> objeto_metodo
Rule 76    estatuto -> lectura
Rule 77    lectura -> READ LPAREN aux4 RPAREN
Rule 78    aux4 -> ID
Rule 79    aux4 -> objeto_aAcceso
Rule 80    aux4 -> ID COMMA aux4
Rule 81    aux4 -> objeto_aAcceso COMMA aux4
Rule 82    escritura -> PRINT LPAREN aux3 RPAREN
Rule 83    aux3 -> expresion
Rule 84    aux3 -> objeto_metodo
Rule 85    aux3 -> CSTRING
Rule 86    aux3 -> expresion COMMA aux3
Rule 87    aux3 -> objeto_metodo COMMA aux3
Rule 88    aux3 -> CSTRING COMMA aux3
Rule 89    vars -> VAR aux2 COLON tipo_simple
Rule 90    vars -> VAR aux2 COLON tipo_compuesto
Rule 91    vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple
Rule 92    vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
Rule 93    vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
Rule 94    vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
Rule 95    aux2 -> ID
Rule 96    aux2 -> ID COMMA aux2
Rule 97    tipo_simple -> INT
Rule 98    tipo_simple -> FLOAT
Rule 99    tipo_simple -> CHAR
Rule 100   tipo_simple -> BOOL
Rule 101   tipo_compuesto -> ID
Rule 102   asignacion -> ID EQUALS exp_cond
Rule 103   asignacion -> ID EQUALS objeto_metodo
Rule 104   asignacion -> ID EQUALS ID LBRACKET exp RBRACKET
Rule 105   asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 106   asignacion -> objeto_aAcceso EQUALS exp_cond
Rule 107   asignacion -> objeto_aAcceso EQUALS objeto_metodo
Rule 108   asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond
Rule 109   asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 110   asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
Rule 111   asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 112   asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
Rule 113   asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 114   asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
Rule 115   asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 116   objeto_metodo -> ID PERIOD llamada_func
Rule 117   llamada_func -> llamada_id llamada_lparen llamada_rparen
Rule 118   llamada_id -> ID
Rule 119   llamada_lparen -> LPAREN
Rule 120   llamada_rparen -> aux RPAREN
Rule 121   llamada_rparen -> RPAREN
Rule 122   aux -> exp aux_exp
Rule 123   aux -> exp aux_exp aux_comma aux
Rule 124   aux_exp -> <empty>
Rule 125   aux_comma -> COMMA
Rule 126   gotoF -> exp_cond
Rule 127   exp_cond -> exp_bool
Rule 128   exp_cond -> exp_bool AND exp_cond
Rule 129   exp_cond -> exp_bool OR exp_cond
Rule 130   exp_bool -> TRUE
Rule 131   exp_bool -> FALSE
Rule 132   exp_bool -> expresion
Rule 133   expresion -> exp
Rule 134   expresion -> exp LT expresion
Rule 135   expresion -> exp GT expresion
Rule 136   expresion -> exp GE expresion
Rule 137   expresion -> exp LE expresion
Rule 138   expresion -> exp EQ expresion
Rule 139   expresion -> exp NE expresion
Rule 140   exp -> termino
Rule 141   exp -> exp PLUS termino
Rule 142   exp -> exp MINUS termino
Rule 143   termino -> factor
Rule 144   termino -> termino TIMES factor
Rule 145   termino -> termino DIVIDE factor
Rule 146   termino -> termino MODULO factor
Rule 147   factor -> LPAREN exp_cond RPAREN
Rule 148   factor -> PLUS objeto_aAcceso
Rule 149   factor -> MINUS objeto_aAcceso
Rule 150   factor -> PLUS var
Rule 151   factor -> MINUS var
Rule 152   factor -> var
Rule 153   factor -> objeto_aAcceso
Rule 154   factor -> llamada_func
Rule 155   var -> ID
Rule 156   var -> cint
Rule 157   var -> cfloat
Rule 158   var -> cchar
Rule 159   var -> ID LBRACKET exp RBRACKET
Rule 160   var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 161   cint -> CINT
Rule 162   cfloat -> NUMBER
Rule 163   cchar -> CCHAR
Rule 164   objeto_aAcceso -> ID PERIOD ID

Terminals, with rules where they appear

AND                  : 128
BOOL                 : 43 100
CCHAR                : 163
CHAR                 : 41 99
CINT                 : 161
CLASS                : 4 5
COLON                : 5 89 90 91 92 93 94
COMMA                : 66 80 81 86 87 88 96 125
CSTRING              : 85 88
DEF                  : 35 36
DIVIDE               : 145
ELIF                 : 28 29
EQ                   : 138
EQUALS               : 102 103 104 105 106 107 108 109 110 111 112 113 114 115
FALSE                : 131
FIND                 : 25
FLOAT                : 40 98
GE                   : 136
GT                   : 135
ID                   : 1 2 4 5 5 23 25 33 37 38 65 66 78 80 91 92 93 94 95 96 101 102 103 104 104 105 105 108 109 112 113 116 118 155 159 160 164 164
IF                   : 26 27
INT                  : 39 97
LBRACE               : 6 34 44
LBRACKET             : 91 92 93 93 94 94 104 105 105 108 109 110 111 112 112 113 113 114 114 115 115 159 160 160
LE                   : 137
LPAREN               : 23 25 26 27 28 29 31 33 35 36 77 82 119 147
LT                   : 134
MINUS                : 142 149 151
MODULO               : 146
NE                   : 139
NUMBER               : 162
OR                   : 129
PERIOD               : 23 25 116 164
PLUS                 : 141 148 150
PRINT                : 82
PRIVATE              : 69
PROGRAM              : 1 2
PROTECTED            : 71
PUBLIC               : 33 70
RBRACE               : 6 34 44
RBRACKET             : 91 92 93 93 94 94 104 105 105 108 109 110 111 112 112 113 113 114 114 115 115 159 160 160
READ                 : 77
RETURN               : 49 54 61 63
RPAREN               : 23 25 26 27 28 29 31 33 35 36 77 82 120 121 147
SORT                 : 23
STRING               : 42
TIMES                : 144
TRUE                 : 130
VAR                  : 89 90 91 92 93 94
VOID                 : 36
WHILE                : 31
error                : 

Nonterminals, with rules where they appear

asignacion           : 72
aux                  : 120 123
aux2                 : 89 90 96
aux3                 : 82 86 87 88
aux4                 : 77 80 81
aux5                 : 34 62 63
aux6                 : 6 13 14 15 16 17 18 21 22
aux_ciclo            : 31
aux_comma            : 123
aux_contexto_func    : 44 50 51 52 53 54 57 58
aux_elif             : 28 29
aux_exp              : 122 123
aux_param            : 35 36
aux_program          : 1 2
aux_return           : 49 54 61 63
aux_sort             : 23
bloque               : 26 27 28 29 31 33
cchar                : 158
cfloat               : 157
ciclo                : 12 18 47 52
cint                 : 91 92 93 93 94 94 156
class                : 1
condicion            : 11 17 48 53
constructor          : 8 14
context              : 1 2
contexto_func        : 35 36
elif                 : 27 29
escritura            : 73
estatuto             : 10 16 46 51 60 62
exp                  : 104 105 105 108 109 110 111 112 112 113 113 114 114 115 115 122 123 133 134 135 136 137 138 139 141 142 159 160 160
exp_bool             : 127 128 129
exp_cond             : 49 54 61 63 102 106 108 110 112 114 126 128 129 147
expresion            : 83 86 132 134 135 136 137 138 139
factor               : 143 144 145 146
find_p               : 20 22 56 58
funcion              : 9 15
gotoF                : 26 27 28 29 31
id                   : 35
id_void              : 36
lectura              : 76
llamada_func         : 74 116 154
llamada_id           : 117
llamada_lparen       : 117
llamada_rparen       : 117
objeto_aAcceso       : 79 81 106 107 110 111 114 115 148 149 153
objeto_metodo        : 75 84 87 103 107 109 111 113 115
param                : 33 35 36 66
programa             : 0
scope                : 4 5 35 36
sort_p               : 19 21 55 57
termino              : 140 141 142 144 145 146
tipo_compuesto       : 90 92 94
tipo_simple          : 65 66 89 91 93
type                 : 35
var                  : 25 150 151 152
vars                 : 7 13 45 50

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID aux_program class context
    (2) programa -> . PROGRAM ID aux_program context

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID aux_program class context
    (2) programa -> PROGRAM . ID aux_program context

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . aux_program class context
    (2) programa -> PROGRAM ID . aux_program context
    (3) aux_program -> .

    LBRACE          reduce using rule 3 (aux_program -> .)
    PRIVATE         reduce using rule 3 (aux_program -> .)
    PUBLIC          reduce using rule 3 (aux_program -> .)
    PROTECTED       reduce using rule 3 (aux_program -> .)
    CLASS           reduce using rule 3 (aux_program -> .)

    aux_program                    shift and go to state 4

state 4

    (1) programa -> PROGRAM ID aux_program . class context
    (2) programa -> PROGRAM ID aux_program . context
    (4) class -> . scope CLASS ID
    (5) class -> . scope CLASS ID COLON ID
    (6) context -> . LBRACE aux6 RBRACE
    (68) scope -> .
    (69) scope -> . PRIVATE
    (70) scope -> . PUBLIC
    (71) scope -> . PROTECTED

    LBRACE          shift and go to state 8
    CLASS           reduce using rule 68 (scope -> .)
    PRIVATE         shift and go to state 9
    PUBLIC          shift and go to state 10
    PROTECTED       shift and go to state 11

    class                          shift and go to state 5
    context                        shift and go to state 6
    scope                          shift and go to state 7

state 5

    (1) programa -> PROGRAM ID aux_program class . context
    (6) context -> . LBRACE aux6 RBRACE

    LBRACE          shift and go to state 8

    context                        shift and go to state 12

state 6

    (2) programa -> PROGRAM ID aux_program context .

    $end            reduce using rule 2 (programa -> PROGRAM ID aux_program context .)


state 7

    (4) class -> scope . CLASS ID
    (5) class -> scope . CLASS ID COLON ID

    CLASS           shift and go to state 13


state 8

    (6) context -> LBRACE . aux6 RBRACE
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (19) aux6 -> . sort_p
    (20) aux6 -> . find_p
    (21) aux6 -> . sort_p aux6
    (22) aux6 -> . find_p aux6
    (89) vars -> . VAR aux2 COLON tipo_simple
    (90) vars -> . VAR aux2 COLON tipo_compuesto
    (91) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (92) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (93) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (94) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (33) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (35) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (36) funcion -> . scope VOID DEF id_void LPAREN param aux_param RPAREN contexto_func
    (72) estatuto -> . asignacion
    (73) estatuto -> . escritura
    (74) estatuto -> . llamada_func
    (75) estatuto -> . objeto_metodo
    (76) estatuto -> . lectura
    (26) condicion -> . IF LPAREN gotoF RPAREN bloque
    (27) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (31) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (23) sort_p -> . ID PERIOD SORT LPAREN aux_sort RPAREN
    (25) find_p -> . ID PERIOD FIND LPAREN var RPAREN
    (68) scope -> .
    (69) scope -> . PRIVATE
    (70) scope -> . PUBLIC
    (71) scope -> . PROTECTED
    (102) asignacion -> . ID EQUALS exp_cond
    (103) asignacion -> . ID EQUALS objeto_metodo
    (104) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET
    (105) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (106) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (107) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (108) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (109) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (110) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (111) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (112) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (113) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (114) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (115) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (82) escritura -> . PRINT LPAREN aux3 RPAREN
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (77) lectura -> . READ LPAREN aux4 RPAREN
    (32) aux_ciclo -> .
    (164) objeto_aAcceso -> . ID PERIOD ID
    (118) llamada_id -> . ID

    VAR             shift and go to state 23
    PUBLIC          shift and go to state 25
    IF              shift and go to state 32
    ID              shift and go to state 24
    VOID            reduce using rule 68 (scope -> .)
    INT             reduce using rule 68 (scope -> .)
    FLOAT           reduce using rule 68 (scope -> .)
    CHAR            reduce using rule 68 (scope -> .)
    STRING          reduce using rule 68 (scope -> .)
    BOOL            reduce using rule 68 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    PRINT           shift and go to state 35
    READ            shift and go to state 37
    WHILE           reduce using rule 32 (aux_ciclo -> .)

    aux6                           shift and go to state 14
    vars                           shift and go to state 15
    constructor                    shift and go to state 16
    funcion                        shift and go to state 17
    estatuto                       shift and go to state 18
    condicion                      shift and go to state 19
    ciclo                          shift and go to state 20
    sort_p                         shift and go to state 21
    find_p                         shift and go to state 22
    scope                          shift and go to state 26
    asignacion                     shift and go to state 27
    escritura                      shift and go to state 28
    llamada_func                   shift and go to state 29
    objeto_metodo                  shift and go to state 30
    lectura                        shift and go to state 31
    aux_ciclo                      shift and go to state 33
    objeto_aAcceso                 shift and go to state 34
    llamada_id                     shift and go to state 36

state 9

    (69) scope -> PRIVATE .

    CLASS           reduce using rule 69 (scope -> PRIVATE .)
    VOID            reduce using rule 69 (scope -> PRIVATE .)
    INT             reduce using rule 69 (scope -> PRIVATE .)
    FLOAT           reduce using rule 69 (scope -> PRIVATE .)
    CHAR            reduce using rule 69 (scope -> PRIVATE .)
    STRING          reduce using rule 69 (scope -> PRIVATE .)
    BOOL            reduce using rule 69 (scope -> PRIVATE .)


state 10

    (70) scope -> PUBLIC .

    CLASS           reduce using rule 70 (scope -> PUBLIC .)


state 11

    (71) scope -> PROTECTED .

    CLASS           reduce using rule 71 (scope -> PROTECTED .)
    VOID            reduce using rule 71 (scope -> PROTECTED .)
    INT             reduce using rule 71 (scope -> PROTECTED .)
    FLOAT           reduce using rule 71 (scope -> PROTECTED .)
    CHAR            reduce using rule 71 (scope -> PROTECTED .)
    STRING          reduce using rule 71 (scope -> PROTECTED .)
    BOOL            reduce using rule 71 (scope -> PROTECTED .)


state 12

    (1) programa -> PROGRAM ID aux_program class context .

    $end            reduce using rule 1 (programa -> PROGRAM ID aux_program class context .)


state 13

    (4) class -> scope CLASS . ID
    (5) class -> scope CLASS . ID COLON ID

    ID              shift and go to state 38


state 14

    (6) context -> LBRACE aux6 . RBRACE

    RBRACE          shift and go to state 39


state 15

    (7) aux6 -> vars .
    (13) aux6 -> vars . aux6
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (19) aux6 -> . sort_p
    (20) aux6 -> . find_p
    (21) aux6 -> . sort_p aux6
    (22) aux6 -> . find_p aux6
    (89) vars -> . VAR aux2 COLON tipo_simple
    (90) vars -> . VAR aux2 COLON tipo_compuesto
    (91) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (92) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (93) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (94) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (33) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (35) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (36) funcion -> . scope VOID DEF id_void LPAREN param aux_param RPAREN contexto_func
    (72) estatuto -> . asignacion
    (73) estatuto -> . escritura
    (74) estatuto -> . llamada_func
    (75) estatuto -> . objeto_metodo
    (76) estatuto -> . lectura
    (26) condicion -> . IF LPAREN gotoF RPAREN bloque
    (27) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (31) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (23) sort_p -> . ID PERIOD SORT LPAREN aux_sort RPAREN
    (25) find_p -> . ID PERIOD FIND LPAREN var RPAREN
    (68) scope -> .
    (69) scope -> . PRIVATE
    (70) scope -> . PUBLIC
    (71) scope -> . PROTECTED
    (102) asignacion -> . ID EQUALS exp_cond
    (103) asignacion -> . ID EQUALS objeto_metodo
    (104) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET
    (105) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (106) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (107) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (108) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (109) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (110) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (111) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (112) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (113) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (114) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (115) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (82) escritura -> . PRINT LPAREN aux3 RPAREN
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (77) lectura -> . READ LPAREN aux4 RPAREN
    (32) aux_ciclo -> .
    (164) objeto_aAcceso -> . ID PERIOD ID
    (118) llamada_id -> . ID

    RBRACE          reduce using rule 7 (aux6 -> vars .)
    VAR             shift and go to state 23
    PUBLIC          shift and go to state 25
    IF              shift and go to state 32
    ID              shift and go to state 24
    VOID            reduce using rule 68 (scope -> .)
    INT             reduce using rule 68 (scope -> .)
    FLOAT           reduce using rule 68 (scope -> .)
    CHAR            reduce using rule 68 (scope -> .)
    STRING          reduce using rule 68 (scope -> .)
    BOOL            reduce using rule 68 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    PRINT           shift and go to state 35
    READ            shift and go to state 37
    WHILE           reduce using rule 32 (aux_ciclo -> .)

    vars                           shift and go to state 15
    aux6                           shift and go to state 40
    constructor                    shift and go to state 16
    funcion                        shift and go to state 17
    estatuto                       shift and go to state 18
    condicion                      shift and go to state 19
    ciclo                          shift and go to state 20
    sort_p                         shift and go to state 21
    find_p                         shift and go to state 22
    scope                          shift and go to state 26
    asignacion                     shift and go to state 27
    escritura                      shift and go to state 28
    llamada_func                   shift and go to state 29
    objeto_metodo                  shift and go to state 30
    lectura                        shift and go to state 31
    aux_ciclo                      shift and go to state 33
    objeto_aAcceso                 shift and go to state 34
    llamada_id                     shift and go to state 36

state 16

    (8) aux6 -> constructor .
    (14) aux6 -> constructor . aux6
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (19) aux6 -> . sort_p
    (20) aux6 -> . find_p
    (21) aux6 -> . sort_p aux6
    (22) aux6 -> . find_p aux6
    (89) vars -> . VAR aux2 COLON tipo_simple
    (90) vars -> . VAR aux2 COLON tipo_compuesto
    (91) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (92) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (93) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (94) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (33) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (35) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (36) funcion -> . scope VOID DEF id_void LPAREN param aux_param RPAREN contexto_func
    (72) estatuto -> . asignacion
    (73) estatuto -> . escritura
    (74) estatuto -> . llamada_func
    (75) estatuto -> . objeto_metodo
    (76) estatuto -> . lectura
    (26) condicion -> . IF LPAREN gotoF RPAREN bloque
    (27) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (31) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (23) sort_p -> . ID PERIOD SORT LPAREN aux_sort RPAREN
    (25) find_p -> . ID PERIOD FIND LPAREN var RPAREN
    (68) scope -> .
    (69) scope -> . PRIVATE
    (70) scope -> . PUBLIC
    (71) scope -> . PROTECTED
    (102) asignacion -> . ID EQUALS exp_cond
    (103) asignacion -> . ID EQUALS objeto_metodo
    (104) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET
    (105) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (106) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (107) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (108) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (109) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (110) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (111) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (112) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (113) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (114) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (115) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (82) escritura -> . PRINT LPAREN aux3 RPAREN
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (77) lectura -> . READ LPAREN aux4 RPAREN
    (32) aux_ciclo -> .
    (164) objeto_aAcceso -> . ID PERIOD ID
    (118) llamada_id -> . ID

    RBRACE          reduce using rule 8 (aux6 -> constructor .)
    VAR             shift and go to state 23
    PUBLIC          shift and go to state 25
    IF              shift and go to state 32
    ID              shift and go to state 24
    VOID            reduce using rule 68 (scope -> .)
    INT             reduce using rule 68 (scope -> .)
    FLOAT           reduce using rule 68 (scope -> .)
    CHAR            reduce using rule 68 (scope -> .)
    STRING          reduce using rule 68 (scope -> .)
    BOOL            reduce using rule 68 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    PRINT           shift and go to state 35
    READ            shift and go to state 37
    WHILE           reduce using rule 32 (aux_ciclo -> .)

    constructor                    shift and go to state 16
    aux6                           shift and go to state 41
    vars                           shift and go to state 15
    funcion                        shift and go to state 17
    estatuto                       shift and go to state 18
    condicion                      shift and go to state 19
    ciclo                          shift and go to state 20
    sort_p                         shift and go to state 21
    find_p                         shift and go to state 22
    scope                          shift and go to state 26
    asignacion                     shift and go to state 27
    escritura                      shift and go to state 28
    llamada_func                   shift and go to state 29
    objeto_metodo                  shift and go to state 30
    lectura                        shift and go to state 31
    aux_ciclo                      shift and go to state 33
    objeto_aAcceso                 shift and go to state 34
    llamada_id                     shift and go to state 36

state 17

    (9) aux6 -> funcion .
    (15) aux6 -> funcion . aux6
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (19) aux6 -> . sort_p
    (20) aux6 -> . find_p
    (21) aux6 -> . sort_p aux6
    (22) aux6 -> . find_p aux6
    (89) vars -> . VAR aux2 COLON tipo_simple
    (90) vars -> . VAR aux2 COLON tipo_compuesto
    (91) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (92) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (93) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (94) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (33) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (35) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (36) funcion -> . scope VOID DEF id_void LPAREN param aux_param RPAREN contexto_func
    (72) estatuto -> . asignacion
    (73) estatuto -> . escritura
    (74) estatuto -> . llamada_func
    (75) estatuto -> . objeto_metodo
    (76) estatuto -> . lectura
    (26) condicion -> . IF LPAREN gotoF RPAREN bloque
    (27) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (31) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (23) sort_p -> . ID PERIOD SORT LPAREN aux_sort RPAREN
    (25) find_p -> . ID PERIOD FIND LPAREN var RPAREN
    (68) scope -> .
    (69) scope -> . PRIVATE
    (70) scope -> . PUBLIC
    (71) scope -> . PROTECTED
    (102) asignacion -> . ID EQUALS exp_cond
    (103) asignacion -> . ID EQUALS objeto_metodo
    (104) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET
    (105) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (106) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (107) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (108) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (109) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (110) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (111) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (112) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (113) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (114) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (115) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (82) escritura -> . PRINT LPAREN aux3 RPAREN
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (77) lectura -> . READ LPAREN aux4 RPAREN
    (32) aux_ciclo -> .
    (164) objeto_aAcceso -> . ID PERIOD ID
    (118) llamada_id -> . ID

    RBRACE          reduce using rule 9 (aux6 -> funcion .)
    VAR             shift and go to state 23
    PUBLIC          shift and go to state 25
    IF              shift and go to state 32
    ID              shift and go to state 24
    VOID            reduce using rule 68 (scope -> .)
    INT             reduce using rule 68 (scope -> .)
    FLOAT           reduce using rule 68 (scope -> .)
    CHAR            reduce using rule 68 (scope -> .)
    STRING          reduce using rule 68 (scope -> .)
    BOOL            reduce using rule 68 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    PRINT           shift and go to state 35
    READ            shift and go to state 37
    WHILE           reduce using rule 32 (aux_ciclo -> .)

    funcion                        shift and go to state 17
    aux6                           shift and go to state 42
    vars                           shift and go to state 15
    constructor                    shift and go to state 16
    estatuto                       shift and go to state 18
    condicion                      shift and go to state 19
    ciclo                          shift and go to state 20
    sort_p                         shift and go to state 21
    find_p                         shift and go to state 22
    scope                          shift and go to state 26
    asignacion                     shift and go to state 27
    escritura                      shift and go to state 28
    llamada_func                   shift and go to state 29
    objeto_metodo                  shift and go to state 30
    lectura                        shift and go to state 31
    aux_ciclo                      shift and go to state 33
    objeto_aAcceso                 shift and go to state 34
    llamada_id                     shift and go to state 36

state 18

    (10) aux6 -> estatuto .
    (16) aux6 -> estatuto . aux6
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (19) aux6 -> . sort_p
    (20) aux6 -> . find_p
    (21) aux6 -> . sort_p aux6
    (22) aux6 -> . find_p aux6
    (89) vars -> . VAR aux2 COLON tipo_simple
    (90) vars -> . VAR aux2 COLON tipo_compuesto
    (91) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (92) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (93) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (94) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (33) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (35) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (36) funcion -> . scope VOID DEF id_void LPAREN param aux_param RPAREN contexto_func
    (72) estatuto -> . asignacion
    (73) estatuto -> . escritura
    (74) estatuto -> . llamada_func
    (75) estatuto -> . objeto_metodo
    (76) estatuto -> . lectura
    (26) condicion -> . IF LPAREN gotoF RPAREN bloque
    (27) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (31) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (23) sort_p -> . ID PERIOD SORT LPAREN aux_sort RPAREN
    (25) find_p -> . ID PERIOD FIND LPAREN var RPAREN
    (68) scope -> .
    (69) scope -> . PRIVATE
    (70) scope -> . PUBLIC
    (71) scope -> . PROTECTED
    (102) asignacion -> . ID EQUALS exp_cond
    (103) asignacion -> . ID EQUALS objeto_metodo
    (104) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET
    (105) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (106) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (107) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (108) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (109) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (110) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (111) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (112) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (113) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (114) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (115) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (82) escritura -> . PRINT LPAREN aux3 RPAREN
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (77) lectura -> . READ LPAREN aux4 RPAREN
    (32) aux_ciclo -> .
    (164) objeto_aAcceso -> . ID PERIOD ID
    (118) llamada_id -> . ID

    RBRACE          reduce using rule 10 (aux6 -> estatuto .)
    VAR             shift and go to state 23
    PUBLIC          shift and go to state 25
    IF              shift and go to state 32
    ID              shift and go to state 24
    VOID            reduce using rule 68 (scope -> .)
    INT             reduce using rule 68 (scope -> .)
    FLOAT           reduce using rule 68 (scope -> .)
    CHAR            reduce using rule 68 (scope -> .)
    STRING          reduce using rule 68 (scope -> .)
    BOOL            reduce using rule 68 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    PRINT           shift and go to state 35
    READ            shift and go to state 37
    WHILE           reduce using rule 32 (aux_ciclo -> .)

    estatuto                       shift and go to state 18
    aux6                           shift and go to state 43
    vars                           shift and go to state 15
    constructor                    shift and go to state 16
    funcion                        shift and go to state 17
    condicion                      shift and go to state 19
    ciclo                          shift and go to state 20
    sort_p                         shift and go to state 21
    find_p                         shift and go to state 22
    scope                          shift and go to state 26
    asignacion                     shift and go to state 27
    escritura                      shift and go to state 28
    llamada_func                   shift and go to state 29
    objeto_metodo                  shift and go to state 30
    lectura                        shift and go to state 31
    aux_ciclo                      shift and go to state 33
    objeto_aAcceso                 shift and go to state 34
    llamada_id                     shift and go to state 36

state 19

    (11) aux6 -> condicion .
    (17) aux6 -> condicion . aux6
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (19) aux6 -> . sort_p
    (20) aux6 -> . find_p
    (21) aux6 -> . sort_p aux6
    (22) aux6 -> . find_p aux6
    (89) vars -> . VAR aux2 COLON tipo_simple
    (90) vars -> . VAR aux2 COLON tipo_compuesto
    (91) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (92) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (93) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (94) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (33) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (35) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (36) funcion -> . scope VOID DEF id_void LPAREN param aux_param RPAREN contexto_func
    (72) estatuto -> . asignacion
    (73) estatuto -> . escritura
    (74) estatuto -> . llamada_func
    (75) estatuto -> . objeto_metodo
    (76) estatuto -> . lectura
    (26) condicion -> . IF LPAREN gotoF RPAREN bloque
    (27) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (31) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (23) sort_p -> . ID PERIOD SORT LPAREN aux_sort RPAREN
    (25) find_p -> . ID PERIOD FIND LPAREN var RPAREN
    (68) scope -> .
    (69) scope -> . PRIVATE
    (70) scope -> . PUBLIC
    (71) scope -> . PROTECTED
    (102) asignacion -> . ID EQUALS exp_cond
    (103) asignacion -> . ID EQUALS objeto_metodo
    (104) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET
    (105) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (106) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (107) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (108) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (109) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (110) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (111) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (112) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (113) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (114) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (115) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (82) escritura -> . PRINT LPAREN aux3 RPAREN
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (77) lectura -> . READ LPAREN aux4 RPAREN
    (32) aux_ciclo -> .
    (164) objeto_aAcceso -> . ID PERIOD ID
    (118) llamada_id -> . ID

    RBRACE          reduce using rule 11 (aux6 -> condicion .)
    VAR             shift and go to state 23
    PUBLIC          shift and go to state 25
    IF              shift and go to state 32
    ID              shift and go to state 24
    VOID            reduce using rule 68 (scope -> .)
    INT             reduce using rule 68 (scope -> .)
    FLOAT           reduce using rule 68 (scope -> .)
    CHAR            reduce using rule 68 (scope -> .)
    STRING          reduce using rule 68 (scope -> .)
    BOOL            reduce using rule 68 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    PRINT           shift and go to state 35
    READ            shift and go to state 37
    WHILE           reduce using rule 32 (aux_ciclo -> .)

    condicion                      shift and go to state 19
    aux6                           shift and go to state 44
    vars                           shift and go to state 15
    constructor                    shift and go to state 16
    funcion                        shift and go to state 17
    estatuto                       shift and go to state 18
    ciclo                          shift and go to state 20
    sort_p                         shift and go to state 21
    find_p                         shift and go to state 22
    scope                          shift and go to state 26
    asignacion                     shift and go to state 27
    escritura                      shift and go to state 28
    llamada_func                   shift and go to state 29
    objeto_metodo                  shift and go to state 30
    lectura                        shift and go to state 31
    aux_ciclo                      shift and go to state 33
    objeto_aAcceso                 shift and go to state 34
    llamada_id                     shift and go to state 36

state 20

    (12) aux6 -> ciclo .
    (18) aux6 -> ciclo . aux6
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (19) aux6 -> . sort_p
    (20) aux6 -> . find_p
    (21) aux6 -> . sort_p aux6
    (22) aux6 -> . find_p aux6
    (89) vars -> . VAR aux2 COLON tipo_simple
    (90) vars -> . VAR aux2 COLON tipo_compuesto
    (91) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (92) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (93) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (94) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (33) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (35) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (36) funcion -> . scope VOID DEF id_void LPAREN param aux_param RPAREN contexto_func
    (72) estatuto -> . asignacion
    (73) estatuto -> . escritura
    (74) estatuto -> . llamada_func
    (75) estatuto -> . objeto_metodo
    (76) estatuto -> . lectura
    (26) condicion -> . IF LPAREN gotoF RPAREN bloque
    (27) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (31) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (23) sort_p -> . ID PERIOD SORT LPAREN aux_sort RPAREN
    (25) find_p -> . ID PERIOD FIND LPAREN var RPAREN
    (68) scope -> .
    (69) scope -> . PRIVATE
    (70) scope -> . PUBLIC
    (71) scope -> . PROTECTED
    (102) asignacion -> . ID EQUALS exp_cond
    (103) asignacion -> . ID EQUALS objeto_metodo
    (104) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET
    (105) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (106) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (107) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (108) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (109) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (110) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (111) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (112) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (113) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (114) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (115) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (82) escritura -> . PRINT LPAREN aux3 RPAREN
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (77) lectura -> . READ LPAREN aux4 RPAREN
    (32) aux_ciclo -> .
    (164) objeto_aAcceso -> . ID PERIOD ID
    (118) llamada_id -> . ID

    RBRACE          reduce using rule 12 (aux6 -> ciclo .)
    VAR             shift and go to state 23
    PUBLIC          shift and go to state 25
    IF              shift and go to state 32
    ID              shift and go to state 24
    VOID            reduce using rule 68 (scope -> .)
    INT             reduce using rule 68 (scope -> .)
    FLOAT           reduce using rule 68 (scope -> .)
    CHAR            reduce using rule 68 (scope -> .)
    STRING          reduce using rule 68 (scope -> .)
    BOOL            reduce using rule 68 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    PRINT           shift and go to state 35
    READ            shift and go to state 37
    WHILE           reduce using rule 32 (aux_ciclo -> .)

    ciclo                          shift and go to state 20
    aux6                           shift and go to state 45
    vars                           shift and go to state 15
    constructor                    shift and go to state 16
    funcion                        shift and go to state 17
    estatuto                       shift and go to state 18
    condicion                      shift and go to state 19
    sort_p                         shift and go to state 21
    find_p                         shift and go to state 22
    scope                          shift and go to state 26
    asignacion                     shift and go to state 27
    escritura                      shift and go to state 28
    llamada_func                   shift and go to state 29
    objeto_metodo                  shift and go to state 30
    lectura                        shift and go to state 31
    aux_ciclo                      shift and go to state 33
    objeto_aAcceso                 shift and go to state 34
    llamada_id                     shift and go to state 36

state 21

    (19) aux6 -> sort_p .
    (21) aux6 -> sort_p . aux6
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (19) aux6 -> . sort_p
    (20) aux6 -> . find_p
    (21) aux6 -> . sort_p aux6
    (22) aux6 -> . find_p aux6
    (89) vars -> . VAR aux2 COLON tipo_simple
    (90) vars -> . VAR aux2 COLON tipo_compuesto
    (91) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (92) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (93) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (94) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (33) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (35) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (36) funcion -> . scope VOID DEF id_void LPAREN param aux_param RPAREN contexto_func
    (72) estatuto -> . asignacion
    (73) estatuto -> . escritura
    (74) estatuto -> . llamada_func
    (75) estatuto -> . objeto_metodo
    (76) estatuto -> . lectura
    (26) condicion -> . IF LPAREN gotoF RPAREN bloque
    (27) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (31) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (23) sort_p -> . ID PERIOD SORT LPAREN aux_sort RPAREN
    (25) find_p -> . ID PERIOD FIND LPAREN var RPAREN
    (68) scope -> .
    (69) scope -> . PRIVATE
    (70) scope -> . PUBLIC
    (71) scope -> . PROTECTED
    (102) asignacion -> . ID EQUALS exp_cond
    (103) asignacion -> . ID EQUALS objeto_metodo
    (104) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET
    (105) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (106) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (107) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (108) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (109) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (110) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (111) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (112) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (113) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (114) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (115) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (82) escritura -> . PRINT LPAREN aux3 RPAREN
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (77) lectura -> . READ LPAREN aux4 RPAREN
    (32) aux_ciclo -> .
    (164) objeto_aAcceso -> . ID PERIOD ID
    (118) llamada_id -> . ID

    RBRACE          reduce using rule 19 (aux6 -> sort_p .)
    VAR             shift and go to state 23
    PUBLIC          shift and go to state 25
    IF              shift and go to state 32
    ID              shift and go to state 24
    VOID            reduce using rule 68 (scope -> .)
    INT             reduce using rule 68 (scope -> .)
    FLOAT           reduce using rule 68 (scope -> .)
    CHAR            reduce using rule 68 (scope -> .)
    STRING          reduce using rule 68 (scope -> .)
    BOOL            reduce using rule 68 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    PRINT           shift and go to state 35
    READ            shift and go to state 37
    WHILE           reduce using rule 32 (aux_ciclo -> .)

    sort_p                         shift and go to state 21
    aux6                           shift and go to state 46
    vars                           shift and go to state 15
    constructor                    shift and go to state 16
    funcion                        shift and go to state 17
    estatuto                       shift and go to state 18
    condicion                      shift and go to state 19
    ciclo                          shift and go to state 20
    find_p                         shift and go to state 22
    scope                          shift and go to state 26
    asignacion                     shift and go to state 27
    escritura                      shift and go to state 28
    llamada_func                   shift and go to state 29
    objeto_metodo                  shift and go to state 30
    lectura                        shift and go to state 31
    aux_ciclo                      shift and go to state 33
    objeto_aAcceso                 shift and go to state 34
    llamada_id                     shift and go to state 36

state 22

    (20) aux6 -> find_p .
    (22) aux6 -> find_p . aux6
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (19) aux6 -> . sort_p
    (20) aux6 -> . find_p
    (21) aux6 -> . sort_p aux6
    (22) aux6 -> . find_p aux6
    (89) vars -> . VAR aux2 COLON tipo_simple
    (90) vars -> . VAR aux2 COLON tipo_compuesto
    (91) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (92) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (93) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (94) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (33) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (35) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (36) funcion -> . scope VOID DEF id_void LPAREN param aux_param RPAREN contexto_func
    (72) estatuto -> . asignacion
    (73) estatuto -> . escritura
    (74) estatuto -> . llamada_func
    (75) estatuto -> . objeto_metodo
    (76) estatuto -> . lectura
    (26) condicion -> . IF LPAREN gotoF RPAREN bloque
    (27) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (31) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (23) sort_p -> . ID PERIOD SORT LPAREN aux_sort RPAREN
    (25) find_p -> . ID PERIOD FIND LPAREN var RPAREN
    (68) scope -> .
    (69) scope -> . PRIVATE
    (70) scope -> . PUBLIC
    (71) scope -> . PROTECTED
    (102) asignacion -> . ID EQUALS exp_cond
    (103) asignacion -> . ID EQUALS objeto_metodo
    (104) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET
    (105) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (106) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (107) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (108) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (109) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (110) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (111) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (112) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (113) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (114) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (115) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (82) escritura -> . PRINT LPAREN aux3 RPAREN
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (77) lectura -> . READ LPAREN aux4 RPAREN
    (32) aux_ciclo -> .
    (164) objeto_aAcceso -> . ID PERIOD ID
    (118) llamada_id -> . ID

    RBRACE          reduce using rule 20 (aux6 -> find_p .)
    VAR             shift and go to state 23
    PUBLIC          shift and go to state 25
    IF              shift and go to state 32
    ID              shift and go to state 24
    VOID            reduce using rule 68 (scope -> .)
    INT             reduce using rule 68 (scope -> .)
    FLOAT           reduce using rule 68 (scope -> .)
    CHAR            reduce using rule 68 (scope -> .)
    STRING          reduce using rule 68 (scope -> .)
    BOOL            reduce using rule 68 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    PRINT           shift and go to state 35
    READ            shift and go to state 37
    WHILE           reduce using rule 32 (aux_ciclo -> .)

    find_p                         shift and go to state 22
    aux6                           shift and go to state 47
    vars                           shift and go to state 15
    constructor                    shift and go to state 16
    funcion                        shift and go to state 17
    estatuto                       shift and go to state 18
    condicion                      shift and go to state 19
    ciclo                          shift and go to state 20
    sort_p                         shift and go to state 21
    scope                          shift and go to state 26
    asignacion                     shift and go to state 27
    escritura                      shift and go to state 28
    llamada_func                   shift and go to state 29
    objeto_metodo                  shift and go to state 30
    lectura                        shift and go to state 31
    aux_ciclo                      shift and go to state 33
    objeto_aAcceso                 shift and go to state 34
    llamada_id                     shift and go to state 36

state 23

    (89) vars -> VAR . aux2 COLON tipo_simple
    (90) vars -> VAR . aux2 COLON tipo_compuesto
    (91) vars -> VAR . ID LBRACKET cint RBRACKET COLON tipo_simple
    (92) vars -> VAR . ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (93) vars -> VAR . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (94) vars -> VAR . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (95) aux2 -> . ID
    (96) aux2 -> . ID COMMA aux2

    ID              shift and go to state 49

    aux2                           shift and go to state 48

state 24

    (23) sort_p -> ID . PERIOD SORT LPAREN aux_sort RPAREN
    (25) find_p -> ID . PERIOD FIND LPAREN var RPAREN
    (102) asignacion -> ID . EQUALS exp_cond
    (103) asignacion -> ID . EQUALS objeto_metodo
    (104) asignacion -> ID . EQUALS ID LBRACKET exp RBRACKET
    (105) asignacion -> ID . EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (108) asignacion -> ID . LBRACKET exp RBRACKET EQUALS exp_cond
    (109) asignacion -> ID . LBRACKET exp RBRACKET EQUALS objeto_metodo
    (112) asignacion -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (113) asignacion -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (116) objeto_metodo -> ID . PERIOD llamada_func
    (164) objeto_aAcceso -> ID . PERIOD ID
    (118) llamada_id -> ID .

    PERIOD          shift and go to state 50
    EQUALS          shift and go to state 51
    LBRACKET        shift and go to state 52
    LPAREN          reduce using rule 118 (llamada_id -> ID .)


state 25

    (33) constructor -> PUBLIC . ID LPAREN param RPAREN bloque
    (70) scope -> PUBLIC .

    ID              shift and go to state 53
    VOID            reduce using rule 70 (scope -> PUBLIC .)
    INT             reduce using rule 70 (scope -> PUBLIC .)
    FLOAT           reduce using rule 70 (scope -> PUBLIC .)
    CHAR            reduce using rule 70 (scope -> PUBLIC .)
    STRING          reduce using rule 70 (scope -> PUBLIC .)
    BOOL            reduce using rule 70 (scope -> PUBLIC .)


state 26

    (35) funcion -> scope . type DEF id LPAREN param aux_param RPAREN contexto_func
    (36) funcion -> scope . VOID DEF id_void LPAREN param aux_param RPAREN contexto_func
    (39) type -> . INT
    (40) type -> . FLOAT
    (41) type -> . CHAR
    (42) type -> . STRING
    (43) type -> . BOOL

    VOID            shift and go to state 55
    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    CHAR            shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 60

    type                           shift and go to state 54

state 27

    (72) estatuto -> asignacion .

    VAR             reduce using rule 72 (estatuto -> asignacion .)
    PUBLIC          reduce using rule 72 (estatuto -> asignacion .)
    IF              reduce using rule 72 (estatuto -> asignacion .)
    ID              reduce using rule 72 (estatuto -> asignacion .)
    PRIVATE         reduce using rule 72 (estatuto -> asignacion .)
    PROTECTED       reduce using rule 72 (estatuto -> asignacion .)
    PRINT           reduce using rule 72 (estatuto -> asignacion .)
    READ            reduce using rule 72 (estatuto -> asignacion .)
    VOID            reduce using rule 72 (estatuto -> asignacion .)
    INT             reduce using rule 72 (estatuto -> asignacion .)
    FLOAT           reduce using rule 72 (estatuto -> asignacion .)
    CHAR            reduce using rule 72 (estatuto -> asignacion .)
    STRING          reduce using rule 72 (estatuto -> asignacion .)
    BOOL            reduce using rule 72 (estatuto -> asignacion .)
    WHILE           reduce using rule 72 (estatuto -> asignacion .)
    RBRACE          reduce using rule 72 (estatuto -> asignacion .)
    RETURN          reduce using rule 72 (estatuto -> asignacion .)


state 28

    (73) estatuto -> escritura .

    VAR             reduce using rule 73 (estatuto -> escritura .)
    PUBLIC          reduce using rule 73 (estatuto -> escritura .)
    IF              reduce using rule 73 (estatuto -> escritura .)
    ID              reduce using rule 73 (estatuto -> escritura .)
    PRIVATE         reduce using rule 73 (estatuto -> escritura .)
    PROTECTED       reduce using rule 73 (estatuto -> escritura .)
    PRINT           reduce using rule 73 (estatuto -> escritura .)
    READ            reduce using rule 73 (estatuto -> escritura .)
    VOID            reduce using rule 73 (estatuto -> escritura .)
    INT             reduce using rule 73 (estatuto -> escritura .)
    FLOAT           reduce using rule 73 (estatuto -> escritura .)
    CHAR            reduce using rule 73 (estatuto -> escritura .)
    STRING          reduce using rule 73 (estatuto -> escritura .)
    BOOL            reduce using rule 73 (estatuto -> escritura .)
    WHILE           reduce using rule 73 (estatuto -> escritura .)
    RBRACE          reduce using rule 73 (estatuto -> escritura .)
    RETURN          reduce using rule 73 (estatuto -> escritura .)


state 29

    (74) estatuto -> llamada_func .

    VAR             reduce using rule 74 (estatuto -> llamada_func .)
    PUBLIC          reduce using rule 74 (estatuto -> llamada_func .)
    IF              reduce using rule 74 (estatuto -> llamada_func .)
    ID              reduce using rule 74 (estatuto -> llamada_func .)
    PRIVATE         reduce using rule 74 (estatuto -> llamada_func .)
    PROTECTED       reduce using rule 74 (estatuto -> llamada_func .)
    PRINT           reduce using rule 74 (estatuto -> llamada_func .)
    READ            reduce using rule 74 (estatuto -> llamada_func .)
    VOID            reduce using rule 74 (estatuto -> llamada_func .)
    INT             reduce using rule 74 (estatuto -> llamada_func .)
    FLOAT           reduce using rule 74 (estatuto -> llamada_func .)
    CHAR            reduce using rule 74 (estatuto -> llamada_func .)
    STRING          reduce using rule 74 (estatuto -> llamada_func .)
    BOOL            reduce using rule 74 (estatuto -> llamada_func .)
    WHILE           reduce using rule 74 (estatuto -> llamada_func .)
    RBRACE          reduce using rule 74 (estatuto -> llamada_func .)
    RETURN          reduce using rule 74 (estatuto -> llamada_func .)


state 30

    (75) estatuto -> objeto_metodo .

    VAR             reduce using rule 75 (estatuto -> objeto_metodo .)
    PUBLIC          reduce using rule 75 (estatuto -> objeto_metodo .)
    IF              reduce using rule 75 (estatuto -> objeto_metodo .)
    ID              reduce using rule 75 (estatuto -> objeto_metodo .)
    PRIVATE         reduce using rule 75 (estatuto -> objeto_metodo .)
    PROTECTED       reduce using rule 75 (estatuto -> objeto_metodo .)
    PRINT           reduce using rule 75 (estatuto -> objeto_metodo .)
    READ            reduce using rule 75 (estatuto -> objeto_metodo .)
    VOID            reduce using rule 75 (estatuto -> objeto_metodo .)
    INT             reduce using rule 75 (estatuto -> objeto_metodo .)
    FLOAT           reduce using rule 75 (estatuto -> objeto_metodo .)
    CHAR            reduce using rule 75 (estatuto -> objeto_metodo .)
    STRING          reduce using rule 75 (estatuto -> objeto_metodo .)
    BOOL            reduce using rule 75 (estatuto -> objeto_metodo .)
    WHILE           reduce using rule 75 (estatuto -> objeto_metodo .)
    RBRACE          reduce using rule 75 (estatuto -> objeto_metodo .)
    RETURN          reduce using rule 75 (estatuto -> objeto_metodo .)


state 31

    (76) estatuto -> lectura .

    VAR             reduce using rule 76 (estatuto -> lectura .)
    PUBLIC          reduce using rule 76 (estatuto -> lectura .)
    IF              reduce using rule 76 (estatuto -> lectura .)
    ID              reduce using rule 76 (estatuto -> lectura .)
    PRIVATE         reduce using rule 76 (estatuto -> lectura .)
    PROTECTED       reduce using rule 76 (estatuto -> lectura .)
    PRINT           reduce using rule 76 (estatuto -> lectura .)
    READ            reduce using rule 76 (estatuto -> lectura .)
    VOID            reduce using rule 76 (estatuto -> lectura .)
    INT             reduce using rule 76 (estatuto -> lectura .)
    FLOAT           reduce using rule 76 (estatuto -> lectura .)
    CHAR            reduce using rule 76 (estatuto -> lectura .)
    STRING          reduce using rule 76 (estatuto -> lectura .)
    BOOL            reduce using rule 76 (estatuto -> lectura .)
    WHILE           reduce using rule 76 (estatuto -> lectura .)
    RBRACE          reduce using rule 76 (estatuto -> lectura .)
    RETURN          reduce using rule 76 (estatuto -> lectura .)


state 32

    (26) condicion -> IF . LPAREN gotoF RPAREN bloque
    (27) condicion -> IF . LPAREN gotoF RPAREN bloque elif

    LPAREN          shift and go to state 61


state 33

    (31) ciclo -> aux_ciclo . WHILE LPAREN gotoF RPAREN bloque

    WHILE           shift and go to state 62


state 34

    (106) asignacion -> objeto_aAcceso . EQUALS exp_cond
    (107) asignacion -> objeto_aAcceso . EQUALS objeto_metodo
    (110) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET EQUALS exp_cond
    (111) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET EQUALS objeto_metodo
    (114) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (115) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo

    EQUALS          shift and go to state 63
    LBRACKET        shift and go to state 64


state 35

    (82) escritura -> PRINT . LPAREN aux3 RPAREN

    LPAREN          shift and go to state 65


state 36

    (117) llamada_func -> llamada_id . llamada_lparen llamada_rparen
    (119) llamada_lparen -> . LPAREN

    LPAREN          shift and go to state 67

    llamada_lparen                 shift and go to state 66

state 37

    (77) lectura -> READ . LPAREN aux4 RPAREN

    LPAREN          shift and go to state 68


state 38

    (4) class -> scope CLASS ID .
    (5) class -> scope CLASS ID . COLON ID

    LBRACE          reduce using rule 4 (class -> scope CLASS ID .)
    COLON           shift and go to state 69


state 39

    (6) context -> LBRACE aux6 RBRACE .

    $end            reduce using rule 6 (context -> LBRACE aux6 RBRACE .)


state 40

    (13) aux6 -> vars aux6 .

    RBRACE          reduce using rule 13 (aux6 -> vars aux6 .)


state 41

    (14) aux6 -> constructor aux6 .

    RBRACE          reduce using rule 14 (aux6 -> constructor aux6 .)


state 42

    (15) aux6 -> funcion aux6 .

    RBRACE          reduce using rule 15 (aux6 -> funcion aux6 .)


state 43

    (16) aux6 -> estatuto aux6 .

    RBRACE          reduce using rule 16 (aux6 -> estatuto aux6 .)


state 44

    (17) aux6 -> condicion aux6 .

    RBRACE          reduce using rule 17 (aux6 -> condicion aux6 .)


state 45

    (18) aux6 -> ciclo aux6 .

    RBRACE          reduce using rule 18 (aux6 -> ciclo aux6 .)


state 46

    (21) aux6 -> sort_p aux6 .

    RBRACE          reduce using rule 21 (aux6 -> sort_p aux6 .)


state 47

    (22) aux6 -> find_p aux6 .

    RBRACE          reduce using rule 22 (aux6 -> find_p aux6 .)


state 48

    (89) vars -> VAR aux2 . COLON tipo_simple
    (90) vars -> VAR aux2 . COLON tipo_compuesto

    COLON           shift and go to state 70


state 49

    (91) vars -> VAR ID . LBRACKET cint RBRACKET COLON tipo_simple
    (92) vars -> VAR ID . LBRACKET cint RBRACKET COLON tipo_compuesto
    (93) vars -> VAR ID . LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (94) vars -> VAR ID . LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (95) aux2 -> ID .
    (96) aux2 -> ID . COMMA aux2

    LBRACKET        shift and go to state 71
    COLON           reduce using rule 95 (aux2 -> ID .)
    COMMA           shift and go to state 72


state 50

    (23) sort_p -> ID PERIOD . SORT LPAREN aux_sort RPAREN
    (25) find_p -> ID PERIOD . FIND LPAREN var RPAREN
    (116) objeto_metodo -> ID PERIOD . llamada_func
    (164) objeto_aAcceso -> ID PERIOD . ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (118) llamada_id -> . ID

    SORT            shift and go to state 74
    FIND            shift and go to state 75
    ID              shift and go to state 73

    llamada_func                   shift and go to state 76
    llamada_id                     shift and go to state 36

state 51

    (102) asignacion -> ID EQUALS . exp_cond
    (103) asignacion -> ID EQUALS . objeto_metodo
    (104) asignacion -> ID EQUALS . ID LBRACKET exp RBRACKET
    (105) asignacion -> ID EQUALS . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (127) exp_cond -> . exp_bool
    (128) exp_cond -> . exp_bool AND exp_cond
    (129) exp_cond -> . exp_bool OR exp_cond
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (130) exp_bool -> . TRUE
    (131) exp_bool -> . FALSE
    (132) exp_bool -> . expresion
    (133) expresion -> . exp
    (134) expresion -> . exp LT expresion
    (135) expresion -> . exp GT expresion
    (136) expresion -> . exp GE expresion
    (137) expresion -> . exp LE expresion
    (138) expresion -> . exp EQ expresion
    (139) expresion -> . exp NE expresion
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    ID              shift and go to state 77
    TRUE            shift and go to state 83
    FALSE           shift and go to state 84
    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    exp_cond                       shift and go to state 78
    objeto_metodo                  shift and go to state 79
    exp                            shift and go to state 80
    exp_bool                       shift and go to state 81
    llamada_func                   shift and go to state 82
    expresion                      shift and go to state 85
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 52

    (108) asignacion -> ID LBRACKET . exp RBRACKET EQUALS exp_cond
    (109) asignacion -> ID LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (112) asignacion -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (113) asignacion -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    exp                            shift and go to state 100
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 53

    (33) constructor -> PUBLIC ID . LPAREN param RPAREN bloque

    LPAREN          shift and go to state 101


state 54

    (35) funcion -> scope type . DEF id LPAREN param aux_param RPAREN contexto_func

    DEF             shift and go to state 102


state 55

    (36) funcion -> scope VOID . DEF id_void LPAREN param aux_param RPAREN contexto_func

    DEF             shift and go to state 103


state 56

    (39) type -> INT .

    DEF             reduce using rule 39 (type -> INT .)


state 57

    (40) type -> FLOAT .

    DEF             reduce using rule 40 (type -> FLOAT .)


state 58

    (41) type -> CHAR .

    DEF             reduce using rule 41 (type -> CHAR .)


state 59

    (42) type -> STRING .

    DEF             reduce using rule 42 (type -> STRING .)


state 60

    (43) type -> BOOL .

    DEF             reduce using rule 43 (type -> BOOL .)


state 61

    (26) condicion -> IF LPAREN . gotoF RPAREN bloque
    (27) condicion -> IF LPAREN . gotoF RPAREN bloque elif
    (126) gotoF -> . exp_cond
    (127) exp_cond -> . exp_bool
    (128) exp_cond -> . exp_bool AND exp_cond
    (129) exp_cond -> . exp_bool OR exp_cond
    (130) exp_bool -> . TRUE
    (131) exp_bool -> . FALSE
    (132) exp_bool -> . expresion
    (133) expresion -> . exp
    (134) expresion -> . exp LT expresion
    (135) expresion -> . exp GT expresion
    (136) expresion -> . exp GE expresion
    (137) expresion -> . exp LE expresion
    (138) expresion -> . exp EQ expresion
    (139) expresion -> . exp NE expresion
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    TRUE            shift and go to state 83
    FALSE           shift and go to state 84
    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    gotoF                          shift and go to state 104
    exp_cond                       shift and go to state 105
    exp_bool                       shift and go to state 81
    expresion                      shift and go to state 85
    exp                            shift and go to state 80
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 62

    (31) ciclo -> aux_ciclo WHILE . LPAREN gotoF RPAREN bloque

    LPAREN          shift and go to state 106


state 63

    (106) asignacion -> objeto_aAcceso EQUALS . exp_cond
    (107) asignacion -> objeto_aAcceso EQUALS . objeto_metodo
    (127) exp_cond -> . exp_bool
    (128) exp_cond -> . exp_bool AND exp_cond
    (129) exp_cond -> . exp_bool OR exp_cond
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (130) exp_bool -> . TRUE
    (131) exp_bool -> . FALSE
    (132) exp_bool -> . expresion
    (133) expresion -> . exp
    (134) expresion -> . exp LT expresion
    (135) expresion -> . exp GT expresion
    (136) expresion -> . exp GE expresion
    (137) expresion -> . exp LE expresion
    (138) expresion -> . exp EQ expresion
    (139) expresion -> . exp NE expresion
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    ID              shift and go to state 109
    TRUE            shift and go to state 83
    FALSE           shift and go to state 84
    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    objeto_aAcceso                 shift and go to state 91
    exp_cond                       shift and go to state 107
    objeto_metodo                  shift and go to state 108
    exp_bool                       shift and go to state 81
    llamada_func                   shift and go to state 82
    expresion                      shift and go to state 85
    exp                            shift and go to state 80
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    var                            shift and go to state 92
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 64

    (110) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET EQUALS exp_cond
    (111) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (114) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (115) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    objeto_aAcceso                 shift and go to state 91
    exp                            shift and go to state 110
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 65

    (82) escritura -> PRINT LPAREN . aux3 RPAREN
    (83) aux3 -> . expresion
    (84) aux3 -> . objeto_metodo
    (85) aux3 -> . CSTRING
    (86) aux3 -> . expresion COMMA aux3
    (87) aux3 -> . objeto_metodo COMMA aux3
    (88) aux3 -> . CSTRING COMMA aux3
    (133) expresion -> . exp
    (134) expresion -> . exp LT expresion
    (135) expresion -> . exp GT expresion
    (136) expresion -> . exp GE expresion
    (137) expresion -> . exp LE expresion
    (138) expresion -> . exp EQ expresion
    (139) expresion -> . exp NE expresion
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    CSTRING         shift and go to state 114
    ID              shift and go to state 109
    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    aux3                           shift and go to state 111
    expresion                      shift and go to state 112
    objeto_metodo                  shift and go to state 113
    exp                            shift and go to state 80
    llamada_func                   shift and go to state 82
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 66

    (117) llamada_func -> llamada_id llamada_lparen . llamada_rparen
    (120) llamada_rparen -> . aux RPAREN
    (121) llamada_rparen -> . RPAREN
    (122) aux -> . exp aux_exp
    (123) aux -> . exp aux_exp aux_comma aux
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    RPAREN          shift and go to state 117
    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    llamada_id                     shift and go to state 36
    llamada_rparen                 shift and go to state 115
    aux                            shift and go to state 116
    exp                            shift and go to state 118
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95

state 67

    (119) llamada_lparen -> LPAREN .

    RPAREN          reduce using rule 119 (llamada_lparen -> LPAREN .)
    LPAREN          reduce using rule 119 (llamada_lparen -> LPAREN .)
    PLUS            reduce using rule 119 (llamada_lparen -> LPAREN .)
    MINUS           reduce using rule 119 (llamada_lparen -> LPAREN .)
    ID              reduce using rule 119 (llamada_lparen -> LPAREN .)
    CINT            reduce using rule 119 (llamada_lparen -> LPAREN .)
    NUMBER          reduce using rule 119 (llamada_lparen -> LPAREN .)
    CCHAR           reduce using rule 119 (llamada_lparen -> LPAREN .)


state 68

    (77) lectura -> READ LPAREN . aux4 RPAREN
    (78) aux4 -> . ID
    (79) aux4 -> . objeto_aAcceso
    (80) aux4 -> . ID COMMA aux4
    (81) aux4 -> . objeto_aAcceso COMMA aux4
    (164) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 120

    aux4                           shift and go to state 119
    objeto_aAcceso                 shift and go to state 121

state 69

    (5) class -> scope CLASS ID COLON . ID

    ID              shift and go to state 122


state 70

    (89) vars -> VAR aux2 COLON . tipo_simple
    (90) vars -> VAR aux2 COLON . tipo_compuesto
    (97) tipo_simple -> . INT
    (98) tipo_simple -> . FLOAT
    (99) tipo_simple -> . CHAR
    (100) tipo_simple -> . BOOL
    (101) tipo_compuesto -> . ID

    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    CHAR            shift and go to state 127
    BOOL            shift and go to state 128
    ID              shift and go to state 129

    tipo_simple                    shift and go to state 123
    tipo_compuesto                 shift and go to state 124

state 71

    (91) vars -> VAR ID LBRACKET . cint RBRACKET COLON tipo_simple
    (92) vars -> VAR ID LBRACKET . cint RBRACKET COLON tipo_compuesto
    (93) vars -> VAR ID LBRACKET . cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (94) vars -> VAR ID LBRACKET . cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (161) cint -> . CINT

    CINT            shift and go to state 96

    cint                           shift and go to state 130

state 72

    (96) aux2 -> ID COMMA . aux2
    (95) aux2 -> . ID
    (96) aux2 -> . ID COMMA aux2

    ID              shift and go to state 131

    aux2                           shift and go to state 132

state 73

    (164) objeto_aAcceso -> ID PERIOD ID .
    (118) llamada_id -> ID .

    EQUALS          reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    LBRACKET        reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    TIMES           reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    DIVIDE          reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    MODULO          reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    LT              reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    GT              reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    GE              reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    LE              reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    EQ              reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    NE              reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    PLUS            reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    MINUS           reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    AND             reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    OR              reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    VAR             reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    PUBLIC          reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    IF              reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    ID              reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    PRIVATE         reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    PROTECTED       reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    PRINT           reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    READ            reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    VOID            reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    INT             reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    FLOAT           reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    CHAR            reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    STRING          reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    BOOL            reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    WHILE           reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACE          reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    RETURN          reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    COMMA           reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    RPAREN          reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    LPAREN          reduce using rule 118 (llamada_id -> ID .)


state 74

    (23) sort_p -> ID PERIOD SORT . LPAREN aux_sort RPAREN

    LPAREN          shift and go to state 133


state 75

    (25) find_p -> ID PERIOD FIND . LPAREN var RPAREN

    LPAREN          shift and go to state 134


state 76

    (116) objeto_metodo -> ID PERIOD llamada_func .

    VAR             reduce using rule 116 (objeto_metodo -> ID PERIOD llamada_func .)
    PUBLIC          reduce using rule 116 (objeto_metodo -> ID PERIOD llamada_func .)
    IF              reduce using rule 116 (objeto_metodo -> ID PERIOD llamada_func .)
    ID              reduce using rule 116 (objeto_metodo -> ID PERIOD llamada_func .)
    PRIVATE         reduce using rule 116 (objeto_metodo -> ID PERIOD llamada_func .)
    PROTECTED       reduce using rule 116 (objeto_metodo -> ID PERIOD llamada_func .)
    PRINT           reduce using rule 116 (objeto_metodo -> ID PERIOD llamada_func .)
    READ            reduce using rule 116 (objeto_metodo -> ID PERIOD llamada_func .)
    VOID            reduce using rule 116 (objeto_metodo -> ID PERIOD llamada_func .)
    INT             reduce using rule 116 (objeto_metodo -> ID PERIOD llamada_func .)
    FLOAT           reduce using rule 116 (objeto_metodo -> ID PERIOD llamada_func .)
    CHAR            reduce using rule 116 (objeto_metodo -> ID PERIOD llamada_func .)
    STRING          reduce using rule 116 (objeto_metodo -> ID PERIOD llamada_func .)
    BOOL            reduce using rule 116 (objeto_metodo -> ID PERIOD llamada_func .)
    WHILE           reduce using rule 116 (objeto_metodo -> ID PERIOD llamada_func .)
    RBRACE          reduce using rule 116 (objeto_metodo -> ID PERIOD llamada_func .)
    RETURN          reduce using rule 116 (objeto_metodo -> ID PERIOD llamada_func .)
    COMMA           reduce using rule 116 (objeto_metodo -> ID PERIOD llamada_func .)
    RPAREN          reduce using rule 116 (objeto_metodo -> ID PERIOD llamada_func .)


state 77

    (104) asignacion -> ID EQUALS ID . LBRACKET exp RBRACKET
    (105) asignacion -> ID EQUALS ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (116) objeto_metodo -> ID . PERIOD llamada_func
    (155) var -> ID .
    (159) var -> ID . LBRACKET exp RBRACKET
    (160) var -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> ID . PERIOD ID
    (118) llamada_id -> ID .

    LBRACKET        shift and go to state 135
    PERIOD          shift and go to state 136
    TIMES           reduce using rule 155 (var -> ID .)
    DIVIDE          reduce using rule 155 (var -> ID .)
    MODULO          reduce using rule 155 (var -> ID .)
    LT              reduce using rule 155 (var -> ID .)
    GT              reduce using rule 155 (var -> ID .)
    GE              reduce using rule 155 (var -> ID .)
    LE              reduce using rule 155 (var -> ID .)
    EQ              reduce using rule 155 (var -> ID .)
    NE              reduce using rule 155 (var -> ID .)
    PLUS            reduce using rule 155 (var -> ID .)
    MINUS           reduce using rule 155 (var -> ID .)
    AND             reduce using rule 155 (var -> ID .)
    OR              reduce using rule 155 (var -> ID .)
    VAR             reduce using rule 155 (var -> ID .)
    PUBLIC          reduce using rule 155 (var -> ID .)
    IF              reduce using rule 155 (var -> ID .)
    ID              reduce using rule 155 (var -> ID .)
    PRIVATE         reduce using rule 155 (var -> ID .)
    PROTECTED       reduce using rule 155 (var -> ID .)
    PRINT           reduce using rule 155 (var -> ID .)
    READ            reduce using rule 155 (var -> ID .)
    VOID            reduce using rule 155 (var -> ID .)
    INT             reduce using rule 155 (var -> ID .)
    FLOAT           reduce using rule 155 (var -> ID .)
    CHAR            reduce using rule 155 (var -> ID .)
    STRING          reduce using rule 155 (var -> ID .)
    BOOL            reduce using rule 155 (var -> ID .)
    WHILE           reduce using rule 155 (var -> ID .)
    RBRACE          reduce using rule 155 (var -> ID .)
    RETURN          reduce using rule 155 (var -> ID .)
    LPAREN          reduce using rule 118 (llamada_id -> ID .)


state 78

    (102) asignacion -> ID EQUALS exp_cond .

    VAR             reduce using rule 102 (asignacion -> ID EQUALS exp_cond .)
    PUBLIC          reduce using rule 102 (asignacion -> ID EQUALS exp_cond .)
    IF              reduce using rule 102 (asignacion -> ID EQUALS exp_cond .)
    ID              reduce using rule 102 (asignacion -> ID EQUALS exp_cond .)
    PRIVATE         reduce using rule 102 (asignacion -> ID EQUALS exp_cond .)
    PROTECTED       reduce using rule 102 (asignacion -> ID EQUALS exp_cond .)
    PRINT           reduce using rule 102 (asignacion -> ID EQUALS exp_cond .)
    READ            reduce using rule 102 (asignacion -> ID EQUALS exp_cond .)
    VOID            reduce using rule 102 (asignacion -> ID EQUALS exp_cond .)
    INT             reduce using rule 102 (asignacion -> ID EQUALS exp_cond .)
    FLOAT           reduce using rule 102 (asignacion -> ID EQUALS exp_cond .)
    CHAR            reduce using rule 102 (asignacion -> ID EQUALS exp_cond .)
    STRING          reduce using rule 102 (asignacion -> ID EQUALS exp_cond .)
    BOOL            reduce using rule 102 (asignacion -> ID EQUALS exp_cond .)
    WHILE           reduce using rule 102 (asignacion -> ID EQUALS exp_cond .)
    RBRACE          reduce using rule 102 (asignacion -> ID EQUALS exp_cond .)
    RETURN          reduce using rule 102 (asignacion -> ID EQUALS exp_cond .)


state 79

    (103) asignacion -> ID EQUALS objeto_metodo .

    VAR             reduce using rule 103 (asignacion -> ID EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 103 (asignacion -> ID EQUALS objeto_metodo .)
    IF              reduce using rule 103 (asignacion -> ID EQUALS objeto_metodo .)
    ID              reduce using rule 103 (asignacion -> ID EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 103 (asignacion -> ID EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 103 (asignacion -> ID EQUALS objeto_metodo .)
    PRINT           reduce using rule 103 (asignacion -> ID EQUALS objeto_metodo .)
    READ            reduce using rule 103 (asignacion -> ID EQUALS objeto_metodo .)
    VOID            reduce using rule 103 (asignacion -> ID EQUALS objeto_metodo .)
    INT             reduce using rule 103 (asignacion -> ID EQUALS objeto_metodo .)
    FLOAT           reduce using rule 103 (asignacion -> ID EQUALS objeto_metodo .)
    CHAR            reduce using rule 103 (asignacion -> ID EQUALS objeto_metodo .)
    STRING          reduce using rule 103 (asignacion -> ID EQUALS objeto_metodo .)
    BOOL            reduce using rule 103 (asignacion -> ID EQUALS objeto_metodo .)
    WHILE           reduce using rule 103 (asignacion -> ID EQUALS objeto_metodo .)
    RBRACE          reduce using rule 103 (asignacion -> ID EQUALS objeto_metodo .)
    RETURN          reduce using rule 103 (asignacion -> ID EQUALS objeto_metodo .)


state 80

    (133) expresion -> exp .
    (134) expresion -> exp . LT expresion
    (135) expresion -> exp . GT expresion
    (136) expresion -> exp . GE expresion
    (137) expresion -> exp . LE expresion
    (138) expresion -> exp . EQ expresion
    (139) expresion -> exp . NE expresion
    (141) exp -> exp . PLUS termino
    (142) exp -> exp . MINUS termino

    AND             reduce using rule 133 (expresion -> exp .)
    OR              reduce using rule 133 (expresion -> exp .)
    VAR             reduce using rule 133 (expresion -> exp .)
    PUBLIC          reduce using rule 133 (expresion -> exp .)
    IF              reduce using rule 133 (expresion -> exp .)
    ID              reduce using rule 133 (expresion -> exp .)
    PRIVATE         reduce using rule 133 (expresion -> exp .)
    PROTECTED       reduce using rule 133 (expresion -> exp .)
    PRINT           reduce using rule 133 (expresion -> exp .)
    READ            reduce using rule 133 (expresion -> exp .)
    VOID            reduce using rule 133 (expresion -> exp .)
    INT             reduce using rule 133 (expresion -> exp .)
    FLOAT           reduce using rule 133 (expresion -> exp .)
    CHAR            reduce using rule 133 (expresion -> exp .)
    STRING          reduce using rule 133 (expresion -> exp .)
    BOOL            reduce using rule 133 (expresion -> exp .)
    WHILE           reduce using rule 133 (expresion -> exp .)
    RBRACE          reduce using rule 133 (expresion -> exp .)
    RETURN          reduce using rule 133 (expresion -> exp .)
    RPAREN          reduce using rule 133 (expresion -> exp .)
    COMMA           reduce using rule 133 (expresion -> exp .)
    LT              shift and go to state 137
    GT              shift and go to state 138
    GE              shift and go to state 139
    LE              shift and go to state 140
    EQ              shift and go to state 141
    NE              shift and go to state 142
    PLUS            shift and go to state 143
    MINUS           shift and go to state 144


state 81

    (127) exp_cond -> exp_bool .
    (128) exp_cond -> exp_bool . AND exp_cond
    (129) exp_cond -> exp_bool . OR exp_cond

    VAR             reduce using rule 127 (exp_cond -> exp_bool .)
    PUBLIC          reduce using rule 127 (exp_cond -> exp_bool .)
    IF              reduce using rule 127 (exp_cond -> exp_bool .)
    ID              reduce using rule 127 (exp_cond -> exp_bool .)
    PRIVATE         reduce using rule 127 (exp_cond -> exp_bool .)
    PROTECTED       reduce using rule 127 (exp_cond -> exp_bool .)
    PRINT           reduce using rule 127 (exp_cond -> exp_bool .)
    READ            reduce using rule 127 (exp_cond -> exp_bool .)
    VOID            reduce using rule 127 (exp_cond -> exp_bool .)
    INT             reduce using rule 127 (exp_cond -> exp_bool .)
    FLOAT           reduce using rule 127 (exp_cond -> exp_bool .)
    CHAR            reduce using rule 127 (exp_cond -> exp_bool .)
    STRING          reduce using rule 127 (exp_cond -> exp_bool .)
    BOOL            reduce using rule 127 (exp_cond -> exp_bool .)
    WHILE           reduce using rule 127 (exp_cond -> exp_bool .)
    RBRACE          reduce using rule 127 (exp_cond -> exp_bool .)
    RETURN          reduce using rule 127 (exp_cond -> exp_bool .)
    RPAREN          reduce using rule 127 (exp_cond -> exp_bool .)
    AND             shift and go to state 145
    OR              shift and go to state 146


state 82

    (154) factor -> llamada_func .

    TIMES           reduce using rule 154 (factor -> llamada_func .)
    DIVIDE          reduce using rule 154 (factor -> llamada_func .)
    MODULO          reduce using rule 154 (factor -> llamada_func .)
    LT              reduce using rule 154 (factor -> llamada_func .)
    GT              reduce using rule 154 (factor -> llamada_func .)
    GE              reduce using rule 154 (factor -> llamada_func .)
    LE              reduce using rule 154 (factor -> llamada_func .)
    EQ              reduce using rule 154 (factor -> llamada_func .)
    NE              reduce using rule 154 (factor -> llamada_func .)
    PLUS            reduce using rule 154 (factor -> llamada_func .)
    MINUS           reduce using rule 154 (factor -> llamada_func .)
    AND             reduce using rule 154 (factor -> llamada_func .)
    OR              reduce using rule 154 (factor -> llamada_func .)
    VAR             reduce using rule 154 (factor -> llamada_func .)
    PUBLIC          reduce using rule 154 (factor -> llamada_func .)
    IF              reduce using rule 154 (factor -> llamada_func .)
    ID              reduce using rule 154 (factor -> llamada_func .)
    PRIVATE         reduce using rule 154 (factor -> llamada_func .)
    PROTECTED       reduce using rule 154 (factor -> llamada_func .)
    PRINT           reduce using rule 154 (factor -> llamada_func .)
    READ            reduce using rule 154 (factor -> llamada_func .)
    VOID            reduce using rule 154 (factor -> llamada_func .)
    INT             reduce using rule 154 (factor -> llamada_func .)
    FLOAT           reduce using rule 154 (factor -> llamada_func .)
    CHAR            reduce using rule 154 (factor -> llamada_func .)
    STRING          reduce using rule 154 (factor -> llamada_func .)
    BOOL            reduce using rule 154 (factor -> llamada_func .)
    WHILE           reduce using rule 154 (factor -> llamada_func .)
    RBRACE          reduce using rule 154 (factor -> llamada_func .)
    RETURN          reduce using rule 154 (factor -> llamada_func .)
    RBRACKET        reduce using rule 154 (factor -> llamada_func .)
    RPAREN          reduce using rule 154 (factor -> llamada_func .)
    COMMA           reduce using rule 154 (factor -> llamada_func .)


state 83

    (130) exp_bool -> TRUE .

    AND             reduce using rule 130 (exp_bool -> TRUE .)
    OR              reduce using rule 130 (exp_bool -> TRUE .)
    VAR             reduce using rule 130 (exp_bool -> TRUE .)
    PUBLIC          reduce using rule 130 (exp_bool -> TRUE .)
    IF              reduce using rule 130 (exp_bool -> TRUE .)
    ID              reduce using rule 130 (exp_bool -> TRUE .)
    PRIVATE         reduce using rule 130 (exp_bool -> TRUE .)
    PROTECTED       reduce using rule 130 (exp_bool -> TRUE .)
    PRINT           reduce using rule 130 (exp_bool -> TRUE .)
    READ            reduce using rule 130 (exp_bool -> TRUE .)
    VOID            reduce using rule 130 (exp_bool -> TRUE .)
    INT             reduce using rule 130 (exp_bool -> TRUE .)
    FLOAT           reduce using rule 130 (exp_bool -> TRUE .)
    CHAR            reduce using rule 130 (exp_bool -> TRUE .)
    STRING          reduce using rule 130 (exp_bool -> TRUE .)
    BOOL            reduce using rule 130 (exp_bool -> TRUE .)
    WHILE           reduce using rule 130 (exp_bool -> TRUE .)
    RBRACE          reduce using rule 130 (exp_bool -> TRUE .)
    RETURN          reduce using rule 130 (exp_bool -> TRUE .)
    RPAREN          reduce using rule 130 (exp_bool -> TRUE .)


state 84

    (131) exp_bool -> FALSE .

    AND             reduce using rule 131 (exp_bool -> FALSE .)
    OR              reduce using rule 131 (exp_bool -> FALSE .)
    VAR             reduce using rule 131 (exp_bool -> FALSE .)
    PUBLIC          reduce using rule 131 (exp_bool -> FALSE .)
    IF              reduce using rule 131 (exp_bool -> FALSE .)
    ID              reduce using rule 131 (exp_bool -> FALSE .)
    PRIVATE         reduce using rule 131 (exp_bool -> FALSE .)
    PROTECTED       reduce using rule 131 (exp_bool -> FALSE .)
    PRINT           reduce using rule 131 (exp_bool -> FALSE .)
    READ            reduce using rule 131 (exp_bool -> FALSE .)
    VOID            reduce using rule 131 (exp_bool -> FALSE .)
    INT             reduce using rule 131 (exp_bool -> FALSE .)
    FLOAT           reduce using rule 131 (exp_bool -> FALSE .)
    CHAR            reduce using rule 131 (exp_bool -> FALSE .)
    STRING          reduce using rule 131 (exp_bool -> FALSE .)
    BOOL            reduce using rule 131 (exp_bool -> FALSE .)
    WHILE           reduce using rule 131 (exp_bool -> FALSE .)
    RBRACE          reduce using rule 131 (exp_bool -> FALSE .)
    RETURN          reduce using rule 131 (exp_bool -> FALSE .)
    RPAREN          reduce using rule 131 (exp_bool -> FALSE .)


state 85

    (132) exp_bool -> expresion .

    AND             reduce using rule 132 (exp_bool -> expresion .)
    OR              reduce using rule 132 (exp_bool -> expresion .)
    VAR             reduce using rule 132 (exp_bool -> expresion .)
    PUBLIC          reduce using rule 132 (exp_bool -> expresion .)
    IF              reduce using rule 132 (exp_bool -> expresion .)
    ID              reduce using rule 132 (exp_bool -> expresion .)
    PRIVATE         reduce using rule 132 (exp_bool -> expresion .)
    PROTECTED       reduce using rule 132 (exp_bool -> expresion .)
    PRINT           reduce using rule 132 (exp_bool -> expresion .)
    READ            reduce using rule 132 (exp_bool -> expresion .)
    VOID            reduce using rule 132 (exp_bool -> expresion .)
    INT             reduce using rule 132 (exp_bool -> expresion .)
    FLOAT           reduce using rule 132 (exp_bool -> expresion .)
    CHAR            reduce using rule 132 (exp_bool -> expresion .)
    STRING          reduce using rule 132 (exp_bool -> expresion .)
    BOOL            reduce using rule 132 (exp_bool -> expresion .)
    WHILE           reduce using rule 132 (exp_bool -> expresion .)
    RBRACE          reduce using rule 132 (exp_bool -> expresion .)
    RETURN          reduce using rule 132 (exp_bool -> expresion .)
    RPAREN          reduce using rule 132 (exp_bool -> expresion .)


state 86

    (140) exp -> termino .
    (144) termino -> termino . TIMES factor
    (145) termino -> termino . DIVIDE factor
    (146) termino -> termino . MODULO factor

    LT              reduce using rule 140 (exp -> termino .)
    GT              reduce using rule 140 (exp -> termino .)
    GE              reduce using rule 140 (exp -> termino .)
    LE              reduce using rule 140 (exp -> termino .)
    EQ              reduce using rule 140 (exp -> termino .)
    NE              reduce using rule 140 (exp -> termino .)
    PLUS            reduce using rule 140 (exp -> termino .)
    MINUS           reduce using rule 140 (exp -> termino .)
    AND             reduce using rule 140 (exp -> termino .)
    OR              reduce using rule 140 (exp -> termino .)
    VAR             reduce using rule 140 (exp -> termino .)
    PUBLIC          reduce using rule 140 (exp -> termino .)
    IF              reduce using rule 140 (exp -> termino .)
    ID              reduce using rule 140 (exp -> termino .)
    PRIVATE         reduce using rule 140 (exp -> termino .)
    PROTECTED       reduce using rule 140 (exp -> termino .)
    PRINT           reduce using rule 140 (exp -> termino .)
    READ            reduce using rule 140 (exp -> termino .)
    VOID            reduce using rule 140 (exp -> termino .)
    INT             reduce using rule 140 (exp -> termino .)
    FLOAT           reduce using rule 140 (exp -> termino .)
    CHAR            reduce using rule 140 (exp -> termino .)
    STRING          reduce using rule 140 (exp -> termino .)
    BOOL            reduce using rule 140 (exp -> termino .)
    WHILE           reduce using rule 140 (exp -> termino .)
    RBRACE          reduce using rule 140 (exp -> termino .)
    RETURN          reduce using rule 140 (exp -> termino .)
    RBRACKET        reduce using rule 140 (exp -> termino .)
    RPAREN          reduce using rule 140 (exp -> termino .)
    COMMA           reduce using rule 140 (exp -> termino .)
    TIMES           shift and go to state 147
    DIVIDE          shift and go to state 148
    MODULO          shift and go to state 149


state 87

    (148) factor -> PLUS . objeto_aAcceso
    (150) factor -> PLUS . var
    (164) objeto_aAcceso -> . ID PERIOD ID
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR

    ID              shift and go to state 152
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    objeto_aAcceso                 shift and go to state 150
    var                            shift and go to state 151
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95

state 88

    (149) factor -> MINUS . objeto_aAcceso
    (151) factor -> MINUS . var
    (164) objeto_aAcceso -> . ID PERIOD ID
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR

    ID              shift and go to state 152
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    objeto_aAcceso                 shift and go to state 153
    var                            shift and go to state 154
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95

state 89

    (143) termino -> factor .

    TIMES           reduce using rule 143 (termino -> factor .)
    DIVIDE          reduce using rule 143 (termino -> factor .)
    MODULO          reduce using rule 143 (termino -> factor .)
    LT              reduce using rule 143 (termino -> factor .)
    GT              reduce using rule 143 (termino -> factor .)
    GE              reduce using rule 143 (termino -> factor .)
    LE              reduce using rule 143 (termino -> factor .)
    EQ              reduce using rule 143 (termino -> factor .)
    NE              reduce using rule 143 (termino -> factor .)
    PLUS            reduce using rule 143 (termino -> factor .)
    MINUS           reduce using rule 143 (termino -> factor .)
    AND             reduce using rule 143 (termino -> factor .)
    OR              reduce using rule 143 (termino -> factor .)
    VAR             reduce using rule 143 (termino -> factor .)
    PUBLIC          reduce using rule 143 (termino -> factor .)
    IF              reduce using rule 143 (termino -> factor .)
    ID              reduce using rule 143 (termino -> factor .)
    PRIVATE         reduce using rule 143 (termino -> factor .)
    PROTECTED       reduce using rule 143 (termino -> factor .)
    PRINT           reduce using rule 143 (termino -> factor .)
    READ            reduce using rule 143 (termino -> factor .)
    VOID            reduce using rule 143 (termino -> factor .)
    INT             reduce using rule 143 (termino -> factor .)
    FLOAT           reduce using rule 143 (termino -> factor .)
    CHAR            reduce using rule 143 (termino -> factor .)
    STRING          reduce using rule 143 (termino -> factor .)
    BOOL            reduce using rule 143 (termino -> factor .)
    WHILE           reduce using rule 143 (termino -> factor .)
    RBRACE          reduce using rule 143 (termino -> factor .)
    RETURN          reduce using rule 143 (termino -> factor .)
    RBRACKET        reduce using rule 143 (termino -> factor .)
    RPAREN          reduce using rule 143 (termino -> factor .)
    COMMA           reduce using rule 143 (termino -> factor .)


state 90

    (147) factor -> LPAREN . exp_cond RPAREN
    (127) exp_cond -> . exp_bool
    (128) exp_cond -> . exp_bool AND exp_cond
    (129) exp_cond -> . exp_bool OR exp_cond
    (130) exp_bool -> . TRUE
    (131) exp_bool -> . FALSE
    (132) exp_bool -> . expresion
    (133) expresion -> . exp
    (134) expresion -> . exp LT expresion
    (135) expresion -> . exp GT expresion
    (136) expresion -> . exp GE expresion
    (137) expresion -> . exp LE expresion
    (138) expresion -> . exp EQ expresion
    (139) expresion -> . exp NE expresion
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    TRUE            shift and go to state 83
    FALSE           shift and go to state 84
    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    exp_cond                       shift and go to state 155
    exp_bool                       shift and go to state 81
    expresion                      shift and go to state 85
    exp                            shift and go to state 80
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 91

    (153) factor -> objeto_aAcceso .

    TIMES           reduce using rule 153 (factor -> objeto_aAcceso .)
    DIVIDE          reduce using rule 153 (factor -> objeto_aAcceso .)
    MODULO          reduce using rule 153 (factor -> objeto_aAcceso .)
    LT              reduce using rule 153 (factor -> objeto_aAcceso .)
    GT              reduce using rule 153 (factor -> objeto_aAcceso .)
    GE              reduce using rule 153 (factor -> objeto_aAcceso .)
    LE              reduce using rule 153 (factor -> objeto_aAcceso .)
    EQ              reduce using rule 153 (factor -> objeto_aAcceso .)
    NE              reduce using rule 153 (factor -> objeto_aAcceso .)
    PLUS            reduce using rule 153 (factor -> objeto_aAcceso .)
    MINUS           reduce using rule 153 (factor -> objeto_aAcceso .)
    AND             reduce using rule 153 (factor -> objeto_aAcceso .)
    OR              reduce using rule 153 (factor -> objeto_aAcceso .)
    VAR             reduce using rule 153 (factor -> objeto_aAcceso .)
    PUBLIC          reduce using rule 153 (factor -> objeto_aAcceso .)
    IF              reduce using rule 153 (factor -> objeto_aAcceso .)
    ID              reduce using rule 153 (factor -> objeto_aAcceso .)
    PRIVATE         reduce using rule 153 (factor -> objeto_aAcceso .)
    PROTECTED       reduce using rule 153 (factor -> objeto_aAcceso .)
    PRINT           reduce using rule 153 (factor -> objeto_aAcceso .)
    READ            reduce using rule 153 (factor -> objeto_aAcceso .)
    VOID            reduce using rule 153 (factor -> objeto_aAcceso .)
    INT             reduce using rule 153 (factor -> objeto_aAcceso .)
    FLOAT           reduce using rule 153 (factor -> objeto_aAcceso .)
    CHAR            reduce using rule 153 (factor -> objeto_aAcceso .)
    STRING          reduce using rule 153 (factor -> objeto_aAcceso .)
    BOOL            reduce using rule 153 (factor -> objeto_aAcceso .)
    WHILE           reduce using rule 153 (factor -> objeto_aAcceso .)
    RBRACE          reduce using rule 153 (factor -> objeto_aAcceso .)
    RETURN          reduce using rule 153 (factor -> objeto_aAcceso .)
    RBRACKET        reduce using rule 153 (factor -> objeto_aAcceso .)
    RPAREN          reduce using rule 153 (factor -> objeto_aAcceso .)
    COMMA           reduce using rule 153 (factor -> objeto_aAcceso .)


state 92

    (152) factor -> var .

    TIMES           reduce using rule 152 (factor -> var .)
    DIVIDE          reduce using rule 152 (factor -> var .)
    MODULO          reduce using rule 152 (factor -> var .)
    LT              reduce using rule 152 (factor -> var .)
    GT              reduce using rule 152 (factor -> var .)
    GE              reduce using rule 152 (factor -> var .)
    LE              reduce using rule 152 (factor -> var .)
    EQ              reduce using rule 152 (factor -> var .)
    NE              reduce using rule 152 (factor -> var .)
    PLUS            reduce using rule 152 (factor -> var .)
    MINUS           reduce using rule 152 (factor -> var .)
    AND             reduce using rule 152 (factor -> var .)
    OR              reduce using rule 152 (factor -> var .)
    VAR             reduce using rule 152 (factor -> var .)
    PUBLIC          reduce using rule 152 (factor -> var .)
    IF              reduce using rule 152 (factor -> var .)
    ID              reduce using rule 152 (factor -> var .)
    PRIVATE         reduce using rule 152 (factor -> var .)
    PROTECTED       reduce using rule 152 (factor -> var .)
    PRINT           reduce using rule 152 (factor -> var .)
    READ            reduce using rule 152 (factor -> var .)
    VOID            reduce using rule 152 (factor -> var .)
    INT             reduce using rule 152 (factor -> var .)
    FLOAT           reduce using rule 152 (factor -> var .)
    CHAR            reduce using rule 152 (factor -> var .)
    STRING          reduce using rule 152 (factor -> var .)
    BOOL            reduce using rule 152 (factor -> var .)
    WHILE           reduce using rule 152 (factor -> var .)
    RBRACE          reduce using rule 152 (factor -> var .)
    RETURN          reduce using rule 152 (factor -> var .)
    RBRACKET        reduce using rule 152 (factor -> var .)
    RPAREN          reduce using rule 152 (factor -> var .)
    COMMA           reduce using rule 152 (factor -> var .)


state 93

    (156) var -> cint .

    TIMES           reduce using rule 156 (var -> cint .)
    DIVIDE          reduce using rule 156 (var -> cint .)
    MODULO          reduce using rule 156 (var -> cint .)
    LT              reduce using rule 156 (var -> cint .)
    GT              reduce using rule 156 (var -> cint .)
    GE              reduce using rule 156 (var -> cint .)
    LE              reduce using rule 156 (var -> cint .)
    EQ              reduce using rule 156 (var -> cint .)
    NE              reduce using rule 156 (var -> cint .)
    PLUS            reduce using rule 156 (var -> cint .)
    MINUS           reduce using rule 156 (var -> cint .)
    AND             reduce using rule 156 (var -> cint .)
    OR              reduce using rule 156 (var -> cint .)
    VAR             reduce using rule 156 (var -> cint .)
    PUBLIC          reduce using rule 156 (var -> cint .)
    IF              reduce using rule 156 (var -> cint .)
    ID              reduce using rule 156 (var -> cint .)
    PRIVATE         reduce using rule 156 (var -> cint .)
    PROTECTED       reduce using rule 156 (var -> cint .)
    PRINT           reduce using rule 156 (var -> cint .)
    READ            reduce using rule 156 (var -> cint .)
    VOID            reduce using rule 156 (var -> cint .)
    INT             reduce using rule 156 (var -> cint .)
    FLOAT           reduce using rule 156 (var -> cint .)
    CHAR            reduce using rule 156 (var -> cint .)
    STRING          reduce using rule 156 (var -> cint .)
    BOOL            reduce using rule 156 (var -> cint .)
    WHILE           reduce using rule 156 (var -> cint .)
    RBRACE          reduce using rule 156 (var -> cint .)
    RETURN          reduce using rule 156 (var -> cint .)
    RBRACKET        reduce using rule 156 (var -> cint .)
    RPAREN          reduce using rule 156 (var -> cint .)
    COMMA           reduce using rule 156 (var -> cint .)


state 94

    (157) var -> cfloat .

    TIMES           reduce using rule 157 (var -> cfloat .)
    DIVIDE          reduce using rule 157 (var -> cfloat .)
    MODULO          reduce using rule 157 (var -> cfloat .)
    LT              reduce using rule 157 (var -> cfloat .)
    GT              reduce using rule 157 (var -> cfloat .)
    GE              reduce using rule 157 (var -> cfloat .)
    LE              reduce using rule 157 (var -> cfloat .)
    EQ              reduce using rule 157 (var -> cfloat .)
    NE              reduce using rule 157 (var -> cfloat .)
    PLUS            reduce using rule 157 (var -> cfloat .)
    MINUS           reduce using rule 157 (var -> cfloat .)
    AND             reduce using rule 157 (var -> cfloat .)
    OR              reduce using rule 157 (var -> cfloat .)
    VAR             reduce using rule 157 (var -> cfloat .)
    PUBLIC          reduce using rule 157 (var -> cfloat .)
    IF              reduce using rule 157 (var -> cfloat .)
    ID              reduce using rule 157 (var -> cfloat .)
    PRIVATE         reduce using rule 157 (var -> cfloat .)
    PROTECTED       reduce using rule 157 (var -> cfloat .)
    PRINT           reduce using rule 157 (var -> cfloat .)
    READ            reduce using rule 157 (var -> cfloat .)
    VOID            reduce using rule 157 (var -> cfloat .)
    INT             reduce using rule 157 (var -> cfloat .)
    FLOAT           reduce using rule 157 (var -> cfloat .)
    CHAR            reduce using rule 157 (var -> cfloat .)
    STRING          reduce using rule 157 (var -> cfloat .)
    BOOL            reduce using rule 157 (var -> cfloat .)
    WHILE           reduce using rule 157 (var -> cfloat .)
    RBRACE          reduce using rule 157 (var -> cfloat .)
    RETURN          reduce using rule 157 (var -> cfloat .)
    RBRACKET        reduce using rule 157 (var -> cfloat .)
    RPAREN          reduce using rule 157 (var -> cfloat .)
    COMMA           reduce using rule 157 (var -> cfloat .)


state 95

    (158) var -> cchar .

    TIMES           reduce using rule 158 (var -> cchar .)
    DIVIDE          reduce using rule 158 (var -> cchar .)
    MODULO          reduce using rule 158 (var -> cchar .)
    LT              reduce using rule 158 (var -> cchar .)
    GT              reduce using rule 158 (var -> cchar .)
    GE              reduce using rule 158 (var -> cchar .)
    LE              reduce using rule 158 (var -> cchar .)
    EQ              reduce using rule 158 (var -> cchar .)
    NE              reduce using rule 158 (var -> cchar .)
    PLUS            reduce using rule 158 (var -> cchar .)
    MINUS           reduce using rule 158 (var -> cchar .)
    AND             reduce using rule 158 (var -> cchar .)
    OR              reduce using rule 158 (var -> cchar .)
    VAR             reduce using rule 158 (var -> cchar .)
    PUBLIC          reduce using rule 158 (var -> cchar .)
    IF              reduce using rule 158 (var -> cchar .)
    ID              reduce using rule 158 (var -> cchar .)
    PRIVATE         reduce using rule 158 (var -> cchar .)
    PROTECTED       reduce using rule 158 (var -> cchar .)
    PRINT           reduce using rule 158 (var -> cchar .)
    READ            reduce using rule 158 (var -> cchar .)
    VOID            reduce using rule 158 (var -> cchar .)
    INT             reduce using rule 158 (var -> cchar .)
    FLOAT           reduce using rule 158 (var -> cchar .)
    CHAR            reduce using rule 158 (var -> cchar .)
    STRING          reduce using rule 158 (var -> cchar .)
    BOOL            reduce using rule 158 (var -> cchar .)
    WHILE           reduce using rule 158 (var -> cchar .)
    RBRACE          reduce using rule 158 (var -> cchar .)
    RETURN          reduce using rule 158 (var -> cchar .)
    RBRACKET        reduce using rule 158 (var -> cchar .)
    RPAREN          reduce using rule 158 (var -> cchar .)
    COMMA           reduce using rule 158 (var -> cchar .)


state 96

    (161) cint -> CINT .

    TIMES           reduce using rule 161 (cint -> CINT .)
    DIVIDE          reduce using rule 161 (cint -> CINT .)
    MODULO          reduce using rule 161 (cint -> CINT .)
    LT              reduce using rule 161 (cint -> CINT .)
    GT              reduce using rule 161 (cint -> CINT .)
    GE              reduce using rule 161 (cint -> CINT .)
    LE              reduce using rule 161 (cint -> CINT .)
    EQ              reduce using rule 161 (cint -> CINT .)
    NE              reduce using rule 161 (cint -> CINT .)
    PLUS            reduce using rule 161 (cint -> CINT .)
    MINUS           reduce using rule 161 (cint -> CINT .)
    AND             reduce using rule 161 (cint -> CINT .)
    OR              reduce using rule 161 (cint -> CINT .)
    VAR             reduce using rule 161 (cint -> CINT .)
    PUBLIC          reduce using rule 161 (cint -> CINT .)
    IF              reduce using rule 161 (cint -> CINT .)
    ID              reduce using rule 161 (cint -> CINT .)
    PRIVATE         reduce using rule 161 (cint -> CINT .)
    PROTECTED       reduce using rule 161 (cint -> CINT .)
    PRINT           reduce using rule 161 (cint -> CINT .)
    READ            reduce using rule 161 (cint -> CINT .)
    VOID            reduce using rule 161 (cint -> CINT .)
    INT             reduce using rule 161 (cint -> CINT .)
    FLOAT           reduce using rule 161 (cint -> CINT .)
    CHAR            reduce using rule 161 (cint -> CINT .)
    STRING          reduce using rule 161 (cint -> CINT .)
    BOOL            reduce using rule 161 (cint -> CINT .)
    WHILE           reduce using rule 161 (cint -> CINT .)
    RBRACE          reduce using rule 161 (cint -> CINT .)
    RETURN          reduce using rule 161 (cint -> CINT .)
    RBRACKET        reduce using rule 161 (cint -> CINT .)
    RPAREN          reduce using rule 161 (cint -> CINT .)
    COMMA           reduce using rule 161 (cint -> CINT .)


state 97

    (162) cfloat -> NUMBER .

    TIMES           reduce using rule 162 (cfloat -> NUMBER .)
    DIVIDE          reduce using rule 162 (cfloat -> NUMBER .)
    MODULO          reduce using rule 162 (cfloat -> NUMBER .)
    LT              reduce using rule 162 (cfloat -> NUMBER .)
    GT              reduce using rule 162 (cfloat -> NUMBER .)
    GE              reduce using rule 162 (cfloat -> NUMBER .)
    LE              reduce using rule 162 (cfloat -> NUMBER .)
    EQ              reduce using rule 162 (cfloat -> NUMBER .)
    NE              reduce using rule 162 (cfloat -> NUMBER .)
    PLUS            reduce using rule 162 (cfloat -> NUMBER .)
    MINUS           reduce using rule 162 (cfloat -> NUMBER .)
    AND             reduce using rule 162 (cfloat -> NUMBER .)
    OR              reduce using rule 162 (cfloat -> NUMBER .)
    VAR             reduce using rule 162 (cfloat -> NUMBER .)
    PUBLIC          reduce using rule 162 (cfloat -> NUMBER .)
    IF              reduce using rule 162 (cfloat -> NUMBER .)
    ID              reduce using rule 162 (cfloat -> NUMBER .)
    PRIVATE         reduce using rule 162 (cfloat -> NUMBER .)
    PROTECTED       reduce using rule 162 (cfloat -> NUMBER .)
    PRINT           reduce using rule 162 (cfloat -> NUMBER .)
    READ            reduce using rule 162 (cfloat -> NUMBER .)
    VOID            reduce using rule 162 (cfloat -> NUMBER .)
    INT             reduce using rule 162 (cfloat -> NUMBER .)
    FLOAT           reduce using rule 162 (cfloat -> NUMBER .)
    CHAR            reduce using rule 162 (cfloat -> NUMBER .)
    STRING          reduce using rule 162 (cfloat -> NUMBER .)
    BOOL            reduce using rule 162 (cfloat -> NUMBER .)
    WHILE           reduce using rule 162 (cfloat -> NUMBER .)
    RBRACE          reduce using rule 162 (cfloat -> NUMBER .)
    RETURN          reduce using rule 162 (cfloat -> NUMBER .)
    RBRACKET        reduce using rule 162 (cfloat -> NUMBER .)
    RPAREN          reduce using rule 162 (cfloat -> NUMBER .)
    COMMA           reduce using rule 162 (cfloat -> NUMBER .)


state 98

    (163) cchar -> CCHAR .

    TIMES           reduce using rule 163 (cchar -> CCHAR .)
    DIVIDE          reduce using rule 163 (cchar -> CCHAR .)
    MODULO          reduce using rule 163 (cchar -> CCHAR .)
    LT              reduce using rule 163 (cchar -> CCHAR .)
    GT              reduce using rule 163 (cchar -> CCHAR .)
    GE              reduce using rule 163 (cchar -> CCHAR .)
    LE              reduce using rule 163 (cchar -> CCHAR .)
    EQ              reduce using rule 163 (cchar -> CCHAR .)
    NE              reduce using rule 163 (cchar -> CCHAR .)
    PLUS            reduce using rule 163 (cchar -> CCHAR .)
    MINUS           reduce using rule 163 (cchar -> CCHAR .)
    AND             reduce using rule 163 (cchar -> CCHAR .)
    OR              reduce using rule 163 (cchar -> CCHAR .)
    VAR             reduce using rule 163 (cchar -> CCHAR .)
    PUBLIC          reduce using rule 163 (cchar -> CCHAR .)
    IF              reduce using rule 163 (cchar -> CCHAR .)
    ID              reduce using rule 163 (cchar -> CCHAR .)
    PRIVATE         reduce using rule 163 (cchar -> CCHAR .)
    PROTECTED       reduce using rule 163 (cchar -> CCHAR .)
    PRINT           reduce using rule 163 (cchar -> CCHAR .)
    READ            reduce using rule 163 (cchar -> CCHAR .)
    VOID            reduce using rule 163 (cchar -> CCHAR .)
    INT             reduce using rule 163 (cchar -> CCHAR .)
    FLOAT           reduce using rule 163 (cchar -> CCHAR .)
    CHAR            reduce using rule 163 (cchar -> CCHAR .)
    STRING          reduce using rule 163 (cchar -> CCHAR .)
    BOOL            reduce using rule 163 (cchar -> CCHAR .)
    WHILE           reduce using rule 163 (cchar -> CCHAR .)
    RBRACE          reduce using rule 163 (cchar -> CCHAR .)
    RETURN          reduce using rule 163 (cchar -> CCHAR .)
    RBRACKET        reduce using rule 163 (cchar -> CCHAR .)
    RPAREN          reduce using rule 163 (cchar -> CCHAR .)
    COMMA           reduce using rule 163 (cchar -> CCHAR .)


state 99

    (155) var -> ID .
    (159) var -> ID . LBRACKET exp RBRACKET
    (160) var -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> ID . PERIOD ID
    (118) llamada_id -> ID .

    TIMES           reduce using rule 155 (var -> ID .)
    DIVIDE          reduce using rule 155 (var -> ID .)
    MODULO          reduce using rule 155 (var -> ID .)
    RBRACKET        reduce using rule 155 (var -> ID .)
    PLUS            reduce using rule 155 (var -> ID .)
    MINUS           reduce using rule 155 (var -> ID .)
    LT              reduce using rule 155 (var -> ID .)
    GT              reduce using rule 155 (var -> ID .)
    GE              reduce using rule 155 (var -> ID .)
    LE              reduce using rule 155 (var -> ID .)
    EQ              reduce using rule 155 (var -> ID .)
    NE              reduce using rule 155 (var -> ID .)
    AND             reduce using rule 155 (var -> ID .)
    OR              reduce using rule 155 (var -> ID .)
    RPAREN          reduce using rule 155 (var -> ID .)
    COMMA           reduce using rule 155 (var -> ID .)
    VAR             reduce using rule 155 (var -> ID .)
    PUBLIC          reduce using rule 155 (var -> ID .)
    IF              reduce using rule 155 (var -> ID .)
    ID              reduce using rule 155 (var -> ID .)
    PRIVATE         reduce using rule 155 (var -> ID .)
    PROTECTED       reduce using rule 155 (var -> ID .)
    PRINT           reduce using rule 155 (var -> ID .)
    READ            reduce using rule 155 (var -> ID .)
    VOID            reduce using rule 155 (var -> ID .)
    INT             reduce using rule 155 (var -> ID .)
    FLOAT           reduce using rule 155 (var -> ID .)
    CHAR            reduce using rule 155 (var -> ID .)
    STRING          reduce using rule 155 (var -> ID .)
    BOOL            reduce using rule 155 (var -> ID .)
    WHILE           reduce using rule 155 (var -> ID .)
    RBRACE          reduce using rule 155 (var -> ID .)
    RETURN          reduce using rule 155 (var -> ID .)
    LBRACKET        shift and go to state 156
    PERIOD          shift and go to state 157
    LPAREN          reduce using rule 118 (llamada_id -> ID .)


state 100

    (108) asignacion -> ID LBRACKET exp . RBRACKET EQUALS exp_cond
    (109) asignacion -> ID LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (112) asignacion -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (113) asignacion -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (141) exp -> exp . PLUS termino
    (142) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 158
    PLUS            shift and go to state 143
    MINUS           shift and go to state 144


state 101

    (33) constructor -> PUBLIC ID LPAREN . param RPAREN bloque
    (64) param -> .
    (65) param -> . tipo_simple ID
    (66) param -> . tipo_simple ID COMMA param
    (97) tipo_simple -> . INT
    (98) tipo_simple -> . FLOAT
    (99) tipo_simple -> . CHAR
    (100) tipo_simple -> . BOOL

    RPAREN          reduce using rule 64 (param -> .)
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    CHAR            shift and go to state 127
    BOOL            shift and go to state 128

    param                          shift and go to state 159
    tipo_simple                    shift and go to state 160

state 102

    (35) funcion -> scope type DEF . id LPAREN param aux_param RPAREN contexto_func
    (37) id -> . ID

    ID              shift and go to state 162

    id                             shift and go to state 161

state 103

    (36) funcion -> scope VOID DEF . id_void LPAREN param aux_param RPAREN contexto_func
    (38) id_void -> . ID

    ID              shift and go to state 164

    id_void                        shift and go to state 163

state 104

    (26) condicion -> IF LPAREN gotoF . RPAREN bloque
    (27) condicion -> IF LPAREN gotoF . RPAREN bloque elif

    RPAREN          shift and go to state 165


state 105

    (126) gotoF -> exp_cond .

    RPAREN          reduce using rule 126 (gotoF -> exp_cond .)


state 106

    (31) ciclo -> aux_ciclo WHILE LPAREN . gotoF RPAREN bloque
    (126) gotoF -> . exp_cond
    (127) exp_cond -> . exp_bool
    (128) exp_cond -> . exp_bool AND exp_cond
    (129) exp_cond -> . exp_bool OR exp_cond
    (130) exp_bool -> . TRUE
    (131) exp_bool -> . FALSE
    (132) exp_bool -> . expresion
    (133) expresion -> . exp
    (134) expresion -> . exp LT expresion
    (135) expresion -> . exp GT expresion
    (136) expresion -> . exp GE expresion
    (137) expresion -> . exp LE expresion
    (138) expresion -> . exp EQ expresion
    (139) expresion -> . exp NE expresion
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    TRUE            shift and go to state 83
    FALSE           shift and go to state 84
    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    gotoF                          shift and go to state 166
    exp_cond                       shift and go to state 105
    exp_bool                       shift and go to state 81
    expresion                      shift and go to state 85
    exp                            shift and go to state 80
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 107

    (106) asignacion -> objeto_aAcceso EQUALS exp_cond .

    VAR             reduce using rule 106 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    PUBLIC          reduce using rule 106 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    IF              reduce using rule 106 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    ID              reduce using rule 106 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    PRIVATE         reduce using rule 106 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    PROTECTED       reduce using rule 106 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    PRINT           reduce using rule 106 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    READ            reduce using rule 106 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    VOID            reduce using rule 106 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    INT             reduce using rule 106 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    FLOAT           reduce using rule 106 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    CHAR            reduce using rule 106 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    STRING          reduce using rule 106 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    BOOL            reduce using rule 106 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    WHILE           reduce using rule 106 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    RBRACE          reduce using rule 106 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    RETURN          reduce using rule 106 (asignacion -> objeto_aAcceso EQUALS exp_cond .)


state 108

    (107) asignacion -> objeto_aAcceso EQUALS objeto_metodo .

    VAR             reduce using rule 107 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 107 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    IF              reduce using rule 107 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    ID              reduce using rule 107 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 107 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 107 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PRINT           reduce using rule 107 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    READ            reduce using rule 107 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    VOID            reduce using rule 107 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    INT             reduce using rule 107 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    FLOAT           reduce using rule 107 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    CHAR            reduce using rule 107 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    STRING          reduce using rule 107 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    BOOL            reduce using rule 107 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    WHILE           reduce using rule 107 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    RBRACE          reduce using rule 107 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    RETURN          reduce using rule 107 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)


state 109

    (116) objeto_metodo -> ID . PERIOD llamada_func
    (155) var -> ID .
    (159) var -> ID . LBRACKET exp RBRACKET
    (160) var -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> ID . PERIOD ID
    (118) llamada_id -> ID .

    PERIOD          shift and go to state 136
    TIMES           reduce using rule 155 (var -> ID .)
    DIVIDE          reduce using rule 155 (var -> ID .)
    MODULO          reduce using rule 155 (var -> ID .)
    LT              reduce using rule 155 (var -> ID .)
    GT              reduce using rule 155 (var -> ID .)
    GE              reduce using rule 155 (var -> ID .)
    LE              reduce using rule 155 (var -> ID .)
    EQ              reduce using rule 155 (var -> ID .)
    NE              reduce using rule 155 (var -> ID .)
    PLUS            reduce using rule 155 (var -> ID .)
    MINUS           reduce using rule 155 (var -> ID .)
    AND             reduce using rule 155 (var -> ID .)
    OR              reduce using rule 155 (var -> ID .)
    VAR             reduce using rule 155 (var -> ID .)
    PUBLIC          reduce using rule 155 (var -> ID .)
    IF              reduce using rule 155 (var -> ID .)
    ID              reduce using rule 155 (var -> ID .)
    PRIVATE         reduce using rule 155 (var -> ID .)
    PROTECTED       reduce using rule 155 (var -> ID .)
    PRINT           reduce using rule 155 (var -> ID .)
    READ            reduce using rule 155 (var -> ID .)
    VOID            reduce using rule 155 (var -> ID .)
    INT             reduce using rule 155 (var -> ID .)
    FLOAT           reduce using rule 155 (var -> ID .)
    CHAR            reduce using rule 155 (var -> ID .)
    STRING          reduce using rule 155 (var -> ID .)
    BOOL            reduce using rule 155 (var -> ID .)
    WHILE           reduce using rule 155 (var -> ID .)
    RBRACE          reduce using rule 155 (var -> ID .)
    RETURN          reduce using rule 155 (var -> ID .)
    COMMA           reduce using rule 155 (var -> ID .)
    RPAREN          reduce using rule 155 (var -> ID .)
    LBRACKET        shift and go to state 156
    LPAREN          reduce using rule 118 (llamada_id -> ID .)


state 110

    (110) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET EQUALS exp_cond
    (111) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (114) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (115) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (141) exp -> exp . PLUS termino
    (142) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 167
    PLUS            shift and go to state 143
    MINUS           shift and go to state 144


state 111

    (82) escritura -> PRINT LPAREN aux3 . RPAREN

    RPAREN          shift and go to state 168


state 112

    (83) aux3 -> expresion .
    (86) aux3 -> expresion . COMMA aux3

    RPAREN          reduce using rule 83 (aux3 -> expresion .)
    COMMA           shift and go to state 169


state 113

    (84) aux3 -> objeto_metodo .
    (87) aux3 -> objeto_metodo . COMMA aux3

    RPAREN          reduce using rule 84 (aux3 -> objeto_metodo .)
    COMMA           shift and go to state 170


state 114

    (85) aux3 -> CSTRING .
    (88) aux3 -> CSTRING . COMMA aux3

    RPAREN          reduce using rule 85 (aux3 -> CSTRING .)
    COMMA           shift and go to state 171


state 115

    (117) llamada_func -> llamada_id llamada_lparen llamada_rparen .

    VAR             reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    PUBLIC          reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    IF              reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    ID              reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    PRIVATE         reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    PROTECTED       reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    PRINT           reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    READ            reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    VOID            reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    INT             reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    FLOAT           reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    CHAR            reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    STRING          reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    BOOL            reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    WHILE           reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    RBRACE          reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    RETURN          reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    TIMES           reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    DIVIDE          reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    MODULO          reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    LT              reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    GT              reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    GE              reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    LE              reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    EQ              reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    NE              reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    PLUS            reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    MINUS           reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    AND             reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    OR              reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    RBRACKET        reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    RPAREN          reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    COMMA           reduce using rule 117 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)


state 116

    (120) llamada_rparen -> aux . RPAREN

    RPAREN          shift and go to state 172


state 117

    (121) llamada_rparen -> RPAREN .

    VAR             reduce using rule 121 (llamada_rparen -> RPAREN .)
    PUBLIC          reduce using rule 121 (llamada_rparen -> RPAREN .)
    IF              reduce using rule 121 (llamada_rparen -> RPAREN .)
    ID              reduce using rule 121 (llamada_rparen -> RPAREN .)
    PRIVATE         reduce using rule 121 (llamada_rparen -> RPAREN .)
    PROTECTED       reduce using rule 121 (llamada_rparen -> RPAREN .)
    PRINT           reduce using rule 121 (llamada_rparen -> RPAREN .)
    READ            reduce using rule 121 (llamada_rparen -> RPAREN .)
    VOID            reduce using rule 121 (llamada_rparen -> RPAREN .)
    INT             reduce using rule 121 (llamada_rparen -> RPAREN .)
    FLOAT           reduce using rule 121 (llamada_rparen -> RPAREN .)
    CHAR            reduce using rule 121 (llamada_rparen -> RPAREN .)
    STRING          reduce using rule 121 (llamada_rparen -> RPAREN .)
    BOOL            reduce using rule 121 (llamada_rparen -> RPAREN .)
    WHILE           reduce using rule 121 (llamada_rparen -> RPAREN .)
    RBRACE          reduce using rule 121 (llamada_rparen -> RPAREN .)
    RETURN          reduce using rule 121 (llamada_rparen -> RPAREN .)
    TIMES           reduce using rule 121 (llamada_rparen -> RPAREN .)
    DIVIDE          reduce using rule 121 (llamada_rparen -> RPAREN .)
    MODULO          reduce using rule 121 (llamada_rparen -> RPAREN .)
    LT              reduce using rule 121 (llamada_rparen -> RPAREN .)
    GT              reduce using rule 121 (llamada_rparen -> RPAREN .)
    GE              reduce using rule 121 (llamada_rparen -> RPAREN .)
    LE              reduce using rule 121 (llamada_rparen -> RPAREN .)
    EQ              reduce using rule 121 (llamada_rparen -> RPAREN .)
    NE              reduce using rule 121 (llamada_rparen -> RPAREN .)
    PLUS            reduce using rule 121 (llamada_rparen -> RPAREN .)
    MINUS           reduce using rule 121 (llamada_rparen -> RPAREN .)
    AND             reduce using rule 121 (llamada_rparen -> RPAREN .)
    OR              reduce using rule 121 (llamada_rparen -> RPAREN .)
    RBRACKET        reduce using rule 121 (llamada_rparen -> RPAREN .)
    RPAREN          reduce using rule 121 (llamada_rparen -> RPAREN .)
    COMMA           reduce using rule 121 (llamada_rparen -> RPAREN .)


state 118

    (122) aux -> exp . aux_exp
    (123) aux -> exp . aux_exp aux_comma aux
    (141) exp -> exp . PLUS termino
    (142) exp -> exp . MINUS termino
    (124) aux_exp -> .

    PLUS            shift and go to state 143
    MINUS           shift and go to state 144
    COMMA           reduce using rule 124 (aux_exp -> .)
    RPAREN          reduce using rule 124 (aux_exp -> .)

    aux_exp                        shift and go to state 173

state 119

    (77) lectura -> READ LPAREN aux4 . RPAREN

    RPAREN          shift and go to state 174


state 120

    (78) aux4 -> ID .
    (80) aux4 -> ID . COMMA aux4
    (164) objeto_aAcceso -> ID . PERIOD ID

    RPAREN          reduce using rule 78 (aux4 -> ID .)
    COMMA           shift and go to state 175
    PERIOD          shift and go to state 157


state 121

    (79) aux4 -> objeto_aAcceso .
    (81) aux4 -> objeto_aAcceso . COMMA aux4

    RPAREN          reduce using rule 79 (aux4 -> objeto_aAcceso .)
    COMMA           shift and go to state 176


state 122

    (5) class -> scope CLASS ID COLON ID .

    LBRACE          reduce using rule 5 (class -> scope CLASS ID COLON ID .)


state 123

    (89) vars -> VAR aux2 COLON tipo_simple .

    VAR             reduce using rule 89 (vars -> VAR aux2 COLON tipo_simple .)
    PUBLIC          reduce using rule 89 (vars -> VAR aux2 COLON tipo_simple .)
    IF              reduce using rule 89 (vars -> VAR aux2 COLON tipo_simple .)
    ID              reduce using rule 89 (vars -> VAR aux2 COLON tipo_simple .)
    PRIVATE         reduce using rule 89 (vars -> VAR aux2 COLON tipo_simple .)
    PROTECTED       reduce using rule 89 (vars -> VAR aux2 COLON tipo_simple .)
    PRINT           reduce using rule 89 (vars -> VAR aux2 COLON tipo_simple .)
    READ            reduce using rule 89 (vars -> VAR aux2 COLON tipo_simple .)
    VOID            reduce using rule 89 (vars -> VAR aux2 COLON tipo_simple .)
    INT             reduce using rule 89 (vars -> VAR aux2 COLON tipo_simple .)
    FLOAT           reduce using rule 89 (vars -> VAR aux2 COLON tipo_simple .)
    CHAR            reduce using rule 89 (vars -> VAR aux2 COLON tipo_simple .)
    STRING          reduce using rule 89 (vars -> VAR aux2 COLON tipo_simple .)
    BOOL            reduce using rule 89 (vars -> VAR aux2 COLON tipo_simple .)
    WHILE           reduce using rule 89 (vars -> VAR aux2 COLON tipo_simple .)
    RBRACE          reduce using rule 89 (vars -> VAR aux2 COLON tipo_simple .)
    RETURN          reduce using rule 89 (vars -> VAR aux2 COLON tipo_simple .)


state 124

    (90) vars -> VAR aux2 COLON tipo_compuesto .

    VAR             reduce using rule 90 (vars -> VAR aux2 COLON tipo_compuesto .)
    PUBLIC          reduce using rule 90 (vars -> VAR aux2 COLON tipo_compuesto .)
    IF              reduce using rule 90 (vars -> VAR aux2 COLON tipo_compuesto .)
    ID              reduce using rule 90 (vars -> VAR aux2 COLON tipo_compuesto .)
    PRIVATE         reduce using rule 90 (vars -> VAR aux2 COLON tipo_compuesto .)
    PROTECTED       reduce using rule 90 (vars -> VAR aux2 COLON tipo_compuesto .)
    PRINT           reduce using rule 90 (vars -> VAR aux2 COLON tipo_compuesto .)
    READ            reduce using rule 90 (vars -> VAR aux2 COLON tipo_compuesto .)
    VOID            reduce using rule 90 (vars -> VAR aux2 COLON tipo_compuesto .)
    INT             reduce using rule 90 (vars -> VAR aux2 COLON tipo_compuesto .)
    FLOAT           reduce using rule 90 (vars -> VAR aux2 COLON tipo_compuesto .)
    CHAR            reduce using rule 90 (vars -> VAR aux2 COLON tipo_compuesto .)
    STRING          reduce using rule 90 (vars -> VAR aux2 COLON tipo_compuesto .)
    BOOL            reduce using rule 90 (vars -> VAR aux2 COLON tipo_compuesto .)
    WHILE           reduce using rule 90 (vars -> VAR aux2 COLON tipo_compuesto .)
    RBRACE          reduce using rule 90 (vars -> VAR aux2 COLON tipo_compuesto .)
    RETURN          reduce using rule 90 (vars -> VAR aux2 COLON tipo_compuesto .)


state 125

    (97) tipo_simple -> INT .

    VAR             reduce using rule 97 (tipo_simple -> INT .)
    PUBLIC          reduce using rule 97 (tipo_simple -> INT .)
    IF              reduce using rule 97 (tipo_simple -> INT .)
    ID              reduce using rule 97 (tipo_simple -> INT .)
    PRIVATE         reduce using rule 97 (tipo_simple -> INT .)
    PROTECTED       reduce using rule 97 (tipo_simple -> INT .)
    PRINT           reduce using rule 97 (tipo_simple -> INT .)
    READ            reduce using rule 97 (tipo_simple -> INT .)
    VOID            reduce using rule 97 (tipo_simple -> INT .)
    INT             reduce using rule 97 (tipo_simple -> INT .)
    FLOAT           reduce using rule 97 (tipo_simple -> INT .)
    CHAR            reduce using rule 97 (tipo_simple -> INT .)
    STRING          reduce using rule 97 (tipo_simple -> INT .)
    BOOL            reduce using rule 97 (tipo_simple -> INT .)
    WHILE           reduce using rule 97 (tipo_simple -> INT .)
    RBRACE          reduce using rule 97 (tipo_simple -> INT .)
    RETURN          reduce using rule 97 (tipo_simple -> INT .)


state 126

    (98) tipo_simple -> FLOAT .

    VAR             reduce using rule 98 (tipo_simple -> FLOAT .)
    PUBLIC          reduce using rule 98 (tipo_simple -> FLOAT .)
    IF              reduce using rule 98 (tipo_simple -> FLOAT .)
    ID              reduce using rule 98 (tipo_simple -> FLOAT .)
    PRIVATE         reduce using rule 98 (tipo_simple -> FLOAT .)
    PROTECTED       reduce using rule 98 (tipo_simple -> FLOAT .)
    PRINT           reduce using rule 98 (tipo_simple -> FLOAT .)
    READ            reduce using rule 98 (tipo_simple -> FLOAT .)
    VOID            reduce using rule 98 (tipo_simple -> FLOAT .)
    INT             reduce using rule 98 (tipo_simple -> FLOAT .)
    FLOAT           reduce using rule 98 (tipo_simple -> FLOAT .)
    CHAR            reduce using rule 98 (tipo_simple -> FLOAT .)
    STRING          reduce using rule 98 (tipo_simple -> FLOAT .)
    BOOL            reduce using rule 98 (tipo_simple -> FLOAT .)
    WHILE           reduce using rule 98 (tipo_simple -> FLOAT .)
    RBRACE          reduce using rule 98 (tipo_simple -> FLOAT .)
    RETURN          reduce using rule 98 (tipo_simple -> FLOAT .)


state 127

    (99) tipo_simple -> CHAR .

    VAR             reduce using rule 99 (tipo_simple -> CHAR .)
    PUBLIC          reduce using rule 99 (tipo_simple -> CHAR .)
    IF              reduce using rule 99 (tipo_simple -> CHAR .)
    ID              reduce using rule 99 (tipo_simple -> CHAR .)
    PRIVATE         reduce using rule 99 (tipo_simple -> CHAR .)
    PROTECTED       reduce using rule 99 (tipo_simple -> CHAR .)
    PRINT           reduce using rule 99 (tipo_simple -> CHAR .)
    READ            reduce using rule 99 (tipo_simple -> CHAR .)
    VOID            reduce using rule 99 (tipo_simple -> CHAR .)
    INT             reduce using rule 99 (tipo_simple -> CHAR .)
    FLOAT           reduce using rule 99 (tipo_simple -> CHAR .)
    CHAR            reduce using rule 99 (tipo_simple -> CHAR .)
    STRING          reduce using rule 99 (tipo_simple -> CHAR .)
    BOOL            reduce using rule 99 (tipo_simple -> CHAR .)
    WHILE           reduce using rule 99 (tipo_simple -> CHAR .)
    RBRACE          reduce using rule 99 (tipo_simple -> CHAR .)
    RETURN          reduce using rule 99 (tipo_simple -> CHAR .)


state 128

    (100) tipo_simple -> BOOL .

    VAR             reduce using rule 100 (tipo_simple -> BOOL .)
    PUBLIC          reduce using rule 100 (tipo_simple -> BOOL .)
    IF              reduce using rule 100 (tipo_simple -> BOOL .)
    ID              reduce using rule 100 (tipo_simple -> BOOL .)
    PRIVATE         reduce using rule 100 (tipo_simple -> BOOL .)
    PROTECTED       reduce using rule 100 (tipo_simple -> BOOL .)
    PRINT           reduce using rule 100 (tipo_simple -> BOOL .)
    READ            reduce using rule 100 (tipo_simple -> BOOL .)
    VOID            reduce using rule 100 (tipo_simple -> BOOL .)
    INT             reduce using rule 100 (tipo_simple -> BOOL .)
    FLOAT           reduce using rule 100 (tipo_simple -> BOOL .)
    CHAR            reduce using rule 100 (tipo_simple -> BOOL .)
    STRING          reduce using rule 100 (tipo_simple -> BOOL .)
    BOOL            reduce using rule 100 (tipo_simple -> BOOL .)
    WHILE           reduce using rule 100 (tipo_simple -> BOOL .)
    RBRACE          reduce using rule 100 (tipo_simple -> BOOL .)
    RETURN          reduce using rule 100 (tipo_simple -> BOOL .)


state 129

    (101) tipo_compuesto -> ID .

    VAR             reduce using rule 101 (tipo_compuesto -> ID .)
    PUBLIC          reduce using rule 101 (tipo_compuesto -> ID .)
    IF              reduce using rule 101 (tipo_compuesto -> ID .)
    ID              reduce using rule 101 (tipo_compuesto -> ID .)
    PRIVATE         reduce using rule 101 (tipo_compuesto -> ID .)
    PROTECTED       reduce using rule 101 (tipo_compuesto -> ID .)
    PRINT           reduce using rule 101 (tipo_compuesto -> ID .)
    READ            reduce using rule 101 (tipo_compuesto -> ID .)
    VOID            reduce using rule 101 (tipo_compuesto -> ID .)
    INT             reduce using rule 101 (tipo_compuesto -> ID .)
    FLOAT           reduce using rule 101 (tipo_compuesto -> ID .)
    CHAR            reduce using rule 101 (tipo_compuesto -> ID .)
    STRING          reduce using rule 101 (tipo_compuesto -> ID .)
    BOOL            reduce using rule 101 (tipo_compuesto -> ID .)
    WHILE           reduce using rule 101 (tipo_compuesto -> ID .)
    RBRACE          reduce using rule 101 (tipo_compuesto -> ID .)
    RETURN          reduce using rule 101 (tipo_compuesto -> ID .)


state 130

    (91) vars -> VAR ID LBRACKET cint . RBRACKET COLON tipo_simple
    (92) vars -> VAR ID LBRACKET cint . RBRACKET COLON tipo_compuesto
    (93) vars -> VAR ID LBRACKET cint . RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (94) vars -> VAR ID LBRACKET cint . RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto

    RBRACKET        shift and go to state 177


state 131

    (95) aux2 -> ID .
    (96) aux2 -> ID . COMMA aux2

    COLON           reduce using rule 95 (aux2 -> ID .)
    COMMA           shift and go to state 72


state 132

    (96) aux2 -> ID COMMA aux2 .

    COLON           reduce using rule 96 (aux2 -> ID COMMA aux2 .)


state 133

    (23) sort_p -> ID PERIOD SORT LPAREN . aux_sort RPAREN
    (24) aux_sort -> .

    RPAREN          reduce using rule 24 (aux_sort -> .)

    aux_sort                       shift and go to state 178

state 134

    (25) find_p -> ID PERIOD FIND LPAREN . var RPAREN
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR

    ID              shift and go to state 179
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    var                            shift and go to state 180
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95

state 135

    (104) asignacion -> ID EQUALS ID LBRACKET . exp RBRACKET
    (105) asignacion -> ID EQUALS ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (159) var -> ID LBRACKET . exp RBRACKET
    (160) var -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    exp                            shift and go to state 181
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 136

    (116) objeto_metodo -> ID PERIOD . llamada_func
    (164) objeto_aAcceso -> ID PERIOD . ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (118) llamada_id -> . ID

    ID              shift and go to state 73

    llamada_func                   shift and go to state 76
    llamada_id                     shift and go to state 36

state 137

    (134) expresion -> exp LT . expresion
    (133) expresion -> . exp
    (134) expresion -> . exp LT expresion
    (135) expresion -> . exp GT expresion
    (136) expresion -> . exp GE expresion
    (137) expresion -> . exp LE expresion
    (138) expresion -> . exp EQ expresion
    (139) expresion -> . exp NE expresion
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    exp                            shift and go to state 80
    expresion                      shift and go to state 182
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 138

    (135) expresion -> exp GT . expresion
    (133) expresion -> . exp
    (134) expresion -> . exp LT expresion
    (135) expresion -> . exp GT expresion
    (136) expresion -> . exp GE expresion
    (137) expresion -> . exp LE expresion
    (138) expresion -> . exp EQ expresion
    (139) expresion -> . exp NE expresion
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    exp                            shift and go to state 80
    expresion                      shift and go to state 183
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 139

    (136) expresion -> exp GE . expresion
    (133) expresion -> . exp
    (134) expresion -> . exp LT expresion
    (135) expresion -> . exp GT expresion
    (136) expresion -> . exp GE expresion
    (137) expresion -> . exp LE expresion
    (138) expresion -> . exp EQ expresion
    (139) expresion -> . exp NE expresion
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    exp                            shift and go to state 80
    expresion                      shift and go to state 184
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 140

    (137) expresion -> exp LE . expresion
    (133) expresion -> . exp
    (134) expresion -> . exp LT expresion
    (135) expresion -> . exp GT expresion
    (136) expresion -> . exp GE expresion
    (137) expresion -> . exp LE expresion
    (138) expresion -> . exp EQ expresion
    (139) expresion -> . exp NE expresion
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    exp                            shift and go to state 80
    expresion                      shift and go to state 185
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 141

    (138) expresion -> exp EQ . expresion
    (133) expresion -> . exp
    (134) expresion -> . exp LT expresion
    (135) expresion -> . exp GT expresion
    (136) expresion -> . exp GE expresion
    (137) expresion -> . exp LE expresion
    (138) expresion -> . exp EQ expresion
    (139) expresion -> . exp NE expresion
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    exp                            shift and go to state 80
    expresion                      shift and go to state 186
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 142

    (139) expresion -> exp NE . expresion
    (133) expresion -> . exp
    (134) expresion -> . exp LT expresion
    (135) expresion -> . exp GT expresion
    (136) expresion -> . exp GE expresion
    (137) expresion -> . exp LE expresion
    (138) expresion -> . exp EQ expresion
    (139) expresion -> . exp NE expresion
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    exp                            shift and go to state 80
    expresion                      shift and go to state 187
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 143

    (141) exp -> exp PLUS . termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    termino                        shift and go to state 188
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 144

    (142) exp -> exp MINUS . termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    termino                        shift and go to state 189
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 145

    (128) exp_cond -> exp_bool AND . exp_cond
    (127) exp_cond -> . exp_bool
    (128) exp_cond -> . exp_bool AND exp_cond
    (129) exp_cond -> . exp_bool OR exp_cond
    (130) exp_bool -> . TRUE
    (131) exp_bool -> . FALSE
    (132) exp_bool -> . expresion
    (133) expresion -> . exp
    (134) expresion -> . exp LT expresion
    (135) expresion -> . exp GT expresion
    (136) expresion -> . exp GE expresion
    (137) expresion -> . exp LE expresion
    (138) expresion -> . exp EQ expresion
    (139) expresion -> . exp NE expresion
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    TRUE            shift and go to state 83
    FALSE           shift and go to state 84
    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    exp_bool                       shift and go to state 81
    exp_cond                       shift and go to state 190
    expresion                      shift and go to state 85
    exp                            shift and go to state 80
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 146

    (129) exp_cond -> exp_bool OR . exp_cond
    (127) exp_cond -> . exp_bool
    (128) exp_cond -> . exp_bool AND exp_cond
    (129) exp_cond -> . exp_bool OR exp_cond
    (130) exp_bool -> . TRUE
    (131) exp_bool -> . FALSE
    (132) exp_bool -> . expresion
    (133) expresion -> . exp
    (134) expresion -> . exp LT expresion
    (135) expresion -> . exp GT expresion
    (136) expresion -> . exp GE expresion
    (137) expresion -> . exp LE expresion
    (138) expresion -> . exp EQ expresion
    (139) expresion -> . exp NE expresion
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    TRUE            shift and go to state 83
    FALSE           shift and go to state 84
    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    exp_bool                       shift and go to state 81
    exp_cond                       shift and go to state 191
    expresion                      shift and go to state 85
    exp                            shift and go to state 80
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 147

    (144) termino -> termino TIMES . factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    factor                         shift and go to state 192
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 148

    (145) termino -> termino DIVIDE . factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    factor                         shift and go to state 193
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 149

    (146) termino -> termino MODULO . factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    factor                         shift and go to state 194
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 150

    (148) factor -> PLUS objeto_aAcceso .

    TIMES           reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    DIVIDE          reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    MODULO          reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    LT              reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    GT              reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    GE              reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    LE              reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    EQ              reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    NE              reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    PLUS            reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    MINUS           reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    AND             reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    OR              reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    VAR             reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    PUBLIC          reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    IF              reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    ID              reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    PRIVATE         reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    PROTECTED       reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    PRINT           reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    READ            reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    VOID            reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    INT             reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    FLOAT           reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    CHAR            reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    STRING          reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    BOOL            reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    WHILE           reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    RBRACE          reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    RETURN          reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    RBRACKET        reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    RPAREN          reduce using rule 148 (factor -> PLUS objeto_aAcceso .)
    COMMA           reduce using rule 148 (factor -> PLUS objeto_aAcceso .)

    aux_param                      shift and go to state 188

state 151

    (150) factor -> PLUS var .

    TIMES           reduce using rule 150 (factor -> PLUS var .)
    DIVIDE          reduce using rule 150 (factor -> PLUS var .)
    MODULO          reduce using rule 150 (factor -> PLUS var .)
    LT              reduce using rule 150 (factor -> PLUS var .)
    GT              reduce using rule 150 (factor -> PLUS var .)
    GE              reduce using rule 150 (factor -> PLUS var .)
    LE              reduce using rule 150 (factor -> PLUS var .)
    EQ              reduce using rule 150 (factor -> PLUS var .)
    NE              reduce using rule 150 (factor -> PLUS var .)
    PLUS            reduce using rule 150 (factor -> PLUS var .)
    MINUS           reduce using rule 150 (factor -> PLUS var .)
    AND             reduce using rule 150 (factor -> PLUS var .)
    OR              reduce using rule 150 (factor -> PLUS var .)
    VAR             reduce using rule 150 (factor -> PLUS var .)
    PUBLIC          reduce using rule 150 (factor -> PLUS var .)
    IF              reduce using rule 150 (factor -> PLUS var .)
    ID              reduce using rule 150 (factor -> PLUS var .)
    PRIVATE         reduce using rule 150 (factor -> PLUS var .)
    PROTECTED       reduce using rule 150 (factor -> PLUS var .)
    PRINT           reduce using rule 150 (factor -> PLUS var .)
    READ            reduce using rule 150 (factor -> PLUS var .)
    VOID            reduce using rule 150 (factor -> PLUS var .)
    INT             reduce using rule 150 (factor -> PLUS var .)
    FLOAT           reduce using rule 150 (factor -> PLUS var .)
    CHAR            reduce using rule 150 (factor -> PLUS var .)
    STRING          reduce using rule 150 (factor -> PLUS var .)
    BOOL            reduce using rule 150 (factor -> PLUS var .)
    WHILE           reduce using rule 150 (factor -> PLUS var .)
    RBRACE          reduce using rule 150 (factor -> PLUS var .)
    RETURN          reduce using rule 150 (factor -> PLUS var .)
    RBRACKET        reduce using rule 150 (factor -> PLUS var .)
    RPAREN          reduce using rule 150 (factor -> PLUS var .)
    COMMA           reduce using rule 150 (factor -> PLUS var .)


state 152

    (164) objeto_aAcceso -> ID . PERIOD ID
    (155) var -> ID .
    (159) var -> ID . LBRACKET exp RBRACKET
    (160) var -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

    PERIOD          shift and go to state 157
    TIMES           reduce using rule 155 (var -> ID .)
    DIVIDE          reduce using rule 155 (var -> ID .)
    MODULO          reduce using rule 155 (var -> ID .)
    LT              reduce using rule 155 (var -> ID .)
    GT              reduce using rule 155 (var -> ID .)
    GE              reduce using rule 155 (var -> ID .)
    LE              reduce using rule 155 (var -> ID .)
    EQ              reduce using rule 155 (var -> ID .)
    NE              reduce using rule 155 (var -> ID .)
    PLUS            reduce using rule 155 (var -> ID .)
    MINUS           reduce using rule 155 (var -> ID .)
    AND             reduce using rule 155 (var -> ID .)
    OR              reduce using rule 155 (var -> ID .)
    VAR             reduce using rule 155 (var -> ID .)
    PUBLIC          reduce using rule 155 (var -> ID .)
    IF              reduce using rule 155 (var -> ID .)
    ID              reduce using rule 155 (var -> ID .)
    PRIVATE         reduce using rule 155 (var -> ID .)
    PROTECTED       reduce using rule 155 (var -> ID .)
    PRINT           reduce using rule 155 (var -> ID .)
    READ            reduce using rule 155 (var -> ID .)
    VOID            reduce using rule 155 (var -> ID .)
    INT             reduce using rule 155 (var -> ID .)
    FLOAT           reduce using rule 155 (var -> ID .)
    CHAR            reduce using rule 155 (var -> ID .)
    STRING          reduce using rule 155 (var -> ID .)
    BOOL            reduce using rule 155 (var -> ID .)
    WHILE           reduce using rule 155 (var -> ID .)
    RBRACE          reduce using rule 155 (var -> ID .)
    RETURN          reduce using rule 155 (var -> ID .)
    RBRACKET        reduce using rule 155 (var -> ID .)
    RPAREN          reduce using rule 155 (var -> ID .)
    COMMA           reduce using rule 155 (var -> ID .)
    LBRACKET        shift and go to state 156


state 153

    (149) factor -> MINUS objeto_aAcceso .

    TIMES           reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    DIVIDE          reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    MODULO          reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    LT              reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    GT              reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    GE              reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    LE              reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    EQ              reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    NE              reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    PLUS            reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    MINUS           reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    AND             reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    OR              reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    VAR             reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    PUBLIC          reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    IF              reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    ID              reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    PRIVATE         reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    PROTECTED       reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    PRINT           reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    READ            reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    VOID            reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    INT             reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    FLOAT           reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    CHAR            reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    STRING          reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    BOOL            reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    WHILE           reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    RBRACE          reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    RETURN          reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    RBRACKET        reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    RPAREN          reduce using rule 149 (factor -> MINUS objeto_aAcceso .)
    COMMA           reduce using rule 149 (factor -> MINUS objeto_aAcceso .)


state 154

    (151) factor -> MINUS var .

    TIMES           reduce using rule 151 (factor -> MINUS var .)
    DIVIDE          reduce using rule 151 (factor -> MINUS var .)
    MODULO          reduce using rule 151 (factor -> MINUS var .)
    LT              reduce using rule 151 (factor -> MINUS var .)
    GT              reduce using rule 151 (factor -> MINUS var .)
    GE              reduce using rule 151 (factor -> MINUS var .)
    LE              reduce using rule 151 (factor -> MINUS var .)
    EQ              reduce using rule 151 (factor -> MINUS var .)
    NE              reduce using rule 151 (factor -> MINUS var .)
    PLUS            reduce using rule 151 (factor -> MINUS var .)
    MINUS           reduce using rule 151 (factor -> MINUS var .)
    AND             reduce using rule 151 (factor -> MINUS var .)
    OR              reduce using rule 151 (factor -> MINUS var .)
    VAR             reduce using rule 151 (factor -> MINUS var .)
    PUBLIC          reduce using rule 151 (factor -> MINUS var .)
    IF              reduce using rule 151 (factor -> MINUS var .)
    ID              reduce using rule 151 (factor -> MINUS var .)
    PRIVATE         reduce using rule 151 (factor -> MINUS var .)
    PROTECTED       reduce using rule 151 (factor -> MINUS var .)
    PRINT           reduce using rule 151 (factor -> MINUS var .)
    READ            reduce using rule 151 (factor -> MINUS var .)
    VOID            reduce using rule 151 (factor -> MINUS var .)
    INT             reduce using rule 151 (factor -> MINUS var .)
    FLOAT           reduce using rule 151 (factor -> MINUS var .)
    CHAR            reduce using rule 151 (factor -> MINUS var .)
    STRING          reduce using rule 151 (factor -> MINUS var .)
    BOOL            reduce using rule 151 (factor -> MINUS var .)
    WHILE           reduce using rule 151 (factor -> MINUS var .)
    RBRACE          reduce using rule 151 (factor -> MINUS var .)
    RETURN          reduce using rule 151 (factor -> MINUS var .)
    RBRACKET        reduce using rule 151 (factor -> MINUS var .)
    RPAREN          reduce using rule 151 (factor -> MINUS var .)
    COMMA           reduce using rule 151 (factor -> MINUS var .)


state 156

    (147) factor -> LPAREN exp_cond . RPAREN

    RPAREN          shift and go to state 195


state 157

    (159) var -> ID LBRACKET . exp RBRACKET
    (160) var -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    exp                            shift and go to state 196
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 158

    (164) objeto_aAcceso -> ID PERIOD . ID

    ID              shift and go to state 197


state 159

    (108) asignacion -> ID LBRACKET exp RBRACKET . EQUALS exp_cond
    (109) asignacion -> ID LBRACKET exp RBRACKET . EQUALS objeto_metodo
    (112) asignacion -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS exp_cond
    (113) asignacion -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS objeto_metodo

    EQUALS          shift and go to state 199
    LBRACKET        shift and go to state 198


state 160

    (33) constructor -> PUBLIC ID LPAREN param . RPAREN bloque

    RPAREN          shift and go to state 200


state 161

    (65) param -> tipo_simple . ID
    (66) param -> tipo_simple . ID COMMA param

    ID              shift and go to state 201


state 162

    (35) funcion -> scope type DEF id . LPAREN param aux_param RPAREN contexto_func

    LPAREN          shift and go to state 202


state 162

    (37) id -> ID .

    LPAREN          reduce using rule 37 (id -> ID .)


state 163

    (36) funcion -> scope VOID DEF id_void . LPAREN param aux_param RPAREN contexto_func

    LPAREN          shift and go to state 203


state 164

    (38) id_void -> ID .

    LPAREN          reduce using rule 38 (id_void -> ID .)

    RPAREN          reduce using rule 113 (aux -> exp aux_exp .)
    COMMA           shift and go to state 201

    aux_comma                      shift and go to state 200

    (26) condicion -> IF LPAREN gotoF RPAREN . bloque
    (27) condicion -> IF LPAREN gotoF RPAREN . bloque elif
    (34) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 205

    bloque                         shift and go to state 204

state 166

    (31) ciclo -> aux_ciclo WHILE LPAREN gotoF . RPAREN bloque

    RPAREN          shift and go to state 206


state 167

    (110) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . EQUALS exp_cond
    (111) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . EQUALS objeto_metodo
    (114) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS exp_cond
    (115) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS objeto_metodo

    EQUALS          shift and go to state 208
    LBRACKET        shift and go to state 207

    objeto_aAcceso                 shift and go to state 115
    aux4                           shift and go to state 203

state 168

    (82) escritura -> PRINT LPAREN aux3 RPAREN .

    VAR             reduce using rule 82 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PUBLIC          reduce using rule 82 (escritura -> PRINT LPAREN aux3 RPAREN .)
    IF              reduce using rule 82 (escritura -> PRINT LPAREN aux3 RPAREN .)
    ID              reduce using rule 82 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PRIVATE         reduce using rule 82 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PROTECTED       reduce using rule 82 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PRINT           reduce using rule 82 (escritura -> PRINT LPAREN aux3 RPAREN .)
    READ            reduce using rule 82 (escritura -> PRINT LPAREN aux3 RPAREN .)
    VOID            reduce using rule 82 (escritura -> PRINT LPAREN aux3 RPAREN .)
    INT             reduce using rule 82 (escritura -> PRINT LPAREN aux3 RPAREN .)
    FLOAT           reduce using rule 82 (escritura -> PRINT LPAREN aux3 RPAREN .)
    CHAR            reduce using rule 82 (escritura -> PRINT LPAREN aux3 RPAREN .)
    STRING          reduce using rule 82 (escritura -> PRINT LPAREN aux3 RPAREN .)
    BOOL            reduce using rule 82 (escritura -> PRINT LPAREN aux3 RPAREN .)
    WHILE           reduce using rule 82 (escritura -> PRINT LPAREN aux3 RPAREN .)
    RBRACE          reduce using rule 82 (escritura -> PRINT LPAREN aux3 RPAREN .)
    RETURN          reduce using rule 82 (escritura -> PRINT LPAREN aux3 RPAREN .)


state 169

    (83) aux3 -> . expresion
    (84) aux3 -> . objeto_metodo
    (85) aux3 -> . CSTRING
    (86) aux3 -> . expresion COMMA aux3
    (87) aux3 -> . objeto_metodo COMMA aux3
    (88) aux3 -> . CSTRING COMMA aux3
    (133) expresion -> . exp
    (134) expresion -> . exp LT expresion
    (135) expresion -> . exp GT expresion
    (136) expresion -> . exp GE expresion
    (137) expresion -> . exp LE expresion
    (138) expresion -> . exp EQ expresion
    (139) expresion -> . exp NE expresion
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    CSTRING         shift and go to state 114
    ID              shift and go to state 109
    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    expresion                      shift and go to state 112
    aux3                           shift and go to state 209
    objeto_metodo                  shift and go to state 113
    exp                            shift and go to state 80
    llamada_func                   shift and go to state 82
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 170

    (87) aux3 -> objeto_metodo COMMA . aux3
    (83) aux3 -> . expresion
    (84) aux3 -> . objeto_metodo
    (85) aux3 -> . CSTRING
    (86) aux3 -> . expresion COMMA aux3
    (87) aux3 -> . objeto_metodo COMMA aux3
    (88) aux3 -> . CSTRING COMMA aux3
    (133) expresion -> . exp
    (134) expresion -> . exp LT expresion
    (135) expresion -> . exp GT expresion
    (136) expresion -> . exp GE expresion
    (137) expresion -> . exp LE expresion
    (138) expresion -> . exp EQ expresion
    (139) expresion -> . exp NE expresion
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    CSTRING         shift and go to state 114
    ID              shift and go to state 109
    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    objeto_metodo                  shift and go to state 113
    aux3                           shift and go to state 210
    expresion                      shift and go to state 112
    exp                            shift and go to state 80
    llamada_func                   shift and go to state 82
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 171

    (88) aux3 -> CSTRING COMMA . aux3
    (83) aux3 -> . expresion
    (84) aux3 -> . objeto_metodo
    (85) aux3 -> . CSTRING
    (86) aux3 -> . expresion COMMA aux3
    (87) aux3 -> . objeto_metodo COMMA aux3
    (88) aux3 -> . CSTRING COMMA aux3
    (133) expresion -> . exp
    (134) expresion -> . exp LT expresion
    (135) expresion -> . exp GT expresion
    (136) expresion -> . exp GE expresion
    (137) expresion -> . exp LE expresion
    (138) expresion -> . exp EQ expresion
    (139) expresion -> . exp NE expresion
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    CSTRING         shift and go to state 114
    ID              shift and go to state 109
    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    aux3                           shift and go to state 211
    expresion                      shift and go to state 112
    objeto_metodo                  shift and go to state 113
    exp                            shift and go to state 80
    llamada_func                   shift and go to state 82
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 172

    (120) llamada_rparen -> aux RPAREN .

    VAR             reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    PUBLIC          reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    IF              reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    ID              reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    PRIVATE         reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    PROTECTED       reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    PRINT           reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    READ            reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    VOID            reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    INT             reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    FLOAT           reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    CHAR            reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    STRING          reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    BOOL            reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    WHILE           reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    RBRACE          reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    RETURN          reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    TIMES           reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    DIVIDE          reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    MODULO          reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    LT              reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    GT              reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    GE              reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    LE              reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    EQ              reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    NE              reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    PLUS            reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    MINUS           reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    AND             reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    OR              reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    RBRACKET        reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    RPAREN          reduce using rule 120 (llamada_rparen -> aux RPAREN .)
    COMMA           reduce using rule 120 (llamada_rparen -> aux RPAREN .)

    (78) aux4 -> . ID
    (79) aux4 -> . objeto_aAcceso
    (80) aux4 -> . ID COMMA aux4
    (81) aux4 -> . objeto_aAcceso COMMA aux4
    (164) objeto_aAcceso -> . ID PERIOD ID
=======
    (130) expresion -> exp NE expresion .

    AND             reduce using rule 130 (expresion -> exp NE expresion .)
    OR              reduce using rule 130 (expresion -> exp NE expresion .)
    VAR             reduce using rule 130 (expresion -> exp NE expresion .)
    PUBLIC          reduce using rule 130 (expresion -> exp NE expresion .)
    IF              reduce using rule 130 (expresion -> exp NE expresion .)
    PRIVATE         reduce using rule 130 (expresion -> exp NE expresion .)
    PROTECTED       reduce using rule 130 (expresion -> exp NE expresion .)
    ID              reduce using rule 130 (expresion -> exp NE expresion .)
    PRINT           reduce using rule 130 (expresion -> exp NE expresion .)
    READ            reduce using rule 130 (expresion -> exp NE expresion .)
    VOID            reduce using rule 130 (expresion -> exp NE expresion .)
    INT             reduce using rule 130 (expresion -> exp NE expresion .)
    FLOAT           reduce using rule 130 (expresion -> exp NE expresion .)
    CHAR            reduce using rule 130 (expresion -> exp NE expresion .)
    STRING          reduce using rule 130 (expresion -> exp NE expresion .)
    BOOL            reduce using rule 130 (expresion -> exp NE expresion .)
    WHILE           reduce using rule 130 (expresion -> exp NE expresion .)
    RBRACE          reduce using rule 130 (expresion -> exp NE expresion .)
    RETURN          reduce using rule 130 (expresion -> exp NE expresion .)
    RPAREN          reduce using rule 130 (expresion -> exp NE expresion .)
    COMMA           reduce using rule 130 (expresion -> exp NE expresion .)
>>>>>>> Functions

    ID              shift and go to state 120

    aux4                           shift and go to state 214
    objeto_aAcceso                 shift and go to state 121

state 176

    (81) aux4 -> objeto_aAcceso COMMA . aux4
    (78) aux4 -> . ID
    (79) aux4 -> . objeto_aAcceso
    (80) aux4 -> . ID COMMA aux4
    (81) aux4 -> . objeto_aAcceso COMMA aux4
    (164) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 120

    objeto_aAcceso                 shift and go to state 121
    aux4                           shift and go to state 215

state 177

    (91) vars -> VAR ID LBRACKET cint RBRACKET . COLON tipo_simple
    (92) vars -> VAR ID LBRACKET cint RBRACKET . COLON tipo_compuesto
    (93) vars -> VAR ID LBRACKET cint RBRACKET . LBRACKET cint RBRACKET COLON tipo_simple
    (94) vars -> VAR ID LBRACKET cint RBRACKET . LBRACKET cint RBRACKET COLON tipo_compuesto

    COLON           shift and go to state 217
    LBRACKET        shift and go to state 216


state 178

    (23) sort_p -> ID PERIOD SORT LPAREN aux_sort . RPAREN

    RPAREN          shift and go to state 218


state 179

    (155) var -> ID .
    (159) var -> ID . LBRACKET exp RBRACKET
    (160) var -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

    RPAREN          reduce using rule 155 (var -> ID .)
    LBRACKET        shift and go to state 156


state 180

    (25) find_p -> ID PERIOD FIND LPAREN var . RPAREN

    RPAREN          shift and go to state 219


state 181

    (104) asignacion -> ID EQUALS ID LBRACKET exp . RBRACKET
    (105) asignacion -> ID EQUALS ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET
    (159) var -> ID LBRACKET exp . RBRACKET
    (160) var -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET
    (141) exp -> exp . PLUS termino
    (142) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 220
    PLUS            shift and go to state 143
    MINUS           shift and go to state 144


state 182

    (134) expresion -> exp LT expresion .

    AND             reduce using rule 134 (expresion -> exp LT expresion .)
    OR              reduce using rule 134 (expresion -> exp LT expresion .)
    VAR             reduce using rule 134 (expresion -> exp LT expresion .)
    PUBLIC          reduce using rule 134 (expresion -> exp LT expresion .)
    IF              reduce using rule 134 (expresion -> exp LT expresion .)
    ID              reduce using rule 134 (expresion -> exp LT expresion .)
    PRIVATE         reduce using rule 134 (expresion -> exp LT expresion .)
    PROTECTED       reduce using rule 134 (expresion -> exp LT expresion .)
    PRINT           reduce using rule 134 (expresion -> exp LT expresion .)
    READ            reduce using rule 134 (expresion -> exp LT expresion .)
    VOID            reduce using rule 134 (expresion -> exp LT expresion .)
    INT             reduce using rule 134 (expresion -> exp LT expresion .)
    FLOAT           reduce using rule 134 (expresion -> exp LT expresion .)
    CHAR            reduce using rule 134 (expresion -> exp LT expresion .)
    STRING          reduce using rule 134 (expresion -> exp LT expresion .)
    BOOL            reduce using rule 134 (expresion -> exp LT expresion .)
    WHILE           reduce using rule 134 (expresion -> exp LT expresion .)
    RBRACE          reduce using rule 134 (expresion -> exp LT expresion .)
    RETURN          reduce using rule 134 (expresion -> exp LT expresion .)
    RPAREN          reduce using rule 134 (expresion -> exp LT expresion .)
    COMMA           reduce using rule 134 (expresion -> exp LT expresion .)


state 183

    (135) expresion -> exp GT expresion .

    AND             reduce using rule 135 (expresion -> exp GT expresion .)
    OR              reduce using rule 135 (expresion -> exp GT expresion .)
    VAR             reduce using rule 135 (expresion -> exp GT expresion .)
    PUBLIC          reduce using rule 135 (expresion -> exp GT expresion .)
    IF              reduce using rule 135 (expresion -> exp GT expresion .)
    ID              reduce using rule 135 (expresion -> exp GT expresion .)
    PRIVATE         reduce using rule 135 (expresion -> exp GT expresion .)
    PROTECTED       reduce using rule 135 (expresion -> exp GT expresion .)
    PRINT           reduce using rule 135 (expresion -> exp GT expresion .)
    READ            reduce using rule 135 (expresion -> exp GT expresion .)
    VOID            reduce using rule 135 (expresion -> exp GT expresion .)
    INT             reduce using rule 135 (expresion -> exp GT expresion .)
    FLOAT           reduce using rule 135 (expresion -> exp GT expresion .)
    CHAR            reduce using rule 135 (expresion -> exp GT expresion .)
    STRING          reduce using rule 135 (expresion -> exp GT expresion .)
    BOOL            reduce using rule 135 (expresion -> exp GT expresion .)
    WHILE           reduce using rule 135 (expresion -> exp GT expresion .)
    RBRACE          reduce using rule 135 (expresion -> exp GT expresion .)
    RETURN          reduce using rule 135 (expresion -> exp GT expresion .)
    RPAREN          reduce using rule 135 (expresion -> exp GT expresion .)
    COMMA           reduce using rule 135 (expresion -> exp GT expresion .)


state 184

    (136) expresion -> exp GE expresion .

    AND             reduce using rule 136 (expresion -> exp GE expresion .)
    OR              reduce using rule 136 (expresion -> exp GE expresion .)
    VAR             reduce using rule 136 (expresion -> exp GE expresion .)
    PUBLIC          reduce using rule 136 (expresion -> exp GE expresion .)
    IF              reduce using rule 136 (expresion -> exp GE expresion .)
    ID              reduce using rule 136 (expresion -> exp GE expresion .)
    PRIVATE         reduce using rule 136 (expresion -> exp GE expresion .)
    PROTECTED       reduce using rule 136 (expresion -> exp GE expresion .)
    PRINT           reduce using rule 136 (expresion -> exp GE expresion .)
    READ            reduce using rule 136 (expresion -> exp GE expresion .)
    VOID            reduce using rule 136 (expresion -> exp GE expresion .)
    INT             reduce using rule 136 (expresion -> exp GE expresion .)
    FLOAT           reduce using rule 136 (expresion -> exp GE expresion .)
    CHAR            reduce using rule 136 (expresion -> exp GE expresion .)
    STRING          reduce using rule 136 (expresion -> exp GE expresion .)
    BOOL            reduce using rule 136 (expresion -> exp GE expresion .)
    WHILE           reduce using rule 136 (expresion -> exp GE expresion .)
    RBRACE          reduce using rule 136 (expresion -> exp GE expresion .)
    RETURN          reduce using rule 136 (expresion -> exp GE expresion .)
    RPAREN          reduce using rule 136 (expresion -> exp GE expresion .)
    COMMA           reduce using rule 136 (expresion -> exp GE expresion .)


state 186

    (137) expresion -> exp LE expresion .

    AND             reduce using rule 137 (expresion -> exp LE expresion .)
    OR              reduce using rule 137 (expresion -> exp LE expresion .)
    VAR             reduce using rule 137 (expresion -> exp LE expresion .)
    PUBLIC          reduce using rule 137 (expresion -> exp LE expresion .)
    IF              reduce using rule 137 (expresion -> exp LE expresion .)
    ID              reduce using rule 137 (expresion -> exp LE expresion .)
    PRIVATE         reduce using rule 137 (expresion -> exp LE expresion .)
    PROTECTED       reduce using rule 137 (expresion -> exp LE expresion .)
    PRINT           reduce using rule 137 (expresion -> exp LE expresion .)
    READ            reduce using rule 137 (expresion -> exp LE expresion .)
    VOID            reduce using rule 137 (expresion -> exp LE expresion .)
    INT             reduce using rule 137 (expresion -> exp LE expresion .)
    FLOAT           reduce using rule 137 (expresion -> exp LE expresion .)
    CHAR            reduce using rule 137 (expresion -> exp LE expresion .)
    STRING          reduce using rule 137 (expresion -> exp LE expresion .)
    BOOL            reduce using rule 137 (expresion -> exp LE expresion .)
    WHILE           reduce using rule 137 (expresion -> exp LE expresion .)
    RBRACE          reduce using rule 137 (expresion -> exp LE expresion .)
    RETURN          reduce using rule 137 (expresion -> exp LE expresion .)
    RPAREN          reduce using rule 137 (expresion -> exp LE expresion .)
    COMMA           reduce using rule 137 (expresion -> exp LE expresion .)


state 186

    (138) expresion -> exp EQ expresion .

    AND             reduce using rule 138 (expresion -> exp EQ expresion .)
    OR              reduce using rule 138 (expresion -> exp EQ expresion .)
    VAR             reduce using rule 138 (expresion -> exp EQ expresion .)
    PUBLIC          reduce using rule 138 (expresion -> exp EQ expresion .)
    IF              reduce using rule 138 (expresion -> exp EQ expresion .)
    ID              reduce using rule 138 (expresion -> exp EQ expresion .)
    PRIVATE         reduce using rule 138 (expresion -> exp EQ expresion .)
    PROTECTED       reduce using rule 138 (expresion -> exp EQ expresion .)
    PRINT           reduce using rule 138 (expresion -> exp EQ expresion .)
    READ            reduce using rule 138 (expresion -> exp EQ expresion .)
    VOID            reduce using rule 138 (expresion -> exp EQ expresion .)
    INT             reduce using rule 138 (expresion -> exp EQ expresion .)
    FLOAT           reduce using rule 138 (expresion -> exp EQ expresion .)
    CHAR            reduce using rule 138 (expresion -> exp EQ expresion .)
    STRING          reduce using rule 138 (expresion -> exp EQ expresion .)
    BOOL            reduce using rule 138 (expresion -> exp EQ expresion .)
    WHILE           reduce using rule 138 (expresion -> exp EQ expresion .)
    RBRACE          reduce using rule 138 (expresion -> exp EQ expresion .)
    RETURN          reduce using rule 138 (expresion -> exp EQ expresion .)
    RPAREN          reduce using rule 138 (expresion -> exp EQ expresion .)
    COMMA           reduce using rule 138 (expresion -> exp EQ expresion .)


state 188

    (139) expresion -> exp NE expresion .

    AND             reduce using rule 139 (expresion -> exp NE expresion .)
    OR              reduce using rule 139 (expresion -> exp NE expresion .)
    VAR             reduce using rule 139 (expresion -> exp NE expresion .)
    PUBLIC          reduce using rule 139 (expresion -> exp NE expresion .)
    IF              reduce using rule 139 (expresion -> exp NE expresion .)
    ID              reduce using rule 139 (expresion -> exp NE expresion .)
    PRIVATE         reduce using rule 139 (expresion -> exp NE expresion .)
    PROTECTED       reduce using rule 139 (expresion -> exp NE expresion .)
    PRINT           reduce using rule 139 (expresion -> exp NE expresion .)
    READ            reduce using rule 139 (expresion -> exp NE expresion .)
    VOID            reduce using rule 139 (expresion -> exp NE expresion .)
    INT             reduce using rule 139 (expresion -> exp NE expresion .)
    FLOAT           reduce using rule 139 (expresion -> exp NE expresion .)
    CHAR            reduce using rule 139 (expresion -> exp NE expresion .)
    STRING          reduce using rule 139 (expresion -> exp NE expresion .)
    BOOL            reduce using rule 139 (expresion -> exp NE expresion .)
    WHILE           reduce using rule 139 (expresion -> exp NE expresion .)
    RBRACE          reduce using rule 139 (expresion -> exp NE expresion .)
    RETURN          reduce using rule 139 (expresion -> exp NE expresion .)
    RPAREN          reduce using rule 139 (expresion -> exp NE expresion .)
    COMMA           reduce using rule 139 (expresion -> exp NE expresion .)


state 189

    (56) param_id -> tipo_simple ID .

    COMMA           reduce using rule 56 (param_id -> tipo_simple ID .)
    RPAREN          reduce using rule 56 (param_id -> tipo_simple ID .)


    (141) exp -> exp PLUS termino .
    (144) termino -> termino . TIMES factor
    (145) termino -> termino . DIVIDE factor
    (146) termino -> termino . MODULO factor

    LT              reduce using rule 141 (exp -> exp PLUS termino .)
    GT              reduce using rule 141 (exp -> exp PLUS termino .)
    GE              reduce using rule 141 (exp -> exp PLUS termino .)
    LE              reduce using rule 141 (exp -> exp PLUS termino .)
    EQ              reduce using rule 141 (exp -> exp PLUS termino .)
    NE              reduce using rule 141 (exp -> exp PLUS termino .)
    PLUS            reduce using rule 141 (exp -> exp PLUS termino .)
    MINUS           reduce using rule 141 (exp -> exp PLUS termino .)
    AND             reduce using rule 141 (exp -> exp PLUS termino .)
    OR              reduce using rule 141 (exp -> exp PLUS termino .)
    VAR             reduce using rule 141 (exp -> exp PLUS termino .)
    PUBLIC          reduce using rule 141 (exp -> exp PLUS termino .)
    IF              reduce using rule 141 (exp -> exp PLUS termino .)
    ID              reduce using rule 141 (exp -> exp PLUS termino .)
    PRIVATE         reduce using rule 141 (exp -> exp PLUS termino .)
    PROTECTED       reduce using rule 141 (exp -> exp PLUS termino .)
    PRINT           reduce using rule 141 (exp -> exp PLUS termino .)
    READ            reduce using rule 141 (exp -> exp PLUS termino .)
    VOID            reduce using rule 141 (exp -> exp PLUS termino .)
    INT             reduce using rule 141 (exp -> exp PLUS termino .)
    FLOAT           reduce using rule 141 (exp -> exp PLUS termino .)
    CHAR            reduce using rule 141 (exp -> exp PLUS termino .)
    STRING          reduce using rule 141 (exp -> exp PLUS termino .)
    BOOL            reduce using rule 141 (exp -> exp PLUS termino .)
    WHILE           reduce using rule 141 (exp -> exp PLUS termino .)
    RBRACE          reduce using rule 141 (exp -> exp PLUS termino .)
    RETURN          reduce using rule 141 (exp -> exp PLUS termino .)
    RBRACKET        reduce using rule 141 (exp -> exp PLUS termino .)
    RPAREN          reduce using rule 141 (exp -> exp PLUS termino .)
    COMMA           reduce using rule 141 (exp -> exp PLUS termino .)
    TIMES           shift and go to state 147
    DIVIDE          shift and go to state 148
    MODULO          shift and go to state 149


state 191

    (142) exp -> exp MINUS termino .
    (144) termino -> termino . TIMES factor
    (145) termino -> termino . DIVIDE factor
    (146) termino -> termino . MODULO factor

    LT              reduce using rule 142 (exp -> exp MINUS termino .)
    GT              reduce using rule 142 (exp -> exp MINUS termino .)
    GE              reduce using rule 142 (exp -> exp MINUS termino .)
    LE              reduce using rule 142 (exp -> exp MINUS termino .)
    EQ              reduce using rule 142 (exp -> exp MINUS termino .)
    NE              reduce using rule 142 (exp -> exp MINUS termino .)
    PLUS            reduce using rule 142 (exp -> exp MINUS termino .)
    MINUS           reduce using rule 142 (exp -> exp MINUS termino .)
    AND             reduce using rule 142 (exp -> exp MINUS termino .)
    OR              reduce using rule 142 (exp -> exp MINUS termino .)
    VAR             reduce using rule 142 (exp -> exp MINUS termino .)
    PUBLIC          reduce using rule 142 (exp -> exp MINUS termino .)
    IF              reduce using rule 142 (exp -> exp MINUS termino .)
    ID              reduce using rule 142 (exp -> exp MINUS termino .)
    PRIVATE         reduce using rule 142 (exp -> exp MINUS termino .)
    PROTECTED       reduce using rule 142 (exp -> exp MINUS termino .)
    PRINT           reduce using rule 142 (exp -> exp MINUS termino .)
    READ            reduce using rule 142 (exp -> exp MINUS termino .)
    VOID            reduce using rule 142 (exp -> exp MINUS termino .)
    INT             reduce using rule 142 (exp -> exp MINUS termino .)
    FLOAT           reduce using rule 142 (exp -> exp MINUS termino .)
    CHAR            reduce using rule 142 (exp -> exp MINUS termino .)
    STRING          reduce using rule 142 (exp -> exp MINUS termino .)
    BOOL            reduce using rule 142 (exp -> exp MINUS termino .)
    WHILE           reduce using rule 142 (exp -> exp MINUS termino .)
    RBRACE          reduce using rule 142 (exp -> exp MINUS termino .)
    RETURN          reduce using rule 142 (exp -> exp MINUS termino .)
    RBRACKET        reduce using rule 142 (exp -> exp MINUS termino .)
    RPAREN          reduce using rule 142 (exp -> exp MINUS termino .)
    COMMA           reduce using rule 142 (exp -> exp MINUS termino .)
    TIMES           shift and go to state 147
    DIVIDE          shift and go to state 148
    MODULO          shift and go to state 149


state 192

    (128) exp_cond -> exp_bool AND exp_cond .

    VAR             reduce using rule 128 (exp_cond -> exp_bool AND exp_cond .)
    PUBLIC          reduce using rule 128 (exp_cond -> exp_bool AND exp_cond .)
    IF              reduce using rule 128 (exp_cond -> exp_bool AND exp_cond .)
    ID              reduce using rule 128 (exp_cond -> exp_bool AND exp_cond .)
    PRIVATE         reduce using rule 128 (exp_cond -> exp_bool AND exp_cond .)
    PROTECTED       reduce using rule 128 (exp_cond -> exp_bool AND exp_cond .)
    PRINT           reduce using rule 128 (exp_cond -> exp_bool AND exp_cond .)
    READ            reduce using rule 128 (exp_cond -> exp_bool AND exp_cond .)
    VOID            reduce using rule 128 (exp_cond -> exp_bool AND exp_cond .)
    INT             reduce using rule 128 (exp_cond -> exp_bool AND exp_cond .)
    FLOAT           reduce using rule 128 (exp_cond -> exp_bool AND exp_cond .)
    CHAR            reduce using rule 128 (exp_cond -> exp_bool AND exp_cond .)
    STRING          reduce using rule 128 (exp_cond -> exp_bool AND exp_cond .)
    BOOL            reduce using rule 128 (exp_cond -> exp_bool AND exp_cond .)
    WHILE           reduce using rule 128 (exp_cond -> exp_bool AND exp_cond .)
    RBRACE          reduce using rule 128 (exp_cond -> exp_bool AND exp_cond .)
    RETURN          reduce using rule 128 (exp_cond -> exp_bool AND exp_cond .)
    RPAREN          reduce using rule 128 (exp_cond -> exp_bool AND exp_cond .)


state 193

    (129) exp_cond -> exp_bool OR exp_cond .

    VAR             reduce using rule 129 (exp_cond -> exp_bool OR exp_cond .)
    PUBLIC          reduce using rule 129 (exp_cond -> exp_bool OR exp_cond .)
    IF              reduce using rule 129 (exp_cond -> exp_bool OR exp_cond .)
    ID              reduce using rule 129 (exp_cond -> exp_bool OR exp_cond .)
    PRIVATE         reduce using rule 129 (exp_cond -> exp_bool OR exp_cond .)
    PROTECTED       reduce using rule 129 (exp_cond -> exp_bool OR exp_cond .)
    PRINT           reduce using rule 129 (exp_cond -> exp_bool OR exp_cond .)
    READ            reduce using rule 129 (exp_cond -> exp_bool OR exp_cond .)
    VOID            reduce using rule 129 (exp_cond -> exp_bool OR exp_cond .)
    INT             reduce using rule 129 (exp_cond -> exp_bool OR exp_cond .)
    FLOAT           reduce using rule 129 (exp_cond -> exp_bool OR exp_cond .)
    CHAR            reduce using rule 129 (exp_cond -> exp_bool OR exp_cond .)
    STRING          reduce using rule 129 (exp_cond -> exp_bool OR exp_cond .)
    BOOL            reduce using rule 129 (exp_cond -> exp_bool OR exp_cond .)
    WHILE           reduce using rule 129 (exp_cond -> exp_bool OR exp_cond .)
    RBRACE          reduce using rule 129 (exp_cond -> exp_bool OR exp_cond .)
    RETURN          reduce using rule 129 (exp_cond -> exp_bool OR exp_cond .)
    RPAREN          reduce using rule 129 (exp_cond -> exp_bool OR exp_cond .)


state 192

    (144) termino -> termino TIMES factor .

    TIMES           reduce using rule 144 (termino -> termino TIMES factor .)
    DIVIDE          reduce using rule 144 (termino -> termino TIMES factor .)
    MODULO          reduce using rule 144 (termino -> termino TIMES factor .)
    LT              reduce using rule 144 (termino -> termino TIMES factor .)
    GT              reduce using rule 144 (termino -> termino TIMES factor .)
    GE              reduce using rule 144 (termino -> termino TIMES factor .)
    LE              reduce using rule 144 (termino -> termino TIMES factor .)
    EQ              reduce using rule 144 (termino -> termino TIMES factor .)
    NE              reduce using rule 144 (termino -> termino TIMES factor .)
    PLUS            reduce using rule 144 (termino -> termino TIMES factor .)
    MINUS           reduce using rule 144 (termino -> termino TIMES factor .)
    AND             reduce using rule 144 (termino -> termino TIMES factor .)
    OR              reduce using rule 144 (termino -> termino TIMES factor .)
    VAR             reduce using rule 144 (termino -> termino TIMES factor .)
    PUBLIC          reduce using rule 144 (termino -> termino TIMES factor .)
    IF              reduce using rule 144 (termino -> termino TIMES factor .)
    ID              reduce using rule 144 (termino -> termino TIMES factor .)
    PRIVATE         reduce using rule 144 (termino -> termino TIMES factor .)
    PROTECTED       reduce using rule 144 (termino -> termino TIMES factor .)
    PRINT           reduce using rule 144 (termino -> termino TIMES factor .)
    READ            reduce using rule 144 (termino -> termino TIMES factor .)
    VOID            reduce using rule 144 (termino -> termino TIMES factor .)
    INT             reduce using rule 144 (termino -> termino TIMES factor .)
    FLOAT           reduce using rule 144 (termino -> termino TIMES factor .)
    CHAR            reduce using rule 144 (termino -> termino TIMES factor .)
    STRING          reduce using rule 144 (termino -> termino TIMES factor .)
    BOOL            reduce using rule 144 (termino -> termino TIMES factor .)
    WHILE           reduce using rule 144 (termino -> termino TIMES factor .)
    RBRACE          reduce using rule 144 (termino -> termino TIMES factor .)
    RETURN          reduce using rule 144 (termino -> termino TIMES factor .)
    RBRACKET        reduce using rule 144 (termino -> termino TIMES factor .)
    RPAREN          reduce using rule 144 (termino -> termino TIMES factor .)
    COMMA           reduce using rule 144 (termino -> termino TIMES factor .)


state 195

    (145) termino -> termino DIVIDE factor .

    TIMES           reduce using rule 145 (termino -> termino DIVIDE factor .)
    DIVIDE          reduce using rule 145 (termino -> termino DIVIDE factor .)
    MODULO          reduce using rule 145 (termino -> termino DIVIDE factor .)
    LT              reduce using rule 145 (termino -> termino DIVIDE factor .)
    GT              reduce using rule 145 (termino -> termino DIVIDE factor .)
    GE              reduce using rule 145 (termino -> termino DIVIDE factor .)
    LE              reduce using rule 145 (termino -> termino DIVIDE factor .)
    EQ              reduce using rule 145 (termino -> termino DIVIDE factor .)
    NE              reduce using rule 145 (termino -> termino DIVIDE factor .)
    PLUS            reduce using rule 145 (termino -> termino DIVIDE factor .)
    MINUS           reduce using rule 145 (termino -> termino DIVIDE factor .)
    AND             reduce using rule 145 (termino -> termino DIVIDE factor .)
    OR              reduce using rule 145 (termino -> termino DIVIDE factor .)
    VAR             reduce using rule 145 (termino -> termino DIVIDE factor .)
    PUBLIC          reduce using rule 145 (termino -> termino DIVIDE factor .)
    IF              reduce using rule 145 (termino -> termino DIVIDE factor .)
    ID              reduce using rule 145 (termino -> termino DIVIDE factor .)
    PRIVATE         reduce using rule 145 (termino -> termino DIVIDE factor .)
    PROTECTED       reduce using rule 145 (termino -> termino DIVIDE factor .)
    PRINT           reduce using rule 145 (termino -> termino DIVIDE factor .)
    READ            reduce using rule 145 (termino -> termino DIVIDE factor .)
    VOID            reduce using rule 145 (termino -> termino DIVIDE factor .)
    INT             reduce using rule 145 (termino -> termino DIVIDE factor .)
    FLOAT           reduce using rule 145 (termino -> termino DIVIDE factor .)
    CHAR            reduce using rule 145 (termino -> termino DIVIDE factor .)
    STRING          reduce using rule 145 (termino -> termino DIVIDE factor .)
    BOOL            reduce using rule 145 (termino -> termino DIVIDE factor .)
    WHILE           reduce using rule 145 (termino -> termino DIVIDE factor .)
    RBRACE          reduce using rule 145 (termino -> termino DIVIDE factor .)
    RETURN          reduce using rule 145 (termino -> termino DIVIDE factor .)
    RBRACKET        reduce using rule 145 (termino -> termino DIVIDE factor .)
    RPAREN          reduce using rule 145 (termino -> termino DIVIDE factor .)
    COMMA           reduce using rule 145 (termino -> termino DIVIDE factor .)


state 196

    (146) termino -> termino MODULO factor .

    TIMES           reduce using rule 146 (termino -> termino MODULO factor .)
    DIVIDE          reduce using rule 146 (termino -> termino MODULO factor .)
    MODULO          reduce using rule 146 (termino -> termino MODULO factor .)
    LT              reduce using rule 146 (termino -> termino MODULO factor .)
    GT              reduce using rule 146 (termino -> termino MODULO factor .)
    GE              reduce using rule 146 (termino -> termino MODULO factor .)
    LE              reduce using rule 146 (termino -> termino MODULO factor .)
    EQ              reduce using rule 146 (termino -> termino MODULO factor .)
    NE              reduce using rule 146 (termino -> termino MODULO factor .)
    PLUS            reduce using rule 146 (termino -> termino MODULO factor .)
    MINUS           reduce using rule 146 (termino -> termino MODULO factor .)
    AND             reduce using rule 146 (termino -> termino MODULO factor .)
    OR              reduce using rule 146 (termino -> termino MODULO factor .)
    VAR             reduce using rule 146 (termino -> termino MODULO factor .)
    PUBLIC          reduce using rule 146 (termino -> termino MODULO factor .)
    IF              reduce using rule 146 (termino -> termino MODULO factor .)
    ID              reduce using rule 146 (termino -> termino MODULO factor .)
    PRIVATE         reduce using rule 146 (termino -> termino MODULO factor .)
    PROTECTED       reduce using rule 146 (termino -> termino MODULO factor .)
    PRINT           reduce using rule 146 (termino -> termino MODULO factor .)
    READ            reduce using rule 146 (termino -> termino MODULO factor .)
    VOID            reduce using rule 146 (termino -> termino MODULO factor .)
    INT             reduce using rule 146 (termino -> termino MODULO factor .)
    FLOAT           reduce using rule 146 (termino -> termino MODULO factor .)
    CHAR            reduce using rule 146 (termino -> termino MODULO factor .)
    STRING          reduce using rule 146 (termino -> termino MODULO factor .)
    BOOL            reduce using rule 146 (termino -> termino MODULO factor .)
    WHILE           reduce using rule 146 (termino -> termino MODULO factor .)
    RBRACE          reduce using rule 146 (termino -> termino MODULO factor .)
    RETURN          reduce using rule 146 (termino -> termino MODULO factor .)
    RBRACKET        reduce using rule 146 (termino -> termino MODULO factor .)
    RPAREN          reduce using rule 146 (termino -> termino MODULO factor .)
    COMMA           reduce using rule 146 (termino -> termino MODULO factor .)


state 195

    (147) factor -> LPAREN exp_cond RPAREN .

    TIMES           reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    DIVIDE          reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    MODULO          reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    LT              reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    GT              reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    GE              reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    LE              reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    EQ              reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    NE              reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    PLUS            reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    MINUS           reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    AND             reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    OR              reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    VAR             reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    PUBLIC          reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    IF              reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    ID              reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    PRIVATE         reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    PROTECTED       reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    PRINT           reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    READ            reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    VOID            reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    INT             reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    FLOAT           reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    CHAR            reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    STRING          reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    BOOL            reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    WHILE           reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    RBRACE          reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    RETURN          reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    RBRACKET        reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    RPAREN          reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)
    COMMA           reduce using rule 147 (factor -> LPAREN exp_cond RPAREN .)


state 198

    (159) var -> ID LBRACKET exp . RBRACKET
    (160) var -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET
    (141) exp -> exp . PLUS termino
    (142) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 221
    PLUS            shift and go to state 143
    MINUS           shift and go to state 144


state 199

    (164) objeto_aAcceso -> ID PERIOD ID .

    TIMES           reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    DIVIDE          reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    MODULO          reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACKET        reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    PLUS            reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    MINUS           reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    LT              reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    GT              reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    GE              reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    LE              reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    EQ              reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    NE              reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    AND             reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    OR              reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    RPAREN          reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    COMMA           reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    VAR             reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    PUBLIC          reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    IF              reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    ID              reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    PRIVATE         reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    PROTECTED       reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    PRINT           reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    READ            reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    VOID            reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    INT             reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    FLOAT           reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    CHAR            reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    STRING          reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    BOOL            reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    WHILE           reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACE          reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)
    RETURN          reduce using rule 164 (objeto_aAcceso -> ID PERIOD ID .)


state 200

    (112) asignacion -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS exp_cond
    (113) asignacion -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    exp                            shift and go to state 222
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 201

    (108) asignacion -> ID LBRACKET exp RBRACKET EQUALS . exp_cond
    (109) asignacion -> ID LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (127) exp_cond -> . exp_bool
    (128) exp_cond -> . exp_bool AND exp_cond
    (129) exp_cond -> . exp_bool OR exp_cond
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (130) exp_bool -> . TRUE
    (131) exp_bool -> . FALSE
    (132) exp_bool -> . expresion
    (133) expresion -> . exp
    (134) expresion -> . exp LT expresion
    (135) expresion -> . exp GT expresion
    (136) expresion -> . exp GE expresion
    (137) expresion -> . exp LE expresion
    (138) expresion -> . exp EQ expresion
    (139) expresion -> . exp NE expresion
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    ID              shift and go to state 109
    TRUE            shift and go to state 83
    FALSE           shift and go to state 84
    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    exp                            shift and go to state 80
    exp_cond                       shift and go to state 223
    objeto_metodo                  shift and go to state 224
    exp_bool                       shift and go to state 81
    llamada_func                   shift and go to state 82
    expresion                      shift and go to state 85
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 202

    (33) constructor -> PUBLIC ID LPAREN param RPAREN . bloque
    (34) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 205

    bloque                         shift and go to state 225

state 203

    (65) param -> tipo_simple ID .
    (66) param -> tipo_simple ID . COMMA param

    RPAREN          reduce using rule 65 (param -> tipo_simple ID .)
    COMMA           shift and go to state 226


state 204

    (35) funcion -> scope type DEF id LPAREN . param aux_param RPAREN contexto_func
    (64) param -> .
    (65) param -> . tipo_simple ID
    (66) param -> . tipo_simple ID COMMA param
    (97) tipo_simple -> . INT
    (98) tipo_simple -> . FLOAT
    (99) tipo_simple -> . CHAR
    (100) tipo_simple -> . BOOL

    RPAREN          reduce using rule 64 (param -> .)
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    CHAR            shift and go to state 127
    BOOL            shift and go to state 128

    param                          shift and go to state 227
    tipo_simple                    shift and go to state 160

state 205

    (36) funcion -> scope VOID DEF id_void LPAREN . param aux_param RPAREN contexto_func
    (64) param -> .
    (65) param -> . tipo_simple ID
    (66) param -> . tipo_simple ID COMMA param
    (97) tipo_simple -> . INT
    (98) tipo_simple -> . FLOAT
    (99) tipo_simple -> . CHAR
    (100) tipo_simple -> . BOOL

    RPAREN          reduce using rule 64 (param -> .)
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    CHAR            shift and go to state 127
    BOOL            shift and go to state 128

    param                          shift and go to state 228
    tipo_simple                    shift and go to state 160

state 206

    (26) condicion -> IF LPAREN gotoF RPAREN bloque .
    (27) condicion -> IF LPAREN gotoF RPAREN bloque . elif
    (28) elif -> . aux_elif ELIF LPAREN gotoF RPAREN bloque
    (29) elif -> . aux_elif ELIF LPAREN gotoF RPAREN bloque elif
    (30) aux_elif -> .

    VAR             reduce using rule 26 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    PUBLIC          reduce using rule 26 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    IF              reduce using rule 26 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    ID              reduce using rule 26 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    PRIVATE         reduce using rule 26 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    PROTECTED       reduce using rule 26 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    PRINT           reduce using rule 26 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    READ            reduce using rule 26 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    VOID            reduce using rule 26 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    INT             reduce using rule 26 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    FLOAT           reduce using rule 26 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    CHAR            reduce using rule 26 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    STRING          reduce using rule 26 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    BOOL            reduce using rule 26 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    WHILE           reduce using rule 26 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    RBRACE          reduce using rule 26 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    RETURN          reduce using rule 26 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    ELIF            reduce using rule 30 (aux_elif -> .)

    elif                           shift and go to state 229
    aux_elif                       shift and go to state 230

state 207

    (34) bloque -> LBRACE . aux5 RBRACE
    (60) aux5 -> . estatuto
    (61) aux5 -> . RETURN exp_cond aux_return
    (62) aux5 -> . estatuto aux5
    (63) aux5 -> . RETURN exp_cond aux_return aux5
    (72) estatuto -> . asignacion
    (73) estatuto -> . escritura
    (74) estatuto -> . llamada_func
    (75) estatuto -> . objeto_metodo
    (76) estatuto -> . lectura
    (102) asignacion -> . ID EQUALS exp_cond
    (103) asignacion -> . ID EQUALS objeto_metodo
    (104) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET
    (105) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (106) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (107) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (108) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (109) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (110) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (111) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (112) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (113) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (114) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (115) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (82) escritura -> . PRINT LPAREN aux3 RPAREN
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (77) lectura -> . READ LPAREN aux4 RPAREN
    (164) objeto_aAcceso -> . ID PERIOD ID
    (118) llamada_id -> . ID

    RETURN          shift and go to state 233
    ID              shift and go to state 234
    PRINT           shift and go to state 35
    READ            shift and go to state 37

    aux5                           shift and go to state 231
    estatuto                       shift and go to state 232
    asignacion                     shift and go to state 27
    escritura                      shift and go to state 28
    llamada_func                   shift and go to state 29
    objeto_metodo                  shift and go to state 30
    lectura                        shift and go to state 31
    objeto_aAcceso                 shift and go to state 34
    llamada_id                     shift and go to state 36

state 208

    (31) ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN . bloque
    (34) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 205

    bloque                         shift and go to state 235

state 207

    (114) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS exp_cond
    (115) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    objeto_aAcceso                 shift and go to state 91
    exp                            shift and go to state 236
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 210

    (110) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS . exp_cond
    (111) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (127) exp_cond -> . exp_bool
    (128) exp_cond -> . exp_bool AND exp_cond
    (129) exp_cond -> . exp_bool OR exp_cond
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (130) exp_bool -> . TRUE
    (131) exp_bool -> . FALSE
    (132) exp_bool -> . expresion
    (133) expresion -> . exp
    (134) expresion -> . exp LT expresion
    (135) expresion -> . exp GT expresion
    (136) expresion -> . exp GE expresion
    (137) expresion -> . exp LE expresion
    (138) expresion -> . exp EQ expresion
    (139) expresion -> . exp NE expresion
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    ID              shift and go to state 109
    TRUE            shift and go to state 83
    FALSE           shift and go to state 84
    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    objeto_aAcceso                 shift and go to state 91
    exp                            shift and go to state 80
    exp_cond                       shift and go to state 237
    objeto_metodo                  shift and go to state 238
    exp_bool                       shift and go to state 81
    llamada_func                   shift and go to state 82
    expresion                      shift and go to state 85
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    var                            shift and go to state 92
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 211

    (86) aux3 -> expresion COMMA aux3 .

    RPAREN          reduce using rule 86 (aux3 -> expresion COMMA aux3 .)


state 212

    (87) aux3 -> objeto_metodo COMMA aux3 .

    RPAREN          reduce using rule 87 (aux3 -> objeto_metodo COMMA aux3 .)


state 213

    (88) aux3 -> CSTRING COMMA aux3 .

    RPAREN          reduce using rule 88 (aux3 -> CSTRING COMMA aux3 .)


state 214

    (123) aux -> exp aux_exp aux_comma . aux
    (122) aux -> . exp aux_exp
    (123) aux -> . exp aux_exp aux_comma aux
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    exp                            shift and go to state 118
    aux                            shift and go to state 239
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 215

    (125) aux_comma -> COMMA .

    LPAREN          reduce using rule 125 (aux_comma -> COMMA .)
    PLUS            reduce using rule 125 (aux_comma -> COMMA .)
    MINUS           reduce using rule 125 (aux_comma -> COMMA .)
    ID              reduce using rule 125 (aux_comma -> COMMA .)
    CINT            reduce using rule 125 (aux_comma -> COMMA .)
    NUMBER          reduce using rule 125 (aux_comma -> COMMA .)
    CCHAR           reduce using rule 125 (aux_comma -> COMMA .)


state 216

    (80) aux4 -> ID COMMA aux4 .

    RPAREN          reduce using rule 80 (aux4 -> ID COMMA aux4 .)


state 217

    (81) aux4 -> objeto_aAcceso COMMA aux4 .

    RPAREN          reduce using rule 81 (aux4 -> objeto_aAcceso COMMA aux4 .)


state 218

    (93) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET . cint RBRACKET COLON tipo_simple
    (94) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET . cint RBRACKET COLON tipo_compuesto
    (161) cint -> . CINT

    CINT            shift and go to state 96

    cint                           shift and go to state 240

state 219

    (91) vars -> VAR ID LBRACKET cint RBRACKET COLON . tipo_simple
    (92) vars -> VAR ID LBRACKET cint RBRACKET COLON . tipo_compuesto
    (97) tipo_simple -> . INT
    (98) tipo_simple -> . FLOAT
    (99) tipo_simple -> . CHAR
    (100) tipo_simple -> . BOOL
    (101) tipo_compuesto -> . ID

    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    CHAR            shift and go to state 127
    BOOL            shift and go to state 128
    ID              shift and go to state 129

    tipo_simple                    shift and go to state 241
    tipo_compuesto                 shift and go to state 242

state 218

    (23) sort_p -> ID PERIOD SORT LPAREN aux_sort RPAREN .

    VAR             reduce using rule 23 (sort_p -> ID PERIOD SORT LPAREN aux_sort RPAREN .)
    PUBLIC          reduce using rule 23 (sort_p -> ID PERIOD SORT LPAREN aux_sort RPAREN .)
    IF              reduce using rule 23 (sort_p -> ID PERIOD SORT LPAREN aux_sort RPAREN .)
    ID              reduce using rule 23 (sort_p -> ID PERIOD SORT LPAREN aux_sort RPAREN .)
    PRIVATE         reduce using rule 23 (sort_p -> ID PERIOD SORT LPAREN aux_sort RPAREN .)
    PROTECTED       reduce using rule 23 (sort_p -> ID PERIOD SORT LPAREN aux_sort RPAREN .)
    PRINT           reduce using rule 23 (sort_p -> ID PERIOD SORT LPAREN aux_sort RPAREN .)
    READ            reduce using rule 23 (sort_p -> ID PERIOD SORT LPAREN aux_sort RPAREN .)
    VOID            reduce using rule 23 (sort_p -> ID PERIOD SORT LPAREN aux_sort RPAREN .)
    INT             reduce using rule 23 (sort_p -> ID PERIOD SORT LPAREN aux_sort RPAREN .)
    FLOAT           reduce using rule 23 (sort_p -> ID PERIOD SORT LPAREN aux_sort RPAREN .)
    CHAR            reduce using rule 23 (sort_p -> ID PERIOD SORT LPAREN aux_sort RPAREN .)
    STRING          reduce using rule 23 (sort_p -> ID PERIOD SORT LPAREN aux_sort RPAREN .)
    BOOL            reduce using rule 23 (sort_p -> ID PERIOD SORT LPAREN aux_sort RPAREN .)
    WHILE           reduce using rule 23 (sort_p -> ID PERIOD SORT LPAREN aux_sort RPAREN .)
    RBRACE          reduce using rule 23 (sort_p -> ID PERIOD SORT LPAREN aux_sort RPAREN .)
    RETURN          reduce using rule 23 (sort_p -> ID PERIOD SORT LPAREN aux_sort RPAREN .)


state 221

    (25) find_p -> ID PERIOD FIND LPAREN var RPAREN .

    VAR             reduce using rule 25 (find_p -> ID PERIOD FIND LPAREN var RPAREN .)
    PUBLIC          reduce using rule 25 (find_p -> ID PERIOD FIND LPAREN var RPAREN .)
    IF              reduce using rule 25 (find_p -> ID PERIOD FIND LPAREN var RPAREN .)
    ID              reduce using rule 25 (find_p -> ID PERIOD FIND LPAREN var RPAREN .)
    PRIVATE         reduce using rule 25 (find_p -> ID PERIOD FIND LPAREN var RPAREN .)
    PROTECTED       reduce using rule 25 (find_p -> ID PERIOD FIND LPAREN var RPAREN .)
    PRINT           reduce using rule 25 (find_p -> ID PERIOD FIND LPAREN var RPAREN .)
    READ            reduce using rule 25 (find_p -> ID PERIOD FIND LPAREN var RPAREN .)
    VOID            reduce using rule 25 (find_p -> ID PERIOD FIND LPAREN var RPAREN .)
    INT             reduce using rule 25 (find_p -> ID PERIOD FIND LPAREN var RPAREN .)
    FLOAT           reduce using rule 25 (find_p -> ID PERIOD FIND LPAREN var RPAREN .)
    CHAR            reduce using rule 25 (find_p -> ID PERIOD FIND LPAREN var RPAREN .)
    STRING          reduce using rule 25 (find_p -> ID PERIOD FIND LPAREN var RPAREN .)
    BOOL            reduce using rule 25 (find_p -> ID PERIOD FIND LPAREN var RPAREN .)
    WHILE           reduce using rule 25 (find_p -> ID PERIOD FIND LPAREN var RPAREN .)
    RBRACE          reduce using rule 25 (find_p -> ID PERIOD FIND LPAREN var RPAREN .)
    RETURN          reduce using rule 25 (find_p -> ID PERIOD FIND LPAREN var RPAREN .)


state 222

    (104) asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .
    (105) asignacion -> ID EQUALS ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET
    (159) var -> ID LBRACKET exp RBRACKET .
    (160) var -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET

  ! reduce/reduce conflict for VAR resolved using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for IF resolved using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for ID resolved using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for PRINT resolved using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for READ resolved using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for VOID resolved using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for INT resolved using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for FLOAT resolved using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for CHAR resolved using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for STRING resolved using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for BOOL resolved using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for WHILE resolved using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for RBRACE resolved using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for RETURN resolved using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
    VAR             reduce using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
    PUBLIC          reduce using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
    IF              reduce using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
    ID              reduce using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
    PRIVATE         reduce using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
    PROTECTED       reduce using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
    PRINT           reduce using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
    READ            reduce using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
    VOID            reduce using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
    INT             reduce using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
    FLOAT           reduce using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
    CHAR            reduce using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
    STRING          reduce using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
    BOOL            reduce using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
    WHILE           reduce using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
    RBRACE          reduce using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
    RETURN          reduce using rule 104 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET .)
    LBRACKET        shift and go to state 243
    TIMES           reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    DIVIDE          reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    MODULO          reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    LT              reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    GT              reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    GE              reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    LE              reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    EQ              reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    NE              reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    AND             reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    OR              reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)

  ! VAR             [ reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .) ]
  ! PUBLIC          [ reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .) ]
  ! IF              [ reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .) ]
  ! ID              [ reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .) ]
  ! PRIVATE         [ reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .) ]
  ! PROTECTED       [ reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .) ]
  ! PRINT           [ reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .) ]
  ! READ            [ reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .) ]
  ! VOID            [ reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .) ]
  ! INT             [ reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .) ]
  ! FLOAT           [ reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .) ]
  ! CHAR            [ reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .) ]
  ! STRING          [ reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .) ]
  ! BOOL            [ reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .) ]
  ! WHILE           [ reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .) ]
  ! RBRACE          [ reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .) ]
  ! RETURN          [ reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .) ]


state 223

    (159) var -> ID LBRACKET exp RBRACKET .
    (160) var -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET

    TIMES           reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    DIVIDE          reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    MODULO          reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    LT              reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    GT              reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    GE              reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    LE              reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    EQ              reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    NE              reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    AND             reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    OR              reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    VAR             reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    PUBLIC          reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    IF              reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    ID              reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    PRIVATE         reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    PROTECTED       reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    PRINT           reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    READ            reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    VOID            reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    INT             reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    FLOAT           reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    CHAR            reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    STRING          reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    BOOL            reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    WHILE           reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    RBRACE          reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    RETURN          reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    COMMA           reduce using rule 159 (var -> ID LBRACKET exp RBRACKET .)
    LBRACKET        shift and go to state 244


state 224

    (112) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS exp_cond
    (113) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (141) exp -> exp . PLUS termino
    (142) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 245
    PLUS            shift and go to state 143
    MINUS           shift and go to state 144


state 225

    (108) asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .

    VAR             reduce using rule 108 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    PUBLIC          reduce using rule 108 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    IF              reduce using rule 108 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    ID              reduce using rule 108 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    PRIVATE         reduce using rule 108 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    PROTECTED       reduce using rule 108 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    PRINT           reduce using rule 108 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    READ            reduce using rule 108 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    VOID            reduce using rule 108 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    INT             reduce using rule 108 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    FLOAT           reduce using rule 108 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    CHAR            reduce using rule 108 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    STRING          reduce using rule 108 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    BOOL            reduce using rule 108 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    WHILE           reduce using rule 108 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    RBRACE          reduce using rule 108 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    RETURN          reduce using rule 108 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)


state 226

    (109) asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 109 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 109 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 109 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 109 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 109 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 109 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 109 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 109 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    VOID            reduce using rule 109 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    INT             reduce using rule 109 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    FLOAT           reduce using rule 109 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    CHAR            reduce using rule 109 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    STRING          reduce using rule 109 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    BOOL            reduce using rule 109 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 109 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 109 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 109 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 227

    (33) constructor -> PUBLIC ID LPAREN param RPAREN bloque .

    VAR             reduce using rule 33 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PUBLIC          reduce using rule 33 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    IF              reduce using rule 33 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    ID              reduce using rule 33 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PRIVATE         reduce using rule 33 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PROTECTED       reduce using rule 33 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PRINT           reduce using rule 33 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    READ            reduce using rule 33 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    VOID            reduce using rule 33 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    INT             reduce using rule 33 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    FLOAT           reduce using rule 33 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    CHAR            reduce using rule 33 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    STRING          reduce using rule 33 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    BOOL            reduce using rule 33 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    WHILE           reduce using rule 33 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    RBRACE          reduce using rule 33 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)


state 228

    (66) param -> tipo_simple ID COMMA . param
    (64) param -> .
    (65) param -> . tipo_simple ID
    (66) param -> . tipo_simple ID COMMA param
    (97) tipo_simple -> . INT
    (98) tipo_simple -> . FLOAT
    (99) tipo_simple -> . CHAR
    (100) tipo_simple -> . BOOL

    RPAREN          reduce using rule 64 (param -> .)
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    CHAR            shift and go to state 127
    BOOL            shift and go to state 128

    tipo_simple                    shift and go to state 160
    param                          shift and go to state 246

state 229

    (35) funcion -> scope type DEF id LPAREN param . aux_param RPAREN contexto_func
    (67) aux_param -> .

    RPAREN          reduce using rule 67 (aux_param -> .)

    aux_param                      shift and go to state 247

state 230

    (36) funcion -> scope VOID DEF id_void LPAREN param . aux_param RPAREN contexto_func
    (67) aux_param -> .

    RPAREN          reduce using rule 67 (aux_param -> .)

    aux_param                      shift and go to state 248

state 231

    (27) condicion -> IF LPAREN gotoF RPAREN bloque elif .

    VAR             reduce using rule 27 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    PUBLIC          reduce using rule 27 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    IF              reduce using rule 27 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    ID              reduce using rule 27 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    PRIVATE         reduce using rule 27 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    PROTECTED       reduce using rule 27 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    PRINT           reduce using rule 27 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    READ            reduce using rule 27 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    VOID            reduce using rule 27 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    INT             reduce using rule 27 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    FLOAT           reduce using rule 27 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    CHAR            reduce using rule 27 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    STRING          reduce using rule 27 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    BOOL            reduce using rule 27 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    WHILE           reduce using rule 27 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    RBRACE          reduce using rule 27 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    RETURN          reduce using rule 27 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)


state 232

    (28) elif -> aux_elif . ELIF LPAREN gotoF RPAREN bloque
    (29) elif -> aux_elif . ELIF LPAREN gotoF RPAREN bloque elif

    ELIF            shift and go to state 249


state 233

    (34) bloque -> LBRACE aux5 . RBRACE

    RBRACE          shift and go to state 250


state 232

    (60) aux5 -> estatuto .
    (62) aux5 -> estatuto . aux5
    (60) aux5 -> . estatuto
    (61) aux5 -> . RETURN exp_cond aux_return
    (62) aux5 -> . estatuto aux5
    (63) aux5 -> . RETURN exp_cond aux_return aux5
    (72) estatuto -> . asignacion
    (73) estatuto -> . escritura
    (74) estatuto -> . llamada_func
    (75) estatuto -> . objeto_metodo
    (76) estatuto -> . lectura
    (102) asignacion -> . ID EQUALS exp_cond
    (103) asignacion -> . ID EQUALS objeto_metodo
    (104) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET
    (105) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (106) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (107) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (108) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (109) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (110) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (111) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (112) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (113) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (114) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (115) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (82) escritura -> . PRINT LPAREN aux3 RPAREN
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (77) lectura -> . READ LPAREN aux4 RPAREN
    (164) objeto_aAcceso -> . ID PERIOD ID
    (118) llamada_id -> . ID

    RBRACE          reduce using rule 60 (aux5 -> estatuto .)
    RETURN          shift and go to state 233
    ID              shift and go to state 234
    PRINT           shift and go to state 35
    READ            shift and go to state 37

    estatuto                       shift and go to state 232
    aux5                           shift and go to state 251
    asignacion                     shift and go to state 27
    escritura                      shift and go to state 28
    llamada_func                   shift and go to state 29
    objeto_metodo                  shift and go to state 30
    lectura                        shift and go to state 31
    objeto_aAcceso                 shift and go to state 34
    llamada_id                     shift and go to state 36

state 235

    (61) aux5 -> RETURN . exp_cond aux_return
    (63) aux5 -> RETURN . exp_cond aux_return aux5
    (127) exp_cond -> . exp_bool
    (128) exp_cond -> . exp_bool AND exp_cond
    (129) exp_cond -> . exp_bool OR exp_cond
    (130) exp_bool -> . TRUE
    (131) exp_bool -> . FALSE
    (132) exp_bool -> . expresion
    (133) expresion -> . exp
    (134) expresion -> . exp LT expresion
    (135) expresion -> . exp GT expresion
    (136) expresion -> . exp GE expresion
    (137) expresion -> . exp LE expresion
    (138) expresion -> . exp EQ expresion
    (139) expresion -> . exp NE expresion
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    TRUE            shift and go to state 83
    FALSE           shift and go to state 84
    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    exp_cond                       shift and go to state 252
    exp_bool                       shift and go to state 81
    expresion                      shift and go to state 85
    exp                            shift and go to state 80
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 236

    (102) asignacion -> ID . EQUALS exp_cond
    (103) asignacion -> ID . EQUALS objeto_metodo
    (104) asignacion -> ID . EQUALS ID LBRACKET exp RBRACKET
    (105) asignacion -> ID . EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (108) asignacion -> ID . LBRACKET exp RBRACKET EQUALS exp_cond
    (109) asignacion -> ID . LBRACKET exp RBRACKET EQUALS objeto_metodo
    (112) asignacion -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (113) asignacion -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (116) objeto_metodo -> ID . PERIOD llamada_func
    (164) objeto_aAcceso -> ID . PERIOD ID
    (118) llamada_id -> ID .

    EQUALS          shift and go to state 51
    LBRACKET        shift and go to state 52
    PERIOD          shift and go to state 136
    LPAREN          reduce using rule 118 (llamada_id -> ID .)


state 237

    (31) ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .

    VAR             reduce using rule 31 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    PUBLIC          reduce using rule 31 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    IF              reduce using rule 31 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    ID              reduce using rule 31 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    PRIVATE         reduce using rule 31 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    PROTECTED       reduce using rule 31 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    PRINT           reduce using rule 31 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    READ            reduce using rule 31 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    VOID            reduce using rule 31 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    INT             reduce using rule 31 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    FLOAT           reduce using rule 31 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    CHAR            reduce using rule 31 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    STRING          reduce using rule 31 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    BOOL            reduce using rule 31 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    WHILE           reduce using rule 31 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    RBRACE          reduce using rule 31 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    RETURN          reduce using rule 31 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)


state 238

    (114) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS exp_cond
    (115) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (141) exp -> exp . PLUS termino
    (142) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 253
    PLUS            shift and go to state 143
    MINUS           shift and go to state 144


state 239

    (110) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .

    VAR             reduce using rule 110 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    PUBLIC          reduce using rule 110 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    IF              reduce using rule 110 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    ID              reduce using rule 110 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    PRIVATE         reduce using rule 110 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    PROTECTED       reduce using rule 110 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    PRINT           reduce using rule 110 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    READ            reduce using rule 110 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    VOID            reduce using rule 110 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    INT             reduce using rule 110 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    FLOAT           reduce using rule 110 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    CHAR            reduce using rule 110 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    STRING          reduce using rule 110 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    BOOL            reduce using rule 110 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    WHILE           reduce using rule 110 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    RBRACE          reduce using rule 110 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    RETURN          reduce using rule 110 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)


state 238

    (111) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 111 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 111 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 111 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 111 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 111 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 111 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 111 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 111 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    VOID            reduce using rule 111 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    INT             reduce using rule 111 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    FLOAT           reduce using rule 111 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    CHAR            reduce using rule 111 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    STRING          reduce using rule 111 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    BOOL            reduce using rule 111 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 111 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 111 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 111 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 241

    (123) aux -> exp aux_exp aux_comma aux .

    RPAREN          reduce using rule 123 (aux -> exp aux_exp aux_comma aux .)


state 242

    (93) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint . RBRACKET COLON tipo_simple
    (94) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint . RBRACKET COLON tipo_compuesto

    RBRACKET        shift and go to state 254


state 243

    (91) vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .

    VAR             reduce using rule 91 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PUBLIC          reduce using rule 91 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    IF              reduce using rule 91 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    ID              reduce using rule 91 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PRIVATE         reduce using rule 91 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PROTECTED       reduce using rule 91 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PRINT           reduce using rule 91 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    READ            reduce using rule 91 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    VOID            reduce using rule 91 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    INT             reduce using rule 91 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    FLOAT           reduce using rule 91 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    CHAR            reduce using rule 91 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    STRING          reduce using rule 91 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    BOOL            reduce using rule 91 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    WHILE           reduce using rule 91 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    RBRACE          reduce using rule 91 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    RETURN          reduce using rule 91 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)


state 244

    (92) vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .

    VAR             reduce using rule 92 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PUBLIC          reduce using rule 92 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    IF              reduce using rule 92 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    ID              reduce using rule 92 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRIVATE         reduce using rule 92 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PROTECTED       reduce using rule 92 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRINT           reduce using rule 92 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    READ            reduce using rule 92 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    VOID            reduce using rule 92 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    INT             reduce using rule 92 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    FLOAT           reduce using rule 92 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    CHAR            reduce using rule 92 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    STRING          reduce using rule 92 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    BOOL            reduce using rule 92 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    WHILE           reduce using rule 92 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RBRACE          reduce using rule 92 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RETURN          reduce using rule 92 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)


state 243

    (105) asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (160) var -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    exp                            shift and go to state 255
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 246

    (160) var -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    exp                            shift and go to state 256
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 247

    (112) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS exp_cond
    (113) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS objeto_metodo

    EQUALS          shift and go to state 257


state 248

    (66) param -> tipo_simple ID COMMA param .

    RPAREN          reduce using rule 66 (param -> tipo_simple ID COMMA param .)


state 249

    (35) funcion -> scope type DEF id LPAREN param aux_param . RPAREN contexto_func

    RPAREN          shift and go to state 258


state 250

    (36) funcion -> scope VOID DEF id_void LPAREN param aux_param . RPAREN contexto_func

    RPAREN          shift and go to state 259


state 251

    (28) elif -> aux_elif ELIF . LPAREN gotoF RPAREN bloque
    (29) elif -> aux_elif ELIF . LPAREN gotoF RPAREN bloque elif

    LPAREN          shift and go to state 260


state 250

    (34) bloque -> LBRACE aux5 RBRACE .

    ELIF            reduce using rule 34 (bloque -> LBRACE aux5 RBRACE .)
    VAR             reduce using rule 34 (bloque -> LBRACE aux5 RBRACE .)
    PUBLIC          reduce using rule 34 (bloque -> LBRACE aux5 RBRACE .)
    IF              reduce using rule 34 (bloque -> LBRACE aux5 RBRACE .)
    ID              reduce using rule 34 (bloque -> LBRACE aux5 RBRACE .)
    PRIVATE         reduce using rule 34 (bloque -> LBRACE aux5 RBRACE .)
    PROTECTED       reduce using rule 34 (bloque -> LBRACE aux5 RBRACE .)
    PRINT           reduce using rule 34 (bloque -> LBRACE aux5 RBRACE .)
    READ            reduce using rule 34 (bloque -> LBRACE aux5 RBRACE .)
    VOID            reduce using rule 34 (bloque -> LBRACE aux5 RBRACE .)
    INT             reduce using rule 34 (bloque -> LBRACE aux5 RBRACE .)
    FLOAT           reduce using rule 34 (bloque -> LBRACE aux5 RBRACE .)
    CHAR            reduce using rule 34 (bloque -> LBRACE aux5 RBRACE .)
    STRING          reduce using rule 34 (bloque -> LBRACE aux5 RBRACE .)
    BOOL            reduce using rule 34 (bloque -> LBRACE aux5 RBRACE .)
    WHILE           reduce using rule 34 (bloque -> LBRACE aux5 RBRACE .)
    RBRACE          reduce using rule 34 (bloque -> LBRACE aux5 RBRACE .)
    RETURN          reduce using rule 34 (bloque -> LBRACE aux5 RBRACE .)


state 253

    (62) aux5 -> estatuto aux5 .

    RBRACE          reduce using rule 62 (aux5 -> estatuto aux5 .)


state 254

    (61) aux5 -> RETURN exp_cond . aux_return
    (63) aux5 -> RETURN exp_cond . aux_return aux5
    (59) aux_return -> .

    RETURN          reduce using rule 59 (aux_return -> .)
    ID              reduce using rule 59 (aux_return -> .)
    PRINT           reduce using rule 59 (aux_return -> .)
    READ            reduce using rule 59 (aux_return -> .)
    RBRACE          reduce using rule 59 (aux_return -> .)

    aux_return                     shift and go to state 261

state 255

    (114) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS exp_cond
    (115) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS objeto_metodo

    EQUALS          shift and go to state 262


state 256

    (93) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET . COLON tipo_simple
    (94) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET . COLON tipo_compuesto

    COLON           shift and go to state 263


state 257

    (105) asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET
    (160) var -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET
    (141) exp -> exp . PLUS termino
    (142) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 264
    PLUS            shift and go to state 143
    MINUS           shift and go to state 144


state 258

    (160) var -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET
    (141) exp -> exp . PLUS termino
    (142) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 265
    PLUS            shift and go to state 143
    MINUS           shift and go to state 144


state 259

    (112) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . exp_cond
    (113) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (127) exp_cond -> . exp_bool
    (128) exp_cond -> . exp_bool AND exp_cond
    (129) exp_cond -> . exp_bool OR exp_cond
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (130) exp_bool -> . TRUE
    (131) exp_bool -> . FALSE
    (132) exp_bool -> . expresion
    (133) expresion -> . exp
    (134) expresion -> . exp LT expresion
    (135) expresion -> . exp GT expresion
    (136) expresion -> . exp GE expresion
    (137) expresion -> . exp LE expresion
    (138) expresion -> . exp EQ expresion
    (139) expresion -> . exp NE expresion
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    ID              shift and go to state 109
    TRUE            shift and go to state 83
    FALSE           shift and go to state 84
    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    exp                            shift and go to state 80
    exp_cond                       shift and go to state 266
    objeto_metodo                  shift and go to state 267
    exp_bool                       shift and go to state 81
    llamada_func                   shift and go to state 82
    expresion                      shift and go to state 85
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 260

    (35) funcion -> scope type DEF id LPAREN param aux_param RPAREN . contexto_func
    (44) contexto_func -> . LBRACE aux_contexto_func RBRACE

    LBRACE          shift and go to state 269

    contexto_func                  shift and go to state 268

state 261

    (36) funcion -> scope VOID DEF id_void LPAREN param aux_param RPAREN . contexto_func
    (44) contexto_func -> . LBRACE aux_contexto_func RBRACE

    LBRACE          shift and go to state 269

    contexto_func                  shift and go to state 270

state 262

    (28) elif -> aux_elif ELIF LPAREN . gotoF RPAREN bloque
    (29) elif -> aux_elif ELIF LPAREN . gotoF RPAREN bloque elif
    (126) gotoF -> . exp_cond
    (127) exp_cond -> . exp_bool
    (128) exp_cond -> . exp_bool AND exp_cond
    (129) exp_cond -> . exp_bool OR exp_cond
    (130) exp_bool -> . TRUE
    (131) exp_bool -> . FALSE
    (132) exp_bool -> . expresion
    (133) expresion -> . exp
    (134) expresion -> . exp LT expresion
    (135) expresion -> . exp GT expresion
    (136) expresion -> . exp GE expresion
    (137) expresion -> . exp LE expresion
    (138) expresion -> . exp EQ expresion
    (139) expresion -> . exp NE expresion
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    TRUE            shift and go to state 83
    FALSE           shift and go to state 84
    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    gotoF                          shift and go to state 271
    exp_cond                       shift and go to state 105
    exp_bool                       shift and go to state 81
    expresion                      shift and go to state 85
    exp                            shift and go to state 80
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 263

    (61) aux5 -> RETURN exp_cond aux_return .
    (63) aux5 -> RETURN exp_cond aux_return . aux5
    (60) aux5 -> . estatuto
    (61) aux5 -> . RETURN exp_cond aux_return
    (62) aux5 -> . estatuto aux5
    (63) aux5 -> . RETURN exp_cond aux_return aux5
    (72) estatuto -> . asignacion
    (73) estatuto -> . escritura
    (74) estatuto -> . llamada_func
    (75) estatuto -> . objeto_metodo
    (76) estatuto -> . lectura
    (102) asignacion -> . ID EQUALS exp_cond
    (103) asignacion -> . ID EQUALS objeto_metodo
    (104) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET
    (105) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (106) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (107) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (108) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (109) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (110) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (111) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (112) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (113) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (114) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (115) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (82) escritura -> . PRINT LPAREN aux3 RPAREN
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (77) lectura -> . READ LPAREN aux4 RPAREN
    (164) objeto_aAcceso -> . ID PERIOD ID
    (118) llamada_id -> . ID

    RBRACE          reduce using rule 61 (aux5 -> RETURN exp_cond aux_return .)
    RETURN          shift and go to state 233
    ID              shift and go to state 234
    PRINT           shift and go to state 35
    READ            shift and go to state 37

    aux5                           shift and go to state 272
    estatuto                       shift and go to state 232
    asignacion                     shift and go to state 27
    escritura                      shift and go to state 28
    llamada_func                   shift and go to state 29
    objeto_metodo                  shift and go to state 30
    lectura                        shift and go to state 31
    objeto_aAcceso                 shift and go to state 34
    llamada_id                     shift and go to state 36

state 264

    (114) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . exp_cond
    (115) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (127) exp_cond -> . exp_bool
    (128) exp_cond -> . exp_bool AND exp_cond
    (129) exp_cond -> . exp_bool OR exp_cond
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (130) exp_bool -> . TRUE
    (131) exp_bool -> . FALSE
    (132) exp_bool -> . expresion
    (133) expresion -> . exp
    (134) expresion -> . exp LT expresion
    (135) expresion -> . exp GT expresion
    (136) expresion -> . exp GE expresion
    (137) expresion -> . exp LE expresion
    (138) expresion -> . exp EQ expresion
    (139) expresion -> . exp NE expresion
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    ID              shift and go to state 109
    TRUE            shift and go to state 83
    FALSE           shift and go to state 84
    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    objeto_aAcceso                 shift and go to state 91
    exp                            shift and go to state 80
    exp_cond                       shift and go to state 273
    objeto_metodo                  shift and go to state 274
    exp_bool                       shift and go to state 81
    llamada_func                   shift and go to state 82
    expresion                      shift and go to state 85
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    var                            shift and go to state 92
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 265

    (93) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON . tipo_simple
    (94) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON . tipo_compuesto
    (97) tipo_simple -> . INT
    (98) tipo_simple -> . FLOAT
    (99) tipo_simple -> . CHAR
    (100) tipo_simple -> . BOOL
    (101) tipo_compuesto -> . ID

    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    CHAR            shift and go to state 127
    BOOL            shift and go to state 128
    ID              shift and go to state 129

    tipo_simple                    shift and go to state 275
    tipo_compuesto                 shift and go to state 276

state 264

    (105) asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .
    (160) var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .

  ! reduce/reduce conflict for VAR resolved using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for IF resolved using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for ID resolved using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for PRINT resolved using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for READ resolved using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for VOID resolved using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for INT resolved using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for FLOAT resolved using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for CHAR resolved using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for STRING resolved using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for BOOL resolved using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for WHILE resolved using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for RBRACE resolved using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
  ! reduce/reduce conflict for RETURN resolved using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    VAR             reduce using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    PUBLIC          reduce using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    IF              reduce using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    ID              reduce using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    PRIVATE         reduce using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    PROTECTED       reduce using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    PRINT           reduce using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    READ            reduce using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    VOID            reduce using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    INT             reduce using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    FLOAT           reduce using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    CHAR            reduce using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    STRING          reduce using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    BOOL            reduce using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    WHILE           reduce using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RBRACE          reduce using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RETURN          reduce using rule 105 (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    TIMES           reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    DIVIDE          reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    MODULO          reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    LT              reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    GT              reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    GE              reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    LE              reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    EQ              reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    NE              reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    AND             reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    OR              reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)

  ! VAR             [ reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .) ]
  ! PUBLIC          [ reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .) ]
  ! IF              [ reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .) ]
  ! ID              [ reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .) ]
  ! PRIVATE         [ reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .) ]
  ! PROTECTED       [ reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .) ]
  ! PRINT           [ reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .) ]
  ! READ            [ reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .) ]
  ! VOID            [ reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .) ]
  ! INT             [ reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .) ]
  ! FLOAT           [ reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .) ]
  ! CHAR            [ reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .) ]
  ! STRING          [ reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .) ]
  ! BOOL            [ reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .) ]
  ! WHILE           [ reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .) ]
  ! RBRACE          [ reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .) ]
  ! RETURN          [ reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .) ]


state 267

    (160) var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .

    TIMES           reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    DIVIDE          reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    MODULO          reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    LT              reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    GT              reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    GE              reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    LE              reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    EQ              reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    NE              reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    AND             reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    OR              reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    VAR             reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    PUBLIC          reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    IF              reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    ID              reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    PRIVATE         reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    PROTECTED       reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    PRINT           reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    READ            reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    VOID            reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    INT             reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    FLOAT           reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    CHAR            reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    STRING          reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    BOOL            reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    WHILE           reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RBRACE          reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RETURN          reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    COMMA           reduce using rule 160 (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)


state 268

    (112) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .

    VAR             reduce using rule 112 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    PUBLIC          reduce using rule 112 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    IF              reduce using rule 112 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    ID              reduce using rule 112 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    PRIVATE         reduce using rule 112 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    PROTECTED       reduce using rule 112 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    PRINT           reduce using rule 112 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    READ            reduce using rule 112 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    VOID            reduce using rule 112 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    INT             reduce using rule 112 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    FLOAT           reduce using rule 112 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    CHAR            reduce using rule 112 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    STRING          reduce using rule 112 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    BOOL            reduce using rule 112 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    WHILE           reduce using rule 112 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    RBRACE          reduce using rule 112 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    RETURN          reduce using rule 112 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)


state 269

    (113) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 113 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 113 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 113 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 113 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 113 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 113 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 113 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 113 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    VOID            reduce using rule 113 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    INT             reduce using rule 113 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    FLOAT           reduce using rule 113 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    CHAR            reduce using rule 113 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    STRING          reduce using rule 113 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    BOOL            reduce using rule 113 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 113 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 113 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 113 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 270

    (35) funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .

    VAR             reduce using rule 35 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    PUBLIC          reduce using rule 35 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    IF              reduce using rule 35 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    ID              reduce using rule 35 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    PRIVATE         reduce using rule 35 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    PROTECTED       reduce using rule 35 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    PRINT           reduce using rule 35 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    READ            reduce using rule 35 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    VOID            reduce using rule 35 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    INT             reduce using rule 35 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    FLOAT           reduce using rule 35 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    CHAR            reduce using rule 35 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    STRING          reduce using rule 35 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    BOOL            reduce using rule 35 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    WHILE           reduce using rule 35 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    RBRACE          reduce using rule 35 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)


state 271

    (44) contexto_func -> LBRACE . aux_contexto_func RBRACE
    (45) aux_contexto_func -> . vars
    (46) aux_contexto_func -> . estatuto
    (47) aux_contexto_func -> . ciclo
    (48) aux_contexto_func -> . condicion
    (49) aux_contexto_func -> . RETURN exp_cond aux_return
    (50) aux_contexto_func -> . vars aux_contexto_func
    (51) aux_contexto_func -> . estatuto aux_contexto_func
    (52) aux_contexto_func -> . ciclo aux_contexto_func
    (53) aux_contexto_func -> . condicion aux_contexto_func
    (54) aux_contexto_func -> . RETURN exp_cond aux_return aux_contexto_func
    (55) aux_contexto_func -> . sort_p
    (56) aux_contexto_func -> . find_p
    (57) aux_contexto_func -> . sort_p aux_contexto_func
    (58) aux_contexto_func -> . find_p aux_contexto_func
    (89) vars -> . VAR aux2 COLON tipo_simple
    (90) vars -> . VAR aux2 COLON tipo_compuesto
    (91) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (92) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (93) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (94) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (72) estatuto -> . asignacion
    (73) estatuto -> . escritura
    (74) estatuto -> . llamada_func
    (75) estatuto -> . objeto_metodo
    (76) estatuto -> . lectura
    (31) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (26) condicion -> . IF LPAREN gotoF RPAREN bloque
    (27) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (23) sort_p -> . ID PERIOD SORT LPAREN aux_sort RPAREN
    (25) find_p -> . ID PERIOD FIND LPAREN var RPAREN
    (102) asignacion -> . ID EQUALS exp_cond
    (103) asignacion -> . ID EQUALS objeto_metodo
    (104) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET
    (105) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (106) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (107) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (108) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (109) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (110) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (111) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (112) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (113) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (114) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (115) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (82) escritura -> . PRINT LPAREN aux3 RPAREN
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (77) lectura -> . READ LPAREN aux4 RPAREN
    (32) aux_ciclo -> .
    (164) objeto_aAcceso -> . ID PERIOD ID
    (118) llamada_id -> . ID

    RETURN          shift and go to state 282
    VAR             shift and go to state 23
    IF              shift and go to state 32
    ID              shift and go to state 24
    PRINT           shift and go to state 35
    READ            shift and go to state 37
    WHILE           reduce using rule 32 (aux_ciclo -> .)

    aux_contexto_func              shift and go to state 277
    vars                           shift and go to state 278
    estatuto                       shift and go to state 279
    ciclo                          shift and go to state 280
    condicion                      shift and go to state 281
    sort_p                         shift and go to state 283
    find_p                         shift and go to state 284
    asignacion                     shift and go to state 27
    escritura                      shift and go to state 28
    llamada_func                   shift and go to state 29
    objeto_metodo                  shift and go to state 30
    lectura                        shift and go to state 31
    aux_ciclo                      shift and go to state 33
    objeto_aAcceso                 shift and go to state 34
    llamada_id                     shift and go to state 36

state 272

    (36) funcion -> scope VOID DEF id_void LPAREN param aux_param RPAREN contexto_func .

    VAR             reduce using rule 36 (funcion -> scope VOID DEF id_void LPAREN param aux_param RPAREN contexto_func .)
    PUBLIC          reduce using rule 36 (funcion -> scope VOID DEF id_void LPAREN param aux_param RPAREN contexto_func .)
    IF              reduce using rule 36 (funcion -> scope VOID DEF id_void LPAREN param aux_param RPAREN contexto_func .)
    ID              reduce using rule 36 (funcion -> scope VOID DEF id_void LPAREN param aux_param RPAREN contexto_func .)
    PRIVATE         reduce using rule 36 (funcion -> scope VOID DEF id_void LPAREN param aux_param RPAREN contexto_func .)
    PROTECTED       reduce using rule 36 (funcion -> scope VOID DEF id_void LPAREN param aux_param RPAREN contexto_func .)
    PRINT           reduce using rule 36 (funcion -> scope VOID DEF id_void LPAREN param aux_param RPAREN contexto_func .)
    READ            reduce using rule 36 (funcion -> scope VOID DEF id_void LPAREN param aux_param RPAREN contexto_func .)
    VOID            reduce using rule 36 (funcion -> scope VOID DEF id_void LPAREN param aux_param RPAREN contexto_func .)
    INT             reduce using rule 36 (funcion -> scope VOID DEF id_void LPAREN param aux_param RPAREN contexto_func .)
    FLOAT           reduce using rule 36 (funcion -> scope VOID DEF id_void LPAREN param aux_param RPAREN contexto_func .)
    CHAR            reduce using rule 36 (funcion -> scope VOID DEF id_void LPAREN param aux_param RPAREN contexto_func .)
    STRING          reduce using rule 36 (funcion -> scope VOID DEF id_void LPAREN param aux_param RPAREN contexto_func .)
    BOOL            reduce using rule 36 (funcion -> scope VOID DEF id_void LPAREN param aux_param RPAREN contexto_func .)
    WHILE           reduce using rule 36 (funcion -> scope VOID DEF id_void LPAREN param aux_param RPAREN contexto_func .)
    RBRACE          reduce using rule 36 (funcion -> scope VOID DEF id_void LPAREN param aux_param RPAREN contexto_func .)


state 271

    (28) elif -> aux_elif ELIF LPAREN gotoF . RPAREN bloque
    (29) elif -> aux_elif ELIF LPAREN gotoF . RPAREN bloque elif

    RPAREN          shift and go to state 285


state 272

    (63) aux5 -> RETURN exp_cond aux_return aux5 .

    RBRACE          reduce using rule 63 (aux5 -> RETURN exp_cond aux_return aux5 .)


state 273

    (114) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .

    VAR             reduce using rule 114 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    PUBLIC          reduce using rule 114 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    IF              reduce using rule 114 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    ID              reduce using rule 114 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    PRIVATE         reduce using rule 114 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    PROTECTED       reduce using rule 114 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    PRINT           reduce using rule 114 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    READ            reduce using rule 114 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    VOID            reduce using rule 114 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    INT             reduce using rule 114 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    FLOAT           reduce using rule 114 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    CHAR            reduce using rule 114 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    STRING          reduce using rule 114 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    BOOL            reduce using rule 114 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    WHILE           reduce using rule 114 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    RBRACE          reduce using rule 114 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    RETURN          reduce using rule 114 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)


state 274

    (115) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 115 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 115 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 115 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 115 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 115 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 115 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 115 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 115 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    VOID            reduce using rule 115 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    INT             reduce using rule 115 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    FLOAT           reduce using rule 115 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    CHAR            reduce using rule 115 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    STRING          reduce using rule 115 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    BOOL            reduce using rule 115 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 115 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 115 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 115 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 275

    (93) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .

    VAR             reduce using rule 93 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PUBLIC          reduce using rule 93 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    IF              reduce using rule 93 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    ID              reduce using rule 93 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PRIVATE         reduce using rule 93 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PROTECTED       reduce using rule 93 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PRINT           reduce using rule 93 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    READ            reduce using rule 93 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    VOID            reduce using rule 93 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    INT             reduce using rule 93 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    FLOAT           reduce using rule 93 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    CHAR            reduce using rule 93 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    STRING          reduce using rule 93 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    BOOL            reduce using rule 93 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    WHILE           reduce using rule 93 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    RBRACE          reduce using rule 93 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    RETURN          reduce using rule 93 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)


state 276

    (94) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .

    VAR             reduce using rule 94 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PUBLIC          reduce using rule 94 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    IF              reduce using rule 94 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    ID              reduce using rule 94 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRIVATE         reduce using rule 94 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PROTECTED       reduce using rule 94 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRINT           reduce using rule 94 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    READ            reduce using rule 94 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    VOID            reduce using rule 94 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    INT             reduce using rule 94 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    FLOAT           reduce using rule 94 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    CHAR            reduce using rule 94 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    STRING          reduce using rule 94 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    BOOL            reduce using rule 94 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    WHILE           reduce using rule 94 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RBRACE          reduce using rule 94 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RETURN          reduce using rule 94 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)


state 277

    (44) contexto_func -> LBRACE aux_contexto_func . RBRACE

    RBRACE          shift and go to state 286


state 278

    (45) aux_contexto_func -> vars .
    (50) aux_contexto_func -> vars . aux_contexto_func
    (45) aux_contexto_func -> . vars
    (46) aux_contexto_func -> . estatuto
    (47) aux_contexto_func -> . ciclo
    (48) aux_contexto_func -> . condicion
    (49) aux_contexto_func -> . RETURN exp_cond aux_return
    (50) aux_contexto_func -> . vars aux_contexto_func
    (51) aux_contexto_func -> . estatuto aux_contexto_func
    (52) aux_contexto_func -> . ciclo aux_contexto_func
    (53) aux_contexto_func -> . condicion aux_contexto_func
    (54) aux_contexto_func -> . RETURN exp_cond aux_return aux_contexto_func
    (55) aux_contexto_func -> . sort_p
    (56) aux_contexto_func -> . find_p
    (57) aux_contexto_func -> . sort_p aux_contexto_func
    (58) aux_contexto_func -> . find_p aux_contexto_func
    (89) vars -> . VAR aux2 COLON tipo_simple
    (90) vars -> . VAR aux2 COLON tipo_compuesto
    (91) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (92) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (93) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (94) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (72) estatuto -> . asignacion
    (73) estatuto -> . escritura
    (74) estatuto -> . llamada_func
    (75) estatuto -> . objeto_metodo
    (76) estatuto -> . lectura
    (31) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (26) condicion -> . IF LPAREN gotoF RPAREN bloque
    (27) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (23) sort_p -> . ID PERIOD SORT LPAREN aux_sort RPAREN
    (25) find_p -> . ID PERIOD FIND LPAREN var RPAREN
    (102) asignacion -> . ID EQUALS exp_cond
    (103) asignacion -> . ID EQUALS objeto_metodo
    (104) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET
    (105) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (106) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (107) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (108) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (109) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (110) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (111) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (112) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (113) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (114) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (115) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (82) escritura -> . PRINT LPAREN aux3 RPAREN
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (77) lectura -> . READ LPAREN aux4 RPAREN
    (32) aux_ciclo -> .
    (164) objeto_aAcceso -> . ID PERIOD ID
    (118) llamada_id -> . ID

    RBRACE          reduce using rule 45 (aux_contexto_func -> vars .)
    RETURN          shift and go to state 282
    VAR             shift and go to state 23
    IF              shift and go to state 32
    ID              shift and go to state 24
    PRINT           shift and go to state 35
    READ            shift and go to state 37
    WHILE           reduce using rule 32 (aux_ciclo -> .)

    vars                           shift and go to state 278
    aux_contexto_func              shift and go to state 287
    estatuto                       shift and go to state 279
    ciclo                          shift and go to state 280
    condicion                      shift and go to state 281
    sort_p                         shift and go to state 283
    find_p                         shift and go to state 284
    asignacion                     shift and go to state 27
    escritura                      shift and go to state 28
    llamada_func                   shift and go to state 29
    objeto_metodo                  shift and go to state 30
    lectura                        shift and go to state 31
    aux_ciclo                      shift and go to state 33
    objeto_aAcceso                 shift and go to state 34
    llamada_id                     shift and go to state 36

state 279

    (46) aux_contexto_func -> estatuto .
    (51) aux_contexto_func -> estatuto . aux_contexto_func
    (45) aux_contexto_func -> . vars
    (46) aux_contexto_func -> . estatuto
    (47) aux_contexto_func -> . ciclo
    (48) aux_contexto_func -> . condicion
    (49) aux_contexto_func -> . RETURN exp_cond aux_return
    (50) aux_contexto_func -> . vars aux_contexto_func
    (51) aux_contexto_func -> . estatuto aux_contexto_func
    (52) aux_contexto_func -> . ciclo aux_contexto_func
    (53) aux_contexto_func -> . condicion aux_contexto_func
    (54) aux_contexto_func -> . RETURN exp_cond aux_return aux_contexto_func
    (55) aux_contexto_func -> . sort_p
    (56) aux_contexto_func -> . find_p
    (57) aux_contexto_func -> . sort_p aux_contexto_func
    (58) aux_contexto_func -> . find_p aux_contexto_func
    (89) vars -> . VAR aux2 COLON tipo_simple
    (90) vars -> . VAR aux2 COLON tipo_compuesto
    (91) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (92) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (93) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (94) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (72) estatuto -> . asignacion
    (73) estatuto -> . escritura
    (74) estatuto -> . llamada_func
    (75) estatuto -> . objeto_metodo
    (76) estatuto -> . lectura
    (31) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (26) condicion -> . IF LPAREN gotoF RPAREN bloque
    (27) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (23) sort_p -> . ID PERIOD SORT LPAREN aux_sort RPAREN
    (25) find_p -> . ID PERIOD FIND LPAREN var RPAREN
    (102) asignacion -> . ID EQUALS exp_cond
    (103) asignacion -> . ID EQUALS objeto_metodo
    (104) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET
    (105) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (106) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (107) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (108) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (109) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (110) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (111) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (112) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (113) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (114) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (115) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (82) escritura -> . PRINT LPAREN aux3 RPAREN
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (77) lectura -> . READ LPAREN aux4 RPAREN
    (32) aux_ciclo -> .
    (164) objeto_aAcceso -> . ID PERIOD ID
    (118) llamada_id -> . ID

    RBRACE          reduce using rule 46 (aux_contexto_func -> estatuto .)
    RETURN          shift and go to state 282
    VAR             shift and go to state 23
    IF              shift and go to state 32
    ID              shift and go to state 24
    PRINT           shift and go to state 35
    READ            shift and go to state 37
    WHILE           reduce using rule 32 (aux_ciclo -> .)

    estatuto                       shift and go to state 279
    aux_contexto_func              shift and go to state 288
    vars                           shift and go to state 278
    ciclo                          shift and go to state 280
    condicion                      shift and go to state 281
    sort_p                         shift and go to state 283
    find_p                         shift and go to state 284
    asignacion                     shift and go to state 27
    escritura                      shift and go to state 28
    llamada_func                   shift and go to state 29
    objeto_metodo                  shift and go to state 30
    lectura                        shift and go to state 31
    aux_ciclo                      shift and go to state 33
    objeto_aAcceso                 shift and go to state 34
    llamada_id                     shift and go to state 36

state 280

    (47) aux_contexto_func -> ciclo .
    (52) aux_contexto_func -> ciclo . aux_contexto_func
    (45) aux_contexto_func -> . vars
    (46) aux_contexto_func -> . estatuto
    (47) aux_contexto_func -> . ciclo
    (48) aux_contexto_func -> . condicion
    (49) aux_contexto_func -> . RETURN exp_cond aux_return
    (50) aux_contexto_func -> . vars aux_contexto_func
    (51) aux_contexto_func -> . estatuto aux_contexto_func
    (52) aux_contexto_func -> . ciclo aux_contexto_func
    (53) aux_contexto_func -> . condicion aux_contexto_func
    (54) aux_contexto_func -> . RETURN exp_cond aux_return aux_contexto_func
    (55) aux_contexto_func -> . sort_p
    (56) aux_contexto_func -> . find_p
    (57) aux_contexto_func -> . sort_p aux_contexto_func
    (58) aux_contexto_func -> . find_p aux_contexto_func
    (89) vars -> . VAR aux2 COLON tipo_simple
    (90) vars -> . VAR aux2 COLON tipo_compuesto
    (91) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (92) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (93) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (94) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (72) estatuto -> . asignacion
    (73) estatuto -> . escritura
    (74) estatuto -> . llamada_func
    (75) estatuto -> . objeto_metodo
    (76) estatuto -> . lectura
    (31) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (26) condicion -> . IF LPAREN gotoF RPAREN bloque
    (27) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (23) sort_p -> . ID PERIOD SORT LPAREN aux_sort RPAREN
    (25) find_p -> . ID PERIOD FIND LPAREN var RPAREN
    (102) asignacion -> . ID EQUALS exp_cond
    (103) asignacion -> . ID EQUALS objeto_metodo
    (104) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET
    (105) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (106) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (107) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (108) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (109) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (110) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (111) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (112) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (113) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (114) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (115) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (82) escritura -> . PRINT LPAREN aux3 RPAREN
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (77) lectura -> . READ LPAREN aux4 RPAREN
    (32) aux_ciclo -> .
    (164) objeto_aAcceso -> . ID PERIOD ID
    (118) llamada_id -> . ID

    RBRACE          reduce using rule 47 (aux_contexto_func -> ciclo .)
    RETURN          shift and go to state 282
    VAR             shift and go to state 23
    IF              shift and go to state 32
    ID              shift and go to state 24
    PRINT           shift and go to state 35
    READ            shift and go to state 37
    WHILE           reduce using rule 32 (aux_ciclo -> .)

    ciclo                          shift and go to state 280
    aux_contexto_func              shift and go to state 289
    vars                           shift and go to state 278
    estatuto                       shift and go to state 279
    condicion                      shift and go to state 281
    sort_p                         shift and go to state 283
    find_p                         shift and go to state 284
    asignacion                     shift and go to state 27
    escritura                      shift and go to state 28
    llamada_func                   shift and go to state 29
    objeto_metodo                  shift and go to state 30
    lectura                        shift and go to state 31
    aux_ciclo                      shift and go to state 33
    objeto_aAcceso                 shift and go to state 34
    llamada_id                     shift and go to state 36

state 281

    (48) aux_contexto_func -> condicion .
    (53) aux_contexto_func -> condicion . aux_contexto_func
    (45) aux_contexto_func -> . vars
    (46) aux_contexto_func -> . estatuto
    (47) aux_contexto_func -> . ciclo
    (48) aux_contexto_func -> . condicion
    (49) aux_contexto_func -> . RETURN exp_cond aux_return
    (50) aux_contexto_func -> . vars aux_contexto_func
    (51) aux_contexto_func -> . estatuto aux_contexto_func
    (52) aux_contexto_func -> . ciclo aux_contexto_func
    (53) aux_contexto_func -> . condicion aux_contexto_func
    (54) aux_contexto_func -> . RETURN exp_cond aux_return aux_contexto_func
    (55) aux_contexto_func -> . sort_p
    (56) aux_contexto_func -> . find_p
    (57) aux_contexto_func -> . sort_p aux_contexto_func
    (58) aux_contexto_func -> . find_p aux_contexto_func
    (89) vars -> . VAR aux2 COLON tipo_simple
    (90) vars -> . VAR aux2 COLON tipo_compuesto
    (91) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (92) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (93) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (94) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (72) estatuto -> . asignacion
    (73) estatuto -> . escritura
    (74) estatuto -> . llamada_func
    (75) estatuto -> . objeto_metodo
    (76) estatuto -> . lectura
    (31) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (26) condicion -> . IF LPAREN gotoF RPAREN bloque
    (27) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (23) sort_p -> . ID PERIOD SORT LPAREN aux_sort RPAREN
    (25) find_p -> . ID PERIOD FIND LPAREN var RPAREN
    (102) asignacion -> . ID EQUALS exp_cond
    (103) asignacion -> . ID EQUALS objeto_metodo
    (104) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET
    (105) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (106) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (107) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (108) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (109) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (110) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (111) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (112) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (113) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (114) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (115) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (82) escritura -> . PRINT LPAREN aux3 RPAREN
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (77) lectura -> . READ LPAREN aux4 RPAREN
    (32) aux_ciclo -> .
    (164) objeto_aAcceso -> . ID PERIOD ID
    (118) llamada_id -> . ID

    RBRACE          reduce using rule 48 (aux_contexto_func -> condicion .)
    RETURN          shift and go to state 282
    VAR             shift and go to state 23
    IF              shift and go to state 32
    ID              shift and go to state 24
    PRINT           shift and go to state 35
    READ            shift and go to state 37
    WHILE           reduce using rule 32 (aux_ciclo -> .)

    condicion                      shift and go to state 281
    aux_contexto_func              shift and go to state 290
    vars                           shift and go to state 278
    estatuto                       shift and go to state 279
    ciclo                          shift and go to state 280
    sort_p                         shift and go to state 283
    find_p                         shift and go to state 284
    asignacion                     shift and go to state 27
    escritura                      shift and go to state 28
    llamada_func                   shift and go to state 29
    objeto_metodo                  shift and go to state 30
    lectura                        shift and go to state 31
    aux_ciclo                      shift and go to state 33
    objeto_aAcceso                 shift and go to state 34
    llamada_id                     shift and go to state 36

state 282

    (49) aux_contexto_func -> RETURN . exp_cond aux_return
    (54) aux_contexto_func -> RETURN . exp_cond aux_return aux_contexto_func
    (127) exp_cond -> . exp_bool
    (128) exp_cond -> . exp_bool AND exp_cond
    (129) exp_cond -> . exp_bool OR exp_cond
    (130) exp_bool -> . TRUE
    (131) exp_bool -> . FALSE
    (132) exp_bool -> . expresion
    (133) expresion -> . exp
    (134) expresion -> . exp LT expresion
    (135) expresion -> . exp GT expresion
    (136) expresion -> . exp GE expresion
    (137) expresion -> . exp LE expresion
    (138) expresion -> . exp EQ expresion
    (139) expresion -> . exp NE expresion
    (140) exp -> . termino
    (141) exp -> . exp PLUS termino
    (142) exp -> . exp MINUS termino
    (143) termino -> . factor
    (144) termino -> . termino TIMES factor
    (145) termino -> . termino DIVIDE factor
    (146) termino -> . termino MODULO factor
    (147) factor -> . LPAREN exp_cond RPAREN
    (148) factor -> . PLUS objeto_aAcceso
    (149) factor -> . MINUS objeto_aAcceso
    (150) factor -> . PLUS var
    (151) factor -> . MINUS var
    (152) factor -> . var
    (153) factor -> . objeto_aAcceso
    (154) factor -> . llamada_func
    (155) var -> . ID
    (156) var -> . cint
    (157) var -> . cfloat
    (158) var -> . cchar
    (159) var -> . ID LBRACKET exp RBRACKET
    (160) var -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (164) objeto_aAcceso -> . ID PERIOD ID
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (161) cint -> . CINT
    (162) cfloat -> . NUMBER
    (163) cchar -> . CCHAR
    (118) llamada_id -> . ID

    TRUE            shift and go to state 83
    FALSE           shift and go to state 84
    LPAREN          shift and go to state 90
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    ID              shift and go to state 99
    CINT            shift and go to state 96
    NUMBER          shift and go to state 97
    CCHAR           shift and go to state 98

    exp_cond                       shift and go to state 291
    exp_bool                       shift and go to state 81
    expresion                      shift and go to state 85
    exp                            shift and go to state 80
    termino                        shift and go to state 86
    factor                         shift and go to state 89
    objeto_aAcceso                 shift and go to state 91
    var                            shift and go to state 92
    llamada_func                   shift and go to state 82
    cint                           shift and go to state 93
    cfloat                         shift and go to state 94
    cchar                          shift and go to state 95
    llamada_id                     shift and go to state 36

state 283

    (55) aux_contexto_func -> sort_p .
    (57) aux_contexto_func -> sort_p . aux_contexto_func
    (45) aux_contexto_func -> . vars
    (46) aux_contexto_func -> . estatuto
    (47) aux_contexto_func -> . ciclo
    (48) aux_contexto_func -> . condicion
    (49) aux_contexto_func -> . RETURN exp_cond aux_return
    (50) aux_contexto_func -> . vars aux_contexto_func
    (51) aux_contexto_func -> . estatuto aux_contexto_func
    (52) aux_contexto_func -> . ciclo aux_contexto_func
    (53) aux_contexto_func -> . condicion aux_contexto_func
    (54) aux_contexto_func -> . RETURN exp_cond aux_return aux_contexto_func
    (55) aux_contexto_func -> . sort_p
    (56) aux_contexto_func -> . find_p
    (57) aux_contexto_func -> . sort_p aux_contexto_func
    (58) aux_contexto_func -> . find_p aux_contexto_func
    (89) vars -> . VAR aux2 COLON tipo_simple
    (90) vars -> . VAR aux2 COLON tipo_compuesto
    (91) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (92) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (93) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (94) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (72) estatuto -> . asignacion
    (73) estatuto -> . escritura
    (74) estatuto -> . llamada_func
    (75) estatuto -> . objeto_metodo
    (76) estatuto -> . lectura
    (31) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (26) condicion -> . IF LPAREN gotoF RPAREN bloque
    (27) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (23) sort_p -> . ID PERIOD SORT LPAREN aux_sort RPAREN
    (25) find_p -> . ID PERIOD FIND LPAREN var RPAREN
    (102) asignacion -> . ID EQUALS exp_cond
    (103) asignacion -> . ID EQUALS objeto_metodo
    (104) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET
    (105) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (106) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (107) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (108) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (109) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (110) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (111) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (112) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (113) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (114) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (115) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (82) escritura -> . PRINT LPAREN aux3 RPAREN
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (77) lectura -> . READ LPAREN aux4 RPAREN
    (32) aux_ciclo -> .
    (164) objeto_aAcceso -> . ID PERIOD ID
    (118) llamada_id -> . ID

    RBRACE          reduce using rule 55 (aux_contexto_func -> sort_p .)
    RETURN          shift and go to state 282
    VAR             shift and go to state 23
    IF              shift and go to state 32
    ID              shift and go to state 24
    PRINT           shift and go to state 35
    READ            shift and go to state 37
    WHILE           reduce using rule 32 (aux_ciclo -> .)

    sort_p                         shift and go to state 283
    aux_contexto_func              shift and go to state 292
    vars                           shift and go to state 278
    estatuto                       shift and go to state 279
    ciclo                          shift and go to state 280
    condicion                      shift and go to state 281
    find_p                         shift and go to state 284
    asignacion                     shift and go to state 27
    escritura                      shift and go to state 28
    llamada_func                   shift and go to state 29
    objeto_metodo                  shift and go to state 30
    lectura                        shift and go to state 31
    aux_ciclo                      shift and go to state 33
    objeto_aAcceso                 shift and go to state 34
    llamada_id                     shift and go to state 36

state 284

    (56) aux_contexto_func -> find_p .
    (58) aux_contexto_func -> find_p . aux_contexto_func
    (45) aux_contexto_func -> . vars
    (46) aux_contexto_func -> . estatuto
    (47) aux_contexto_func -> . ciclo
    (48) aux_contexto_func -> . condicion
    (49) aux_contexto_func -> . RETURN exp_cond aux_return
    (50) aux_contexto_func -> . vars aux_contexto_func
    (51) aux_contexto_func -> . estatuto aux_contexto_func
    (52) aux_contexto_func -> . ciclo aux_contexto_func
    (53) aux_contexto_func -> . condicion aux_contexto_func
    (54) aux_contexto_func -> . RETURN exp_cond aux_return aux_contexto_func
    (55) aux_contexto_func -> . sort_p
    (56) aux_contexto_func -> . find_p
    (57) aux_contexto_func -> . sort_p aux_contexto_func
    (58) aux_contexto_func -> . find_p aux_contexto_func
    (89) vars -> . VAR aux2 COLON tipo_simple
    (90) vars -> . VAR aux2 COLON tipo_compuesto
    (91) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (92) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (93) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (94) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (72) estatuto -> . asignacion
    (73) estatuto -> . escritura
    (74) estatuto -> . llamada_func
    (75) estatuto -> . objeto_metodo
    (76) estatuto -> . lectura
    (31) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (26) condicion -> . IF LPAREN gotoF RPAREN bloque
    (27) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (23) sort_p -> . ID PERIOD SORT LPAREN aux_sort RPAREN
    (25) find_p -> . ID PERIOD FIND LPAREN var RPAREN
    (102) asignacion -> . ID EQUALS exp_cond
    (103) asignacion -> . ID EQUALS objeto_metodo
    (104) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET
    (105) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (106) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (107) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (108) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (109) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (110) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (111) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (112) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (113) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (114) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (115) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (82) escritura -> . PRINT LPAREN aux3 RPAREN
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (77) lectura -> . READ LPAREN aux4 RPAREN
    (32) aux_ciclo -> .
    (164) objeto_aAcceso -> . ID PERIOD ID
    (118) llamada_id -> . ID

    RBRACE          reduce using rule 56 (aux_contexto_func -> find_p .)
    RETURN          shift and go to state 282
    VAR             shift and go to state 23
    IF              shift and go to state 32
    ID              shift and go to state 24
    PRINT           shift and go to state 35
    READ            shift and go to state 37
    WHILE           reduce using rule 32 (aux_ciclo -> .)

    find_p                         shift and go to state 284
    aux_contexto_func              shift and go to state 293
    vars                           shift and go to state 278
    estatuto                       shift and go to state 279
    ciclo                          shift and go to state 280
    condicion                      shift and go to state 281
    sort_p                         shift and go to state 283
    asignacion                     shift and go to state 27
    escritura                      shift and go to state 28
    llamada_func                   shift and go to state 29
    objeto_metodo                  shift and go to state 30
    lectura                        shift and go to state 31
    aux_ciclo                      shift and go to state 33
    objeto_aAcceso                 shift and go to state 34
    llamada_id                     shift and go to state 36

state 285

    (28) elif -> aux_elif ELIF LPAREN gotoF RPAREN . bloque
    (29) elif -> aux_elif ELIF LPAREN gotoF RPAREN . bloque elif
    (34) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 205

    bloque                         shift and go to state 294

state 286

    (44) contexto_func -> LBRACE aux_contexto_func RBRACE .

    VAR             reduce using rule 44 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    PUBLIC          reduce using rule 44 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    IF              reduce using rule 44 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    ID              reduce using rule 44 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    PRIVATE         reduce using rule 44 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    PROTECTED       reduce using rule 44 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    PRINT           reduce using rule 44 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    READ            reduce using rule 44 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    VOID            reduce using rule 44 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    INT             reduce using rule 44 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    FLOAT           reduce using rule 44 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    CHAR            reduce using rule 44 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    STRING          reduce using rule 44 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    BOOL            reduce using rule 44 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    WHILE           reduce using rule 44 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    RBRACE          reduce using rule 44 (contexto_func -> LBRACE aux_contexto_func RBRACE .)


state 287

    (50) aux_contexto_func -> vars aux_contexto_func .

    RBRACE          reduce using rule 50 (aux_contexto_func -> vars aux_contexto_func .)


state 288

    (51) aux_contexto_func -> estatuto aux_contexto_func .

    RBRACE          reduce using rule 51 (aux_contexto_func -> estatuto aux_contexto_func .)


state 289

    (52) aux_contexto_func -> ciclo aux_contexto_func .

    RBRACE          reduce using rule 52 (aux_contexto_func -> ciclo aux_contexto_func .)


state 290

    (53) aux_contexto_func -> condicion aux_contexto_func .

    RBRACE          reduce using rule 53 (aux_contexto_func -> condicion aux_contexto_func .)


state 291

    (49) aux_contexto_func -> RETURN exp_cond . aux_return
    (54) aux_contexto_func -> RETURN exp_cond . aux_return aux_contexto_func
    (59) aux_return -> .

    RETURN          reduce using rule 59 (aux_return -> .)
    VAR             reduce using rule 59 (aux_return -> .)
    IF              reduce using rule 59 (aux_return -> .)
    ID              reduce using rule 59 (aux_return -> .)
    PRINT           reduce using rule 59 (aux_return -> .)
    READ            reduce using rule 59 (aux_return -> .)
    WHILE           reduce using rule 59 (aux_return -> .)
    RBRACE          reduce using rule 59 (aux_return -> .)

    aux_return                     shift and go to state 295

state 292

    (57) aux_contexto_func -> sort_p aux_contexto_func .

    RBRACE          reduce using rule 57 (aux_contexto_func -> sort_p aux_contexto_func .)


state 293

    (58) aux_contexto_func -> find_p aux_contexto_func .

    RBRACE          reduce using rule 58 (aux_contexto_func -> find_p aux_contexto_func .)


state 294

    (28) elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .
    (29) elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque . elif
    (28) elif -> . aux_elif ELIF LPAREN gotoF RPAREN bloque
    (29) elif -> . aux_elif ELIF LPAREN gotoF RPAREN bloque elif
    (30) aux_elif -> .

    VAR             reduce using rule 28 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    PUBLIC          reduce using rule 28 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    IF              reduce using rule 28 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    ID              reduce using rule 28 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    PRIVATE         reduce using rule 28 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    PROTECTED       reduce using rule 28 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    PRINT           reduce using rule 28 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    READ            reduce using rule 28 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    VOID            reduce using rule 28 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    INT             reduce using rule 28 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    FLOAT           reduce using rule 28 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    CHAR            reduce using rule 28 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    STRING          reduce using rule 28 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    BOOL            reduce using rule 28 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    WHILE           reduce using rule 28 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    RBRACE          reduce using rule 28 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    RETURN          reduce using rule 28 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    ELIF            reduce using rule 30 (aux_elif -> .)

    aux_elif                       shift and go to state 230
    elif                           shift and go to state 296

state 295

    (49) aux_contexto_func -> RETURN exp_cond aux_return .
    (54) aux_contexto_func -> RETURN exp_cond aux_return . aux_contexto_func
    (45) aux_contexto_func -> . vars
    (46) aux_contexto_func -> . estatuto
    (47) aux_contexto_func -> . ciclo
    (48) aux_contexto_func -> . condicion
    (49) aux_contexto_func -> . RETURN exp_cond aux_return
    (50) aux_contexto_func -> . vars aux_contexto_func
    (51) aux_contexto_func -> . estatuto aux_contexto_func
    (52) aux_contexto_func -> . ciclo aux_contexto_func
    (53) aux_contexto_func -> . condicion aux_contexto_func
    (54) aux_contexto_func -> . RETURN exp_cond aux_return aux_contexto_func
    (55) aux_contexto_func -> . sort_p
    (56) aux_contexto_func -> . find_p
    (57) aux_contexto_func -> . sort_p aux_contexto_func
    (58) aux_contexto_func -> . find_p aux_contexto_func
    (89) vars -> . VAR aux2 COLON tipo_simple
    (90) vars -> . VAR aux2 COLON tipo_compuesto
    (91) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (92) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (93) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (94) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (72) estatuto -> . asignacion
    (73) estatuto -> . escritura
    (74) estatuto -> . llamada_func
    (75) estatuto -> . objeto_metodo
    (76) estatuto -> . lectura
    (31) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (26) condicion -> . IF LPAREN gotoF RPAREN bloque
    (27) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (23) sort_p -> . ID PERIOD SORT LPAREN aux_sort RPAREN
    (25) find_p -> . ID PERIOD FIND LPAREN var RPAREN
    (102) asignacion -> . ID EQUALS exp_cond
    (103) asignacion -> . ID EQUALS objeto_metodo
    (104) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET
    (105) asignacion -> . ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (106) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (107) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (108) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (109) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (110) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (111) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (112) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (113) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (114) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (115) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (82) escritura -> . PRINT LPAREN aux3 RPAREN
    (117) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (116) objeto_metodo -> . ID PERIOD llamada_func
    (77) lectura -> . READ LPAREN aux4 RPAREN
    (32) aux_ciclo -> .
    (164) objeto_aAcceso -> . ID PERIOD ID
    (118) llamada_id -> . ID

    RBRACE          reduce using rule 49 (aux_contexto_func -> RETURN exp_cond aux_return .)
    RETURN          shift and go to state 282
    VAR             shift and go to state 23
    IF              shift and go to state 32
    ID              shift and go to state 24
    PRINT           shift and go to state 35
    READ            shift and go to state 37
    WHILE           reduce using rule 32 (aux_ciclo -> .)

    aux_contexto_func              shift and go to state 297
    vars                           shift and go to state 278
    estatuto                       shift and go to state 279
    ciclo                          shift and go to state 280
    condicion                      shift and go to state 281
    sort_p                         shift and go to state 283
    find_p                         shift and go to state 284
    asignacion                     shift and go to state 27
    escritura                      shift and go to state 28
    llamada_func                   shift and go to state 29
    objeto_metodo                  shift and go to state 30
    lectura                        shift and go to state 31
    aux_ciclo                      shift and go to state 33
    objeto_aAcceso                 shift and go to state 34
    llamada_id                     shift and go to state 36

state 296

    (29) elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .

    VAR             reduce using rule 29 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    PUBLIC          reduce using rule 29 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    IF              reduce using rule 29 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    ID              reduce using rule 29 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    PRIVATE         reduce using rule 29 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    PROTECTED       reduce using rule 29 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    PRINT           reduce using rule 29 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    READ            reduce using rule 29 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    VOID            reduce using rule 29 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    INT             reduce using rule 29 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    FLOAT           reduce using rule 29 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    CHAR            reduce using rule 29 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    STRING          reduce using rule 29 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    BOOL            reduce using rule 29 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    WHILE           reduce using rule 29 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    RBRACE          reduce using rule 29 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    RETURN          reduce using rule 29 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)


state 297

    (54) aux_contexto_func -> RETURN exp_cond aux_return aux_contexto_func .

    RBRACE          reduce using rule 54 (aux_contexto_func -> RETURN exp_cond aux_return aux_contexto_func .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 220 resolved using rule (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET)
WARNING: rejected rule (var -> ID LBRACKET exp RBRACKET) in state 220
WARNING: reduce/reduce conflict in state 264 resolved using rule (asignacion -> ID EQUALS ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET)
WARNING: rejected rule (var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET) in state 264
