Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID aux_program class context
Rule 2     programa -> PROGRAM ID aux_program context
Rule 3     aux_program -> <empty>
Rule 4     class -> scope CLASS ID
Rule 5     class -> scope CLASS ID COLON ID
Rule 6     context -> LBRACE aux6 RBRACE
Rule 7     aux6 -> vars
Rule 8     aux6 -> constructor
Rule 9     aux6 -> funcion
Rule 10    aux6 -> estatuto
Rule 11    aux6 -> condicion
Rule 12    aux6 -> ciclo
Rule 13    aux6 -> vars aux6
Rule 14    aux6 -> constructor aux6
Rule 15    aux6 -> funcion aux6
Rule 16    aux6 -> estatuto aux6
Rule 17    aux6 -> condicion aux6
Rule 18    aux6 -> ciclo aux6
Rule 19    condicion -> IF LPAREN gotoF RPAREN bloque
Rule 20    condicion -> IF LPAREN gotoF RPAREN bloque elif
Rule 21    elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque
Rule 22    elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif
Rule 23    aux_elif -> <empty>
Rule 24    ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque
Rule 25    aux_ciclo -> <empty>
Rule 26    constructor -> PUBLIC ID LPAREN param RPAREN bloque
Rule 27    bloque -> LBRACE aux5 RBRACE
Rule 28    funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func
Rule 29    funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
Rule 30    id -> ID
Rule 31    type -> INT
Rule 32    type -> FLOAT
Rule 33    type -> CHAR
Rule 34    type -> STRING
Rule 35    type -> BOOL
Rule 36    contexto_func -> LBRACE aux_contexto_func RBRACE
Rule 37    aux_contexto_func -> vars
Rule 38    aux_contexto_func -> estatuto
Rule 39    aux_contexto_func -> ciclo
Rule 40    aux_contexto_func -> condicion
Rule 41    aux_contexto_func -> RETURN exp_cond aux_return
Rule 42    aux_contexto_func -> vars aux_contexto_func
Rule 43    aux_contexto_func -> estatuto aux_contexto_func
Rule 44    aux_contexto_func -> ciclo aux_contexto_func
Rule 45    aux_contexto_func -> condicion aux_contexto_func
Rule 46    aux_contexto_func -> RETURN exp_cond aux_return aux_contexto_func
Rule 47    aux_return -> <empty>
Rule 48    aux5 -> estatuto
Rule 49    aux5 -> RETURN exp_cond aux_return
Rule 50    aux5 -> estatuto aux5
Rule 51    aux5 -> RETURN exp_cond aux_return aux5
Rule 52    param -> <empty>
Rule 53    param -> tipo_simple ID
Rule 54    param -> tipo_simple ID COMMA param
Rule 55    aux_param -> <empty>
Rule 56    scope -> <empty>
Rule 57    scope -> PRIVATE
Rule 58    scope -> PUBLIC
Rule 59    scope -> PROTECTED
Rule 60    estatuto -> asignacion
Rule 61    estatuto -> escritura
Rule 62    estatuto -> llamada_func
Rule 63    estatuto -> objeto_metodo
Rule 64    estatuto -> lectura
Rule 65    lectura -> READ LPAREN aux4 RPAREN
Rule 66    aux4 -> ID
Rule 67    aux4 -> objeto_aAcceso
Rule 68    aux4 -> ID COMMA aux4
Rule 69    aux4 -> objeto_aAcceso COMMA aux4
Rule 70    escritura -> PRINT LPAREN aux3 RPAREN
Rule 71    aux3 -> expresion
Rule 72    aux3 -> objeto_metodo
Rule 73    aux3 -> CSTRING
Rule 74    aux3 -> expresion COMMA aux3
Rule 75    aux3 -> objeto_metodo COMMA aux3
Rule 76    aux3 -> CSTRING COMMA aux3
Rule 77    vars -> VAR aux2 COLON tipo_simple
Rule 78    vars -> VAR aux2 COLON tipo_compuesto
Rule 79    vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple
Rule 80    vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
Rule 81    vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
Rule 82    vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
Rule 83    aux2 -> ID
Rule 84    aux2 -> ID COMMA aux2
Rule 85    tipo_simple -> INT
Rule 86    tipo_simple -> FLOAT
Rule 87    tipo_simple -> CHAR
Rule 88    tipo_simple -> BOOL
Rule 89    tipo_compuesto -> ID
Rule 90    asignacion -> ID EQUALS exp_cond
Rule 91    asignacion -> ID EQUALS objeto_metodo
Rule 92    asignacion -> objeto_aAcceso EQUALS exp_cond
Rule 93    asignacion -> objeto_aAcceso EQUALS objeto_metodo
Rule 94    asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond
Rule 95    asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 96    asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
Rule 97    asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 98    asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
Rule 99    asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 100   asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond
Rule 101   asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 102   objeto_metodo -> ID PERIOD llamada_func
Rule 103   llamada_func -> llamada_id llamada_lparen llamada_rparen
Rule 104   llamada_id -> ID
Rule 105   llamada_lparen -> LPAREN
Rule 106   llamada_rparen -> aux RPAREN
Rule 107   llamada_rparen -> RPAREN
Rule 108   aux -> exp aux_exp
Rule 109   aux -> exp aux_exp aux_comma aux
Rule 110   aux_exp -> <empty>
Rule 111   aux_comma -> COMMA
Rule 112   gotoF -> exp_cond
Rule 113   exp_cond -> exp_bool
Rule 114   exp_cond -> exp_bool AND exp_cond
Rule 115   exp_cond -> exp_bool OR exp_cond
Rule 116   exp_bool -> TRUE
Rule 117   exp_bool -> FALSE
Rule 118   exp_bool -> expresion
Rule 119   expresion -> exp
Rule 120   expresion -> exp LT expresion
Rule 121   expresion -> exp GT expresion
Rule 122   expresion -> exp GE expresion
Rule 123   expresion -> exp LE expresion
Rule 124   expresion -> exp EQ expresion
Rule 125   expresion -> exp NE expresion
Rule 126   exp -> termino
Rule 127   exp -> exp PLUS termino
Rule 128   exp -> exp MINUS termino
Rule 129   termino -> factor
Rule 130   termino -> termino TIMES factor
Rule 131   termino -> termino DIVIDE factor
Rule 132   termino -> termino MODULO factor
Rule 133   factor -> LPAREN exp_cond RPAREN
Rule 134   factor -> PLUS objeto_aAcceso
Rule 135   factor -> MINUS objeto_aAcceso
Rule 136   factor -> PLUS var
Rule 137   factor -> MINUS var
Rule 138   factor -> var
Rule 139   factor -> objeto_aAcceso
Rule 140   factor -> llamada_func
Rule 141   var -> ID
Rule 142   var -> cint
Rule 143   var -> cfloat
Rule 144   var -> cchar
Rule 145   cint -> CINT
Rule 146   cfloat -> NUMBER
Rule 147   cchar -> CCHAR
Rule 148   objeto_aAcceso -> ID PERIOD ID

Terminals, with rules where they appear

AND                  : 114
BOOL                 : 35 88
CCHAR                : 147
CHAR                 : 33 87
CINT                 : 145
CLASS                : 4 5
COLON                : 5 77 78 79 80 81 82
COMMA                : 54 68 69 74 75 76 84 111
CSTRING              : 73 76
DEF                  : 28 29
DIVIDE               : 131
ELIF                 : 21 22
EQ                   : 124
EQUALS               : 90 91 92 93 94 95 96 97 98 99 100 101
FALSE                : 117
FLOAT                : 32 86
GE                   : 122
GT                   : 121
ID                   : 1 2 4 5 5 26 30 53 54 66 68 79 80 81 82 83 84 89 90 91 94 95 98 99 102 104 141 148 148
IF                   : 19 20
INT                  : 31 85
LBRACE               : 6 27 36
LBRACKET             : 79 80 81 81 82 82 94 95 96 97 98 98 99 99 100 100 101 101
LE                   : 123
LPAREN               : 19 20 21 22 24 26 28 29 65 70 105 133
LT                   : 120
MINUS                : 128 135 137
MODULO               : 132
NE                   : 125
NUMBER               : 146
OR                   : 115
PERIOD               : 102 148
PLUS                 : 127 134 136
PRINT                : 70
PRIVATE              : 57
PROGRAM              : 1 2
PROTECTED            : 59
PUBLIC               : 26 58
RBRACE               : 6 27 36
RBRACKET             : 79 80 81 81 82 82 94 95 96 97 98 98 99 99 100 100 101 101
READ                 : 65
RETURN               : 41 46 49 51
RPAREN               : 19 20 21 22 24 26 28 29 65 70 106 107 133
STRING               : 34
TIMES                : 130
TRUE                 : 116
VAR                  : 77 78 79 80 81 82
VOID                 : 29
WHILE                : 24
error                : 

Nonterminals, with rules where they appear

asignacion           : 60
aux                  : 106 109
aux2                 : 77 78 84
aux3                 : 70 74 75 76
aux4                 : 65 68 69
aux5                 : 27 50 51
aux6                 : 6 13 14 15 16 17 18
aux_ciclo            : 24
aux_comma            : 109
aux_contexto_func    : 36 42 43 44 45 46
aux_elif             : 21 22
aux_exp              : 108 109
aux_param            : 28 29
aux_program          : 1 2
aux_return           : 41 46 49 51
bloque               : 19 20 21 22 24 26
cchar                : 144
cfloat               : 143
ciclo                : 12 18 39 44
cint                 : 79 80 81 81 82 82 142
class                : 1
condicion            : 11 17 40 45
constructor          : 8 14
context              : 1 2
contexto_func        : 28 29
elif                 : 20 22
escritura            : 61
estatuto             : 10 16 38 43 48 50
exp                  : 94 95 96 97 98 98 99 99 100 100 101 101 108 109 119 120 121 122 123 124 125 127 128
exp_bool             : 113 114 115
exp_cond             : 41 46 49 51 90 92 94 96 98 100 112 114 115 133
expresion            : 71 74 118 120 121 122 123 124 125
factor               : 129 130 131 132
funcion              : 9 15
gotoF                : 19 20 21 22 24
id                   : 28 29
lectura              : 64
llamada_func         : 62 102 140
llamada_id           : 103
llamada_lparen       : 103
llamada_rparen       : 103
objeto_aAcceso       : 67 69 92 93 96 97 100 101 134 135 139
objeto_metodo        : 63 72 75 91 93 95 97 99 101
param                : 26 28 29 54
programa             : 0
scope                : 4 5 28 29
termino              : 126 127 128 130 131 132
tipo_compuesto       : 78 80 82
tipo_simple          : 53 54 77 79 81
type                 : 28
var                  : 136 137 138
vars                 : 7 13 37 42

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID aux_program class context
    (2) programa -> . PROGRAM ID aux_program context

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID aux_program class context
    (2) programa -> PROGRAM . ID aux_program context

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . aux_program class context
    (2) programa -> PROGRAM ID . aux_program context
    (3) aux_program -> .

    LBRACE          reduce using rule 3 (aux_program -> .)
    PRIVATE         reduce using rule 3 (aux_program -> .)
    PUBLIC          reduce using rule 3 (aux_program -> .)
    PROTECTED       reduce using rule 3 (aux_program -> .)
    CLASS           reduce using rule 3 (aux_program -> .)

    aux_program                    shift and go to state 4

state 4

    (1) programa -> PROGRAM ID aux_program . class context
    (2) programa -> PROGRAM ID aux_program . context
    (4) class -> . scope CLASS ID
    (5) class -> . scope CLASS ID COLON ID
    (6) context -> . LBRACE aux6 RBRACE
    (56) scope -> .
    (57) scope -> . PRIVATE
    (58) scope -> . PUBLIC
    (59) scope -> . PROTECTED

    LBRACE          shift and go to state 8
    CLASS           reduce using rule 56 (scope -> .)
    PRIVATE         shift and go to state 9
    PUBLIC          shift and go to state 10
    PROTECTED       shift and go to state 11

    class                          shift and go to state 5
    context                        shift and go to state 6
    scope                          shift and go to state 7

state 5

    (1) programa -> PROGRAM ID aux_program class . context
    (6) context -> . LBRACE aux6 RBRACE

    LBRACE          shift and go to state 8

    context                        shift and go to state 12

state 6

    (2) programa -> PROGRAM ID aux_program context .

    $end            reduce using rule 2 (programa -> PROGRAM ID aux_program context .)


state 7

    (4) class -> scope . CLASS ID
    (5) class -> scope . CLASS ID COLON ID

    CLASS           shift and go to state 13


state 8

    (6) context -> LBRACE . aux6 RBRACE
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (77) vars -> . VAR aux2 COLON tipo_simple
    (78) vars -> . VAR aux2 COLON tipo_compuesto
    (79) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (80) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (81) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (82) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (26) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (28) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (29) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (60) estatuto -> . asignacion
    (61) estatuto -> . escritura
    (62) estatuto -> . llamada_func
    (63) estatuto -> . objeto_metodo
    (64) estatuto -> . lectura
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque
    (20) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (56) scope -> .
    (57) scope -> . PRIVATE
    (58) scope -> . PUBLIC
    (59) scope -> . PROTECTED
    (90) asignacion -> . ID EQUALS exp_cond
    (91) asignacion -> . ID EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (97) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (70) escritura -> . PRINT LPAREN aux3 RPAREN
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (102) objeto_metodo -> . ID PERIOD llamada_func
    (65) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (148) objeto_aAcceso -> . ID PERIOD ID
    (104) llamada_id -> . ID

    VAR             shift and go to state 21
    PUBLIC          shift and go to state 23
    IF              shift and go to state 30
    VOID            reduce using rule 56 (scope -> .)
    INT             reduce using rule 56 (scope -> .)
    FLOAT           reduce using rule 56 (scope -> .)
    CHAR            reduce using rule 56 (scope -> .)
    STRING          reduce using rule 56 (scope -> .)
    BOOL            reduce using rule 56 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    aux6                           shift and go to state 14
    vars                           shift and go to state 15
    constructor                    shift and go to state 16
    funcion                        shift and go to state 17
    estatuto                       shift and go to state 18
    condicion                      shift and go to state 19
    ciclo                          shift and go to state 20
    scope                          shift and go to state 24
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 9

    (57) scope -> PRIVATE .

    CLASS           reduce using rule 57 (scope -> PRIVATE .)
    VOID            reduce using rule 57 (scope -> PRIVATE .)
    INT             reduce using rule 57 (scope -> PRIVATE .)
    FLOAT           reduce using rule 57 (scope -> PRIVATE .)
    CHAR            reduce using rule 57 (scope -> PRIVATE .)
    STRING          reduce using rule 57 (scope -> PRIVATE .)
    BOOL            reduce using rule 57 (scope -> PRIVATE .)


state 10

    (58) scope -> PUBLIC .

    CLASS           reduce using rule 58 (scope -> PUBLIC .)


state 11

    (59) scope -> PROTECTED .

    CLASS           reduce using rule 59 (scope -> PROTECTED .)
    VOID            reduce using rule 59 (scope -> PROTECTED .)
    INT             reduce using rule 59 (scope -> PROTECTED .)
    FLOAT           reduce using rule 59 (scope -> PROTECTED .)
    CHAR            reduce using rule 59 (scope -> PROTECTED .)
    STRING          reduce using rule 59 (scope -> PROTECTED .)
    BOOL            reduce using rule 59 (scope -> PROTECTED .)


state 12

    (1) programa -> PROGRAM ID aux_program class context .

    $end            reduce using rule 1 (programa -> PROGRAM ID aux_program class context .)


state 13

    (4) class -> scope CLASS . ID
    (5) class -> scope CLASS . ID COLON ID

    ID              shift and go to state 36


state 14

    (6) context -> LBRACE aux6 . RBRACE

    RBRACE          shift and go to state 37


state 15

    (7) aux6 -> vars .
    (13) aux6 -> vars . aux6
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (77) vars -> . VAR aux2 COLON tipo_simple
    (78) vars -> . VAR aux2 COLON tipo_compuesto
    (79) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (80) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (81) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (82) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (26) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (28) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (29) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (60) estatuto -> . asignacion
    (61) estatuto -> . escritura
    (62) estatuto -> . llamada_func
    (63) estatuto -> . objeto_metodo
    (64) estatuto -> . lectura
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque
    (20) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (56) scope -> .
    (57) scope -> . PRIVATE
    (58) scope -> . PUBLIC
    (59) scope -> . PROTECTED
    (90) asignacion -> . ID EQUALS exp_cond
    (91) asignacion -> . ID EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (97) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (70) escritura -> . PRINT LPAREN aux3 RPAREN
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (102) objeto_metodo -> . ID PERIOD llamada_func
    (65) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (148) objeto_aAcceso -> . ID PERIOD ID
    (104) llamada_id -> . ID

    RBRACE          reduce using rule 7 (aux6 -> vars .)
    VAR             shift and go to state 21
    PUBLIC          shift and go to state 23
    IF              shift and go to state 30
    VOID            reduce using rule 56 (scope -> .)
    INT             reduce using rule 56 (scope -> .)
    FLOAT           reduce using rule 56 (scope -> .)
    CHAR            reduce using rule 56 (scope -> .)
    STRING          reduce using rule 56 (scope -> .)
    BOOL            reduce using rule 56 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    vars                           shift and go to state 15
    aux6                           shift and go to state 38
    constructor                    shift and go to state 16
    funcion                        shift and go to state 17
    estatuto                       shift and go to state 18
    condicion                      shift and go to state 19
    ciclo                          shift and go to state 20
    scope                          shift and go to state 24
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 16

    (8) aux6 -> constructor .
    (14) aux6 -> constructor . aux6
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (77) vars -> . VAR aux2 COLON tipo_simple
    (78) vars -> . VAR aux2 COLON tipo_compuesto
    (79) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (80) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (81) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (82) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (26) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (28) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (29) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (60) estatuto -> . asignacion
    (61) estatuto -> . escritura
    (62) estatuto -> . llamada_func
    (63) estatuto -> . objeto_metodo
    (64) estatuto -> . lectura
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque
    (20) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (56) scope -> .
    (57) scope -> . PRIVATE
    (58) scope -> . PUBLIC
    (59) scope -> . PROTECTED
    (90) asignacion -> . ID EQUALS exp_cond
    (91) asignacion -> . ID EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (97) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (70) escritura -> . PRINT LPAREN aux3 RPAREN
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (102) objeto_metodo -> . ID PERIOD llamada_func
    (65) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (148) objeto_aAcceso -> . ID PERIOD ID
    (104) llamada_id -> . ID

    RBRACE          reduce using rule 8 (aux6 -> constructor .)
    VAR             shift and go to state 21
    PUBLIC          shift and go to state 23
    IF              shift and go to state 30
    VOID            reduce using rule 56 (scope -> .)
    INT             reduce using rule 56 (scope -> .)
    FLOAT           reduce using rule 56 (scope -> .)
    CHAR            reduce using rule 56 (scope -> .)
    STRING          reduce using rule 56 (scope -> .)
    BOOL            reduce using rule 56 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    constructor                    shift and go to state 16
    aux6                           shift and go to state 39
    vars                           shift and go to state 15
    funcion                        shift and go to state 17
    estatuto                       shift and go to state 18
    condicion                      shift and go to state 19
    ciclo                          shift and go to state 20
    scope                          shift and go to state 24
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 17

    (9) aux6 -> funcion .
    (15) aux6 -> funcion . aux6
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (77) vars -> . VAR aux2 COLON tipo_simple
    (78) vars -> . VAR aux2 COLON tipo_compuesto
    (79) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (80) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (81) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (82) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (26) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (28) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (29) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (60) estatuto -> . asignacion
    (61) estatuto -> . escritura
    (62) estatuto -> . llamada_func
    (63) estatuto -> . objeto_metodo
    (64) estatuto -> . lectura
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque
    (20) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (56) scope -> .
    (57) scope -> . PRIVATE
    (58) scope -> . PUBLIC
    (59) scope -> . PROTECTED
    (90) asignacion -> . ID EQUALS exp_cond
    (91) asignacion -> . ID EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (97) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (70) escritura -> . PRINT LPAREN aux3 RPAREN
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (102) objeto_metodo -> . ID PERIOD llamada_func
    (65) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (148) objeto_aAcceso -> . ID PERIOD ID
    (104) llamada_id -> . ID

    RBRACE          reduce using rule 9 (aux6 -> funcion .)
    VAR             shift and go to state 21
    PUBLIC          shift and go to state 23
    IF              shift and go to state 30
    VOID            reduce using rule 56 (scope -> .)
    INT             reduce using rule 56 (scope -> .)
    FLOAT           reduce using rule 56 (scope -> .)
    CHAR            reduce using rule 56 (scope -> .)
    STRING          reduce using rule 56 (scope -> .)
    BOOL            reduce using rule 56 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    funcion                        shift and go to state 17
    aux6                           shift and go to state 40
    vars                           shift and go to state 15
    constructor                    shift and go to state 16
    estatuto                       shift and go to state 18
    condicion                      shift and go to state 19
    ciclo                          shift and go to state 20
    scope                          shift and go to state 24
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 18

    (10) aux6 -> estatuto .
    (16) aux6 -> estatuto . aux6
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (77) vars -> . VAR aux2 COLON tipo_simple
    (78) vars -> . VAR aux2 COLON tipo_compuesto
    (79) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (80) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (81) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (82) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (26) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (28) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (29) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (60) estatuto -> . asignacion
    (61) estatuto -> . escritura
    (62) estatuto -> . llamada_func
    (63) estatuto -> . objeto_metodo
    (64) estatuto -> . lectura
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque
    (20) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (56) scope -> .
    (57) scope -> . PRIVATE
    (58) scope -> . PUBLIC
    (59) scope -> . PROTECTED
    (90) asignacion -> . ID EQUALS exp_cond
    (91) asignacion -> . ID EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (97) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (70) escritura -> . PRINT LPAREN aux3 RPAREN
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (102) objeto_metodo -> . ID PERIOD llamada_func
    (65) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (148) objeto_aAcceso -> . ID PERIOD ID
    (104) llamada_id -> . ID

    RBRACE          reduce using rule 10 (aux6 -> estatuto .)
    VAR             shift and go to state 21
    PUBLIC          shift and go to state 23
    IF              shift and go to state 30
    VOID            reduce using rule 56 (scope -> .)
    INT             reduce using rule 56 (scope -> .)
    FLOAT           reduce using rule 56 (scope -> .)
    CHAR            reduce using rule 56 (scope -> .)
    STRING          reduce using rule 56 (scope -> .)
    BOOL            reduce using rule 56 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    estatuto                       shift and go to state 18
    aux6                           shift and go to state 41
    vars                           shift and go to state 15
    constructor                    shift and go to state 16
    funcion                        shift and go to state 17
    condicion                      shift and go to state 19
    ciclo                          shift and go to state 20
    scope                          shift and go to state 24
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 19

    (11) aux6 -> condicion .
    (17) aux6 -> condicion . aux6
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (77) vars -> . VAR aux2 COLON tipo_simple
    (78) vars -> . VAR aux2 COLON tipo_compuesto
    (79) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (80) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (81) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (82) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (26) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (28) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (29) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (60) estatuto -> . asignacion
    (61) estatuto -> . escritura
    (62) estatuto -> . llamada_func
    (63) estatuto -> . objeto_metodo
    (64) estatuto -> . lectura
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque
    (20) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (56) scope -> .
    (57) scope -> . PRIVATE
    (58) scope -> . PUBLIC
    (59) scope -> . PROTECTED
    (90) asignacion -> . ID EQUALS exp_cond
    (91) asignacion -> . ID EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (97) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (70) escritura -> . PRINT LPAREN aux3 RPAREN
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (102) objeto_metodo -> . ID PERIOD llamada_func
    (65) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (148) objeto_aAcceso -> . ID PERIOD ID
    (104) llamada_id -> . ID

    RBRACE          reduce using rule 11 (aux6 -> condicion .)
    VAR             shift and go to state 21
    PUBLIC          shift and go to state 23
    IF              shift and go to state 30
    VOID            reduce using rule 56 (scope -> .)
    INT             reduce using rule 56 (scope -> .)
    FLOAT           reduce using rule 56 (scope -> .)
    CHAR            reduce using rule 56 (scope -> .)
    STRING          reduce using rule 56 (scope -> .)
    BOOL            reduce using rule 56 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    condicion                      shift and go to state 19
    aux6                           shift and go to state 42
    vars                           shift and go to state 15
    constructor                    shift and go to state 16
    funcion                        shift and go to state 17
    estatuto                       shift and go to state 18
    ciclo                          shift and go to state 20
    scope                          shift and go to state 24
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 20

    (12) aux6 -> ciclo .
    (18) aux6 -> ciclo . aux6
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (77) vars -> . VAR aux2 COLON tipo_simple
    (78) vars -> . VAR aux2 COLON tipo_compuesto
    (79) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (80) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (81) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (82) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (26) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (28) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (29) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (60) estatuto -> . asignacion
    (61) estatuto -> . escritura
    (62) estatuto -> . llamada_func
    (63) estatuto -> . objeto_metodo
    (64) estatuto -> . lectura
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque
    (20) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (56) scope -> .
    (57) scope -> . PRIVATE
    (58) scope -> . PUBLIC
    (59) scope -> . PROTECTED
    (90) asignacion -> . ID EQUALS exp_cond
    (91) asignacion -> . ID EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (97) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (70) escritura -> . PRINT LPAREN aux3 RPAREN
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (102) objeto_metodo -> . ID PERIOD llamada_func
    (65) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (148) objeto_aAcceso -> . ID PERIOD ID
    (104) llamada_id -> . ID

    RBRACE          reduce using rule 12 (aux6 -> ciclo .)
    VAR             shift and go to state 21
    PUBLIC          shift and go to state 23
    IF              shift and go to state 30
    VOID            reduce using rule 56 (scope -> .)
    INT             reduce using rule 56 (scope -> .)
    FLOAT           reduce using rule 56 (scope -> .)
    CHAR            reduce using rule 56 (scope -> .)
    STRING          reduce using rule 56 (scope -> .)
    BOOL            reduce using rule 56 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    ciclo                          shift and go to state 20
    aux6                           shift and go to state 43
    vars                           shift and go to state 15
    constructor                    shift and go to state 16
    funcion                        shift and go to state 17
    estatuto                       shift and go to state 18
    condicion                      shift and go to state 19
    scope                          shift and go to state 24
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 21

    (77) vars -> VAR . aux2 COLON tipo_simple
    (78) vars -> VAR . aux2 COLON tipo_compuesto
    (79) vars -> VAR . ID LBRACKET cint RBRACKET COLON tipo_simple
    (80) vars -> VAR . ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (81) vars -> VAR . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (82) vars -> VAR . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (83) aux2 -> . ID
    (84) aux2 -> . ID COMMA aux2

    ID              shift and go to state 45

    aux2                           shift and go to state 44

state 22

    (90) asignacion -> ID . EQUALS exp_cond
    (91) asignacion -> ID . EQUALS objeto_metodo
    (94) asignacion -> ID . LBRACKET exp RBRACKET EQUALS exp_cond
    (95) asignacion -> ID . LBRACKET exp RBRACKET EQUALS objeto_metodo
    (98) asignacion -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (99) asignacion -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (102) objeto_metodo -> ID . PERIOD llamada_func
    (148) objeto_aAcceso -> ID . PERIOD ID
    (104) llamada_id -> ID .

    EQUALS          shift and go to state 46
    LBRACKET        shift and go to state 47
    PERIOD          shift and go to state 48
    LPAREN          reduce using rule 104 (llamada_id -> ID .)


state 23

    (26) constructor -> PUBLIC . ID LPAREN param RPAREN bloque
    (58) scope -> PUBLIC .

    ID              shift and go to state 49
    VOID            reduce using rule 58 (scope -> PUBLIC .)
    INT             reduce using rule 58 (scope -> PUBLIC .)
    FLOAT           reduce using rule 58 (scope -> PUBLIC .)
    CHAR            reduce using rule 58 (scope -> PUBLIC .)
    STRING          reduce using rule 58 (scope -> PUBLIC .)
    BOOL            reduce using rule 58 (scope -> PUBLIC .)


state 24

    (28) funcion -> scope . type DEF id LPAREN param aux_param RPAREN contexto_func
    (29) funcion -> scope . VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (31) type -> . INT
    (32) type -> . FLOAT
    (33) type -> . CHAR
    (34) type -> . STRING
    (35) type -> . BOOL

    VOID            shift and go to state 51
    INT             shift and go to state 52
    FLOAT           shift and go to state 53
    CHAR            shift and go to state 54
    STRING          shift and go to state 55
    BOOL            shift and go to state 56

    type                           shift and go to state 50

state 25

    (60) estatuto -> asignacion .

    VAR             reduce using rule 60 (estatuto -> asignacion .)
    PUBLIC          reduce using rule 60 (estatuto -> asignacion .)
    IF              reduce using rule 60 (estatuto -> asignacion .)
    PRIVATE         reduce using rule 60 (estatuto -> asignacion .)
    PROTECTED       reduce using rule 60 (estatuto -> asignacion .)
    ID              reduce using rule 60 (estatuto -> asignacion .)
    PRINT           reduce using rule 60 (estatuto -> asignacion .)
    READ            reduce using rule 60 (estatuto -> asignacion .)
    VOID            reduce using rule 60 (estatuto -> asignacion .)
    INT             reduce using rule 60 (estatuto -> asignacion .)
    FLOAT           reduce using rule 60 (estatuto -> asignacion .)
    CHAR            reduce using rule 60 (estatuto -> asignacion .)
    STRING          reduce using rule 60 (estatuto -> asignacion .)
    BOOL            reduce using rule 60 (estatuto -> asignacion .)
    WHILE           reduce using rule 60 (estatuto -> asignacion .)
    RBRACE          reduce using rule 60 (estatuto -> asignacion .)
    RETURN          reduce using rule 60 (estatuto -> asignacion .)


state 26

    (61) estatuto -> escritura .

    VAR             reduce using rule 61 (estatuto -> escritura .)
    PUBLIC          reduce using rule 61 (estatuto -> escritura .)
    IF              reduce using rule 61 (estatuto -> escritura .)
    PRIVATE         reduce using rule 61 (estatuto -> escritura .)
    PROTECTED       reduce using rule 61 (estatuto -> escritura .)
    ID              reduce using rule 61 (estatuto -> escritura .)
    PRINT           reduce using rule 61 (estatuto -> escritura .)
    READ            reduce using rule 61 (estatuto -> escritura .)
    VOID            reduce using rule 61 (estatuto -> escritura .)
    INT             reduce using rule 61 (estatuto -> escritura .)
    FLOAT           reduce using rule 61 (estatuto -> escritura .)
    CHAR            reduce using rule 61 (estatuto -> escritura .)
    STRING          reduce using rule 61 (estatuto -> escritura .)
    BOOL            reduce using rule 61 (estatuto -> escritura .)
    WHILE           reduce using rule 61 (estatuto -> escritura .)
    RBRACE          reduce using rule 61 (estatuto -> escritura .)
    RETURN          reduce using rule 61 (estatuto -> escritura .)


state 27

    (62) estatuto -> llamada_func .

    VAR             reduce using rule 62 (estatuto -> llamada_func .)
    PUBLIC          reduce using rule 62 (estatuto -> llamada_func .)
    IF              reduce using rule 62 (estatuto -> llamada_func .)
    PRIVATE         reduce using rule 62 (estatuto -> llamada_func .)
    PROTECTED       reduce using rule 62 (estatuto -> llamada_func .)
    ID              reduce using rule 62 (estatuto -> llamada_func .)
    PRINT           reduce using rule 62 (estatuto -> llamada_func .)
    READ            reduce using rule 62 (estatuto -> llamada_func .)
    VOID            reduce using rule 62 (estatuto -> llamada_func .)
    INT             reduce using rule 62 (estatuto -> llamada_func .)
    FLOAT           reduce using rule 62 (estatuto -> llamada_func .)
    CHAR            reduce using rule 62 (estatuto -> llamada_func .)
    STRING          reduce using rule 62 (estatuto -> llamada_func .)
    BOOL            reduce using rule 62 (estatuto -> llamada_func .)
    WHILE           reduce using rule 62 (estatuto -> llamada_func .)
    RBRACE          reduce using rule 62 (estatuto -> llamada_func .)
    RETURN          reduce using rule 62 (estatuto -> llamada_func .)


state 28

    (63) estatuto -> objeto_metodo .

    VAR             reduce using rule 63 (estatuto -> objeto_metodo .)
    PUBLIC          reduce using rule 63 (estatuto -> objeto_metodo .)
    IF              reduce using rule 63 (estatuto -> objeto_metodo .)
    PRIVATE         reduce using rule 63 (estatuto -> objeto_metodo .)
    PROTECTED       reduce using rule 63 (estatuto -> objeto_metodo .)
    ID              reduce using rule 63 (estatuto -> objeto_metodo .)
    PRINT           reduce using rule 63 (estatuto -> objeto_metodo .)
    READ            reduce using rule 63 (estatuto -> objeto_metodo .)
    VOID            reduce using rule 63 (estatuto -> objeto_metodo .)
    INT             reduce using rule 63 (estatuto -> objeto_metodo .)
    FLOAT           reduce using rule 63 (estatuto -> objeto_metodo .)
    CHAR            reduce using rule 63 (estatuto -> objeto_metodo .)
    STRING          reduce using rule 63 (estatuto -> objeto_metodo .)
    BOOL            reduce using rule 63 (estatuto -> objeto_metodo .)
    WHILE           reduce using rule 63 (estatuto -> objeto_metodo .)
    RBRACE          reduce using rule 63 (estatuto -> objeto_metodo .)
    RETURN          reduce using rule 63 (estatuto -> objeto_metodo .)


state 29

    (64) estatuto -> lectura .

    VAR             reduce using rule 64 (estatuto -> lectura .)
    PUBLIC          reduce using rule 64 (estatuto -> lectura .)
    IF              reduce using rule 64 (estatuto -> lectura .)
    PRIVATE         reduce using rule 64 (estatuto -> lectura .)
    PROTECTED       reduce using rule 64 (estatuto -> lectura .)
    ID              reduce using rule 64 (estatuto -> lectura .)
    PRINT           reduce using rule 64 (estatuto -> lectura .)
    READ            reduce using rule 64 (estatuto -> lectura .)
    VOID            reduce using rule 64 (estatuto -> lectura .)
    INT             reduce using rule 64 (estatuto -> lectura .)
    FLOAT           reduce using rule 64 (estatuto -> lectura .)
    CHAR            reduce using rule 64 (estatuto -> lectura .)
    STRING          reduce using rule 64 (estatuto -> lectura .)
    BOOL            reduce using rule 64 (estatuto -> lectura .)
    WHILE           reduce using rule 64 (estatuto -> lectura .)
    RBRACE          reduce using rule 64 (estatuto -> lectura .)
    RETURN          reduce using rule 64 (estatuto -> lectura .)


state 30

    (19) condicion -> IF . LPAREN gotoF RPAREN bloque
    (20) condicion -> IF . LPAREN gotoF RPAREN bloque elif

    LPAREN          shift and go to state 57


state 31

    (24) ciclo -> aux_ciclo . WHILE LPAREN gotoF RPAREN bloque

    WHILE           shift and go to state 58


state 32

    (92) asignacion -> objeto_aAcceso . EQUALS exp_cond
    (93) asignacion -> objeto_aAcceso . EQUALS objeto_metodo
    (96) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET EQUALS exp_cond
    (97) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> objeto_aAcceso . LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond
    (101) asignacion -> objeto_aAcceso . LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo

    EQUALS          shift and go to state 59
    LBRACKET        shift and go to state 60


state 33

    (70) escritura -> PRINT . LPAREN aux3 RPAREN

    LPAREN          shift and go to state 61


state 34

    (103) llamada_func -> llamada_id . llamada_lparen llamada_rparen
    (105) llamada_lparen -> . LPAREN

    LPAREN          shift and go to state 63

    llamada_lparen                 shift and go to state 62

state 35

    (65) lectura -> READ . LPAREN aux4 RPAREN

    LPAREN          shift and go to state 64


state 36

    (4) class -> scope CLASS ID .
    (5) class -> scope CLASS ID . COLON ID

    LBRACE          reduce using rule 4 (class -> scope CLASS ID .)
    COLON           shift and go to state 65


state 37

    (6) context -> LBRACE aux6 RBRACE .

    $end            reduce using rule 6 (context -> LBRACE aux6 RBRACE .)


state 38

    (13) aux6 -> vars aux6 .

    RBRACE          reduce using rule 13 (aux6 -> vars aux6 .)


state 39

    (14) aux6 -> constructor aux6 .

    RBRACE          reduce using rule 14 (aux6 -> constructor aux6 .)


state 40

    (15) aux6 -> funcion aux6 .

    RBRACE          reduce using rule 15 (aux6 -> funcion aux6 .)


state 41

    (16) aux6 -> estatuto aux6 .

    RBRACE          reduce using rule 16 (aux6 -> estatuto aux6 .)


state 42

    (17) aux6 -> condicion aux6 .

    RBRACE          reduce using rule 17 (aux6 -> condicion aux6 .)


state 43

    (18) aux6 -> ciclo aux6 .

    RBRACE          reduce using rule 18 (aux6 -> ciclo aux6 .)


state 44

    (77) vars -> VAR aux2 . COLON tipo_simple
    (78) vars -> VAR aux2 . COLON tipo_compuesto

    COLON           shift and go to state 66


state 45

    (79) vars -> VAR ID . LBRACKET cint RBRACKET COLON tipo_simple
    (80) vars -> VAR ID . LBRACKET cint RBRACKET COLON tipo_compuesto
    (81) vars -> VAR ID . LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (82) vars -> VAR ID . LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (83) aux2 -> ID .
    (84) aux2 -> ID . COMMA aux2

    LBRACKET        shift and go to state 67
    COLON           reduce using rule 83 (aux2 -> ID .)
    COMMA           shift and go to state 68


state 46

    (90) asignacion -> ID EQUALS . exp_cond
    (91) asignacion -> ID EQUALS . objeto_metodo
    (113) exp_cond -> . exp_bool
    (114) exp_cond -> . exp_bool AND exp_cond
    (115) exp_cond -> . exp_bool OR exp_cond
    (102) objeto_metodo -> . ID PERIOD llamada_func
    (116) exp_bool -> . TRUE
    (117) exp_bool -> . FALSE
    (118) exp_bool -> . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    ID              shift and go to state 69
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    exp_cond                       shift and go to state 70
    objeto_metodo                  shift and go to state 71
    exp_bool                       shift and go to state 72
    llamada_func                   shift and go to state 73
    expresion                      shift and go to state 76
    exp                            shift and go to state 77
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 47

    (94) asignacion -> ID LBRACKET . exp RBRACKET EQUALS exp_cond
    (95) asignacion -> ID LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (98) asignacion -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (99) asignacion -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    ID              shift and go to state 91
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    exp                            shift and go to state 92
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    llamada_func                   shift and go to state 73
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 48

    (102) objeto_metodo -> ID PERIOD . llamada_func
    (148) objeto_aAcceso -> ID PERIOD . ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (104) llamada_id -> . ID

    ID              shift and go to state 93

    llamada_func                   shift and go to state 94
    llamada_id                     shift and go to state 34

state 49

    (26) constructor -> PUBLIC ID . LPAREN param RPAREN bloque

    LPAREN          shift and go to state 95


state 50

    (28) funcion -> scope type . DEF id LPAREN param aux_param RPAREN contexto_func

    DEF             shift and go to state 96


state 51

    (29) funcion -> scope VOID . DEF id LPAREN param aux_param RPAREN contexto_func

    DEF             shift and go to state 97


state 52

    (31) type -> INT .

    DEF             reduce using rule 31 (type -> INT .)


state 53

    (32) type -> FLOAT .

    DEF             reduce using rule 32 (type -> FLOAT .)


state 54

    (33) type -> CHAR .

    DEF             reduce using rule 33 (type -> CHAR .)


state 55

    (34) type -> STRING .

    DEF             reduce using rule 34 (type -> STRING .)


state 56

    (35) type -> BOOL .

    DEF             reduce using rule 35 (type -> BOOL .)


state 57

    (19) condicion -> IF LPAREN . gotoF RPAREN bloque
    (20) condicion -> IF LPAREN . gotoF RPAREN bloque elif
    (112) gotoF -> . exp_cond
    (113) exp_cond -> . exp_bool
    (114) exp_cond -> . exp_bool AND exp_cond
    (115) exp_cond -> . exp_bool OR exp_cond
    (116) exp_bool -> . TRUE
    (117) exp_bool -> . FALSE
    (118) exp_bool -> . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    ID              shift and go to state 91
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    gotoF                          shift and go to state 98
    exp_cond                       shift and go to state 99
    exp_bool                       shift and go to state 72
    expresion                      shift and go to state 76
    exp                            shift and go to state 77
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    llamada_func                   shift and go to state 73
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 58

    (24) ciclo -> aux_ciclo WHILE . LPAREN gotoF RPAREN bloque

    LPAREN          shift and go to state 100


state 59

    (92) asignacion -> objeto_aAcceso EQUALS . exp_cond
    (93) asignacion -> objeto_aAcceso EQUALS . objeto_metodo
    (113) exp_cond -> . exp_bool
    (114) exp_cond -> . exp_bool AND exp_cond
    (115) exp_cond -> . exp_bool OR exp_cond
    (102) objeto_metodo -> . ID PERIOD llamada_func
    (116) exp_bool -> . TRUE
    (117) exp_bool -> . FALSE
    (118) exp_bool -> . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    ID              shift and go to state 69
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    objeto_aAcceso                 shift and go to state 83
    exp_cond                       shift and go to state 101
    objeto_metodo                  shift and go to state 102
    exp_bool                       shift and go to state 72
    llamada_func                   shift and go to state 73
    expresion                      shift and go to state 76
    exp                            shift and go to state 77
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    var                            shift and go to state 84
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 60

    (96) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET EQUALS exp_cond
    (97) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> objeto_aAcceso LBRACKET . LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond
    (101) asignacion -> objeto_aAcceso LBRACKET . LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    LBRACKET        shift and go to state 103
    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    ID              shift and go to state 91
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    objeto_aAcceso                 shift and go to state 83
    exp                            shift and go to state 104
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    var                            shift and go to state 84
    llamada_func                   shift and go to state 73
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 61

    (70) escritura -> PRINT LPAREN . aux3 RPAREN
    (71) aux3 -> . expresion
    (72) aux3 -> . objeto_metodo
    (73) aux3 -> . CSTRING
    (74) aux3 -> . expresion COMMA aux3
    (75) aux3 -> . objeto_metodo COMMA aux3
    (76) aux3 -> . CSTRING COMMA aux3
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (102) objeto_metodo -> . ID PERIOD llamada_func
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    CSTRING         shift and go to state 108
    ID              shift and go to state 69
    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    aux3                           shift and go to state 105
    expresion                      shift and go to state 106
    objeto_metodo                  shift and go to state 107
    exp                            shift and go to state 77
    llamada_func                   shift and go to state 73
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 62

    (103) llamada_func -> llamada_id llamada_lparen . llamada_rparen
    (106) llamada_rparen -> . aux RPAREN
    (107) llamada_rparen -> . RPAREN
    (108) aux -> . exp aux_exp
    (109) aux -> . exp aux_exp aux_comma aux
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    RPAREN          shift and go to state 111
    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    ID              shift and go to state 91
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    llamada_id                     shift and go to state 34
    llamada_rparen                 shift and go to state 109
    aux                            shift and go to state 110
    exp                            shift and go to state 112
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    llamada_func                   shift and go to state 73
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87

state 63

    (105) llamada_lparen -> LPAREN .

    RPAREN          reduce using rule 105 (llamada_lparen -> LPAREN .)
    LPAREN          reduce using rule 105 (llamada_lparen -> LPAREN .)
    PLUS            reduce using rule 105 (llamada_lparen -> LPAREN .)
    MINUS           reduce using rule 105 (llamada_lparen -> LPAREN .)
    ID              reduce using rule 105 (llamada_lparen -> LPAREN .)
    CINT            reduce using rule 105 (llamada_lparen -> LPAREN .)
    NUMBER          reduce using rule 105 (llamada_lparen -> LPAREN .)
    CCHAR           reduce using rule 105 (llamada_lparen -> LPAREN .)


state 64

    (65) lectura -> READ LPAREN . aux4 RPAREN
    (66) aux4 -> . ID
    (67) aux4 -> . objeto_aAcceso
    (68) aux4 -> . ID COMMA aux4
    (69) aux4 -> . objeto_aAcceso COMMA aux4
    (148) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 114

    aux4                           shift and go to state 113
    objeto_aAcceso                 shift and go to state 115

state 65

    (5) class -> scope CLASS ID COLON . ID

    ID              shift and go to state 116


state 66

    (77) vars -> VAR aux2 COLON . tipo_simple
    (78) vars -> VAR aux2 COLON . tipo_compuesto
    (85) tipo_simple -> . INT
    (86) tipo_simple -> . FLOAT
    (87) tipo_simple -> . CHAR
    (88) tipo_simple -> . BOOL
    (89) tipo_compuesto -> . ID

    INT             shift and go to state 119
    FLOAT           shift and go to state 120
    CHAR            shift and go to state 121
    BOOL            shift and go to state 122
    ID              shift and go to state 123

    tipo_simple                    shift and go to state 117
    tipo_compuesto                 shift and go to state 118

state 67

    (79) vars -> VAR ID LBRACKET . cint RBRACKET COLON tipo_simple
    (80) vars -> VAR ID LBRACKET . cint RBRACKET COLON tipo_compuesto
    (81) vars -> VAR ID LBRACKET . cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (82) vars -> VAR ID LBRACKET . cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (145) cint -> . CINT

    CINT            shift and go to state 88

    cint                           shift and go to state 124

state 68

    (84) aux2 -> ID COMMA . aux2
    (83) aux2 -> . ID
    (84) aux2 -> . ID COMMA aux2

    ID              shift and go to state 125

    aux2                           shift and go to state 126

state 69

    (102) objeto_metodo -> ID . PERIOD llamada_func
    (141) var -> ID .
    (148) objeto_aAcceso -> ID . PERIOD ID
    (104) llamada_id -> ID .

    PERIOD          shift and go to state 48
    TIMES           reduce using rule 141 (var -> ID .)
    DIVIDE          reduce using rule 141 (var -> ID .)
    MODULO          reduce using rule 141 (var -> ID .)
    LT              reduce using rule 141 (var -> ID .)
    GT              reduce using rule 141 (var -> ID .)
    GE              reduce using rule 141 (var -> ID .)
    LE              reduce using rule 141 (var -> ID .)
    EQ              reduce using rule 141 (var -> ID .)
    NE              reduce using rule 141 (var -> ID .)
    PLUS            reduce using rule 141 (var -> ID .)
    MINUS           reduce using rule 141 (var -> ID .)
    AND             reduce using rule 141 (var -> ID .)
    OR              reduce using rule 141 (var -> ID .)
    VAR             reduce using rule 141 (var -> ID .)
    PUBLIC          reduce using rule 141 (var -> ID .)
    IF              reduce using rule 141 (var -> ID .)
    PRIVATE         reduce using rule 141 (var -> ID .)
    PROTECTED       reduce using rule 141 (var -> ID .)
    ID              reduce using rule 141 (var -> ID .)
    PRINT           reduce using rule 141 (var -> ID .)
    READ            reduce using rule 141 (var -> ID .)
    VOID            reduce using rule 141 (var -> ID .)
    INT             reduce using rule 141 (var -> ID .)
    FLOAT           reduce using rule 141 (var -> ID .)
    CHAR            reduce using rule 141 (var -> ID .)
    STRING          reduce using rule 141 (var -> ID .)
    BOOL            reduce using rule 141 (var -> ID .)
    WHILE           reduce using rule 141 (var -> ID .)
    RBRACE          reduce using rule 141 (var -> ID .)
    RETURN          reduce using rule 141 (var -> ID .)
    COMMA           reduce using rule 141 (var -> ID .)
    RPAREN          reduce using rule 141 (var -> ID .)
    LPAREN          reduce using rule 104 (llamada_id -> ID .)


state 70

    (90) asignacion -> ID EQUALS exp_cond .

    VAR             reduce using rule 90 (asignacion -> ID EQUALS exp_cond .)
    PUBLIC          reduce using rule 90 (asignacion -> ID EQUALS exp_cond .)
    IF              reduce using rule 90 (asignacion -> ID EQUALS exp_cond .)
    PRIVATE         reduce using rule 90 (asignacion -> ID EQUALS exp_cond .)
    PROTECTED       reduce using rule 90 (asignacion -> ID EQUALS exp_cond .)
    ID              reduce using rule 90 (asignacion -> ID EQUALS exp_cond .)
    PRINT           reduce using rule 90 (asignacion -> ID EQUALS exp_cond .)
    READ            reduce using rule 90 (asignacion -> ID EQUALS exp_cond .)
    VOID            reduce using rule 90 (asignacion -> ID EQUALS exp_cond .)
    INT             reduce using rule 90 (asignacion -> ID EQUALS exp_cond .)
    FLOAT           reduce using rule 90 (asignacion -> ID EQUALS exp_cond .)
    CHAR            reduce using rule 90 (asignacion -> ID EQUALS exp_cond .)
    STRING          reduce using rule 90 (asignacion -> ID EQUALS exp_cond .)
    BOOL            reduce using rule 90 (asignacion -> ID EQUALS exp_cond .)
    WHILE           reduce using rule 90 (asignacion -> ID EQUALS exp_cond .)
    RBRACE          reduce using rule 90 (asignacion -> ID EQUALS exp_cond .)
    RETURN          reduce using rule 90 (asignacion -> ID EQUALS exp_cond .)


state 71

    (91) asignacion -> ID EQUALS objeto_metodo .

    VAR             reduce using rule 91 (asignacion -> ID EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 91 (asignacion -> ID EQUALS objeto_metodo .)
    IF              reduce using rule 91 (asignacion -> ID EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 91 (asignacion -> ID EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 91 (asignacion -> ID EQUALS objeto_metodo .)
    ID              reduce using rule 91 (asignacion -> ID EQUALS objeto_metodo .)
    PRINT           reduce using rule 91 (asignacion -> ID EQUALS objeto_metodo .)
    READ            reduce using rule 91 (asignacion -> ID EQUALS objeto_metodo .)
    VOID            reduce using rule 91 (asignacion -> ID EQUALS objeto_metodo .)
    INT             reduce using rule 91 (asignacion -> ID EQUALS objeto_metodo .)
    FLOAT           reduce using rule 91 (asignacion -> ID EQUALS objeto_metodo .)
    CHAR            reduce using rule 91 (asignacion -> ID EQUALS objeto_metodo .)
    STRING          reduce using rule 91 (asignacion -> ID EQUALS objeto_metodo .)
    BOOL            reduce using rule 91 (asignacion -> ID EQUALS objeto_metodo .)
    WHILE           reduce using rule 91 (asignacion -> ID EQUALS objeto_metodo .)
    RBRACE          reduce using rule 91 (asignacion -> ID EQUALS objeto_metodo .)
    RETURN          reduce using rule 91 (asignacion -> ID EQUALS objeto_metodo .)


state 72

    (113) exp_cond -> exp_bool .
    (114) exp_cond -> exp_bool . AND exp_cond
    (115) exp_cond -> exp_bool . OR exp_cond

    VAR             reduce using rule 113 (exp_cond -> exp_bool .)
    PUBLIC          reduce using rule 113 (exp_cond -> exp_bool .)
    IF              reduce using rule 113 (exp_cond -> exp_bool .)
    PRIVATE         reduce using rule 113 (exp_cond -> exp_bool .)
    PROTECTED       reduce using rule 113 (exp_cond -> exp_bool .)
    ID              reduce using rule 113 (exp_cond -> exp_bool .)
    PRINT           reduce using rule 113 (exp_cond -> exp_bool .)
    READ            reduce using rule 113 (exp_cond -> exp_bool .)
    VOID            reduce using rule 113 (exp_cond -> exp_bool .)
    INT             reduce using rule 113 (exp_cond -> exp_bool .)
    FLOAT           reduce using rule 113 (exp_cond -> exp_bool .)
    CHAR            reduce using rule 113 (exp_cond -> exp_bool .)
    STRING          reduce using rule 113 (exp_cond -> exp_bool .)
    BOOL            reduce using rule 113 (exp_cond -> exp_bool .)
    WHILE           reduce using rule 113 (exp_cond -> exp_bool .)
    RBRACE          reduce using rule 113 (exp_cond -> exp_bool .)
    RETURN          reduce using rule 113 (exp_cond -> exp_bool .)
    RPAREN          reduce using rule 113 (exp_cond -> exp_bool .)
    AND             shift and go to state 127
    OR              shift and go to state 128


state 73

    (140) factor -> llamada_func .

    TIMES           reduce using rule 140 (factor -> llamada_func .)
    DIVIDE          reduce using rule 140 (factor -> llamada_func .)
    MODULO          reduce using rule 140 (factor -> llamada_func .)
    LT              reduce using rule 140 (factor -> llamada_func .)
    GT              reduce using rule 140 (factor -> llamada_func .)
    GE              reduce using rule 140 (factor -> llamada_func .)
    LE              reduce using rule 140 (factor -> llamada_func .)
    EQ              reduce using rule 140 (factor -> llamada_func .)
    NE              reduce using rule 140 (factor -> llamada_func .)
    PLUS            reduce using rule 140 (factor -> llamada_func .)
    MINUS           reduce using rule 140 (factor -> llamada_func .)
    AND             reduce using rule 140 (factor -> llamada_func .)
    OR              reduce using rule 140 (factor -> llamada_func .)
    VAR             reduce using rule 140 (factor -> llamada_func .)
    PUBLIC          reduce using rule 140 (factor -> llamada_func .)
    IF              reduce using rule 140 (factor -> llamada_func .)
    PRIVATE         reduce using rule 140 (factor -> llamada_func .)
    PROTECTED       reduce using rule 140 (factor -> llamada_func .)
    ID              reduce using rule 140 (factor -> llamada_func .)
    PRINT           reduce using rule 140 (factor -> llamada_func .)
    READ            reduce using rule 140 (factor -> llamada_func .)
    VOID            reduce using rule 140 (factor -> llamada_func .)
    INT             reduce using rule 140 (factor -> llamada_func .)
    FLOAT           reduce using rule 140 (factor -> llamada_func .)
    CHAR            reduce using rule 140 (factor -> llamada_func .)
    STRING          reduce using rule 140 (factor -> llamada_func .)
    BOOL            reduce using rule 140 (factor -> llamada_func .)
    WHILE           reduce using rule 140 (factor -> llamada_func .)
    RBRACE          reduce using rule 140 (factor -> llamada_func .)
    RETURN          reduce using rule 140 (factor -> llamada_func .)
    RBRACKET        reduce using rule 140 (factor -> llamada_func .)
    RPAREN          reduce using rule 140 (factor -> llamada_func .)
    COMMA           reduce using rule 140 (factor -> llamada_func .)


state 74

    (116) exp_bool -> TRUE .

    AND             reduce using rule 116 (exp_bool -> TRUE .)
    OR              reduce using rule 116 (exp_bool -> TRUE .)
    VAR             reduce using rule 116 (exp_bool -> TRUE .)
    PUBLIC          reduce using rule 116 (exp_bool -> TRUE .)
    IF              reduce using rule 116 (exp_bool -> TRUE .)
    PRIVATE         reduce using rule 116 (exp_bool -> TRUE .)
    PROTECTED       reduce using rule 116 (exp_bool -> TRUE .)
    ID              reduce using rule 116 (exp_bool -> TRUE .)
    PRINT           reduce using rule 116 (exp_bool -> TRUE .)
    READ            reduce using rule 116 (exp_bool -> TRUE .)
    VOID            reduce using rule 116 (exp_bool -> TRUE .)
    INT             reduce using rule 116 (exp_bool -> TRUE .)
    FLOAT           reduce using rule 116 (exp_bool -> TRUE .)
    CHAR            reduce using rule 116 (exp_bool -> TRUE .)
    STRING          reduce using rule 116 (exp_bool -> TRUE .)
    BOOL            reduce using rule 116 (exp_bool -> TRUE .)
    WHILE           reduce using rule 116 (exp_bool -> TRUE .)
    RBRACE          reduce using rule 116 (exp_bool -> TRUE .)
    RETURN          reduce using rule 116 (exp_bool -> TRUE .)
    RPAREN          reduce using rule 116 (exp_bool -> TRUE .)


state 75

    (117) exp_bool -> FALSE .

    AND             reduce using rule 117 (exp_bool -> FALSE .)
    OR              reduce using rule 117 (exp_bool -> FALSE .)
    VAR             reduce using rule 117 (exp_bool -> FALSE .)
    PUBLIC          reduce using rule 117 (exp_bool -> FALSE .)
    IF              reduce using rule 117 (exp_bool -> FALSE .)
    PRIVATE         reduce using rule 117 (exp_bool -> FALSE .)
    PROTECTED       reduce using rule 117 (exp_bool -> FALSE .)
    ID              reduce using rule 117 (exp_bool -> FALSE .)
    PRINT           reduce using rule 117 (exp_bool -> FALSE .)
    READ            reduce using rule 117 (exp_bool -> FALSE .)
    VOID            reduce using rule 117 (exp_bool -> FALSE .)
    INT             reduce using rule 117 (exp_bool -> FALSE .)
    FLOAT           reduce using rule 117 (exp_bool -> FALSE .)
    CHAR            reduce using rule 117 (exp_bool -> FALSE .)
    STRING          reduce using rule 117 (exp_bool -> FALSE .)
    BOOL            reduce using rule 117 (exp_bool -> FALSE .)
    WHILE           reduce using rule 117 (exp_bool -> FALSE .)
    RBRACE          reduce using rule 117 (exp_bool -> FALSE .)
    RETURN          reduce using rule 117 (exp_bool -> FALSE .)
    RPAREN          reduce using rule 117 (exp_bool -> FALSE .)


state 76

    (118) exp_bool -> expresion .

    AND             reduce using rule 118 (exp_bool -> expresion .)
    OR              reduce using rule 118 (exp_bool -> expresion .)
    VAR             reduce using rule 118 (exp_bool -> expresion .)
    PUBLIC          reduce using rule 118 (exp_bool -> expresion .)
    IF              reduce using rule 118 (exp_bool -> expresion .)
    PRIVATE         reduce using rule 118 (exp_bool -> expresion .)
    PROTECTED       reduce using rule 118 (exp_bool -> expresion .)
    ID              reduce using rule 118 (exp_bool -> expresion .)
    PRINT           reduce using rule 118 (exp_bool -> expresion .)
    READ            reduce using rule 118 (exp_bool -> expresion .)
    VOID            reduce using rule 118 (exp_bool -> expresion .)
    INT             reduce using rule 118 (exp_bool -> expresion .)
    FLOAT           reduce using rule 118 (exp_bool -> expresion .)
    CHAR            reduce using rule 118 (exp_bool -> expresion .)
    STRING          reduce using rule 118 (exp_bool -> expresion .)
    BOOL            reduce using rule 118 (exp_bool -> expresion .)
    WHILE           reduce using rule 118 (exp_bool -> expresion .)
    RBRACE          reduce using rule 118 (exp_bool -> expresion .)
    RETURN          reduce using rule 118 (exp_bool -> expresion .)
    RPAREN          reduce using rule 118 (exp_bool -> expresion .)


state 77

    (119) expresion -> exp .
    (120) expresion -> exp . LT expresion
    (121) expresion -> exp . GT expresion
    (122) expresion -> exp . GE expresion
    (123) expresion -> exp . LE expresion
    (124) expresion -> exp . EQ expresion
    (125) expresion -> exp . NE expresion
    (127) exp -> exp . PLUS termino
    (128) exp -> exp . MINUS termino

    AND             reduce using rule 119 (expresion -> exp .)
    OR              reduce using rule 119 (expresion -> exp .)
    VAR             reduce using rule 119 (expresion -> exp .)
    PUBLIC          reduce using rule 119 (expresion -> exp .)
    IF              reduce using rule 119 (expresion -> exp .)
    PRIVATE         reduce using rule 119 (expresion -> exp .)
    PROTECTED       reduce using rule 119 (expresion -> exp .)
    ID              reduce using rule 119 (expresion -> exp .)
    PRINT           reduce using rule 119 (expresion -> exp .)
    READ            reduce using rule 119 (expresion -> exp .)
    VOID            reduce using rule 119 (expresion -> exp .)
    INT             reduce using rule 119 (expresion -> exp .)
    FLOAT           reduce using rule 119 (expresion -> exp .)
    CHAR            reduce using rule 119 (expresion -> exp .)
    STRING          reduce using rule 119 (expresion -> exp .)
    BOOL            reduce using rule 119 (expresion -> exp .)
    WHILE           reduce using rule 119 (expresion -> exp .)
    RBRACE          reduce using rule 119 (expresion -> exp .)
    RETURN          reduce using rule 119 (expresion -> exp .)
    RPAREN          reduce using rule 119 (expresion -> exp .)
    COMMA           reduce using rule 119 (expresion -> exp .)
    LT              shift and go to state 129
    GT              shift and go to state 130
    GE              shift and go to state 131
    LE              shift and go to state 132
    EQ              shift and go to state 133
    NE              shift and go to state 134
    PLUS            shift and go to state 135
    MINUS           shift and go to state 136


state 78

    (126) exp -> termino .
    (130) termino -> termino . TIMES factor
    (131) termino -> termino . DIVIDE factor
    (132) termino -> termino . MODULO factor

    LT              reduce using rule 126 (exp -> termino .)
    GT              reduce using rule 126 (exp -> termino .)
    GE              reduce using rule 126 (exp -> termino .)
    LE              reduce using rule 126 (exp -> termino .)
    EQ              reduce using rule 126 (exp -> termino .)
    NE              reduce using rule 126 (exp -> termino .)
    PLUS            reduce using rule 126 (exp -> termino .)
    MINUS           reduce using rule 126 (exp -> termino .)
    AND             reduce using rule 126 (exp -> termino .)
    OR              reduce using rule 126 (exp -> termino .)
    VAR             reduce using rule 126 (exp -> termino .)
    PUBLIC          reduce using rule 126 (exp -> termino .)
    IF              reduce using rule 126 (exp -> termino .)
    PRIVATE         reduce using rule 126 (exp -> termino .)
    PROTECTED       reduce using rule 126 (exp -> termino .)
    ID              reduce using rule 126 (exp -> termino .)
    PRINT           reduce using rule 126 (exp -> termino .)
    READ            reduce using rule 126 (exp -> termino .)
    VOID            reduce using rule 126 (exp -> termino .)
    INT             reduce using rule 126 (exp -> termino .)
    FLOAT           reduce using rule 126 (exp -> termino .)
    CHAR            reduce using rule 126 (exp -> termino .)
    STRING          reduce using rule 126 (exp -> termino .)
    BOOL            reduce using rule 126 (exp -> termino .)
    WHILE           reduce using rule 126 (exp -> termino .)
    RBRACE          reduce using rule 126 (exp -> termino .)
    RETURN          reduce using rule 126 (exp -> termino .)
    RBRACKET        reduce using rule 126 (exp -> termino .)
    RPAREN          reduce using rule 126 (exp -> termino .)
    COMMA           reduce using rule 126 (exp -> termino .)
    TIMES           shift and go to state 137
    DIVIDE          shift and go to state 138
    MODULO          shift and go to state 139


state 79

    (134) factor -> PLUS . objeto_aAcceso
    (136) factor -> PLUS . var
    (148) objeto_aAcceso -> . ID PERIOD ID
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR

    ID              shift and go to state 142
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    objeto_aAcceso                 shift and go to state 140
    var                            shift and go to state 141
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87

state 80

    (135) factor -> MINUS . objeto_aAcceso
    (137) factor -> MINUS . var
    (148) objeto_aAcceso -> . ID PERIOD ID
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR

    ID              shift and go to state 142
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    objeto_aAcceso                 shift and go to state 143
    var                            shift and go to state 144
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87

state 81

    (129) termino -> factor .

    TIMES           reduce using rule 129 (termino -> factor .)
    DIVIDE          reduce using rule 129 (termino -> factor .)
    MODULO          reduce using rule 129 (termino -> factor .)
    LT              reduce using rule 129 (termino -> factor .)
    GT              reduce using rule 129 (termino -> factor .)
    GE              reduce using rule 129 (termino -> factor .)
    LE              reduce using rule 129 (termino -> factor .)
    EQ              reduce using rule 129 (termino -> factor .)
    NE              reduce using rule 129 (termino -> factor .)
    PLUS            reduce using rule 129 (termino -> factor .)
    MINUS           reduce using rule 129 (termino -> factor .)
    AND             reduce using rule 129 (termino -> factor .)
    OR              reduce using rule 129 (termino -> factor .)
    VAR             reduce using rule 129 (termino -> factor .)
    PUBLIC          reduce using rule 129 (termino -> factor .)
    IF              reduce using rule 129 (termino -> factor .)
    PRIVATE         reduce using rule 129 (termino -> factor .)
    PROTECTED       reduce using rule 129 (termino -> factor .)
    ID              reduce using rule 129 (termino -> factor .)
    PRINT           reduce using rule 129 (termino -> factor .)
    READ            reduce using rule 129 (termino -> factor .)
    VOID            reduce using rule 129 (termino -> factor .)
    INT             reduce using rule 129 (termino -> factor .)
    FLOAT           reduce using rule 129 (termino -> factor .)
    CHAR            reduce using rule 129 (termino -> factor .)
    STRING          reduce using rule 129 (termino -> factor .)
    BOOL            reduce using rule 129 (termino -> factor .)
    WHILE           reduce using rule 129 (termino -> factor .)
    RBRACE          reduce using rule 129 (termino -> factor .)
    RETURN          reduce using rule 129 (termino -> factor .)
    RBRACKET        reduce using rule 129 (termino -> factor .)
    RPAREN          reduce using rule 129 (termino -> factor .)
    COMMA           reduce using rule 129 (termino -> factor .)


state 82

    (133) factor -> LPAREN . exp_cond RPAREN
    (113) exp_cond -> . exp_bool
    (114) exp_cond -> . exp_bool AND exp_cond
    (115) exp_cond -> . exp_bool OR exp_cond
    (116) exp_bool -> . TRUE
    (117) exp_bool -> . FALSE
    (118) exp_bool -> . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    ID              shift and go to state 91
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    exp_cond                       shift and go to state 145
    exp_bool                       shift and go to state 72
    expresion                      shift and go to state 76
    exp                            shift and go to state 77
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    llamada_func                   shift and go to state 73
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 83

    (139) factor -> objeto_aAcceso .

    TIMES           reduce using rule 139 (factor -> objeto_aAcceso .)
    DIVIDE          reduce using rule 139 (factor -> objeto_aAcceso .)
    MODULO          reduce using rule 139 (factor -> objeto_aAcceso .)
    LT              reduce using rule 139 (factor -> objeto_aAcceso .)
    GT              reduce using rule 139 (factor -> objeto_aAcceso .)
    GE              reduce using rule 139 (factor -> objeto_aAcceso .)
    LE              reduce using rule 139 (factor -> objeto_aAcceso .)
    EQ              reduce using rule 139 (factor -> objeto_aAcceso .)
    NE              reduce using rule 139 (factor -> objeto_aAcceso .)
    PLUS            reduce using rule 139 (factor -> objeto_aAcceso .)
    MINUS           reduce using rule 139 (factor -> objeto_aAcceso .)
    AND             reduce using rule 139 (factor -> objeto_aAcceso .)
    OR              reduce using rule 139 (factor -> objeto_aAcceso .)
    VAR             reduce using rule 139 (factor -> objeto_aAcceso .)
    PUBLIC          reduce using rule 139 (factor -> objeto_aAcceso .)
    IF              reduce using rule 139 (factor -> objeto_aAcceso .)
    PRIVATE         reduce using rule 139 (factor -> objeto_aAcceso .)
    PROTECTED       reduce using rule 139 (factor -> objeto_aAcceso .)
    ID              reduce using rule 139 (factor -> objeto_aAcceso .)
    PRINT           reduce using rule 139 (factor -> objeto_aAcceso .)
    READ            reduce using rule 139 (factor -> objeto_aAcceso .)
    VOID            reduce using rule 139 (factor -> objeto_aAcceso .)
    INT             reduce using rule 139 (factor -> objeto_aAcceso .)
    FLOAT           reduce using rule 139 (factor -> objeto_aAcceso .)
    CHAR            reduce using rule 139 (factor -> objeto_aAcceso .)
    STRING          reduce using rule 139 (factor -> objeto_aAcceso .)
    BOOL            reduce using rule 139 (factor -> objeto_aAcceso .)
    WHILE           reduce using rule 139 (factor -> objeto_aAcceso .)
    RBRACE          reduce using rule 139 (factor -> objeto_aAcceso .)
    RETURN          reduce using rule 139 (factor -> objeto_aAcceso .)
    RBRACKET        reduce using rule 139 (factor -> objeto_aAcceso .)
    RPAREN          reduce using rule 139 (factor -> objeto_aAcceso .)
    COMMA           reduce using rule 139 (factor -> objeto_aAcceso .)


state 84

    (138) factor -> var .

    TIMES           reduce using rule 138 (factor -> var .)
    DIVIDE          reduce using rule 138 (factor -> var .)
    MODULO          reduce using rule 138 (factor -> var .)
    LT              reduce using rule 138 (factor -> var .)
    GT              reduce using rule 138 (factor -> var .)
    GE              reduce using rule 138 (factor -> var .)
    LE              reduce using rule 138 (factor -> var .)
    EQ              reduce using rule 138 (factor -> var .)
    NE              reduce using rule 138 (factor -> var .)
    PLUS            reduce using rule 138 (factor -> var .)
    MINUS           reduce using rule 138 (factor -> var .)
    AND             reduce using rule 138 (factor -> var .)
    OR              reduce using rule 138 (factor -> var .)
    VAR             reduce using rule 138 (factor -> var .)
    PUBLIC          reduce using rule 138 (factor -> var .)
    IF              reduce using rule 138 (factor -> var .)
    PRIVATE         reduce using rule 138 (factor -> var .)
    PROTECTED       reduce using rule 138 (factor -> var .)
    ID              reduce using rule 138 (factor -> var .)
    PRINT           reduce using rule 138 (factor -> var .)
    READ            reduce using rule 138 (factor -> var .)
    VOID            reduce using rule 138 (factor -> var .)
    INT             reduce using rule 138 (factor -> var .)
    FLOAT           reduce using rule 138 (factor -> var .)
    CHAR            reduce using rule 138 (factor -> var .)
    STRING          reduce using rule 138 (factor -> var .)
    BOOL            reduce using rule 138 (factor -> var .)
    WHILE           reduce using rule 138 (factor -> var .)
    RBRACE          reduce using rule 138 (factor -> var .)
    RETURN          reduce using rule 138 (factor -> var .)
    RBRACKET        reduce using rule 138 (factor -> var .)
    RPAREN          reduce using rule 138 (factor -> var .)
    COMMA           reduce using rule 138 (factor -> var .)


state 85

    (142) var -> cint .

    TIMES           reduce using rule 142 (var -> cint .)
    DIVIDE          reduce using rule 142 (var -> cint .)
    MODULO          reduce using rule 142 (var -> cint .)
    LT              reduce using rule 142 (var -> cint .)
    GT              reduce using rule 142 (var -> cint .)
    GE              reduce using rule 142 (var -> cint .)
    LE              reduce using rule 142 (var -> cint .)
    EQ              reduce using rule 142 (var -> cint .)
    NE              reduce using rule 142 (var -> cint .)
    PLUS            reduce using rule 142 (var -> cint .)
    MINUS           reduce using rule 142 (var -> cint .)
    AND             reduce using rule 142 (var -> cint .)
    OR              reduce using rule 142 (var -> cint .)
    VAR             reduce using rule 142 (var -> cint .)
    PUBLIC          reduce using rule 142 (var -> cint .)
    IF              reduce using rule 142 (var -> cint .)
    PRIVATE         reduce using rule 142 (var -> cint .)
    PROTECTED       reduce using rule 142 (var -> cint .)
    ID              reduce using rule 142 (var -> cint .)
    PRINT           reduce using rule 142 (var -> cint .)
    READ            reduce using rule 142 (var -> cint .)
    VOID            reduce using rule 142 (var -> cint .)
    INT             reduce using rule 142 (var -> cint .)
    FLOAT           reduce using rule 142 (var -> cint .)
    CHAR            reduce using rule 142 (var -> cint .)
    STRING          reduce using rule 142 (var -> cint .)
    BOOL            reduce using rule 142 (var -> cint .)
    WHILE           reduce using rule 142 (var -> cint .)
    RBRACE          reduce using rule 142 (var -> cint .)
    RETURN          reduce using rule 142 (var -> cint .)
    RBRACKET        reduce using rule 142 (var -> cint .)
    RPAREN          reduce using rule 142 (var -> cint .)
    COMMA           reduce using rule 142 (var -> cint .)


state 86

    (143) var -> cfloat .

    TIMES           reduce using rule 143 (var -> cfloat .)
    DIVIDE          reduce using rule 143 (var -> cfloat .)
    MODULO          reduce using rule 143 (var -> cfloat .)
    LT              reduce using rule 143 (var -> cfloat .)
    GT              reduce using rule 143 (var -> cfloat .)
    GE              reduce using rule 143 (var -> cfloat .)
    LE              reduce using rule 143 (var -> cfloat .)
    EQ              reduce using rule 143 (var -> cfloat .)
    NE              reduce using rule 143 (var -> cfloat .)
    PLUS            reduce using rule 143 (var -> cfloat .)
    MINUS           reduce using rule 143 (var -> cfloat .)
    AND             reduce using rule 143 (var -> cfloat .)
    OR              reduce using rule 143 (var -> cfloat .)
    VAR             reduce using rule 143 (var -> cfloat .)
    PUBLIC          reduce using rule 143 (var -> cfloat .)
    IF              reduce using rule 143 (var -> cfloat .)
    PRIVATE         reduce using rule 143 (var -> cfloat .)
    PROTECTED       reduce using rule 143 (var -> cfloat .)
    ID              reduce using rule 143 (var -> cfloat .)
    PRINT           reduce using rule 143 (var -> cfloat .)
    READ            reduce using rule 143 (var -> cfloat .)
    VOID            reduce using rule 143 (var -> cfloat .)
    INT             reduce using rule 143 (var -> cfloat .)
    FLOAT           reduce using rule 143 (var -> cfloat .)
    CHAR            reduce using rule 143 (var -> cfloat .)
    STRING          reduce using rule 143 (var -> cfloat .)
    BOOL            reduce using rule 143 (var -> cfloat .)
    WHILE           reduce using rule 143 (var -> cfloat .)
    RBRACE          reduce using rule 143 (var -> cfloat .)
    RETURN          reduce using rule 143 (var -> cfloat .)
    RBRACKET        reduce using rule 143 (var -> cfloat .)
    RPAREN          reduce using rule 143 (var -> cfloat .)
    COMMA           reduce using rule 143 (var -> cfloat .)


state 87

    (144) var -> cchar .

    TIMES           reduce using rule 144 (var -> cchar .)
    DIVIDE          reduce using rule 144 (var -> cchar .)
    MODULO          reduce using rule 144 (var -> cchar .)
    LT              reduce using rule 144 (var -> cchar .)
    GT              reduce using rule 144 (var -> cchar .)
    GE              reduce using rule 144 (var -> cchar .)
    LE              reduce using rule 144 (var -> cchar .)
    EQ              reduce using rule 144 (var -> cchar .)
    NE              reduce using rule 144 (var -> cchar .)
    PLUS            reduce using rule 144 (var -> cchar .)
    MINUS           reduce using rule 144 (var -> cchar .)
    AND             reduce using rule 144 (var -> cchar .)
    OR              reduce using rule 144 (var -> cchar .)
    VAR             reduce using rule 144 (var -> cchar .)
    PUBLIC          reduce using rule 144 (var -> cchar .)
    IF              reduce using rule 144 (var -> cchar .)
    PRIVATE         reduce using rule 144 (var -> cchar .)
    PROTECTED       reduce using rule 144 (var -> cchar .)
    ID              reduce using rule 144 (var -> cchar .)
    PRINT           reduce using rule 144 (var -> cchar .)
    READ            reduce using rule 144 (var -> cchar .)
    VOID            reduce using rule 144 (var -> cchar .)
    INT             reduce using rule 144 (var -> cchar .)
    FLOAT           reduce using rule 144 (var -> cchar .)
    CHAR            reduce using rule 144 (var -> cchar .)
    STRING          reduce using rule 144 (var -> cchar .)
    BOOL            reduce using rule 144 (var -> cchar .)
    WHILE           reduce using rule 144 (var -> cchar .)
    RBRACE          reduce using rule 144 (var -> cchar .)
    RETURN          reduce using rule 144 (var -> cchar .)
    RBRACKET        reduce using rule 144 (var -> cchar .)
    RPAREN          reduce using rule 144 (var -> cchar .)
    COMMA           reduce using rule 144 (var -> cchar .)


state 88

    (145) cint -> CINT .

    TIMES           reduce using rule 145 (cint -> CINT .)
    DIVIDE          reduce using rule 145 (cint -> CINT .)
    MODULO          reduce using rule 145 (cint -> CINT .)
    LT              reduce using rule 145 (cint -> CINT .)
    GT              reduce using rule 145 (cint -> CINT .)
    GE              reduce using rule 145 (cint -> CINT .)
    LE              reduce using rule 145 (cint -> CINT .)
    EQ              reduce using rule 145 (cint -> CINT .)
    NE              reduce using rule 145 (cint -> CINT .)
    PLUS            reduce using rule 145 (cint -> CINT .)
    MINUS           reduce using rule 145 (cint -> CINT .)
    AND             reduce using rule 145 (cint -> CINT .)
    OR              reduce using rule 145 (cint -> CINT .)
    VAR             reduce using rule 145 (cint -> CINT .)
    PUBLIC          reduce using rule 145 (cint -> CINT .)
    IF              reduce using rule 145 (cint -> CINT .)
    PRIVATE         reduce using rule 145 (cint -> CINT .)
    PROTECTED       reduce using rule 145 (cint -> CINT .)
    ID              reduce using rule 145 (cint -> CINT .)
    PRINT           reduce using rule 145 (cint -> CINT .)
    READ            reduce using rule 145 (cint -> CINT .)
    VOID            reduce using rule 145 (cint -> CINT .)
    INT             reduce using rule 145 (cint -> CINT .)
    FLOAT           reduce using rule 145 (cint -> CINT .)
    CHAR            reduce using rule 145 (cint -> CINT .)
    STRING          reduce using rule 145 (cint -> CINT .)
    BOOL            reduce using rule 145 (cint -> CINT .)
    WHILE           reduce using rule 145 (cint -> CINT .)
    RBRACE          reduce using rule 145 (cint -> CINT .)
    RETURN          reduce using rule 145 (cint -> CINT .)
    RBRACKET        reduce using rule 145 (cint -> CINT .)
    RPAREN          reduce using rule 145 (cint -> CINT .)
    COMMA           reduce using rule 145 (cint -> CINT .)


state 89

    (146) cfloat -> NUMBER .

    TIMES           reduce using rule 146 (cfloat -> NUMBER .)
    DIVIDE          reduce using rule 146 (cfloat -> NUMBER .)
    MODULO          reduce using rule 146 (cfloat -> NUMBER .)
    LT              reduce using rule 146 (cfloat -> NUMBER .)
    GT              reduce using rule 146 (cfloat -> NUMBER .)
    GE              reduce using rule 146 (cfloat -> NUMBER .)
    LE              reduce using rule 146 (cfloat -> NUMBER .)
    EQ              reduce using rule 146 (cfloat -> NUMBER .)
    NE              reduce using rule 146 (cfloat -> NUMBER .)
    PLUS            reduce using rule 146 (cfloat -> NUMBER .)
    MINUS           reduce using rule 146 (cfloat -> NUMBER .)
    AND             reduce using rule 146 (cfloat -> NUMBER .)
    OR              reduce using rule 146 (cfloat -> NUMBER .)
    VAR             reduce using rule 146 (cfloat -> NUMBER .)
    PUBLIC          reduce using rule 146 (cfloat -> NUMBER .)
    IF              reduce using rule 146 (cfloat -> NUMBER .)
    PRIVATE         reduce using rule 146 (cfloat -> NUMBER .)
    PROTECTED       reduce using rule 146 (cfloat -> NUMBER .)
    ID              reduce using rule 146 (cfloat -> NUMBER .)
    PRINT           reduce using rule 146 (cfloat -> NUMBER .)
    READ            reduce using rule 146 (cfloat -> NUMBER .)
    VOID            reduce using rule 146 (cfloat -> NUMBER .)
    INT             reduce using rule 146 (cfloat -> NUMBER .)
    FLOAT           reduce using rule 146 (cfloat -> NUMBER .)
    CHAR            reduce using rule 146 (cfloat -> NUMBER .)
    STRING          reduce using rule 146 (cfloat -> NUMBER .)
    BOOL            reduce using rule 146 (cfloat -> NUMBER .)
    WHILE           reduce using rule 146 (cfloat -> NUMBER .)
    RBRACE          reduce using rule 146 (cfloat -> NUMBER .)
    RETURN          reduce using rule 146 (cfloat -> NUMBER .)
    RBRACKET        reduce using rule 146 (cfloat -> NUMBER .)
    RPAREN          reduce using rule 146 (cfloat -> NUMBER .)
    COMMA           reduce using rule 146 (cfloat -> NUMBER .)


state 90

    (147) cchar -> CCHAR .

    TIMES           reduce using rule 147 (cchar -> CCHAR .)
    DIVIDE          reduce using rule 147 (cchar -> CCHAR .)
    MODULO          reduce using rule 147 (cchar -> CCHAR .)
    LT              reduce using rule 147 (cchar -> CCHAR .)
    GT              reduce using rule 147 (cchar -> CCHAR .)
    GE              reduce using rule 147 (cchar -> CCHAR .)
    LE              reduce using rule 147 (cchar -> CCHAR .)
    EQ              reduce using rule 147 (cchar -> CCHAR .)
    NE              reduce using rule 147 (cchar -> CCHAR .)
    PLUS            reduce using rule 147 (cchar -> CCHAR .)
    MINUS           reduce using rule 147 (cchar -> CCHAR .)
    AND             reduce using rule 147 (cchar -> CCHAR .)
    OR              reduce using rule 147 (cchar -> CCHAR .)
    VAR             reduce using rule 147 (cchar -> CCHAR .)
    PUBLIC          reduce using rule 147 (cchar -> CCHAR .)
    IF              reduce using rule 147 (cchar -> CCHAR .)
    PRIVATE         reduce using rule 147 (cchar -> CCHAR .)
    PROTECTED       reduce using rule 147 (cchar -> CCHAR .)
    ID              reduce using rule 147 (cchar -> CCHAR .)
    PRINT           reduce using rule 147 (cchar -> CCHAR .)
    READ            reduce using rule 147 (cchar -> CCHAR .)
    VOID            reduce using rule 147 (cchar -> CCHAR .)
    INT             reduce using rule 147 (cchar -> CCHAR .)
    FLOAT           reduce using rule 147 (cchar -> CCHAR .)
    CHAR            reduce using rule 147 (cchar -> CCHAR .)
    STRING          reduce using rule 147 (cchar -> CCHAR .)
    BOOL            reduce using rule 147 (cchar -> CCHAR .)
    WHILE           reduce using rule 147 (cchar -> CCHAR .)
    RBRACE          reduce using rule 147 (cchar -> CCHAR .)
    RETURN          reduce using rule 147 (cchar -> CCHAR .)
    RBRACKET        reduce using rule 147 (cchar -> CCHAR .)
    RPAREN          reduce using rule 147 (cchar -> CCHAR .)
    COMMA           reduce using rule 147 (cchar -> CCHAR .)


state 91

    (141) var -> ID .
    (148) objeto_aAcceso -> ID . PERIOD ID
    (104) llamada_id -> ID .

    TIMES           reduce using rule 141 (var -> ID .)
    DIVIDE          reduce using rule 141 (var -> ID .)
    MODULO          reduce using rule 141 (var -> ID .)
    RBRACKET        reduce using rule 141 (var -> ID .)
    PLUS            reduce using rule 141 (var -> ID .)
    MINUS           reduce using rule 141 (var -> ID .)
    LT              reduce using rule 141 (var -> ID .)
    GT              reduce using rule 141 (var -> ID .)
    GE              reduce using rule 141 (var -> ID .)
    LE              reduce using rule 141 (var -> ID .)
    EQ              reduce using rule 141 (var -> ID .)
    NE              reduce using rule 141 (var -> ID .)
    AND             reduce using rule 141 (var -> ID .)
    OR              reduce using rule 141 (var -> ID .)
    RPAREN          reduce using rule 141 (var -> ID .)
    COMMA           reduce using rule 141 (var -> ID .)
    VAR             reduce using rule 141 (var -> ID .)
    PUBLIC          reduce using rule 141 (var -> ID .)
    IF              reduce using rule 141 (var -> ID .)
    PRIVATE         reduce using rule 141 (var -> ID .)
    PROTECTED       reduce using rule 141 (var -> ID .)
    ID              reduce using rule 141 (var -> ID .)
    PRINT           reduce using rule 141 (var -> ID .)
    READ            reduce using rule 141 (var -> ID .)
    VOID            reduce using rule 141 (var -> ID .)
    INT             reduce using rule 141 (var -> ID .)
    FLOAT           reduce using rule 141 (var -> ID .)
    CHAR            reduce using rule 141 (var -> ID .)
    STRING          reduce using rule 141 (var -> ID .)
    BOOL            reduce using rule 141 (var -> ID .)
    WHILE           reduce using rule 141 (var -> ID .)
    RBRACE          reduce using rule 141 (var -> ID .)
    RETURN          reduce using rule 141 (var -> ID .)
    PERIOD          shift and go to state 146
    LPAREN          reduce using rule 104 (llamada_id -> ID .)


state 92

    (94) asignacion -> ID LBRACKET exp . RBRACKET EQUALS exp_cond
    (95) asignacion -> ID LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (98) asignacion -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (99) asignacion -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (127) exp -> exp . PLUS termino
    (128) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 147
    PLUS            shift and go to state 135
    MINUS           shift and go to state 136


state 93

    (148) objeto_aAcceso -> ID PERIOD ID .
    (104) llamada_id -> ID .

    EQUALS          reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    LBRACKET        reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    TIMES           reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    DIVIDE          reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    MODULO          reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    LT              reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    GT              reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    GE              reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    LE              reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    EQ              reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    NE              reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    PLUS            reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    MINUS           reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    AND             reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    OR              reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    VAR             reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    PUBLIC          reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    IF              reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    PRIVATE         reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    PROTECTED       reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    ID              reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    PRINT           reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    READ            reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    VOID            reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    INT             reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    FLOAT           reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    CHAR            reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    STRING          reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    BOOL            reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    WHILE           reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACE          reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    RETURN          reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    COMMA           reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    RPAREN          reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    LPAREN          reduce using rule 104 (llamada_id -> ID .)


state 94

    (102) objeto_metodo -> ID PERIOD llamada_func .

    VAR             reduce using rule 102 (objeto_metodo -> ID PERIOD llamada_func .)
    PUBLIC          reduce using rule 102 (objeto_metodo -> ID PERIOD llamada_func .)
    IF              reduce using rule 102 (objeto_metodo -> ID PERIOD llamada_func .)
    PRIVATE         reduce using rule 102 (objeto_metodo -> ID PERIOD llamada_func .)
    PROTECTED       reduce using rule 102 (objeto_metodo -> ID PERIOD llamada_func .)
    ID              reduce using rule 102 (objeto_metodo -> ID PERIOD llamada_func .)
    PRINT           reduce using rule 102 (objeto_metodo -> ID PERIOD llamada_func .)
    READ            reduce using rule 102 (objeto_metodo -> ID PERIOD llamada_func .)
    VOID            reduce using rule 102 (objeto_metodo -> ID PERIOD llamada_func .)
    INT             reduce using rule 102 (objeto_metodo -> ID PERIOD llamada_func .)
    FLOAT           reduce using rule 102 (objeto_metodo -> ID PERIOD llamada_func .)
    CHAR            reduce using rule 102 (objeto_metodo -> ID PERIOD llamada_func .)
    STRING          reduce using rule 102 (objeto_metodo -> ID PERIOD llamada_func .)
    BOOL            reduce using rule 102 (objeto_metodo -> ID PERIOD llamada_func .)
    WHILE           reduce using rule 102 (objeto_metodo -> ID PERIOD llamada_func .)
    RBRACE          reduce using rule 102 (objeto_metodo -> ID PERIOD llamada_func .)
    RETURN          reduce using rule 102 (objeto_metodo -> ID PERIOD llamada_func .)
    COMMA           reduce using rule 102 (objeto_metodo -> ID PERIOD llamada_func .)
    RPAREN          reduce using rule 102 (objeto_metodo -> ID PERIOD llamada_func .)


state 95

    (26) constructor -> PUBLIC ID LPAREN . param RPAREN bloque
    (52) param -> .
    (53) param -> . tipo_simple ID
    (54) param -> . tipo_simple ID COMMA param
    (85) tipo_simple -> . INT
    (86) tipo_simple -> . FLOAT
    (87) tipo_simple -> . CHAR
    (88) tipo_simple -> . BOOL

    RPAREN          reduce using rule 52 (param -> .)
    INT             shift and go to state 119
    FLOAT           shift and go to state 120
    CHAR            shift and go to state 121
    BOOL            shift and go to state 122

    param                          shift and go to state 148
    tipo_simple                    shift and go to state 149

state 96

    (28) funcion -> scope type DEF . id LPAREN param aux_param RPAREN contexto_func
    (30) id -> . ID

    ID              shift and go to state 151

    id                             shift and go to state 150

state 97

    (29) funcion -> scope VOID DEF . id LPAREN param aux_param RPAREN contexto_func
    (30) id -> . ID

    ID              shift and go to state 151

    id                             shift and go to state 152

state 98

    (19) condicion -> IF LPAREN gotoF . RPAREN bloque
    (20) condicion -> IF LPAREN gotoF . RPAREN bloque elif

    RPAREN          shift and go to state 153


state 99

    (112) gotoF -> exp_cond .

    RPAREN          reduce using rule 112 (gotoF -> exp_cond .)


state 100

    (24) ciclo -> aux_ciclo WHILE LPAREN . gotoF RPAREN bloque
    (112) gotoF -> . exp_cond
    (113) exp_cond -> . exp_bool
    (114) exp_cond -> . exp_bool AND exp_cond
    (115) exp_cond -> . exp_bool OR exp_cond
    (116) exp_bool -> . TRUE
    (117) exp_bool -> . FALSE
    (118) exp_bool -> . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    ID              shift and go to state 91
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    gotoF                          shift and go to state 154
    exp_cond                       shift and go to state 99
    exp_bool                       shift and go to state 72
    expresion                      shift and go to state 76
    exp                            shift and go to state 77
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    llamada_func                   shift and go to state 73
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 101

    (92) asignacion -> objeto_aAcceso EQUALS exp_cond .

    VAR             reduce using rule 92 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    PUBLIC          reduce using rule 92 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    IF              reduce using rule 92 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    PRIVATE         reduce using rule 92 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    PROTECTED       reduce using rule 92 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    ID              reduce using rule 92 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    PRINT           reduce using rule 92 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    READ            reduce using rule 92 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    VOID            reduce using rule 92 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    INT             reduce using rule 92 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    FLOAT           reduce using rule 92 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    CHAR            reduce using rule 92 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    STRING          reduce using rule 92 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    BOOL            reduce using rule 92 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    WHILE           reduce using rule 92 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    RBRACE          reduce using rule 92 (asignacion -> objeto_aAcceso EQUALS exp_cond .)
    RETURN          reduce using rule 92 (asignacion -> objeto_aAcceso EQUALS exp_cond .)


state 102

    (93) asignacion -> objeto_aAcceso EQUALS objeto_metodo .

    VAR             reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    IF              reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    ID              reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PRINT           reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    READ            reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    VOID            reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    INT             reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    FLOAT           reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    CHAR            reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    STRING          reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    BOOL            reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    WHILE           reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    RBRACE          reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    RETURN          reduce using rule 93 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)


state 103

    (100) asignacion -> objeto_aAcceso LBRACKET LBRACKET . exp RBRACKET exp RBRACKET EQUALS exp_cond
    (101) asignacion -> objeto_aAcceso LBRACKET LBRACKET . exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    ID              shift and go to state 91
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    objeto_aAcceso                 shift and go to state 83
    exp                            shift and go to state 155
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    var                            shift and go to state 84
    llamada_func                   shift and go to state 73
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 104

    (96) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET EQUALS exp_cond
    (97) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (127) exp -> exp . PLUS termino
    (128) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 156
    PLUS            shift and go to state 135
    MINUS           shift and go to state 136


state 105

    (70) escritura -> PRINT LPAREN aux3 . RPAREN

    RPAREN          shift and go to state 157


state 106

    (71) aux3 -> expresion .
    (74) aux3 -> expresion . COMMA aux3

    RPAREN          reduce using rule 71 (aux3 -> expresion .)
    COMMA           shift and go to state 158


state 107

    (72) aux3 -> objeto_metodo .
    (75) aux3 -> objeto_metodo . COMMA aux3

    RPAREN          reduce using rule 72 (aux3 -> objeto_metodo .)
    COMMA           shift and go to state 159


state 108

    (73) aux3 -> CSTRING .
    (76) aux3 -> CSTRING . COMMA aux3

    RPAREN          reduce using rule 73 (aux3 -> CSTRING .)
    COMMA           shift and go to state 160


state 109

    (103) llamada_func -> llamada_id llamada_lparen llamada_rparen .

    VAR             reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    PUBLIC          reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    IF              reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    PRIVATE         reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    PROTECTED       reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    ID              reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    PRINT           reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    READ            reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    VOID            reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    INT             reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    FLOAT           reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    CHAR            reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    STRING          reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    BOOL            reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    WHILE           reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    RBRACE          reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    TIMES           reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    DIVIDE          reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    MODULO          reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    LT              reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    GT              reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    GE              reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    LE              reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    EQ              reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    NE              reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    PLUS            reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    MINUS           reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    AND             reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    OR              reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    RETURN          reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    RBRACKET        reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    COMMA           reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)
    RPAREN          reduce using rule 103 (llamada_func -> llamada_id llamada_lparen llamada_rparen .)


state 110

    (106) llamada_rparen -> aux . RPAREN

    RPAREN          shift and go to state 161


state 111

    (107) llamada_rparen -> RPAREN .

    VAR             reduce using rule 107 (llamada_rparen -> RPAREN .)
    PUBLIC          reduce using rule 107 (llamada_rparen -> RPAREN .)
    IF              reduce using rule 107 (llamada_rparen -> RPAREN .)
    PRIVATE         reduce using rule 107 (llamada_rparen -> RPAREN .)
    PROTECTED       reduce using rule 107 (llamada_rparen -> RPAREN .)
    ID              reduce using rule 107 (llamada_rparen -> RPAREN .)
    PRINT           reduce using rule 107 (llamada_rparen -> RPAREN .)
    READ            reduce using rule 107 (llamada_rparen -> RPAREN .)
    VOID            reduce using rule 107 (llamada_rparen -> RPAREN .)
    INT             reduce using rule 107 (llamada_rparen -> RPAREN .)
    FLOAT           reduce using rule 107 (llamada_rparen -> RPAREN .)
    CHAR            reduce using rule 107 (llamada_rparen -> RPAREN .)
    STRING          reduce using rule 107 (llamada_rparen -> RPAREN .)
    BOOL            reduce using rule 107 (llamada_rparen -> RPAREN .)
    WHILE           reduce using rule 107 (llamada_rparen -> RPAREN .)
    RBRACE          reduce using rule 107 (llamada_rparen -> RPAREN .)
    TIMES           reduce using rule 107 (llamada_rparen -> RPAREN .)
    DIVIDE          reduce using rule 107 (llamada_rparen -> RPAREN .)
    MODULO          reduce using rule 107 (llamada_rparen -> RPAREN .)
    LT              reduce using rule 107 (llamada_rparen -> RPAREN .)
    GT              reduce using rule 107 (llamada_rparen -> RPAREN .)
    GE              reduce using rule 107 (llamada_rparen -> RPAREN .)
    LE              reduce using rule 107 (llamada_rparen -> RPAREN .)
    EQ              reduce using rule 107 (llamada_rparen -> RPAREN .)
    NE              reduce using rule 107 (llamada_rparen -> RPAREN .)
    PLUS            reduce using rule 107 (llamada_rparen -> RPAREN .)
    MINUS           reduce using rule 107 (llamada_rparen -> RPAREN .)
    AND             reduce using rule 107 (llamada_rparen -> RPAREN .)
    OR              reduce using rule 107 (llamada_rparen -> RPAREN .)
    RETURN          reduce using rule 107 (llamada_rparen -> RPAREN .)
    RBRACKET        reduce using rule 107 (llamada_rparen -> RPAREN .)
    COMMA           reduce using rule 107 (llamada_rparen -> RPAREN .)
    RPAREN          reduce using rule 107 (llamada_rparen -> RPAREN .)


state 112

    (108) aux -> exp . aux_exp
    (109) aux -> exp . aux_exp aux_comma aux
    (127) exp -> exp . PLUS termino
    (128) exp -> exp . MINUS termino
    (110) aux_exp -> .

    PLUS            shift and go to state 135
    MINUS           shift and go to state 136
    COMMA           reduce using rule 110 (aux_exp -> .)
    RPAREN          reduce using rule 110 (aux_exp -> .)

    aux_exp                        shift and go to state 162

state 113

    (65) lectura -> READ LPAREN aux4 . RPAREN

    RPAREN          shift and go to state 163


state 114

    (66) aux4 -> ID .
    (68) aux4 -> ID . COMMA aux4
    (148) objeto_aAcceso -> ID . PERIOD ID

    RPAREN          reduce using rule 66 (aux4 -> ID .)
    COMMA           shift and go to state 164
    PERIOD          shift and go to state 146


state 115

    (67) aux4 -> objeto_aAcceso .
    (69) aux4 -> objeto_aAcceso . COMMA aux4

    RPAREN          reduce using rule 67 (aux4 -> objeto_aAcceso .)
    COMMA           shift and go to state 165


state 116

    (5) class -> scope CLASS ID COLON ID .

    LBRACE          reduce using rule 5 (class -> scope CLASS ID COLON ID .)


state 117

    (77) vars -> VAR aux2 COLON tipo_simple .

    VAR             reduce using rule 77 (vars -> VAR aux2 COLON tipo_simple .)
    PUBLIC          reduce using rule 77 (vars -> VAR aux2 COLON tipo_simple .)
    IF              reduce using rule 77 (vars -> VAR aux2 COLON tipo_simple .)
    PRIVATE         reduce using rule 77 (vars -> VAR aux2 COLON tipo_simple .)
    PROTECTED       reduce using rule 77 (vars -> VAR aux2 COLON tipo_simple .)
    ID              reduce using rule 77 (vars -> VAR aux2 COLON tipo_simple .)
    PRINT           reduce using rule 77 (vars -> VAR aux2 COLON tipo_simple .)
    READ            reduce using rule 77 (vars -> VAR aux2 COLON tipo_simple .)
    VOID            reduce using rule 77 (vars -> VAR aux2 COLON tipo_simple .)
    INT             reduce using rule 77 (vars -> VAR aux2 COLON tipo_simple .)
    FLOAT           reduce using rule 77 (vars -> VAR aux2 COLON tipo_simple .)
    CHAR            reduce using rule 77 (vars -> VAR aux2 COLON tipo_simple .)
    STRING          reduce using rule 77 (vars -> VAR aux2 COLON tipo_simple .)
    BOOL            reduce using rule 77 (vars -> VAR aux2 COLON tipo_simple .)
    WHILE           reduce using rule 77 (vars -> VAR aux2 COLON tipo_simple .)
    RBRACE          reduce using rule 77 (vars -> VAR aux2 COLON tipo_simple .)
    RETURN          reduce using rule 77 (vars -> VAR aux2 COLON tipo_simple .)


state 118

    (78) vars -> VAR aux2 COLON tipo_compuesto .

    VAR             reduce using rule 78 (vars -> VAR aux2 COLON tipo_compuesto .)
    PUBLIC          reduce using rule 78 (vars -> VAR aux2 COLON tipo_compuesto .)
    IF              reduce using rule 78 (vars -> VAR aux2 COLON tipo_compuesto .)
    PRIVATE         reduce using rule 78 (vars -> VAR aux2 COLON tipo_compuesto .)
    PROTECTED       reduce using rule 78 (vars -> VAR aux2 COLON tipo_compuesto .)
    ID              reduce using rule 78 (vars -> VAR aux2 COLON tipo_compuesto .)
    PRINT           reduce using rule 78 (vars -> VAR aux2 COLON tipo_compuesto .)
    READ            reduce using rule 78 (vars -> VAR aux2 COLON tipo_compuesto .)
    VOID            reduce using rule 78 (vars -> VAR aux2 COLON tipo_compuesto .)
    INT             reduce using rule 78 (vars -> VAR aux2 COLON tipo_compuesto .)
    FLOAT           reduce using rule 78 (vars -> VAR aux2 COLON tipo_compuesto .)
    CHAR            reduce using rule 78 (vars -> VAR aux2 COLON tipo_compuesto .)
    STRING          reduce using rule 78 (vars -> VAR aux2 COLON tipo_compuesto .)
    BOOL            reduce using rule 78 (vars -> VAR aux2 COLON tipo_compuesto .)
    WHILE           reduce using rule 78 (vars -> VAR aux2 COLON tipo_compuesto .)
    RBRACE          reduce using rule 78 (vars -> VAR aux2 COLON tipo_compuesto .)
    RETURN          reduce using rule 78 (vars -> VAR aux2 COLON tipo_compuesto .)


state 119

    (85) tipo_simple -> INT .

    VAR             reduce using rule 85 (tipo_simple -> INT .)
    PUBLIC          reduce using rule 85 (tipo_simple -> INT .)
    IF              reduce using rule 85 (tipo_simple -> INT .)
    PRIVATE         reduce using rule 85 (tipo_simple -> INT .)
    PROTECTED       reduce using rule 85 (tipo_simple -> INT .)
    ID              reduce using rule 85 (tipo_simple -> INT .)
    PRINT           reduce using rule 85 (tipo_simple -> INT .)
    READ            reduce using rule 85 (tipo_simple -> INT .)
    VOID            reduce using rule 85 (tipo_simple -> INT .)
    INT             reduce using rule 85 (tipo_simple -> INT .)
    FLOAT           reduce using rule 85 (tipo_simple -> INT .)
    CHAR            reduce using rule 85 (tipo_simple -> INT .)
    STRING          reduce using rule 85 (tipo_simple -> INT .)
    BOOL            reduce using rule 85 (tipo_simple -> INT .)
    WHILE           reduce using rule 85 (tipo_simple -> INT .)
    RBRACE          reduce using rule 85 (tipo_simple -> INT .)
    RETURN          reduce using rule 85 (tipo_simple -> INT .)


state 120

    (86) tipo_simple -> FLOAT .

    VAR             reduce using rule 86 (tipo_simple -> FLOAT .)
    PUBLIC          reduce using rule 86 (tipo_simple -> FLOAT .)
    IF              reduce using rule 86 (tipo_simple -> FLOAT .)
    PRIVATE         reduce using rule 86 (tipo_simple -> FLOAT .)
    PROTECTED       reduce using rule 86 (tipo_simple -> FLOAT .)
    ID              reduce using rule 86 (tipo_simple -> FLOAT .)
    PRINT           reduce using rule 86 (tipo_simple -> FLOAT .)
    READ            reduce using rule 86 (tipo_simple -> FLOAT .)
    VOID            reduce using rule 86 (tipo_simple -> FLOAT .)
    INT             reduce using rule 86 (tipo_simple -> FLOAT .)
    FLOAT           reduce using rule 86 (tipo_simple -> FLOAT .)
    CHAR            reduce using rule 86 (tipo_simple -> FLOAT .)
    STRING          reduce using rule 86 (tipo_simple -> FLOAT .)
    BOOL            reduce using rule 86 (tipo_simple -> FLOAT .)
    WHILE           reduce using rule 86 (tipo_simple -> FLOAT .)
    RBRACE          reduce using rule 86 (tipo_simple -> FLOAT .)
    RETURN          reduce using rule 86 (tipo_simple -> FLOAT .)


state 121

    (87) tipo_simple -> CHAR .

    VAR             reduce using rule 87 (tipo_simple -> CHAR .)
    PUBLIC          reduce using rule 87 (tipo_simple -> CHAR .)
    IF              reduce using rule 87 (tipo_simple -> CHAR .)
    PRIVATE         reduce using rule 87 (tipo_simple -> CHAR .)
    PROTECTED       reduce using rule 87 (tipo_simple -> CHAR .)
    ID              reduce using rule 87 (tipo_simple -> CHAR .)
    PRINT           reduce using rule 87 (tipo_simple -> CHAR .)
    READ            reduce using rule 87 (tipo_simple -> CHAR .)
    VOID            reduce using rule 87 (tipo_simple -> CHAR .)
    INT             reduce using rule 87 (tipo_simple -> CHAR .)
    FLOAT           reduce using rule 87 (tipo_simple -> CHAR .)
    CHAR            reduce using rule 87 (tipo_simple -> CHAR .)
    STRING          reduce using rule 87 (tipo_simple -> CHAR .)
    BOOL            reduce using rule 87 (tipo_simple -> CHAR .)
    WHILE           reduce using rule 87 (tipo_simple -> CHAR .)
    RBRACE          reduce using rule 87 (tipo_simple -> CHAR .)
    RETURN          reduce using rule 87 (tipo_simple -> CHAR .)


state 122

    (88) tipo_simple -> BOOL .

    VAR             reduce using rule 88 (tipo_simple -> BOOL .)
    PUBLIC          reduce using rule 88 (tipo_simple -> BOOL .)
    IF              reduce using rule 88 (tipo_simple -> BOOL .)
    PRIVATE         reduce using rule 88 (tipo_simple -> BOOL .)
    PROTECTED       reduce using rule 88 (tipo_simple -> BOOL .)
    ID              reduce using rule 88 (tipo_simple -> BOOL .)
    PRINT           reduce using rule 88 (tipo_simple -> BOOL .)
    READ            reduce using rule 88 (tipo_simple -> BOOL .)
    VOID            reduce using rule 88 (tipo_simple -> BOOL .)
    INT             reduce using rule 88 (tipo_simple -> BOOL .)
    FLOAT           reduce using rule 88 (tipo_simple -> BOOL .)
    CHAR            reduce using rule 88 (tipo_simple -> BOOL .)
    STRING          reduce using rule 88 (tipo_simple -> BOOL .)
    BOOL            reduce using rule 88 (tipo_simple -> BOOL .)
    WHILE           reduce using rule 88 (tipo_simple -> BOOL .)
    RBRACE          reduce using rule 88 (tipo_simple -> BOOL .)
    RETURN          reduce using rule 88 (tipo_simple -> BOOL .)


state 123

    (89) tipo_compuesto -> ID .

    VAR             reduce using rule 89 (tipo_compuesto -> ID .)
    PUBLIC          reduce using rule 89 (tipo_compuesto -> ID .)
    IF              reduce using rule 89 (tipo_compuesto -> ID .)
    PRIVATE         reduce using rule 89 (tipo_compuesto -> ID .)
    PROTECTED       reduce using rule 89 (tipo_compuesto -> ID .)
    ID              reduce using rule 89 (tipo_compuesto -> ID .)
    PRINT           reduce using rule 89 (tipo_compuesto -> ID .)
    READ            reduce using rule 89 (tipo_compuesto -> ID .)
    VOID            reduce using rule 89 (tipo_compuesto -> ID .)
    INT             reduce using rule 89 (tipo_compuesto -> ID .)
    FLOAT           reduce using rule 89 (tipo_compuesto -> ID .)
    CHAR            reduce using rule 89 (tipo_compuesto -> ID .)
    STRING          reduce using rule 89 (tipo_compuesto -> ID .)
    BOOL            reduce using rule 89 (tipo_compuesto -> ID .)
    WHILE           reduce using rule 89 (tipo_compuesto -> ID .)
    RBRACE          reduce using rule 89 (tipo_compuesto -> ID .)
    RETURN          reduce using rule 89 (tipo_compuesto -> ID .)


state 124

    (79) vars -> VAR ID LBRACKET cint . RBRACKET COLON tipo_simple
    (80) vars -> VAR ID LBRACKET cint . RBRACKET COLON tipo_compuesto
    (81) vars -> VAR ID LBRACKET cint . RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (82) vars -> VAR ID LBRACKET cint . RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto

    RBRACKET        shift and go to state 166


state 125

    (83) aux2 -> ID .
    (84) aux2 -> ID . COMMA aux2

    COLON           reduce using rule 83 (aux2 -> ID .)
    COMMA           shift and go to state 68


state 126

    (84) aux2 -> ID COMMA aux2 .

    COLON           reduce using rule 84 (aux2 -> ID COMMA aux2 .)


state 127

    (114) exp_cond -> exp_bool AND . exp_cond
    (113) exp_cond -> . exp_bool
    (114) exp_cond -> . exp_bool AND exp_cond
    (115) exp_cond -> . exp_bool OR exp_cond
    (116) exp_bool -> . TRUE
    (117) exp_bool -> . FALSE
    (118) exp_bool -> . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    ID              shift and go to state 91
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    exp_bool                       shift and go to state 72
    exp_cond                       shift and go to state 167
    expresion                      shift and go to state 76
    exp                            shift and go to state 77
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    llamada_func                   shift and go to state 73
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 128

    (115) exp_cond -> exp_bool OR . exp_cond
    (113) exp_cond -> . exp_bool
    (114) exp_cond -> . exp_bool AND exp_cond
    (115) exp_cond -> . exp_bool OR exp_cond
    (116) exp_bool -> . TRUE
    (117) exp_bool -> . FALSE
    (118) exp_bool -> . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    ID              shift and go to state 91
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    exp_bool                       shift and go to state 72
    exp_cond                       shift and go to state 168
    expresion                      shift and go to state 76
    exp                            shift and go to state 77
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    llamada_func                   shift and go to state 73
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 129

    (120) expresion -> exp LT . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    ID              shift and go to state 91
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    exp                            shift and go to state 77
    expresion                      shift and go to state 169
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    llamada_func                   shift and go to state 73
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 130

    (121) expresion -> exp GT . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    ID              shift and go to state 91
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    exp                            shift and go to state 77
    expresion                      shift and go to state 170
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    llamada_func                   shift and go to state 73
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 131

    (122) expresion -> exp GE . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    ID              shift and go to state 91
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    exp                            shift and go to state 77
    expresion                      shift and go to state 171
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    llamada_func                   shift and go to state 73
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 132

    (123) expresion -> exp LE . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    ID              shift and go to state 91
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    exp                            shift and go to state 77
    expresion                      shift and go to state 172
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    llamada_func                   shift and go to state 73
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 133

    (124) expresion -> exp EQ . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    ID              shift and go to state 91
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    exp                            shift and go to state 77
    expresion                      shift and go to state 173
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    llamada_func                   shift and go to state 73
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 134

    (125) expresion -> exp NE . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    ID              shift and go to state 91
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    exp                            shift and go to state 77
    expresion                      shift and go to state 174
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    llamada_func                   shift and go to state 73
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 135

    (127) exp -> exp PLUS . termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    ID              shift and go to state 91
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    termino                        shift and go to state 175
    factor                         shift and go to state 81
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    llamada_func                   shift and go to state 73
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 136

    (128) exp -> exp MINUS . termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    ID              shift and go to state 91
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    termino                        shift and go to state 176
    factor                         shift and go to state 81
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    llamada_func                   shift and go to state 73
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 137

    (130) termino -> termino TIMES . factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    ID              shift and go to state 91
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    factor                         shift and go to state 177
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    llamada_func                   shift and go to state 73
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 138

    (131) termino -> termino DIVIDE . factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    ID              shift and go to state 91
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    factor                         shift and go to state 178
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    llamada_func                   shift and go to state 73
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 139

    (132) termino -> termino MODULO . factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    ID              shift and go to state 91
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    factor                         shift and go to state 179
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    llamada_func                   shift and go to state 73
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 140

    (134) factor -> PLUS objeto_aAcceso .

    TIMES           reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    DIVIDE          reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    MODULO          reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    LT              reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    GT              reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    GE              reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    LE              reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    EQ              reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    NE              reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    PLUS            reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    MINUS           reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    AND             reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    OR              reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    VAR             reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    PUBLIC          reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    IF              reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    PRIVATE         reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    PROTECTED       reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    ID              reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    PRINT           reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    READ            reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    VOID            reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    INT             reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    FLOAT           reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    CHAR            reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    STRING          reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    BOOL            reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    WHILE           reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    RBRACE          reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    RETURN          reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    RBRACKET        reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    RPAREN          reduce using rule 134 (factor -> PLUS objeto_aAcceso .)
    COMMA           reduce using rule 134 (factor -> PLUS objeto_aAcceso .)


state 141

    (136) factor -> PLUS var .

    TIMES           reduce using rule 136 (factor -> PLUS var .)
    DIVIDE          reduce using rule 136 (factor -> PLUS var .)
    MODULO          reduce using rule 136 (factor -> PLUS var .)
    LT              reduce using rule 136 (factor -> PLUS var .)
    GT              reduce using rule 136 (factor -> PLUS var .)
    GE              reduce using rule 136 (factor -> PLUS var .)
    LE              reduce using rule 136 (factor -> PLUS var .)
    EQ              reduce using rule 136 (factor -> PLUS var .)
    NE              reduce using rule 136 (factor -> PLUS var .)
    PLUS            reduce using rule 136 (factor -> PLUS var .)
    MINUS           reduce using rule 136 (factor -> PLUS var .)
    AND             reduce using rule 136 (factor -> PLUS var .)
    OR              reduce using rule 136 (factor -> PLUS var .)
    VAR             reduce using rule 136 (factor -> PLUS var .)
    PUBLIC          reduce using rule 136 (factor -> PLUS var .)
    IF              reduce using rule 136 (factor -> PLUS var .)
    PRIVATE         reduce using rule 136 (factor -> PLUS var .)
    PROTECTED       reduce using rule 136 (factor -> PLUS var .)
    ID              reduce using rule 136 (factor -> PLUS var .)
    PRINT           reduce using rule 136 (factor -> PLUS var .)
    READ            reduce using rule 136 (factor -> PLUS var .)
    VOID            reduce using rule 136 (factor -> PLUS var .)
    INT             reduce using rule 136 (factor -> PLUS var .)
    FLOAT           reduce using rule 136 (factor -> PLUS var .)
    CHAR            reduce using rule 136 (factor -> PLUS var .)
    STRING          reduce using rule 136 (factor -> PLUS var .)
    BOOL            reduce using rule 136 (factor -> PLUS var .)
    WHILE           reduce using rule 136 (factor -> PLUS var .)
    RBRACE          reduce using rule 136 (factor -> PLUS var .)
    RETURN          reduce using rule 136 (factor -> PLUS var .)
    RBRACKET        reduce using rule 136 (factor -> PLUS var .)
    RPAREN          reduce using rule 136 (factor -> PLUS var .)
    COMMA           reduce using rule 136 (factor -> PLUS var .)


state 142

    (148) objeto_aAcceso -> ID . PERIOD ID
    (141) var -> ID .

    PERIOD          shift and go to state 146
    TIMES           reduce using rule 141 (var -> ID .)
    DIVIDE          reduce using rule 141 (var -> ID .)
    MODULO          reduce using rule 141 (var -> ID .)
    LT              reduce using rule 141 (var -> ID .)
    GT              reduce using rule 141 (var -> ID .)
    GE              reduce using rule 141 (var -> ID .)
    LE              reduce using rule 141 (var -> ID .)
    EQ              reduce using rule 141 (var -> ID .)
    NE              reduce using rule 141 (var -> ID .)
    PLUS            reduce using rule 141 (var -> ID .)
    MINUS           reduce using rule 141 (var -> ID .)
    AND             reduce using rule 141 (var -> ID .)
    OR              reduce using rule 141 (var -> ID .)
    VAR             reduce using rule 141 (var -> ID .)
    PUBLIC          reduce using rule 141 (var -> ID .)
    IF              reduce using rule 141 (var -> ID .)
    PRIVATE         reduce using rule 141 (var -> ID .)
    PROTECTED       reduce using rule 141 (var -> ID .)
    ID              reduce using rule 141 (var -> ID .)
    PRINT           reduce using rule 141 (var -> ID .)
    READ            reduce using rule 141 (var -> ID .)
    VOID            reduce using rule 141 (var -> ID .)
    INT             reduce using rule 141 (var -> ID .)
    FLOAT           reduce using rule 141 (var -> ID .)
    CHAR            reduce using rule 141 (var -> ID .)
    STRING          reduce using rule 141 (var -> ID .)
    BOOL            reduce using rule 141 (var -> ID .)
    WHILE           reduce using rule 141 (var -> ID .)
    RBRACE          reduce using rule 141 (var -> ID .)
    RETURN          reduce using rule 141 (var -> ID .)
    RBRACKET        reduce using rule 141 (var -> ID .)
    RPAREN          reduce using rule 141 (var -> ID .)
    COMMA           reduce using rule 141 (var -> ID .)


state 143

    (135) factor -> MINUS objeto_aAcceso .

    TIMES           reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    DIVIDE          reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    MODULO          reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    LT              reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    GT              reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    GE              reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    LE              reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    EQ              reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    NE              reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    PLUS            reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    MINUS           reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    AND             reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    OR              reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    VAR             reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    PUBLIC          reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    IF              reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    PRIVATE         reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    PROTECTED       reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    ID              reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    PRINT           reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    READ            reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    VOID            reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    INT             reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    FLOAT           reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    CHAR            reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    STRING          reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    BOOL            reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    WHILE           reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    RBRACE          reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    RETURN          reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    RBRACKET        reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    RPAREN          reduce using rule 135 (factor -> MINUS objeto_aAcceso .)
    COMMA           reduce using rule 135 (factor -> MINUS objeto_aAcceso .)


state 144

    (137) factor -> MINUS var .

    TIMES           reduce using rule 137 (factor -> MINUS var .)
    DIVIDE          reduce using rule 137 (factor -> MINUS var .)
    MODULO          reduce using rule 137 (factor -> MINUS var .)
    LT              reduce using rule 137 (factor -> MINUS var .)
    GT              reduce using rule 137 (factor -> MINUS var .)
    GE              reduce using rule 137 (factor -> MINUS var .)
    LE              reduce using rule 137 (factor -> MINUS var .)
    EQ              reduce using rule 137 (factor -> MINUS var .)
    NE              reduce using rule 137 (factor -> MINUS var .)
    PLUS            reduce using rule 137 (factor -> MINUS var .)
    MINUS           reduce using rule 137 (factor -> MINUS var .)
    AND             reduce using rule 137 (factor -> MINUS var .)
    OR              reduce using rule 137 (factor -> MINUS var .)
    VAR             reduce using rule 137 (factor -> MINUS var .)
    PUBLIC          reduce using rule 137 (factor -> MINUS var .)
    IF              reduce using rule 137 (factor -> MINUS var .)
    PRIVATE         reduce using rule 137 (factor -> MINUS var .)
    PROTECTED       reduce using rule 137 (factor -> MINUS var .)
    ID              reduce using rule 137 (factor -> MINUS var .)
    PRINT           reduce using rule 137 (factor -> MINUS var .)
    READ            reduce using rule 137 (factor -> MINUS var .)
    VOID            reduce using rule 137 (factor -> MINUS var .)
    INT             reduce using rule 137 (factor -> MINUS var .)
    FLOAT           reduce using rule 137 (factor -> MINUS var .)
    CHAR            reduce using rule 137 (factor -> MINUS var .)
    STRING          reduce using rule 137 (factor -> MINUS var .)
    BOOL            reduce using rule 137 (factor -> MINUS var .)
    WHILE           reduce using rule 137 (factor -> MINUS var .)
    RBRACE          reduce using rule 137 (factor -> MINUS var .)
    RETURN          reduce using rule 137 (factor -> MINUS var .)
    RBRACKET        reduce using rule 137 (factor -> MINUS var .)
    RPAREN          reduce using rule 137 (factor -> MINUS var .)
    COMMA           reduce using rule 137 (factor -> MINUS var .)


state 145

    (133) factor -> LPAREN exp_cond . RPAREN

    RPAREN          shift and go to state 180


state 146

    (148) objeto_aAcceso -> ID PERIOD . ID

    ID              shift and go to state 181


state 147

    (94) asignacion -> ID LBRACKET exp RBRACKET . EQUALS exp_cond
    (95) asignacion -> ID LBRACKET exp RBRACKET . EQUALS objeto_metodo
    (98) asignacion -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS exp_cond
    (99) asignacion -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS objeto_metodo

    EQUALS          shift and go to state 183
    LBRACKET        shift and go to state 182


state 148

    (26) constructor -> PUBLIC ID LPAREN param . RPAREN bloque

    RPAREN          shift and go to state 184


state 149

    (53) param -> tipo_simple . ID
    (54) param -> tipo_simple . ID COMMA param

    ID              shift and go to state 185


state 150

    (28) funcion -> scope type DEF id . LPAREN param aux_param RPAREN contexto_func

    LPAREN          shift and go to state 186


state 151

    (30) id -> ID .

    LPAREN          reduce using rule 30 (id -> ID .)


state 152

    (29) funcion -> scope VOID DEF id . LPAREN param aux_param RPAREN contexto_func

    LPAREN          shift and go to state 187


state 153

    (19) condicion -> IF LPAREN gotoF RPAREN . bloque
    (20) condicion -> IF LPAREN gotoF RPAREN . bloque elif
    (27) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 189

    bloque                         shift and go to state 188

state 154

    (24) ciclo -> aux_ciclo WHILE LPAREN gotoF . RPAREN bloque

    RPAREN          shift and go to state 190


state 155

    (100) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp . RBRACKET exp RBRACKET EQUALS exp_cond
    (101) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp . RBRACKET exp RBRACKET EQUALS objeto_metodo
    (127) exp -> exp . PLUS termino
    (128) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 191
    PLUS            shift and go to state 135
    MINUS           shift and go to state 136


state 156

    (96) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . EQUALS exp_cond
    (97) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . EQUALS objeto_metodo

    EQUALS          shift and go to state 192


state 157

    (70) escritura -> PRINT LPAREN aux3 RPAREN .

    VAR             reduce using rule 70 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PUBLIC          reduce using rule 70 (escritura -> PRINT LPAREN aux3 RPAREN .)
    IF              reduce using rule 70 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PRIVATE         reduce using rule 70 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PROTECTED       reduce using rule 70 (escritura -> PRINT LPAREN aux3 RPAREN .)
    ID              reduce using rule 70 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PRINT           reduce using rule 70 (escritura -> PRINT LPAREN aux3 RPAREN .)
    READ            reduce using rule 70 (escritura -> PRINT LPAREN aux3 RPAREN .)
    VOID            reduce using rule 70 (escritura -> PRINT LPAREN aux3 RPAREN .)
    INT             reduce using rule 70 (escritura -> PRINT LPAREN aux3 RPAREN .)
    FLOAT           reduce using rule 70 (escritura -> PRINT LPAREN aux3 RPAREN .)
    CHAR            reduce using rule 70 (escritura -> PRINT LPAREN aux3 RPAREN .)
    STRING          reduce using rule 70 (escritura -> PRINT LPAREN aux3 RPAREN .)
    BOOL            reduce using rule 70 (escritura -> PRINT LPAREN aux3 RPAREN .)
    WHILE           reduce using rule 70 (escritura -> PRINT LPAREN aux3 RPAREN .)
    RBRACE          reduce using rule 70 (escritura -> PRINT LPAREN aux3 RPAREN .)
    RETURN          reduce using rule 70 (escritura -> PRINT LPAREN aux3 RPAREN .)


state 158

    (74) aux3 -> expresion COMMA . aux3
    (71) aux3 -> . expresion
    (72) aux3 -> . objeto_metodo
    (73) aux3 -> . CSTRING
    (74) aux3 -> . expresion COMMA aux3
    (75) aux3 -> . objeto_metodo COMMA aux3
    (76) aux3 -> . CSTRING COMMA aux3
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (102) objeto_metodo -> . ID PERIOD llamada_func
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    CSTRING         shift and go to state 108
    ID              shift and go to state 69
    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    expresion                      shift and go to state 106
    aux3                           shift and go to state 193
    objeto_metodo                  shift and go to state 107
    exp                            shift and go to state 77
    llamada_func                   shift and go to state 73
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 159

    (75) aux3 -> objeto_metodo COMMA . aux3
    (71) aux3 -> . expresion
    (72) aux3 -> . objeto_metodo
    (73) aux3 -> . CSTRING
    (74) aux3 -> . expresion COMMA aux3
    (75) aux3 -> . objeto_metodo COMMA aux3
    (76) aux3 -> . CSTRING COMMA aux3
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (102) objeto_metodo -> . ID PERIOD llamada_func
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    CSTRING         shift and go to state 108
    ID              shift and go to state 69
    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    objeto_metodo                  shift and go to state 107
    aux3                           shift and go to state 194
    expresion                      shift and go to state 106
    exp                            shift and go to state 77
    llamada_func                   shift and go to state 73
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 160

    (76) aux3 -> CSTRING COMMA . aux3
    (71) aux3 -> . expresion
    (72) aux3 -> . objeto_metodo
    (73) aux3 -> . CSTRING
    (74) aux3 -> . expresion COMMA aux3
    (75) aux3 -> . objeto_metodo COMMA aux3
    (76) aux3 -> . CSTRING COMMA aux3
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (102) objeto_metodo -> . ID PERIOD llamada_func
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    CSTRING         shift and go to state 108
    ID              shift and go to state 69
    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    aux3                           shift and go to state 195
    expresion                      shift and go to state 106
    objeto_metodo                  shift and go to state 107
    exp                            shift and go to state 77
    llamada_func                   shift and go to state 73
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 161

    (106) llamada_rparen -> aux RPAREN .

    VAR             reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    PUBLIC          reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    IF              reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    PRIVATE         reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    PROTECTED       reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    ID              reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    PRINT           reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    READ            reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    VOID            reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    INT             reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    FLOAT           reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    CHAR            reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    STRING          reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    BOOL            reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    WHILE           reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    RBRACE          reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    TIMES           reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    DIVIDE          reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    MODULO          reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    LT              reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    GT              reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    GE              reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    LE              reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    EQ              reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    NE              reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    PLUS            reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    MINUS           reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    AND             reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    OR              reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    RETURN          reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    RBRACKET        reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    COMMA           reduce using rule 106 (llamada_rparen -> aux RPAREN .)
    RPAREN          reduce using rule 106 (llamada_rparen -> aux RPAREN .)


state 162

    (108) aux -> exp aux_exp .
    (109) aux -> exp aux_exp . aux_comma aux
    (111) aux_comma -> . COMMA

    RPAREN          reduce using rule 108 (aux -> exp aux_exp .)
    COMMA           shift and go to state 197

    aux_comma                      shift and go to state 196

state 163

    (65) lectura -> READ LPAREN aux4 RPAREN .

    VAR             reduce using rule 65 (lectura -> READ LPAREN aux4 RPAREN .)
    PUBLIC          reduce using rule 65 (lectura -> READ LPAREN aux4 RPAREN .)
    IF              reduce using rule 65 (lectura -> READ LPAREN aux4 RPAREN .)
    PRIVATE         reduce using rule 65 (lectura -> READ LPAREN aux4 RPAREN .)
    PROTECTED       reduce using rule 65 (lectura -> READ LPAREN aux4 RPAREN .)
    ID              reduce using rule 65 (lectura -> READ LPAREN aux4 RPAREN .)
    PRINT           reduce using rule 65 (lectura -> READ LPAREN aux4 RPAREN .)
    READ            reduce using rule 65 (lectura -> READ LPAREN aux4 RPAREN .)
    VOID            reduce using rule 65 (lectura -> READ LPAREN aux4 RPAREN .)
    INT             reduce using rule 65 (lectura -> READ LPAREN aux4 RPAREN .)
    FLOAT           reduce using rule 65 (lectura -> READ LPAREN aux4 RPAREN .)
    CHAR            reduce using rule 65 (lectura -> READ LPAREN aux4 RPAREN .)
    STRING          reduce using rule 65 (lectura -> READ LPAREN aux4 RPAREN .)
    BOOL            reduce using rule 65 (lectura -> READ LPAREN aux4 RPAREN .)
    WHILE           reduce using rule 65 (lectura -> READ LPAREN aux4 RPAREN .)
    RBRACE          reduce using rule 65 (lectura -> READ LPAREN aux4 RPAREN .)
    RETURN          reduce using rule 65 (lectura -> READ LPAREN aux4 RPAREN .)


state 164

    (68) aux4 -> ID COMMA . aux4
    (66) aux4 -> . ID
    (67) aux4 -> . objeto_aAcceso
    (68) aux4 -> . ID COMMA aux4
    (69) aux4 -> . objeto_aAcceso COMMA aux4
    (148) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 114

    aux4                           shift and go to state 198
    objeto_aAcceso                 shift and go to state 115

state 165

    (69) aux4 -> objeto_aAcceso COMMA . aux4
    (66) aux4 -> . ID
    (67) aux4 -> . objeto_aAcceso
    (68) aux4 -> . ID COMMA aux4
    (69) aux4 -> . objeto_aAcceso COMMA aux4
    (148) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 114

    objeto_aAcceso                 shift and go to state 115
    aux4                           shift and go to state 199

state 166

    (79) vars -> VAR ID LBRACKET cint RBRACKET . COLON tipo_simple
    (80) vars -> VAR ID LBRACKET cint RBRACKET . COLON tipo_compuesto
    (81) vars -> VAR ID LBRACKET cint RBRACKET . LBRACKET cint RBRACKET COLON tipo_simple
    (82) vars -> VAR ID LBRACKET cint RBRACKET . LBRACKET cint RBRACKET COLON tipo_compuesto

    COLON           shift and go to state 201
    LBRACKET        shift and go to state 200


state 167

    (114) exp_cond -> exp_bool AND exp_cond .

    VAR             reduce using rule 114 (exp_cond -> exp_bool AND exp_cond .)
    PUBLIC          reduce using rule 114 (exp_cond -> exp_bool AND exp_cond .)
    IF              reduce using rule 114 (exp_cond -> exp_bool AND exp_cond .)
    PRIVATE         reduce using rule 114 (exp_cond -> exp_bool AND exp_cond .)
    PROTECTED       reduce using rule 114 (exp_cond -> exp_bool AND exp_cond .)
    ID              reduce using rule 114 (exp_cond -> exp_bool AND exp_cond .)
    PRINT           reduce using rule 114 (exp_cond -> exp_bool AND exp_cond .)
    READ            reduce using rule 114 (exp_cond -> exp_bool AND exp_cond .)
    VOID            reduce using rule 114 (exp_cond -> exp_bool AND exp_cond .)
    INT             reduce using rule 114 (exp_cond -> exp_bool AND exp_cond .)
    FLOAT           reduce using rule 114 (exp_cond -> exp_bool AND exp_cond .)
    CHAR            reduce using rule 114 (exp_cond -> exp_bool AND exp_cond .)
    STRING          reduce using rule 114 (exp_cond -> exp_bool AND exp_cond .)
    BOOL            reduce using rule 114 (exp_cond -> exp_bool AND exp_cond .)
    WHILE           reduce using rule 114 (exp_cond -> exp_bool AND exp_cond .)
    RBRACE          reduce using rule 114 (exp_cond -> exp_bool AND exp_cond .)
    RETURN          reduce using rule 114 (exp_cond -> exp_bool AND exp_cond .)
    RPAREN          reduce using rule 114 (exp_cond -> exp_bool AND exp_cond .)


state 168

    (115) exp_cond -> exp_bool OR exp_cond .

    VAR             reduce using rule 115 (exp_cond -> exp_bool OR exp_cond .)
    PUBLIC          reduce using rule 115 (exp_cond -> exp_bool OR exp_cond .)
    IF              reduce using rule 115 (exp_cond -> exp_bool OR exp_cond .)
    PRIVATE         reduce using rule 115 (exp_cond -> exp_bool OR exp_cond .)
    PROTECTED       reduce using rule 115 (exp_cond -> exp_bool OR exp_cond .)
    ID              reduce using rule 115 (exp_cond -> exp_bool OR exp_cond .)
    PRINT           reduce using rule 115 (exp_cond -> exp_bool OR exp_cond .)
    READ            reduce using rule 115 (exp_cond -> exp_bool OR exp_cond .)
    VOID            reduce using rule 115 (exp_cond -> exp_bool OR exp_cond .)
    INT             reduce using rule 115 (exp_cond -> exp_bool OR exp_cond .)
    FLOAT           reduce using rule 115 (exp_cond -> exp_bool OR exp_cond .)
    CHAR            reduce using rule 115 (exp_cond -> exp_bool OR exp_cond .)
    STRING          reduce using rule 115 (exp_cond -> exp_bool OR exp_cond .)
    BOOL            reduce using rule 115 (exp_cond -> exp_bool OR exp_cond .)
    WHILE           reduce using rule 115 (exp_cond -> exp_bool OR exp_cond .)
    RBRACE          reduce using rule 115 (exp_cond -> exp_bool OR exp_cond .)
    RETURN          reduce using rule 115 (exp_cond -> exp_bool OR exp_cond .)
    RPAREN          reduce using rule 115 (exp_cond -> exp_bool OR exp_cond .)


state 169

    (120) expresion -> exp LT expresion .

    AND             reduce using rule 120 (expresion -> exp LT expresion .)
    OR              reduce using rule 120 (expresion -> exp LT expresion .)
    VAR             reduce using rule 120 (expresion -> exp LT expresion .)
    PUBLIC          reduce using rule 120 (expresion -> exp LT expresion .)
    IF              reduce using rule 120 (expresion -> exp LT expresion .)
    PRIVATE         reduce using rule 120 (expresion -> exp LT expresion .)
    PROTECTED       reduce using rule 120 (expresion -> exp LT expresion .)
    ID              reduce using rule 120 (expresion -> exp LT expresion .)
    PRINT           reduce using rule 120 (expresion -> exp LT expresion .)
    READ            reduce using rule 120 (expresion -> exp LT expresion .)
    VOID            reduce using rule 120 (expresion -> exp LT expresion .)
    INT             reduce using rule 120 (expresion -> exp LT expresion .)
    FLOAT           reduce using rule 120 (expresion -> exp LT expresion .)
    CHAR            reduce using rule 120 (expresion -> exp LT expresion .)
    STRING          reduce using rule 120 (expresion -> exp LT expresion .)
    BOOL            reduce using rule 120 (expresion -> exp LT expresion .)
    WHILE           reduce using rule 120 (expresion -> exp LT expresion .)
    RBRACE          reduce using rule 120 (expresion -> exp LT expresion .)
    RETURN          reduce using rule 120 (expresion -> exp LT expresion .)
    RPAREN          reduce using rule 120 (expresion -> exp LT expresion .)
    COMMA           reduce using rule 120 (expresion -> exp LT expresion .)


state 170

    (121) expresion -> exp GT expresion .

    AND             reduce using rule 121 (expresion -> exp GT expresion .)
    OR              reduce using rule 121 (expresion -> exp GT expresion .)
    VAR             reduce using rule 121 (expresion -> exp GT expresion .)
    PUBLIC          reduce using rule 121 (expresion -> exp GT expresion .)
    IF              reduce using rule 121 (expresion -> exp GT expresion .)
    PRIVATE         reduce using rule 121 (expresion -> exp GT expresion .)
    PROTECTED       reduce using rule 121 (expresion -> exp GT expresion .)
    ID              reduce using rule 121 (expresion -> exp GT expresion .)
    PRINT           reduce using rule 121 (expresion -> exp GT expresion .)
    READ            reduce using rule 121 (expresion -> exp GT expresion .)
    VOID            reduce using rule 121 (expresion -> exp GT expresion .)
    INT             reduce using rule 121 (expresion -> exp GT expresion .)
    FLOAT           reduce using rule 121 (expresion -> exp GT expresion .)
    CHAR            reduce using rule 121 (expresion -> exp GT expresion .)
    STRING          reduce using rule 121 (expresion -> exp GT expresion .)
    BOOL            reduce using rule 121 (expresion -> exp GT expresion .)
    WHILE           reduce using rule 121 (expresion -> exp GT expresion .)
    RBRACE          reduce using rule 121 (expresion -> exp GT expresion .)
    RETURN          reduce using rule 121 (expresion -> exp GT expresion .)
    RPAREN          reduce using rule 121 (expresion -> exp GT expresion .)
    COMMA           reduce using rule 121 (expresion -> exp GT expresion .)


state 171

    (122) expresion -> exp GE expresion .

    AND             reduce using rule 122 (expresion -> exp GE expresion .)
    OR              reduce using rule 122 (expresion -> exp GE expresion .)
    VAR             reduce using rule 122 (expresion -> exp GE expresion .)
    PUBLIC          reduce using rule 122 (expresion -> exp GE expresion .)
    IF              reduce using rule 122 (expresion -> exp GE expresion .)
    PRIVATE         reduce using rule 122 (expresion -> exp GE expresion .)
    PROTECTED       reduce using rule 122 (expresion -> exp GE expresion .)
    ID              reduce using rule 122 (expresion -> exp GE expresion .)
    PRINT           reduce using rule 122 (expresion -> exp GE expresion .)
    READ            reduce using rule 122 (expresion -> exp GE expresion .)
    VOID            reduce using rule 122 (expresion -> exp GE expresion .)
    INT             reduce using rule 122 (expresion -> exp GE expresion .)
    FLOAT           reduce using rule 122 (expresion -> exp GE expresion .)
    CHAR            reduce using rule 122 (expresion -> exp GE expresion .)
    STRING          reduce using rule 122 (expresion -> exp GE expresion .)
    BOOL            reduce using rule 122 (expresion -> exp GE expresion .)
    WHILE           reduce using rule 122 (expresion -> exp GE expresion .)
    RBRACE          reduce using rule 122 (expresion -> exp GE expresion .)
    RETURN          reduce using rule 122 (expresion -> exp GE expresion .)
    RPAREN          reduce using rule 122 (expresion -> exp GE expresion .)
    COMMA           reduce using rule 122 (expresion -> exp GE expresion .)


state 172

    (123) expresion -> exp LE expresion .

    AND             reduce using rule 123 (expresion -> exp LE expresion .)
    OR              reduce using rule 123 (expresion -> exp LE expresion .)
    VAR             reduce using rule 123 (expresion -> exp LE expresion .)
    PUBLIC          reduce using rule 123 (expresion -> exp LE expresion .)
    IF              reduce using rule 123 (expresion -> exp LE expresion .)
    PRIVATE         reduce using rule 123 (expresion -> exp LE expresion .)
    PROTECTED       reduce using rule 123 (expresion -> exp LE expresion .)
    ID              reduce using rule 123 (expresion -> exp LE expresion .)
    PRINT           reduce using rule 123 (expresion -> exp LE expresion .)
    READ            reduce using rule 123 (expresion -> exp LE expresion .)
    VOID            reduce using rule 123 (expresion -> exp LE expresion .)
    INT             reduce using rule 123 (expresion -> exp LE expresion .)
    FLOAT           reduce using rule 123 (expresion -> exp LE expresion .)
    CHAR            reduce using rule 123 (expresion -> exp LE expresion .)
    STRING          reduce using rule 123 (expresion -> exp LE expresion .)
    BOOL            reduce using rule 123 (expresion -> exp LE expresion .)
    WHILE           reduce using rule 123 (expresion -> exp LE expresion .)
    RBRACE          reduce using rule 123 (expresion -> exp LE expresion .)
    RETURN          reduce using rule 123 (expresion -> exp LE expresion .)
    RPAREN          reduce using rule 123 (expresion -> exp LE expresion .)
    COMMA           reduce using rule 123 (expresion -> exp LE expresion .)


state 173

    (124) expresion -> exp EQ expresion .

    AND             reduce using rule 124 (expresion -> exp EQ expresion .)
    OR              reduce using rule 124 (expresion -> exp EQ expresion .)
    VAR             reduce using rule 124 (expresion -> exp EQ expresion .)
    PUBLIC          reduce using rule 124 (expresion -> exp EQ expresion .)
    IF              reduce using rule 124 (expresion -> exp EQ expresion .)
    PRIVATE         reduce using rule 124 (expresion -> exp EQ expresion .)
    PROTECTED       reduce using rule 124 (expresion -> exp EQ expresion .)
    ID              reduce using rule 124 (expresion -> exp EQ expresion .)
    PRINT           reduce using rule 124 (expresion -> exp EQ expresion .)
    READ            reduce using rule 124 (expresion -> exp EQ expresion .)
    VOID            reduce using rule 124 (expresion -> exp EQ expresion .)
    INT             reduce using rule 124 (expresion -> exp EQ expresion .)
    FLOAT           reduce using rule 124 (expresion -> exp EQ expresion .)
    CHAR            reduce using rule 124 (expresion -> exp EQ expresion .)
    STRING          reduce using rule 124 (expresion -> exp EQ expresion .)
    BOOL            reduce using rule 124 (expresion -> exp EQ expresion .)
    WHILE           reduce using rule 124 (expresion -> exp EQ expresion .)
    RBRACE          reduce using rule 124 (expresion -> exp EQ expresion .)
    RETURN          reduce using rule 124 (expresion -> exp EQ expresion .)
    RPAREN          reduce using rule 124 (expresion -> exp EQ expresion .)
    COMMA           reduce using rule 124 (expresion -> exp EQ expresion .)


state 174

    (125) expresion -> exp NE expresion .

    AND             reduce using rule 125 (expresion -> exp NE expresion .)
    OR              reduce using rule 125 (expresion -> exp NE expresion .)
    VAR             reduce using rule 125 (expresion -> exp NE expresion .)
    PUBLIC          reduce using rule 125 (expresion -> exp NE expresion .)
    IF              reduce using rule 125 (expresion -> exp NE expresion .)
    PRIVATE         reduce using rule 125 (expresion -> exp NE expresion .)
    PROTECTED       reduce using rule 125 (expresion -> exp NE expresion .)
    ID              reduce using rule 125 (expresion -> exp NE expresion .)
    PRINT           reduce using rule 125 (expresion -> exp NE expresion .)
    READ            reduce using rule 125 (expresion -> exp NE expresion .)
    VOID            reduce using rule 125 (expresion -> exp NE expresion .)
    INT             reduce using rule 125 (expresion -> exp NE expresion .)
    FLOAT           reduce using rule 125 (expresion -> exp NE expresion .)
    CHAR            reduce using rule 125 (expresion -> exp NE expresion .)
    STRING          reduce using rule 125 (expresion -> exp NE expresion .)
    BOOL            reduce using rule 125 (expresion -> exp NE expresion .)
    WHILE           reduce using rule 125 (expresion -> exp NE expresion .)
    RBRACE          reduce using rule 125 (expresion -> exp NE expresion .)
    RETURN          reduce using rule 125 (expresion -> exp NE expresion .)
    RPAREN          reduce using rule 125 (expresion -> exp NE expresion .)
    COMMA           reduce using rule 125 (expresion -> exp NE expresion .)


state 175

    (127) exp -> exp PLUS termino .
    (130) termino -> termino . TIMES factor
    (131) termino -> termino . DIVIDE factor
    (132) termino -> termino . MODULO factor

    LT              reduce using rule 127 (exp -> exp PLUS termino .)
    GT              reduce using rule 127 (exp -> exp PLUS termino .)
    GE              reduce using rule 127 (exp -> exp PLUS termino .)
    LE              reduce using rule 127 (exp -> exp PLUS termino .)
    EQ              reduce using rule 127 (exp -> exp PLUS termino .)
    NE              reduce using rule 127 (exp -> exp PLUS termino .)
    PLUS            reduce using rule 127 (exp -> exp PLUS termino .)
    MINUS           reduce using rule 127 (exp -> exp PLUS termino .)
    AND             reduce using rule 127 (exp -> exp PLUS termino .)
    OR              reduce using rule 127 (exp -> exp PLUS termino .)
    VAR             reduce using rule 127 (exp -> exp PLUS termino .)
    PUBLIC          reduce using rule 127 (exp -> exp PLUS termino .)
    IF              reduce using rule 127 (exp -> exp PLUS termino .)
    PRIVATE         reduce using rule 127 (exp -> exp PLUS termino .)
    PROTECTED       reduce using rule 127 (exp -> exp PLUS termino .)
    ID              reduce using rule 127 (exp -> exp PLUS termino .)
    PRINT           reduce using rule 127 (exp -> exp PLUS termino .)
    READ            reduce using rule 127 (exp -> exp PLUS termino .)
    VOID            reduce using rule 127 (exp -> exp PLUS termino .)
    INT             reduce using rule 127 (exp -> exp PLUS termino .)
    FLOAT           reduce using rule 127 (exp -> exp PLUS termino .)
    CHAR            reduce using rule 127 (exp -> exp PLUS termino .)
    STRING          reduce using rule 127 (exp -> exp PLUS termino .)
    BOOL            reduce using rule 127 (exp -> exp PLUS termino .)
    WHILE           reduce using rule 127 (exp -> exp PLUS termino .)
    RBRACE          reduce using rule 127 (exp -> exp PLUS termino .)
    RETURN          reduce using rule 127 (exp -> exp PLUS termino .)
    RBRACKET        reduce using rule 127 (exp -> exp PLUS termino .)
    RPAREN          reduce using rule 127 (exp -> exp PLUS termino .)
    COMMA           reduce using rule 127 (exp -> exp PLUS termino .)
    TIMES           shift and go to state 137
    DIVIDE          shift and go to state 138
    MODULO          shift and go to state 139


state 176

    (128) exp -> exp MINUS termino .
    (130) termino -> termino . TIMES factor
    (131) termino -> termino . DIVIDE factor
    (132) termino -> termino . MODULO factor

    LT              reduce using rule 128 (exp -> exp MINUS termino .)
    GT              reduce using rule 128 (exp -> exp MINUS termino .)
    GE              reduce using rule 128 (exp -> exp MINUS termino .)
    LE              reduce using rule 128 (exp -> exp MINUS termino .)
    EQ              reduce using rule 128 (exp -> exp MINUS termino .)
    NE              reduce using rule 128 (exp -> exp MINUS termino .)
    PLUS            reduce using rule 128 (exp -> exp MINUS termino .)
    MINUS           reduce using rule 128 (exp -> exp MINUS termino .)
    AND             reduce using rule 128 (exp -> exp MINUS termino .)
    OR              reduce using rule 128 (exp -> exp MINUS termino .)
    VAR             reduce using rule 128 (exp -> exp MINUS termino .)
    PUBLIC          reduce using rule 128 (exp -> exp MINUS termino .)
    IF              reduce using rule 128 (exp -> exp MINUS termino .)
    PRIVATE         reduce using rule 128 (exp -> exp MINUS termino .)
    PROTECTED       reduce using rule 128 (exp -> exp MINUS termino .)
    ID              reduce using rule 128 (exp -> exp MINUS termino .)
    PRINT           reduce using rule 128 (exp -> exp MINUS termino .)
    READ            reduce using rule 128 (exp -> exp MINUS termino .)
    VOID            reduce using rule 128 (exp -> exp MINUS termino .)
    INT             reduce using rule 128 (exp -> exp MINUS termino .)
    FLOAT           reduce using rule 128 (exp -> exp MINUS termino .)
    CHAR            reduce using rule 128 (exp -> exp MINUS termino .)
    STRING          reduce using rule 128 (exp -> exp MINUS termino .)
    BOOL            reduce using rule 128 (exp -> exp MINUS termino .)
    WHILE           reduce using rule 128 (exp -> exp MINUS termino .)
    RBRACE          reduce using rule 128 (exp -> exp MINUS termino .)
    RETURN          reduce using rule 128 (exp -> exp MINUS termino .)
    RBRACKET        reduce using rule 128 (exp -> exp MINUS termino .)
    RPAREN          reduce using rule 128 (exp -> exp MINUS termino .)
    COMMA           reduce using rule 128 (exp -> exp MINUS termino .)
    TIMES           shift and go to state 137
    DIVIDE          shift and go to state 138
    MODULO          shift and go to state 139


state 177

    (130) termino -> termino TIMES factor .

    TIMES           reduce using rule 130 (termino -> termino TIMES factor .)
    DIVIDE          reduce using rule 130 (termino -> termino TIMES factor .)
    MODULO          reduce using rule 130 (termino -> termino TIMES factor .)
    LT              reduce using rule 130 (termino -> termino TIMES factor .)
    GT              reduce using rule 130 (termino -> termino TIMES factor .)
    GE              reduce using rule 130 (termino -> termino TIMES factor .)
    LE              reduce using rule 130 (termino -> termino TIMES factor .)
    EQ              reduce using rule 130 (termino -> termino TIMES factor .)
    NE              reduce using rule 130 (termino -> termino TIMES factor .)
    PLUS            reduce using rule 130 (termino -> termino TIMES factor .)
    MINUS           reduce using rule 130 (termino -> termino TIMES factor .)
    AND             reduce using rule 130 (termino -> termino TIMES factor .)
    OR              reduce using rule 130 (termino -> termino TIMES factor .)
    VAR             reduce using rule 130 (termino -> termino TIMES factor .)
    PUBLIC          reduce using rule 130 (termino -> termino TIMES factor .)
    IF              reduce using rule 130 (termino -> termino TIMES factor .)
    PRIVATE         reduce using rule 130 (termino -> termino TIMES factor .)
    PROTECTED       reduce using rule 130 (termino -> termino TIMES factor .)
    ID              reduce using rule 130 (termino -> termino TIMES factor .)
    PRINT           reduce using rule 130 (termino -> termino TIMES factor .)
    READ            reduce using rule 130 (termino -> termino TIMES factor .)
    VOID            reduce using rule 130 (termino -> termino TIMES factor .)
    INT             reduce using rule 130 (termino -> termino TIMES factor .)
    FLOAT           reduce using rule 130 (termino -> termino TIMES factor .)
    CHAR            reduce using rule 130 (termino -> termino TIMES factor .)
    STRING          reduce using rule 130 (termino -> termino TIMES factor .)
    BOOL            reduce using rule 130 (termino -> termino TIMES factor .)
    WHILE           reduce using rule 130 (termino -> termino TIMES factor .)
    RBRACE          reduce using rule 130 (termino -> termino TIMES factor .)
    RETURN          reduce using rule 130 (termino -> termino TIMES factor .)
    RBRACKET        reduce using rule 130 (termino -> termino TIMES factor .)
    RPAREN          reduce using rule 130 (termino -> termino TIMES factor .)
    COMMA           reduce using rule 130 (termino -> termino TIMES factor .)


state 178

    (131) termino -> termino DIVIDE factor .

    TIMES           reduce using rule 131 (termino -> termino DIVIDE factor .)
    DIVIDE          reduce using rule 131 (termino -> termino DIVIDE factor .)
    MODULO          reduce using rule 131 (termino -> termino DIVIDE factor .)
    LT              reduce using rule 131 (termino -> termino DIVIDE factor .)
    GT              reduce using rule 131 (termino -> termino DIVIDE factor .)
    GE              reduce using rule 131 (termino -> termino DIVIDE factor .)
    LE              reduce using rule 131 (termino -> termino DIVIDE factor .)
    EQ              reduce using rule 131 (termino -> termino DIVIDE factor .)
    NE              reduce using rule 131 (termino -> termino DIVIDE factor .)
    PLUS            reduce using rule 131 (termino -> termino DIVIDE factor .)
    MINUS           reduce using rule 131 (termino -> termino DIVIDE factor .)
    AND             reduce using rule 131 (termino -> termino DIVIDE factor .)
    OR              reduce using rule 131 (termino -> termino DIVIDE factor .)
    VAR             reduce using rule 131 (termino -> termino DIVIDE factor .)
    PUBLIC          reduce using rule 131 (termino -> termino DIVIDE factor .)
    IF              reduce using rule 131 (termino -> termino DIVIDE factor .)
    PRIVATE         reduce using rule 131 (termino -> termino DIVIDE factor .)
    PROTECTED       reduce using rule 131 (termino -> termino DIVIDE factor .)
    ID              reduce using rule 131 (termino -> termino DIVIDE factor .)
    PRINT           reduce using rule 131 (termino -> termino DIVIDE factor .)
    READ            reduce using rule 131 (termino -> termino DIVIDE factor .)
    VOID            reduce using rule 131 (termino -> termino DIVIDE factor .)
    INT             reduce using rule 131 (termino -> termino DIVIDE factor .)
    FLOAT           reduce using rule 131 (termino -> termino DIVIDE factor .)
    CHAR            reduce using rule 131 (termino -> termino DIVIDE factor .)
    STRING          reduce using rule 131 (termino -> termino DIVIDE factor .)
    BOOL            reduce using rule 131 (termino -> termino DIVIDE factor .)
    WHILE           reduce using rule 131 (termino -> termino DIVIDE factor .)
    RBRACE          reduce using rule 131 (termino -> termino DIVIDE factor .)
    RETURN          reduce using rule 131 (termino -> termino DIVIDE factor .)
    RBRACKET        reduce using rule 131 (termino -> termino DIVIDE factor .)
    RPAREN          reduce using rule 131 (termino -> termino DIVIDE factor .)
    COMMA           reduce using rule 131 (termino -> termino DIVIDE factor .)


state 179

    (132) termino -> termino MODULO factor .

    TIMES           reduce using rule 132 (termino -> termino MODULO factor .)
    DIVIDE          reduce using rule 132 (termino -> termino MODULO factor .)
    MODULO          reduce using rule 132 (termino -> termino MODULO factor .)
    LT              reduce using rule 132 (termino -> termino MODULO factor .)
    GT              reduce using rule 132 (termino -> termino MODULO factor .)
    GE              reduce using rule 132 (termino -> termino MODULO factor .)
    LE              reduce using rule 132 (termino -> termino MODULO factor .)
    EQ              reduce using rule 132 (termino -> termino MODULO factor .)
    NE              reduce using rule 132 (termino -> termino MODULO factor .)
    PLUS            reduce using rule 132 (termino -> termino MODULO factor .)
    MINUS           reduce using rule 132 (termino -> termino MODULO factor .)
    AND             reduce using rule 132 (termino -> termino MODULO factor .)
    OR              reduce using rule 132 (termino -> termino MODULO factor .)
    VAR             reduce using rule 132 (termino -> termino MODULO factor .)
    PUBLIC          reduce using rule 132 (termino -> termino MODULO factor .)
    IF              reduce using rule 132 (termino -> termino MODULO factor .)
    PRIVATE         reduce using rule 132 (termino -> termino MODULO factor .)
    PROTECTED       reduce using rule 132 (termino -> termino MODULO factor .)
    ID              reduce using rule 132 (termino -> termino MODULO factor .)
    PRINT           reduce using rule 132 (termino -> termino MODULO factor .)
    READ            reduce using rule 132 (termino -> termino MODULO factor .)
    VOID            reduce using rule 132 (termino -> termino MODULO factor .)
    INT             reduce using rule 132 (termino -> termino MODULO factor .)
    FLOAT           reduce using rule 132 (termino -> termino MODULO factor .)
    CHAR            reduce using rule 132 (termino -> termino MODULO factor .)
    STRING          reduce using rule 132 (termino -> termino MODULO factor .)
    BOOL            reduce using rule 132 (termino -> termino MODULO factor .)
    WHILE           reduce using rule 132 (termino -> termino MODULO factor .)
    RBRACE          reduce using rule 132 (termino -> termino MODULO factor .)
    RETURN          reduce using rule 132 (termino -> termino MODULO factor .)
    RBRACKET        reduce using rule 132 (termino -> termino MODULO factor .)
    RPAREN          reduce using rule 132 (termino -> termino MODULO factor .)
    COMMA           reduce using rule 132 (termino -> termino MODULO factor .)


state 180

    (133) factor -> LPAREN exp_cond RPAREN .

    TIMES           reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    DIVIDE          reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    MODULO          reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    LT              reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    GT              reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    GE              reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    LE              reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    EQ              reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    NE              reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    PLUS            reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    MINUS           reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    AND             reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    OR              reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    VAR             reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    PUBLIC          reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    IF              reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    PRIVATE         reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    PROTECTED       reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    ID              reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    PRINT           reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    READ            reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    VOID            reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    INT             reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    FLOAT           reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    CHAR            reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    STRING          reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    BOOL            reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    WHILE           reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    RBRACE          reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    RETURN          reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    RBRACKET        reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    RPAREN          reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)
    COMMA           reduce using rule 133 (factor -> LPAREN exp_cond RPAREN .)


state 181

    (148) objeto_aAcceso -> ID PERIOD ID .

    TIMES           reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    DIVIDE          reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    MODULO          reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACKET        reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    PLUS            reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    MINUS           reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    LT              reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    GT              reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    GE              reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    LE              reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    EQ              reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    NE              reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    AND             reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    OR              reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    RPAREN          reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    COMMA           reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    VAR             reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    PUBLIC          reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    IF              reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    PRIVATE         reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    PROTECTED       reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    ID              reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    PRINT           reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    READ            reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    VOID            reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    INT             reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    FLOAT           reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    CHAR            reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    STRING          reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    BOOL            reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    WHILE           reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACE          reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)
    RETURN          reduce using rule 148 (objeto_aAcceso -> ID PERIOD ID .)


state 182

    (98) asignacion -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS exp_cond
    (99) asignacion -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    ID              shift and go to state 91
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    exp                            shift and go to state 202
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    llamada_func                   shift and go to state 73
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 183

    (94) asignacion -> ID LBRACKET exp RBRACKET EQUALS . exp_cond
    (95) asignacion -> ID LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (113) exp_cond -> . exp_bool
    (114) exp_cond -> . exp_bool AND exp_cond
    (115) exp_cond -> . exp_bool OR exp_cond
    (102) objeto_metodo -> . ID PERIOD llamada_func
    (116) exp_bool -> . TRUE
    (117) exp_bool -> . FALSE
    (118) exp_bool -> . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    ID              shift and go to state 69
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    exp                            shift and go to state 77
    exp_cond                       shift and go to state 203
    objeto_metodo                  shift and go to state 204
    exp_bool                       shift and go to state 72
    llamada_func                   shift and go to state 73
    expresion                      shift and go to state 76
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 184

    (26) constructor -> PUBLIC ID LPAREN param RPAREN . bloque
    (27) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 189

    bloque                         shift and go to state 205

state 185

    (53) param -> tipo_simple ID .
    (54) param -> tipo_simple ID . COMMA param

    RPAREN          reduce using rule 53 (param -> tipo_simple ID .)
    COMMA           shift and go to state 206


state 186

    (28) funcion -> scope type DEF id LPAREN . param aux_param RPAREN contexto_func
    (52) param -> .
    (53) param -> . tipo_simple ID
    (54) param -> . tipo_simple ID COMMA param
    (85) tipo_simple -> . INT
    (86) tipo_simple -> . FLOAT
    (87) tipo_simple -> . CHAR
    (88) tipo_simple -> . BOOL

    RPAREN          reduce using rule 52 (param -> .)
    INT             shift and go to state 119
    FLOAT           shift and go to state 120
    CHAR            shift and go to state 121
    BOOL            shift and go to state 122

    param                          shift and go to state 207
    tipo_simple                    shift and go to state 149

state 187

    (29) funcion -> scope VOID DEF id LPAREN . param aux_param RPAREN contexto_func
    (52) param -> .
    (53) param -> . tipo_simple ID
    (54) param -> . tipo_simple ID COMMA param
    (85) tipo_simple -> . INT
    (86) tipo_simple -> . FLOAT
    (87) tipo_simple -> . CHAR
    (88) tipo_simple -> . BOOL

    RPAREN          reduce using rule 52 (param -> .)
    INT             shift and go to state 119
    FLOAT           shift and go to state 120
    CHAR            shift and go to state 121
    BOOL            shift and go to state 122

    param                          shift and go to state 208
    tipo_simple                    shift and go to state 149

state 188

    (19) condicion -> IF LPAREN gotoF RPAREN bloque .
    (20) condicion -> IF LPAREN gotoF RPAREN bloque . elif
    (21) elif -> . aux_elif ELIF LPAREN gotoF RPAREN bloque
    (22) elif -> . aux_elif ELIF LPAREN gotoF RPAREN bloque elif
    (23) aux_elif -> .

    VAR             reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    PUBLIC          reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    IF              reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    PRIVATE         reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    PROTECTED       reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    ID              reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    PRINT           reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    READ            reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    VOID            reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    INT             reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    FLOAT           reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    CHAR            reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    STRING          reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    BOOL            reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    WHILE           reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    RBRACE          reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    RETURN          reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    ELIF            reduce using rule 23 (aux_elif -> .)

    elif                           shift and go to state 209
    aux_elif                       shift and go to state 210

state 189

    (27) bloque -> LBRACE . aux5 RBRACE
    (48) aux5 -> . estatuto
    (49) aux5 -> . RETURN exp_cond aux_return
    (50) aux5 -> . estatuto aux5
    (51) aux5 -> . RETURN exp_cond aux_return aux5
    (60) estatuto -> . asignacion
    (61) estatuto -> . escritura
    (62) estatuto -> . llamada_func
    (63) estatuto -> . objeto_metodo
    (64) estatuto -> . lectura
    (90) asignacion -> . ID EQUALS exp_cond
    (91) asignacion -> . ID EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (97) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (70) escritura -> . PRINT LPAREN aux3 RPAREN
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (102) objeto_metodo -> . ID PERIOD llamada_func
    (65) lectura -> . READ LPAREN aux4 RPAREN
    (148) objeto_aAcceso -> . ID PERIOD ID
    (104) llamada_id -> . ID

    RETURN          shift and go to state 213
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35

    aux5                           shift and go to state 211
    estatuto                       shift and go to state 212
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 190

    (24) ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN . bloque
    (27) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 189

    bloque                         shift and go to state 214

state 191

    (100) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET . exp RBRACKET EQUALS exp_cond
    (101) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET . exp RBRACKET EQUALS objeto_metodo
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    ID              shift and go to state 91
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    objeto_aAcceso                 shift and go to state 83
    exp                            shift and go to state 215
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    var                            shift and go to state 84
    llamada_func                   shift and go to state 73
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 192

    (96) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS . exp_cond
    (97) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (113) exp_cond -> . exp_bool
    (114) exp_cond -> . exp_bool AND exp_cond
    (115) exp_cond -> . exp_bool OR exp_cond
    (102) objeto_metodo -> . ID PERIOD llamada_func
    (116) exp_bool -> . TRUE
    (117) exp_bool -> . FALSE
    (118) exp_bool -> . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    ID              shift and go to state 69
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    objeto_aAcceso                 shift and go to state 83
    exp                            shift and go to state 77
    exp_cond                       shift and go to state 216
    objeto_metodo                  shift and go to state 217
    exp_bool                       shift and go to state 72
    llamada_func                   shift and go to state 73
    expresion                      shift and go to state 76
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    var                            shift and go to state 84
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 193

    (74) aux3 -> expresion COMMA aux3 .

    RPAREN          reduce using rule 74 (aux3 -> expresion COMMA aux3 .)


state 194

    (75) aux3 -> objeto_metodo COMMA aux3 .

    RPAREN          reduce using rule 75 (aux3 -> objeto_metodo COMMA aux3 .)


state 195

    (76) aux3 -> CSTRING COMMA aux3 .

    RPAREN          reduce using rule 76 (aux3 -> CSTRING COMMA aux3 .)


state 196

    (109) aux -> exp aux_exp aux_comma . aux
    (108) aux -> . exp aux_exp
    (109) aux -> . exp aux_exp aux_comma aux
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    ID              shift and go to state 91
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    exp                            shift and go to state 112
    aux                            shift and go to state 218
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    llamada_func                   shift and go to state 73
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 197

    (111) aux_comma -> COMMA .

    LPAREN          reduce using rule 111 (aux_comma -> COMMA .)
    PLUS            reduce using rule 111 (aux_comma -> COMMA .)
    MINUS           reduce using rule 111 (aux_comma -> COMMA .)
    ID              reduce using rule 111 (aux_comma -> COMMA .)
    CINT            reduce using rule 111 (aux_comma -> COMMA .)
    NUMBER          reduce using rule 111 (aux_comma -> COMMA .)
    CCHAR           reduce using rule 111 (aux_comma -> COMMA .)


state 198

    (68) aux4 -> ID COMMA aux4 .

    RPAREN          reduce using rule 68 (aux4 -> ID COMMA aux4 .)


state 199

    (69) aux4 -> objeto_aAcceso COMMA aux4 .

    RPAREN          reduce using rule 69 (aux4 -> objeto_aAcceso COMMA aux4 .)


state 200

    (81) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET . cint RBRACKET COLON tipo_simple
    (82) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET . cint RBRACKET COLON tipo_compuesto
    (145) cint -> . CINT

    CINT            shift and go to state 88

    cint                           shift and go to state 219

state 201

    (79) vars -> VAR ID LBRACKET cint RBRACKET COLON . tipo_simple
    (80) vars -> VAR ID LBRACKET cint RBRACKET COLON . tipo_compuesto
    (85) tipo_simple -> . INT
    (86) tipo_simple -> . FLOAT
    (87) tipo_simple -> . CHAR
    (88) tipo_simple -> . BOOL
    (89) tipo_compuesto -> . ID

    INT             shift and go to state 119
    FLOAT           shift and go to state 120
    CHAR            shift and go to state 121
    BOOL            shift and go to state 122
    ID              shift and go to state 123

    tipo_simple                    shift and go to state 220
    tipo_compuesto                 shift and go to state 221

state 202

    (98) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS exp_cond
    (99) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (127) exp -> exp . PLUS termino
    (128) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 222
    PLUS            shift and go to state 135
    MINUS           shift and go to state 136


state 203

    (94) asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .

    VAR             reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    PUBLIC          reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    IF              reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    PRIVATE         reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    PROTECTED       reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    ID              reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    PRINT           reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    READ            reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    VOID            reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    INT             reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    FLOAT           reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    CHAR            reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    STRING          reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    BOOL            reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    WHILE           reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    RBRACE          reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)
    RETURN          reduce using rule 94 (asignacion -> ID LBRACKET exp RBRACKET EQUALS exp_cond .)


state 204

    (95) asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    VOID            reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    INT             reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    FLOAT           reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    CHAR            reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    STRING          reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    BOOL            reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 95 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 205

    (26) constructor -> PUBLIC ID LPAREN param RPAREN bloque .

    VAR             reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PUBLIC          reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    IF              reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PRIVATE         reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PROTECTED       reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    ID              reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PRINT           reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    READ            reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    VOID            reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    INT             reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    FLOAT           reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    CHAR            reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    STRING          reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    BOOL            reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    WHILE           reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    RBRACE          reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)


state 206

    (54) param -> tipo_simple ID COMMA . param
    (52) param -> .
    (53) param -> . tipo_simple ID
    (54) param -> . tipo_simple ID COMMA param
    (85) tipo_simple -> . INT
    (86) tipo_simple -> . FLOAT
    (87) tipo_simple -> . CHAR
    (88) tipo_simple -> . BOOL

    RPAREN          reduce using rule 52 (param -> .)
    INT             shift and go to state 119
    FLOAT           shift and go to state 120
    CHAR            shift and go to state 121
    BOOL            shift and go to state 122

    tipo_simple                    shift and go to state 149
    param                          shift and go to state 223

state 207

    (28) funcion -> scope type DEF id LPAREN param . aux_param RPAREN contexto_func
    (55) aux_param -> .

    RPAREN          reduce using rule 55 (aux_param -> .)

    aux_param                      shift and go to state 224

state 208

    (29) funcion -> scope VOID DEF id LPAREN param . aux_param RPAREN contexto_func
    (55) aux_param -> .

    RPAREN          reduce using rule 55 (aux_param -> .)

    aux_param                      shift and go to state 225

state 209

    (20) condicion -> IF LPAREN gotoF RPAREN bloque elif .

    VAR             reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    PUBLIC          reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    IF              reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    PRIVATE         reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    PROTECTED       reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    ID              reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    PRINT           reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    READ            reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    VOID            reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    INT             reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    FLOAT           reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    CHAR            reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    STRING          reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    BOOL            reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    WHILE           reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    RBRACE          reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    RETURN          reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)


state 210

    (21) elif -> aux_elif . ELIF LPAREN gotoF RPAREN bloque
    (22) elif -> aux_elif . ELIF LPAREN gotoF RPAREN bloque elif

    ELIF            shift and go to state 226


state 211

    (27) bloque -> LBRACE aux5 . RBRACE

    RBRACE          shift and go to state 227


state 212

    (48) aux5 -> estatuto .
    (50) aux5 -> estatuto . aux5
    (48) aux5 -> . estatuto
    (49) aux5 -> . RETURN exp_cond aux_return
    (50) aux5 -> . estatuto aux5
    (51) aux5 -> . RETURN exp_cond aux_return aux5
    (60) estatuto -> . asignacion
    (61) estatuto -> . escritura
    (62) estatuto -> . llamada_func
    (63) estatuto -> . objeto_metodo
    (64) estatuto -> . lectura
    (90) asignacion -> . ID EQUALS exp_cond
    (91) asignacion -> . ID EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (97) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (70) escritura -> . PRINT LPAREN aux3 RPAREN
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (102) objeto_metodo -> . ID PERIOD llamada_func
    (65) lectura -> . READ LPAREN aux4 RPAREN
    (148) objeto_aAcceso -> . ID PERIOD ID
    (104) llamada_id -> . ID

    RBRACE          reduce using rule 48 (aux5 -> estatuto .)
    RETURN          shift and go to state 213
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35

    estatuto                       shift and go to state 212
    aux5                           shift and go to state 228
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 213

    (49) aux5 -> RETURN . exp_cond aux_return
    (51) aux5 -> RETURN . exp_cond aux_return aux5
    (113) exp_cond -> . exp_bool
    (114) exp_cond -> . exp_bool AND exp_cond
    (115) exp_cond -> . exp_bool OR exp_cond
    (116) exp_bool -> . TRUE
    (117) exp_bool -> . FALSE
    (118) exp_bool -> . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    ID              shift and go to state 91
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    exp_cond                       shift and go to state 229
    exp_bool                       shift and go to state 72
    expresion                      shift and go to state 76
    exp                            shift and go to state 77
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    llamada_func                   shift and go to state 73
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 214

    (24) ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .

    VAR             reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    PUBLIC          reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    IF              reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    PRIVATE         reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    PROTECTED       reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    ID              reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    PRINT           reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    READ            reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    VOID            reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    INT             reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    FLOAT           reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    CHAR            reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    STRING          reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    BOOL            reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    WHILE           reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    RBRACE          reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    RETURN          reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)


state 215

    (100) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp . RBRACKET EQUALS exp_cond
    (101) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp . RBRACKET EQUALS objeto_metodo
    (127) exp -> exp . PLUS termino
    (128) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 230
    PLUS            shift and go to state 135
    MINUS           shift and go to state 136


state 216

    (96) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .

    VAR             reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    PUBLIC          reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    IF              reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    PRIVATE         reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    PROTECTED       reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    ID              reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    PRINT           reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    READ            reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    VOID            reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    INT             reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    FLOAT           reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    CHAR            reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    STRING          reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    BOOL            reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    WHILE           reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    RBRACE          reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)
    RETURN          reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond .)


state 217

    (97) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 97 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 97 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 97 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 97 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 97 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 97 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 97 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 97 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    VOID            reduce using rule 97 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    INT             reduce using rule 97 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    FLOAT           reduce using rule 97 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    CHAR            reduce using rule 97 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    STRING          reduce using rule 97 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    BOOL            reduce using rule 97 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 97 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 97 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 97 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 218

    (109) aux -> exp aux_exp aux_comma aux .

    RPAREN          reduce using rule 109 (aux -> exp aux_exp aux_comma aux .)


state 219

    (81) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint . RBRACKET COLON tipo_simple
    (82) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint . RBRACKET COLON tipo_compuesto

    RBRACKET        shift and go to state 231


state 220

    (79) vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .

    VAR             reduce using rule 79 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PUBLIC          reduce using rule 79 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    IF              reduce using rule 79 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PRIVATE         reduce using rule 79 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PROTECTED       reduce using rule 79 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    ID              reduce using rule 79 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PRINT           reduce using rule 79 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    READ            reduce using rule 79 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    VOID            reduce using rule 79 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    INT             reduce using rule 79 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    FLOAT           reduce using rule 79 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    CHAR            reduce using rule 79 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    STRING          reduce using rule 79 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    BOOL            reduce using rule 79 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    WHILE           reduce using rule 79 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    RBRACE          reduce using rule 79 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    RETURN          reduce using rule 79 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)


state 221

    (80) vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .

    VAR             reduce using rule 80 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PUBLIC          reduce using rule 80 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    IF              reduce using rule 80 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRIVATE         reduce using rule 80 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PROTECTED       reduce using rule 80 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    ID              reduce using rule 80 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRINT           reduce using rule 80 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    READ            reduce using rule 80 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    VOID            reduce using rule 80 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    INT             reduce using rule 80 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    FLOAT           reduce using rule 80 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    CHAR            reduce using rule 80 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    STRING          reduce using rule 80 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    BOOL            reduce using rule 80 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    WHILE           reduce using rule 80 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RBRACE          reduce using rule 80 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RETURN          reduce using rule 80 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)


state 222

    (98) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS exp_cond
    (99) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS objeto_metodo

    EQUALS          shift and go to state 232


state 223

    (54) param -> tipo_simple ID COMMA param .

    RPAREN          reduce using rule 54 (param -> tipo_simple ID COMMA param .)


state 224

    (28) funcion -> scope type DEF id LPAREN param aux_param . RPAREN contexto_func

    RPAREN          shift and go to state 233


state 225

    (29) funcion -> scope VOID DEF id LPAREN param aux_param . RPAREN contexto_func

    RPAREN          shift and go to state 234


state 226

    (21) elif -> aux_elif ELIF . LPAREN gotoF RPAREN bloque
    (22) elif -> aux_elif ELIF . LPAREN gotoF RPAREN bloque elif

    LPAREN          shift and go to state 235


state 227

    (27) bloque -> LBRACE aux5 RBRACE .

    ELIF            reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    VAR             reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    PUBLIC          reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    IF              reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    PRIVATE         reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    PROTECTED       reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    ID              reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    PRINT           reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    READ            reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    VOID            reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    INT             reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    FLOAT           reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    CHAR            reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    STRING          reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    BOOL            reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    WHILE           reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    RBRACE          reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    RETURN          reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)


state 228

    (50) aux5 -> estatuto aux5 .

    RBRACE          reduce using rule 50 (aux5 -> estatuto aux5 .)


state 229

    (49) aux5 -> RETURN exp_cond . aux_return
    (51) aux5 -> RETURN exp_cond . aux_return aux5
    (47) aux_return -> .

    RETURN          reduce using rule 47 (aux_return -> .)
    ID              reduce using rule 47 (aux_return -> .)
    PRINT           reduce using rule 47 (aux_return -> .)
    READ            reduce using rule 47 (aux_return -> .)
    RBRACE          reduce using rule 47 (aux_return -> .)

    aux_return                     shift and go to state 236

state 230

    (100) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET . EQUALS exp_cond
    (101) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET . EQUALS objeto_metodo

    EQUALS          shift and go to state 237


state 231

    (81) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET . COLON tipo_simple
    (82) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET . COLON tipo_compuesto

    COLON           shift and go to state 238


state 232

    (98) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . exp_cond
    (99) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (113) exp_cond -> . exp_bool
    (114) exp_cond -> . exp_bool AND exp_cond
    (115) exp_cond -> . exp_bool OR exp_cond
    (102) objeto_metodo -> . ID PERIOD llamada_func
    (116) exp_bool -> . TRUE
    (117) exp_bool -> . FALSE
    (118) exp_bool -> . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    ID              shift and go to state 69
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    exp                            shift and go to state 77
    exp_cond                       shift and go to state 239
    objeto_metodo                  shift and go to state 240
    exp_bool                       shift and go to state 72
    llamada_func                   shift and go to state 73
    expresion                      shift and go to state 76
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 233

    (28) funcion -> scope type DEF id LPAREN param aux_param RPAREN . contexto_func
    (36) contexto_func -> . LBRACE aux_contexto_func RBRACE

    LBRACE          shift and go to state 242

    contexto_func                  shift and go to state 241

state 234

    (29) funcion -> scope VOID DEF id LPAREN param aux_param RPAREN . contexto_func
    (36) contexto_func -> . LBRACE aux_contexto_func RBRACE

    LBRACE          shift and go to state 242

    contexto_func                  shift and go to state 243

state 235

    (21) elif -> aux_elif ELIF LPAREN . gotoF RPAREN bloque
    (22) elif -> aux_elif ELIF LPAREN . gotoF RPAREN bloque elif
    (112) gotoF -> . exp_cond
    (113) exp_cond -> . exp_bool
    (114) exp_cond -> . exp_bool AND exp_cond
    (115) exp_cond -> . exp_bool OR exp_cond
    (116) exp_bool -> . TRUE
    (117) exp_bool -> . FALSE
    (118) exp_bool -> . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    ID              shift and go to state 91
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    gotoF                          shift and go to state 244
    exp_cond                       shift and go to state 99
    exp_bool                       shift and go to state 72
    expresion                      shift and go to state 76
    exp                            shift and go to state 77
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    llamada_func                   shift and go to state 73
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 236

    (49) aux5 -> RETURN exp_cond aux_return .
    (51) aux5 -> RETURN exp_cond aux_return . aux5
    (48) aux5 -> . estatuto
    (49) aux5 -> . RETURN exp_cond aux_return
    (50) aux5 -> . estatuto aux5
    (51) aux5 -> . RETURN exp_cond aux_return aux5
    (60) estatuto -> . asignacion
    (61) estatuto -> . escritura
    (62) estatuto -> . llamada_func
    (63) estatuto -> . objeto_metodo
    (64) estatuto -> . lectura
    (90) asignacion -> . ID EQUALS exp_cond
    (91) asignacion -> . ID EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (97) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (70) escritura -> . PRINT LPAREN aux3 RPAREN
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (102) objeto_metodo -> . ID PERIOD llamada_func
    (65) lectura -> . READ LPAREN aux4 RPAREN
    (148) objeto_aAcceso -> . ID PERIOD ID
    (104) llamada_id -> . ID

    RBRACE          reduce using rule 49 (aux5 -> RETURN exp_cond aux_return .)
    RETURN          shift and go to state 213
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35

    aux5                           shift and go to state 245
    estatuto                       shift and go to state 212
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 237

    (100) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS . exp_cond
    (101) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS . objeto_metodo
    (113) exp_cond -> . exp_bool
    (114) exp_cond -> . exp_bool AND exp_cond
    (115) exp_cond -> . exp_bool OR exp_cond
    (102) objeto_metodo -> . ID PERIOD llamada_func
    (116) exp_bool -> . TRUE
    (117) exp_bool -> . FALSE
    (118) exp_bool -> . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    ID              shift and go to state 69
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    objeto_aAcceso                 shift and go to state 83
    exp                            shift and go to state 77
    exp_cond                       shift and go to state 246
    objeto_metodo                  shift and go to state 247
    exp_bool                       shift and go to state 72
    llamada_func                   shift and go to state 73
    expresion                      shift and go to state 76
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    var                            shift and go to state 84
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 238

    (81) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON . tipo_simple
    (82) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON . tipo_compuesto
    (85) tipo_simple -> . INT
    (86) tipo_simple -> . FLOAT
    (87) tipo_simple -> . CHAR
    (88) tipo_simple -> . BOOL
    (89) tipo_compuesto -> . ID

    INT             shift and go to state 119
    FLOAT           shift and go to state 120
    CHAR            shift and go to state 121
    BOOL            shift and go to state 122
    ID              shift and go to state 123

    tipo_simple                    shift and go to state 248
    tipo_compuesto                 shift and go to state 249

state 239

    (98) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .

    VAR             reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    PUBLIC          reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    IF              reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    PRIVATE         reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    PROTECTED       reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    ID              reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    PRINT           reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    READ            reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    VOID            reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    INT             reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    FLOAT           reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    CHAR            reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    STRING          reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    BOOL            reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    WHILE           reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    RBRACE          reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)
    RETURN          reduce using rule 98 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond .)


state 240

    (99) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    VOID            reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    INT             reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    FLOAT           reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    CHAR            reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    STRING          reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    BOOL            reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 99 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 241

    (28) funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .

    VAR             reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    PUBLIC          reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    IF              reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    PRIVATE         reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    PROTECTED       reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    ID              reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    PRINT           reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    READ            reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    VOID            reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    INT             reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    FLOAT           reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    CHAR            reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    STRING          reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    BOOL            reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    WHILE           reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    RBRACE          reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)


state 242

    (36) contexto_func -> LBRACE . aux_contexto_func RBRACE
    (37) aux_contexto_func -> . vars
    (38) aux_contexto_func -> . estatuto
    (39) aux_contexto_func -> . ciclo
    (40) aux_contexto_func -> . condicion
    (41) aux_contexto_func -> . RETURN exp_cond aux_return
    (42) aux_contexto_func -> . vars aux_contexto_func
    (43) aux_contexto_func -> . estatuto aux_contexto_func
    (44) aux_contexto_func -> . ciclo aux_contexto_func
    (45) aux_contexto_func -> . condicion aux_contexto_func
    (46) aux_contexto_func -> . RETURN exp_cond aux_return aux_contexto_func
    (77) vars -> . VAR aux2 COLON tipo_simple
    (78) vars -> . VAR aux2 COLON tipo_compuesto
    (79) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (80) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (81) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (82) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (60) estatuto -> . asignacion
    (61) estatuto -> . escritura
    (62) estatuto -> . llamada_func
    (63) estatuto -> . objeto_metodo
    (64) estatuto -> . lectura
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque
    (20) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (90) asignacion -> . ID EQUALS exp_cond
    (91) asignacion -> . ID EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (97) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (70) escritura -> . PRINT LPAREN aux3 RPAREN
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (102) objeto_metodo -> . ID PERIOD llamada_func
    (65) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (148) objeto_aAcceso -> . ID PERIOD ID
    (104) llamada_id -> . ID

    RETURN          shift and go to state 255
    VAR             shift and go to state 21
    IF              shift and go to state 30
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    aux_contexto_func              shift and go to state 250
    vars                           shift and go to state 251
    estatuto                       shift and go to state 252
    ciclo                          shift and go to state 253
    condicion                      shift and go to state 254
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 243

    (29) funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .

    VAR             reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    PUBLIC          reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    IF              reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    PRIVATE         reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    PROTECTED       reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    ID              reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    PRINT           reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    READ            reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    VOID            reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    INT             reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    FLOAT           reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    CHAR            reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    STRING          reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    BOOL            reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    WHILE           reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    RBRACE          reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)


state 244

    (21) elif -> aux_elif ELIF LPAREN gotoF . RPAREN bloque
    (22) elif -> aux_elif ELIF LPAREN gotoF . RPAREN bloque elif

    RPAREN          shift and go to state 256


state 245

    (51) aux5 -> RETURN exp_cond aux_return aux5 .

    RBRACE          reduce using rule 51 (aux5 -> RETURN exp_cond aux_return aux5 .)


state 246

    (100) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond .

    VAR             reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond .)
    PUBLIC          reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond .)
    IF              reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond .)
    PRIVATE         reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond .)
    PROTECTED       reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond .)
    ID              reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond .)
    PRINT           reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond .)
    READ            reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond .)
    VOID            reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond .)
    INT             reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond .)
    FLOAT           reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond .)
    CHAR            reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond .)
    STRING          reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond .)
    BOOL            reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond .)
    WHILE           reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond .)
    RBRACE          reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond .)
    RETURN          reduce using rule 100 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond .)


state 247

    (101) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    VOID            reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    INT             reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    FLOAT           reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    CHAR            reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    STRING          reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    BOOL            reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 101 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 248

    (81) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .

    VAR             reduce using rule 81 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PUBLIC          reduce using rule 81 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    IF              reduce using rule 81 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PRIVATE         reduce using rule 81 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PROTECTED       reduce using rule 81 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    ID              reduce using rule 81 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PRINT           reduce using rule 81 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    READ            reduce using rule 81 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    VOID            reduce using rule 81 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    INT             reduce using rule 81 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    FLOAT           reduce using rule 81 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    CHAR            reduce using rule 81 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    STRING          reduce using rule 81 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    BOOL            reduce using rule 81 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    WHILE           reduce using rule 81 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    RBRACE          reduce using rule 81 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    RETURN          reduce using rule 81 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)


state 249

    (82) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .

    VAR             reduce using rule 82 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PUBLIC          reduce using rule 82 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    IF              reduce using rule 82 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRIVATE         reduce using rule 82 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PROTECTED       reduce using rule 82 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    ID              reduce using rule 82 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRINT           reduce using rule 82 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    READ            reduce using rule 82 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    VOID            reduce using rule 82 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    INT             reduce using rule 82 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    FLOAT           reduce using rule 82 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    CHAR            reduce using rule 82 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    STRING          reduce using rule 82 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    BOOL            reduce using rule 82 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    WHILE           reduce using rule 82 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RBRACE          reduce using rule 82 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RETURN          reduce using rule 82 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)


state 250

    (36) contexto_func -> LBRACE aux_contexto_func . RBRACE

    RBRACE          shift and go to state 257


state 251

    (37) aux_contexto_func -> vars .
    (42) aux_contexto_func -> vars . aux_contexto_func
    (37) aux_contexto_func -> . vars
    (38) aux_contexto_func -> . estatuto
    (39) aux_contexto_func -> . ciclo
    (40) aux_contexto_func -> . condicion
    (41) aux_contexto_func -> . RETURN exp_cond aux_return
    (42) aux_contexto_func -> . vars aux_contexto_func
    (43) aux_contexto_func -> . estatuto aux_contexto_func
    (44) aux_contexto_func -> . ciclo aux_contexto_func
    (45) aux_contexto_func -> . condicion aux_contexto_func
    (46) aux_contexto_func -> . RETURN exp_cond aux_return aux_contexto_func
    (77) vars -> . VAR aux2 COLON tipo_simple
    (78) vars -> . VAR aux2 COLON tipo_compuesto
    (79) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (80) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (81) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (82) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (60) estatuto -> . asignacion
    (61) estatuto -> . escritura
    (62) estatuto -> . llamada_func
    (63) estatuto -> . objeto_metodo
    (64) estatuto -> . lectura
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque
    (20) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (90) asignacion -> . ID EQUALS exp_cond
    (91) asignacion -> . ID EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (97) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (70) escritura -> . PRINT LPAREN aux3 RPAREN
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (102) objeto_metodo -> . ID PERIOD llamada_func
    (65) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (148) objeto_aAcceso -> . ID PERIOD ID
    (104) llamada_id -> . ID

    RBRACE          reduce using rule 37 (aux_contexto_func -> vars .)
    RETURN          shift and go to state 255
    VAR             shift and go to state 21
    IF              shift and go to state 30
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    vars                           shift and go to state 251
    aux_contexto_func              shift and go to state 258
    estatuto                       shift and go to state 252
    ciclo                          shift and go to state 253
    condicion                      shift and go to state 254
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 252

    (38) aux_contexto_func -> estatuto .
    (43) aux_contexto_func -> estatuto . aux_contexto_func
    (37) aux_contexto_func -> . vars
    (38) aux_contexto_func -> . estatuto
    (39) aux_contexto_func -> . ciclo
    (40) aux_contexto_func -> . condicion
    (41) aux_contexto_func -> . RETURN exp_cond aux_return
    (42) aux_contexto_func -> . vars aux_contexto_func
    (43) aux_contexto_func -> . estatuto aux_contexto_func
    (44) aux_contexto_func -> . ciclo aux_contexto_func
    (45) aux_contexto_func -> . condicion aux_contexto_func
    (46) aux_contexto_func -> . RETURN exp_cond aux_return aux_contexto_func
    (77) vars -> . VAR aux2 COLON tipo_simple
    (78) vars -> . VAR aux2 COLON tipo_compuesto
    (79) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (80) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (81) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (82) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (60) estatuto -> . asignacion
    (61) estatuto -> . escritura
    (62) estatuto -> . llamada_func
    (63) estatuto -> . objeto_metodo
    (64) estatuto -> . lectura
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque
    (20) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (90) asignacion -> . ID EQUALS exp_cond
    (91) asignacion -> . ID EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (97) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (70) escritura -> . PRINT LPAREN aux3 RPAREN
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (102) objeto_metodo -> . ID PERIOD llamada_func
    (65) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (148) objeto_aAcceso -> . ID PERIOD ID
    (104) llamada_id -> . ID

    RBRACE          reduce using rule 38 (aux_contexto_func -> estatuto .)
    RETURN          shift and go to state 255
    VAR             shift and go to state 21
    IF              shift and go to state 30
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    estatuto                       shift and go to state 252
    aux_contexto_func              shift and go to state 259
    vars                           shift and go to state 251
    ciclo                          shift and go to state 253
    condicion                      shift and go to state 254
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 253

    (39) aux_contexto_func -> ciclo .
    (44) aux_contexto_func -> ciclo . aux_contexto_func
    (37) aux_contexto_func -> . vars
    (38) aux_contexto_func -> . estatuto
    (39) aux_contexto_func -> . ciclo
    (40) aux_contexto_func -> . condicion
    (41) aux_contexto_func -> . RETURN exp_cond aux_return
    (42) aux_contexto_func -> . vars aux_contexto_func
    (43) aux_contexto_func -> . estatuto aux_contexto_func
    (44) aux_contexto_func -> . ciclo aux_contexto_func
    (45) aux_contexto_func -> . condicion aux_contexto_func
    (46) aux_contexto_func -> . RETURN exp_cond aux_return aux_contexto_func
    (77) vars -> . VAR aux2 COLON tipo_simple
    (78) vars -> . VAR aux2 COLON tipo_compuesto
    (79) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (80) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (81) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (82) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (60) estatuto -> . asignacion
    (61) estatuto -> . escritura
    (62) estatuto -> . llamada_func
    (63) estatuto -> . objeto_metodo
    (64) estatuto -> . lectura
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque
    (20) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (90) asignacion -> . ID EQUALS exp_cond
    (91) asignacion -> . ID EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (97) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (70) escritura -> . PRINT LPAREN aux3 RPAREN
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (102) objeto_metodo -> . ID PERIOD llamada_func
    (65) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (148) objeto_aAcceso -> . ID PERIOD ID
    (104) llamada_id -> . ID

    RBRACE          reduce using rule 39 (aux_contexto_func -> ciclo .)
    RETURN          shift and go to state 255
    VAR             shift and go to state 21
    IF              shift and go to state 30
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    ciclo                          shift and go to state 253
    aux_contexto_func              shift and go to state 260
    vars                           shift and go to state 251
    estatuto                       shift and go to state 252
    condicion                      shift and go to state 254
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 254

    (40) aux_contexto_func -> condicion .
    (45) aux_contexto_func -> condicion . aux_contexto_func
    (37) aux_contexto_func -> . vars
    (38) aux_contexto_func -> . estatuto
    (39) aux_contexto_func -> . ciclo
    (40) aux_contexto_func -> . condicion
    (41) aux_contexto_func -> . RETURN exp_cond aux_return
    (42) aux_contexto_func -> . vars aux_contexto_func
    (43) aux_contexto_func -> . estatuto aux_contexto_func
    (44) aux_contexto_func -> . ciclo aux_contexto_func
    (45) aux_contexto_func -> . condicion aux_contexto_func
    (46) aux_contexto_func -> . RETURN exp_cond aux_return aux_contexto_func
    (77) vars -> . VAR aux2 COLON tipo_simple
    (78) vars -> . VAR aux2 COLON tipo_compuesto
    (79) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (80) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (81) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (82) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (60) estatuto -> . asignacion
    (61) estatuto -> . escritura
    (62) estatuto -> . llamada_func
    (63) estatuto -> . objeto_metodo
    (64) estatuto -> . lectura
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque
    (20) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (90) asignacion -> . ID EQUALS exp_cond
    (91) asignacion -> . ID EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (97) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (70) escritura -> . PRINT LPAREN aux3 RPAREN
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (102) objeto_metodo -> . ID PERIOD llamada_func
    (65) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (148) objeto_aAcceso -> . ID PERIOD ID
    (104) llamada_id -> . ID

    RBRACE          reduce using rule 40 (aux_contexto_func -> condicion .)
    RETURN          shift and go to state 255
    VAR             shift and go to state 21
    IF              shift and go to state 30
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    condicion                      shift and go to state 254
    aux_contexto_func              shift and go to state 261
    vars                           shift and go to state 251
    estatuto                       shift and go to state 252
    ciclo                          shift and go to state 253
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 255

    (41) aux_contexto_func -> RETURN . exp_cond aux_return
    (46) aux_contexto_func -> RETURN . exp_cond aux_return aux_contexto_func
    (113) exp_cond -> . exp_bool
    (114) exp_cond -> . exp_bool AND exp_cond
    (115) exp_cond -> . exp_bool OR exp_cond
    (116) exp_bool -> . TRUE
    (117) exp_bool -> . FALSE
    (118) exp_bool -> . expresion
    (119) expresion -> . exp
    (120) expresion -> . exp LT expresion
    (121) expresion -> . exp GT expresion
    (122) expresion -> . exp GE expresion
    (123) expresion -> . exp LE expresion
    (124) expresion -> . exp EQ expresion
    (125) expresion -> . exp NE expresion
    (126) exp -> . termino
    (127) exp -> . exp PLUS termino
    (128) exp -> . exp MINUS termino
    (129) termino -> . factor
    (130) termino -> . termino TIMES factor
    (131) termino -> . termino DIVIDE factor
    (132) termino -> . termino MODULO factor
    (133) factor -> . LPAREN exp_cond RPAREN
    (134) factor -> . PLUS objeto_aAcceso
    (135) factor -> . MINUS objeto_aAcceso
    (136) factor -> . PLUS var
    (137) factor -> . MINUS var
    (138) factor -> . var
    (139) factor -> . objeto_aAcceso
    (140) factor -> . llamada_func
    (141) var -> . ID
    (142) var -> . cint
    (143) var -> . cfloat
    (144) var -> . cchar
    (148) objeto_aAcceso -> . ID PERIOD ID
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (145) cint -> . CINT
    (146) cfloat -> . NUMBER
    (147) cchar -> . CCHAR
    (104) llamada_id -> . ID

    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    LPAREN          shift and go to state 82
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    ID              shift and go to state 91
    CINT            shift and go to state 88
    NUMBER          shift and go to state 89
    CCHAR           shift and go to state 90

    exp_cond                       shift and go to state 262
    exp_bool                       shift and go to state 72
    expresion                      shift and go to state 76
    exp                            shift and go to state 77
    termino                        shift and go to state 78
    factor                         shift and go to state 81
    objeto_aAcceso                 shift and go to state 83
    var                            shift and go to state 84
    llamada_func                   shift and go to state 73
    cint                           shift and go to state 85
    cfloat                         shift and go to state 86
    cchar                          shift and go to state 87
    llamada_id                     shift and go to state 34

state 256

    (21) elif -> aux_elif ELIF LPAREN gotoF RPAREN . bloque
    (22) elif -> aux_elif ELIF LPAREN gotoF RPAREN . bloque elif
    (27) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 189

    bloque                         shift and go to state 263

state 257

    (36) contexto_func -> LBRACE aux_contexto_func RBRACE .

    VAR             reduce using rule 36 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    PUBLIC          reduce using rule 36 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    IF              reduce using rule 36 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    PRIVATE         reduce using rule 36 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    PROTECTED       reduce using rule 36 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    ID              reduce using rule 36 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    PRINT           reduce using rule 36 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    READ            reduce using rule 36 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    VOID            reduce using rule 36 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    INT             reduce using rule 36 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    FLOAT           reduce using rule 36 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    CHAR            reduce using rule 36 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    STRING          reduce using rule 36 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    BOOL            reduce using rule 36 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    WHILE           reduce using rule 36 (contexto_func -> LBRACE aux_contexto_func RBRACE .)
    RBRACE          reduce using rule 36 (contexto_func -> LBRACE aux_contexto_func RBRACE .)


state 258

    (42) aux_contexto_func -> vars aux_contexto_func .

    RBRACE          reduce using rule 42 (aux_contexto_func -> vars aux_contexto_func .)


state 259

    (43) aux_contexto_func -> estatuto aux_contexto_func .

    RBRACE          reduce using rule 43 (aux_contexto_func -> estatuto aux_contexto_func .)


state 260

    (44) aux_contexto_func -> ciclo aux_contexto_func .

    RBRACE          reduce using rule 44 (aux_contexto_func -> ciclo aux_contexto_func .)


state 261

    (45) aux_contexto_func -> condicion aux_contexto_func .

    RBRACE          reduce using rule 45 (aux_contexto_func -> condicion aux_contexto_func .)


state 262

    (41) aux_contexto_func -> RETURN exp_cond . aux_return
    (46) aux_contexto_func -> RETURN exp_cond . aux_return aux_contexto_func
    (47) aux_return -> .

    RETURN          reduce using rule 47 (aux_return -> .)
    VAR             reduce using rule 47 (aux_return -> .)
    IF              reduce using rule 47 (aux_return -> .)
    ID              reduce using rule 47 (aux_return -> .)
    PRINT           reduce using rule 47 (aux_return -> .)
    READ            reduce using rule 47 (aux_return -> .)
    WHILE           reduce using rule 47 (aux_return -> .)
    RBRACE          reduce using rule 47 (aux_return -> .)

    aux_return                     shift and go to state 264

state 263

    (21) elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .
    (22) elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque . elif
    (21) elif -> . aux_elif ELIF LPAREN gotoF RPAREN bloque
    (22) elif -> . aux_elif ELIF LPAREN gotoF RPAREN bloque elif
    (23) aux_elif -> .

    VAR             reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    PUBLIC          reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    IF              reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    PRIVATE         reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    PROTECTED       reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    ID              reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    PRINT           reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    READ            reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    VOID            reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    INT             reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    FLOAT           reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    CHAR            reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    STRING          reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    BOOL            reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    WHILE           reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    RBRACE          reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    RETURN          reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    ELIF            reduce using rule 23 (aux_elif -> .)

    aux_elif                       shift and go to state 210
    elif                           shift and go to state 265

state 264

    (41) aux_contexto_func -> RETURN exp_cond aux_return .
    (46) aux_contexto_func -> RETURN exp_cond aux_return . aux_contexto_func
    (37) aux_contexto_func -> . vars
    (38) aux_contexto_func -> . estatuto
    (39) aux_contexto_func -> . ciclo
    (40) aux_contexto_func -> . condicion
    (41) aux_contexto_func -> . RETURN exp_cond aux_return
    (42) aux_contexto_func -> . vars aux_contexto_func
    (43) aux_contexto_func -> . estatuto aux_contexto_func
    (44) aux_contexto_func -> . ciclo aux_contexto_func
    (45) aux_contexto_func -> . condicion aux_contexto_func
    (46) aux_contexto_func -> . RETURN exp_cond aux_return aux_contexto_func
    (77) vars -> . VAR aux2 COLON tipo_simple
    (78) vars -> . VAR aux2 COLON tipo_compuesto
    (79) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (80) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (81) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (82) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (60) estatuto -> . asignacion
    (61) estatuto -> . escritura
    (62) estatuto -> . llamada_func
    (63) estatuto -> . objeto_metodo
    (64) estatuto -> . lectura
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque
    (20) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (90) asignacion -> . ID EQUALS exp_cond
    (91) asignacion -> . ID EQUALS objeto_metodo
    (92) asignacion -> . objeto_aAcceso EQUALS exp_cond
    (93) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (94) asignacion -> . ID LBRACKET exp RBRACKET EQUALS exp_cond
    (95) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (96) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS exp_cond
    (97) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (98) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS exp_cond
    (99) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (100) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS exp_cond
    (101) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (70) escritura -> . PRINT LPAREN aux3 RPAREN
    (103) llamada_func -> . llamada_id llamada_lparen llamada_rparen
    (102) objeto_metodo -> . ID PERIOD llamada_func
    (65) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (148) objeto_aAcceso -> . ID PERIOD ID
    (104) llamada_id -> . ID

    RBRACE          reduce using rule 41 (aux_contexto_func -> RETURN exp_cond aux_return .)
    RETURN          shift and go to state 255
    VAR             shift and go to state 21
    IF              shift and go to state 30
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 35
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    aux_contexto_func              shift and go to state 266
    vars                           shift and go to state 251
    estatuto                       shift and go to state 252
    ciclo                          shift and go to state 253
    condicion                      shift and go to state 254
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32
    llamada_id                     shift and go to state 34

state 265

    (22) elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .

    VAR             reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    PUBLIC          reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    IF              reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    PRIVATE         reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    PROTECTED       reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    ID              reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    PRINT           reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    READ            reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    VOID            reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    INT             reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    FLOAT           reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    CHAR            reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    STRING          reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    BOOL            reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    WHILE           reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    RBRACE          reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    RETURN          reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)


state 266

    (46) aux_contexto_func -> RETURN exp_cond aux_return aux_contexto_func .

    RBRACE          reduce using rule 46 (aux_contexto_func -> RETURN exp_cond aux_return aux_contexto_func .)

