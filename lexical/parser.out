Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID class context
Rule 2     programa -> PROGRAM ID context
Rule 3     class -> scope CLASS ID
Rule 4     class -> scope CLASS ID COLON ID
Rule 5     context -> LBRACE aux6 RBRACE
Rule 6     aux6 -> vars
Rule 7     aux6 -> constructor
Rule 8     aux6 -> funcion
Rule 9     aux6 -> estatuto
Rule 10    aux6 -> condicion
Rule 11    aux6 -> ciclo
Rule 12    aux6 -> vars aux6
Rule 13    aux6 -> constructor aux6
Rule 14    aux6 -> funcion aux6
Rule 15    aux6 -> estatuto aux6
Rule 16    aux6 -> condicion aux6
Rule 17    aux6 -> ciclo aux6
Rule 18    condicion -> IF LPAREN expresion RPAREN bloque_cond
Rule 19    condicion -> IF LPAREN expresion RPAREN bloque_cond elif
Rule 20    condicion -> IF LPAREN expresion RPAREN bloque_cond elif else
Rule 21    elif -> <empty>
Rule 22    elif -> ELIF LPAREN expresion RPAREN bloque_cond elif
Rule 23    else -> ELSE bloque_cond
Rule 24    bloque_cond -> LBRACE aux5_cond RBRACE
Rule 25    aux5_cond -> vars
Rule 26    aux5_cond -> estatuto
Rule 27    aux5_cond -> vars aux5_cond
Rule 28    aux5_cond -> estatuto aux5_cond
Rule 29    ciclo -> WHILE LPAREN expresion RPAREN bloque
Rule 30    constructor -> PUBLIC ID LPAREN param RPAREN bloque
Rule 31    bloque -> LBRACE aux5 RBRACE
Rule 32    funcion -> scope DEF ID LPAREN param RPAREN contexto_func
Rule 33    contexto_func -> LBRACE aux5 RBRACE
Rule 34    contexto_func -> LBRACE aux5 RETURN INT ID RBRACE
Rule 35    contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE
Rule 36    aux5 -> vars
Rule 37    aux5 -> estatuto
Rule 38    aux5 -> vars aux5
Rule 39    aux5 -> estatuto aux5
Rule 40    param -> <empty>
Rule 41    param -> tipo_simple ID
Rule 42    param -> tipo_simple ID COMMA param
Rule 43    scope -> PRIVATE
Rule 44    scope -> PUBLIC
Rule 45    scope -> PROTECTED
Rule 46    estatuto -> asignacion
Rule 47    estatuto -> escritura
Rule 48    estatuto -> llamada_func
Rule 49    estatuto -> objeto_metodo
Rule 50    estatuto -> lectura
Rule 51    lectura -> READ LPAREN aux4 RPAREN
Rule 52    aux4 -> ID
Rule 53    aux4 -> objeto_aAcceso
Rule 54    aux4 -> ID COMMA aux4
Rule 55    aux4 -> objeto_aAcceso COMMA aux4
Rule 56    escritura -> PRINT LPAREN aux3 RPAREN
Rule 57    aux3 -> expresion
Rule 58    aux3 -> llamada_func
Rule 59    aux3 -> objeto_metodo
Rule 60    aux3 -> CSTRING
Rule 61    aux3 -> expresion COMMA aux3
Rule 62    aux3 -> llamada_func COMMA aux3
Rule 63    aux3 -> objeto_metodo COMMA aux3
Rule 64    aux3 -> CSTRING COMMA aux3
Rule 65    vars -> VAR aux2 COLON tipo_simple
Rule 66    vars -> VAR aux2 COLON tipo_compuesto
Rule 67    vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple
Rule 68    vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
Rule 69    vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
Rule 70    vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
Rule 71    aux2 -> ID
Rule 72    aux2 -> ID COMMA aux2
Rule 73    tipo_simple -> INT
Rule 74    tipo_simple -> FLOAT
Rule 75    tipo_compuesto -> ID
Rule 76    asignacion -> ID EQUALS expresion
Rule 77    asignacion -> ID EQUALS llamada_func
Rule 78    asignacion -> ID EQUALS objeto_metodo
Rule 79    asignacion -> objeto_aAcceso EQUALS expresion
Rule 80    asignacion -> objeto_aAcceso EQUALS llamada_func
Rule 81    asignacion -> objeto_aAcceso EQUALS objeto_metodo
Rule 82    asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion
Rule 83    asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func
Rule 84    asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 85    asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
Rule 86    asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
Rule 87    asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 88    asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
Rule 89    asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
Rule 90    asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 91    asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
Rule 92    asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
Rule 93    asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 94    objeto_metodo -> ID PERIOD llamada_func
Rule 95    llamada_func -> ID LPAREN aux RPAREN
Rule 96    aux -> exp
Rule 97    aux -> exp COMMA aux
Rule 98    expresion -> exp_bool
Rule 99    expresion -> exp_bool rel_op exp_bool
Rule 100   expresion -> exp_bool AND expresion
Rule 101   expresion -> exp_bool OR expresion
Rule 102   expresion -> exp_bool rel_op exp_bool AND expresion
Rule 103   expresion -> exp_bool rel_op exp_bool OR expresion
Rule 104   exp_bool -> TRUE
Rule 105   exp_bool -> FALSE
Rule 106   exp_bool -> exp
Rule 107   exp -> termino
Rule 108   exp -> exp PLUS termino
Rule 109   exp -> exp MINUS termino
Rule 110   termino -> factor
Rule 111   termino -> termino TIMES factor
Rule 112   termino -> termino DIVIDE factor
Rule 113   termino -> termino MODULO factor
Rule 114   factor -> LPAREN expresion RPAREN
Rule 115   factor -> PLUS objeto_aAcceso
Rule 116   factor -> MINUS objeto_aAcceso
Rule 117   factor -> PLUS var
Rule 118   factor -> MINUS var
Rule 119   factor -> var
Rule 120   factor -> objeto_aAcceso
Rule 121   var -> ID
Rule 122   var -> cint
Rule 123   var -> cfloat
Rule 124   cint -> CINT
Rule 125   cfloat -> NUMBER
Rule 126   rel_op -> LT
Rule 127   rel_op -> LE
Rule 128   rel_op -> GT
Rule 129   rel_op -> GE
Rule 130   rel_op -> EQ
Rule 131   rel_op -> NE
Rule 132   objeto_aAcceso -> ID PERIOD ID

Terminals, with rules where they appear

AND                  : 100 102
CINT                 : 124
CLASS                : 3 4
COLON                : 4 65 66 67 68 69 70
COMMA                : 42 54 55 61 62 63 64 72 97
CSTRING              : 60 64
DEF                  : 32
DIVIDE               : 112
ELIF                 : 22
ELSE                 : 23
EQ                   : 130
EQUALS               : 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93
FALSE                : 105
FLOAT                : 35 74
GE                   : 129
GT                   : 128
ID                   : 1 2 3 4 4 30 32 34 35 41 42 52 54 67 68 69 70 71 72 75 76 77 78 82 83 84 88 89 90 94 95 121 132 132
IF                   : 18 19 20
INT                  : 34 73
LBRACE               : 5 24 31 33 34 35
LBRACKET             : 67 68 69 69 70 70 82 83 84 85 86 87 88 88 89 89 90 90 91 91 92 92 93 93
LE                   : 127
LPAREN               : 18 19 20 22 29 30 32 51 56 95 114
LT                   : 126
MINUS                : 109 116 118
MODULO               : 113
NE                   : 131
NUMBER               : 125
OR                   : 101 103
PERIOD               : 94 132
PLUS                 : 108 115 117
PRINT                : 56
PRIVATE              : 43
PROGRAM              : 1 2
PROTECTED            : 45
PUBLIC               : 30 44
RBRACE               : 5 24 31 33 34 35
RBRACKET             : 67 68 69 69 70 70 82 83 84 85 86 87 88 88 89 89 90 90 91 91 92 92 93 93
READ                 : 51
RETURN               : 34 35
RPAREN               : 18 19 20 22 29 30 32 51 56 95 114
TIMES                : 111
TRUE                 : 104
VAR                  : 65 66 67 68 69 70
WHILE                : 29
error                : 

Nonterminals, with rules where they appear

asignacion           : 46
aux                  : 95 97
aux2                 : 65 66 72
aux3                 : 56 61 62 63 64
aux4                 : 51 54 55
aux5                 : 31 33 34 35 38 39
aux5_cond            : 24 27 28
aux6                 : 5 12 13 14 15 16 17
bloque               : 29 30
bloque_cond          : 18 19 20 22 23
cfloat               : 123
ciclo                : 11 17
cint                 : 67 68 69 69 70 70 122
class                : 1
condicion            : 10 16
constructor          : 7 13
context              : 1 2
contexto_func        : 32
elif                 : 19 20 22
else                 : 20
escritura            : 47
estatuto             : 9 15 26 28 37 39
exp                  : 82 83 84 85 86 87 88 88 89 89 90 90 91 91 92 92 93 93 96 97 106 108 109
exp_bool             : 98 99 99 100 101 102 102 103 103
expresion            : 18 19 20 22 29 57 61 76 79 82 85 88 91 100 101 102 103 114
factor               : 110 111 112 113
funcion              : 8 14
lectura              : 50
llamada_func         : 48 58 62 77 80 83 86 89 92 94
objeto_aAcceso       : 53 55 79 80 81 85 86 87 91 92 93 115 116 120
objeto_metodo        : 49 59 63 78 81 84 87 90 93
param                : 30 32 42
programa             : 0
rel_op               : 99 102 103
scope                : 3 4 32
termino              : 107 108 109 111 112 113
tipo_compuesto       : 66 68 70
tipo_simple          : 41 42 65 67 69
var                  : 117 118 119
vars                 : 6 12 25 27 36 38

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID class context
    (2) programa -> . PROGRAM ID context

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID class context
    (2) programa -> PROGRAM . ID context

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . class context
    (2) programa -> PROGRAM ID . context
    (3) class -> . scope CLASS ID
    (4) class -> . scope CLASS ID COLON ID
    (5) context -> . LBRACE aux6 RBRACE
    (43) scope -> . PRIVATE
    (44) scope -> . PUBLIC
    (45) scope -> . PROTECTED

    LBRACE          shift and go to state 7
    PRIVATE         shift and go to state 8
    PUBLIC          shift and go to state 9
    PROTECTED       shift and go to state 10

    class                          shift and go to state 4
    context                        shift and go to state 5
    scope                          shift and go to state 6

state 4

    (1) programa -> PROGRAM ID class . context
    (5) context -> . LBRACE aux6 RBRACE

    LBRACE          shift and go to state 7

    context                        shift and go to state 11

state 5

    (2) programa -> PROGRAM ID context .

    $end            reduce using rule 2 (programa -> PROGRAM ID context .)


state 6

    (3) class -> scope . CLASS ID
    (4) class -> scope . CLASS ID COLON ID

    CLASS           shift and go to state 12


state 7

    (5) context -> LBRACE . aux6 RBRACE
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (65) vars -> . VAR aux2 COLON tipo_simple
    (66) vars -> . VAR aux2 COLON tipo_compuesto
    (67) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (68) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (69) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (30) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (32) funcion -> . scope DEF ID LPAREN param RPAREN contexto_func
    (46) estatuto -> . asignacion
    (47) estatuto -> . escritura
    (48) estatuto -> . llamada_func
    (49) estatuto -> . objeto_metodo
    (50) estatuto -> . lectura
    (18) condicion -> . IF LPAREN expresion RPAREN bloque_cond
    (19) condicion -> . IF LPAREN expresion RPAREN bloque_cond elif
    (20) condicion -> . IF LPAREN expresion RPAREN bloque_cond elif else
    (29) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (43) scope -> . PRIVATE
    (44) scope -> . PUBLIC
    (45) scope -> . PROTECTED
    (76) asignacion -> . ID EQUALS expresion
    (77) asignacion -> . ID EQUALS llamada_func
    (78) asignacion -> . ID EQUALS objeto_metodo
    (79) asignacion -> . objeto_aAcceso EQUALS expresion
    (80) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (81) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (82) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (84) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (56) escritura -> . PRINT LPAREN aux3 RPAREN
    (95) llamada_func -> . ID LPAREN aux RPAREN
    (94) objeto_metodo -> . ID PERIOD llamada_func
    (51) lectura -> . READ LPAREN aux4 RPAREN
    (132) objeto_aAcceso -> . ID PERIOD ID

    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    aux6                           shift and go to state 13
    vars                           shift and go to state 14
    constructor                    shift and go to state 15
    funcion                        shift and go to state 16
    estatuto                       shift and go to state 17
    condicion                      shift and go to state 18
    ciclo                          shift and go to state 19
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 8

    (43) scope -> PRIVATE .

    CLASS           reduce using rule 43 (scope -> PRIVATE .)
    DEF             reduce using rule 43 (scope -> PRIVATE .)


state 9

    (44) scope -> PUBLIC .

    CLASS           reduce using rule 44 (scope -> PUBLIC .)


state 10

    (45) scope -> PROTECTED .

    CLASS           reduce using rule 45 (scope -> PROTECTED .)
    DEF             reduce using rule 45 (scope -> PROTECTED .)


state 11

    (1) programa -> PROGRAM ID class context .

    $end            reduce using rule 1 (programa -> PROGRAM ID class context .)


state 12

    (3) class -> scope CLASS . ID
    (4) class -> scope CLASS . ID COLON ID

    ID              shift and go to state 34


state 13

    (5) context -> LBRACE aux6 . RBRACE

    RBRACE          shift and go to state 35


state 14

    (6) aux6 -> vars .
    (12) aux6 -> vars . aux6
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (65) vars -> . VAR aux2 COLON tipo_simple
    (66) vars -> . VAR aux2 COLON tipo_compuesto
    (67) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (68) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (69) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (30) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (32) funcion -> . scope DEF ID LPAREN param RPAREN contexto_func
    (46) estatuto -> . asignacion
    (47) estatuto -> . escritura
    (48) estatuto -> . llamada_func
    (49) estatuto -> . objeto_metodo
    (50) estatuto -> . lectura
    (18) condicion -> . IF LPAREN expresion RPAREN bloque_cond
    (19) condicion -> . IF LPAREN expresion RPAREN bloque_cond elif
    (20) condicion -> . IF LPAREN expresion RPAREN bloque_cond elif else
    (29) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (43) scope -> . PRIVATE
    (44) scope -> . PUBLIC
    (45) scope -> . PROTECTED
    (76) asignacion -> . ID EQUALS expresion
    (77) asignacion -> . ID EQUALS llamada_func
    (78) asignacion -> . ID EQUALS objeto_metodo
    (79) asignacion -> . objeto_aAcceso EQUALS expresion
    (80) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (81) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (82) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (84) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (56) escritura -> . PRINT LPAREN aux3 RPAREN
    (95) llamada_func -> . ID LPAREN aux RPAREN
    (94) objeto_metodo -> . ID PERIOD llamada_func
    (51) lectura -> . READ LPAREN aux4 RPAREN
    (132) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 6 (aux6 -> vars .)
    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    vars                           shift and go to state 14
    aux6                           shift and go to state 36
    constructor                    shift and go to state 15
    funcion                        shift and go to state 16
    estatuto                       shift and go to state 17
    condicion                      shift and go to state 18
    ciclo                          shift and go to state 19
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 15

    (7) aux6 -> constructor .
    (13) aux6 -> constructor . aux6
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (65) vars -> . VAR aux2 COLON tipo_simple
    (66) vars -> . VAR aux2 COLON tipo_compuesto
    (67) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (68) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (69) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (30) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (32) funcion -> . scope DEF ID LPAREN param RPAREN contexto_func
    (46) estatuto -> . asignacion
    (47) estatuto -> . escritura
    (48) estatuto -> . llamada_func
    (49) estatuto -> . objeto_metodo
    (50) estatuto -> . lectura
    (18) condicion -> . IF LPAREN expresion RPAREN bloque_cond
    (19) condicion -> . IF LPAREN expresion RPAREN bloque_cond elif
    (20) condicion -> . IF LPAREN expresion RPAREN bloque_cond elif else
    (29) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (43) scope -> . PRIVATE
    (44) scope -> . PUBLIC
    (45) scope -> . PROTECTED
    (76) asignacion -> . ID EQUALS expresion
    (77) asignacion -> . ID EQUALS llamada_func
    (78) asignacion -> . ID EQUALS objeto_metodo
    (79) asignacion -> . objeto_aAcceso EQUALS expresion
    (80) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (81) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (82) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (84) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (56) escritura -> . PRINT LPAREN aux3 RPAREN
    (95) llamada_func -> . ID LPAREN aux RPAREN
    (94) objeto_metodo -> . ID PERIOD llamada_func
    (51) lectura -> . READ LPAREN aux4 RPAREN
    (132) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 7 (aux6 -> constructor .)
    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    constructor                    shift and go to state 15
    aux6                           shift and go to state 37
    vars                           shift and go to state 14
    funcion                        shift and go to state 16
    estatuto                       shift and go to state 17
    condicion                      shift and go to state 18
    ciclo                          shift and go to state 19
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 16

    (8) aux6 -> funcion .
    (14) aux6 -> funcion . aux6
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (65) vars -> . VAR aux2 COLON tipo_simple
    (66) vars -> . VAR aux2 COLON tipo_compuesto
    (67) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (68) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (69) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (30) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (32) funcion -> . scope DEF ID LPAREN param RPAREN contexto_func
    (46) estatuto -> . asignacion
    (47) estatuto -> . escritura
    (48) estatuto -> . llamada_func
    (49) estatuto -> . objeto_metodo
    (50) estatuto -> . lectura
    (18) condicion -> . IF LPAREN expresion RPAREN bloque_cond
    (19) condicion -> . IF LPAREN expresion RPAREN bloque_cond elif
    (20) condicion -> . IF LPAREN expresion RPAREN bloque_cond elif else
    (29) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (43) scope -> . PRIVATE
    (44) scope -> . PUBLIC
    (45) scope -> . PROTECTED
    (76) asignacion -> . ID EQUALS expresion
    (77) asignacion -> . ID EQUALS llamada_func
    (78) asignacion -> . ID EQUALS objeto_metodo
    (79) asignacion -> . objeto_aAcceso EQUALS expresion
    (80) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (81) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (82) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (84) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (56) escritura -> . PRINT LPAREN aux3 RPAREN
    (95) llamada_func -> . ID LPAREN aux RPAREN
    (94) objeto_metodo -> . ID PERIOD llamada_func
    (51) lectura -> . READ LPAREN aux4 RPAREN
    (132) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 8 (aux6 -> funcion .)
    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    funcion                        shift and go to state 16
    aux6                           shift and go to state 38
    vars                           shift and go to state 14
    constructor                    shift and go to state 15
    estatuto                       shift and go to state 17
    condicion                      shift and go to state 18
    ciclo                          shift and go to state 19
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 17

    (9) aux6 -> estatuto .
    (15) aux6 -> estatuto . aux6
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (65) vars -> . VAR aux2 COLON tipo_simple
    (66) vars -> . VAR aux2 COLON tipo_compuesto
    (67) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (68) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (69) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (30) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (32) funcion -> . scope DEF ID LPAREN param RPAREN contexto_func
    (46) estatuto -> . asignacion
    (47) estatuto -> . escritura
    (48) estatuto -> . llamada_func
    (49) estatuto -> . objeto_metodo
    (50) estatuto -> . lectura
    (18) condicion -> . IF LPAREN expresion RPAREN bloque_cond
    (19) condicion -> . IF LPAREN expresion RPAREN bloque_cond elif
    (20) condicion -> . IF LPAREN expresion RPAREN bloque_cond elif else
    (29) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (43) scope -> . PRIVATE
    (44) scope -> . PUBLIC
    (45) scope -> . PROTECTED
    (76) asignacion -> . ID EQUALS expresion
    (77) asignacion -> . ID EQUALS llamada_func
    (78) asignacion -> . ID EQUALS objeto_metodo
    (79) asignacion -> . objeto_aAcceso EQUALS expresion
    (80) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (81) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (82) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (84) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (56) escritura -> . PRINT LPAREN aux3 RPAREN
    (95) llamada_func -> . ID LPAREN aux RPAREN
    (94) objeto_metodo -> . ID PERIOD llamada_func
    (51) lectura -> . READ LPAREN aux4 RPAREN
    (132) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 9 (aux6 -> estatuto .)
    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    estatuto                       shift and go to state 17
    aux6                           shift and go to state 39
    vars                           shift and go to state 14
    constructor                    shift and go to state 15
    funcion                        shift and go to state 16
    condicion                      shift and go to state 18
    ciclo                          shift and go to state 19
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 18

    (10) aux6 -> condicion .
    (16) aux6 -> condicion . aux6
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (65) vars -> . VAR aux2 COLON tipo_simple
    (66) vars -> . VAR aux2 COLON tipo_compuesto
    (67) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (68) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (69) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (30) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (32) funcion -> . scope DEF ID LPAREN param RPAREN contexto_func
    (46) estatuto -> . asignacion
    (47) estatuto -> . escritura
    (48) estatuto -> . llamada_func
    (49) estatuto -> . objeto_metodo
    (50) estatuto -> . lectura
    (18) condicion -> . IF LPAREN expresion RPAREN bloque_cond
    (19) condicion -> . IF LPAREN expresion RPAREN bloque_cond elif
    (20) condicion -> . IF LPAREN expresion RPAREN bloque_cond elif else
    (29) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (43) scope -> . PRIVATE
    (44) scope -> . PUBLIC
    (45) scope -> . PROTECTED
    (76) asignacion -> . ID EQUALS expresion
    (77) asignacion -> . ID EQUALS llamada_func
    (78) asignacion -> . ID EQUALS objeto_metodo
    (79) asignacion -> . objeto_aAcceso EQUALS expresion
    (80) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (81) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (82) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (84) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (56) escritura -> . PRINT LPAREN aux3 RPAREN
    (95) llamada_func -> . ID LPAREN aux RPAREN
    (94) objeto_metodo -> . ID PERIOD llamada_func
    (51) lectura -> . READ LPAREN aux4 RPAREN
    (132) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 10 (aux6 -> condicion .)
    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    condicion                      shift and go to state 18
    aux6                           shift and go to state 40
    vars                           shift and go to state 14
    constructor                    shift and go to state 15
    funcion                        shift and go to state 16
    estatuto                       shift and go to state 17
    ciclo                          shift and go to state 19
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 19

    (11) aux6 -> ciclo .
    (17) aux6 -> ciclo . aux6
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (65) vars -> . VAR aux2 COLON tipo_simple
    (66) vars -> . VAR aux2 COLON tipo_compuesto
    (67) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (68) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (69) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (30) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (32) funcion -> . scope DEF ID LPAREN param RPAREN contexto_func
    (46) estatuto -> . asignacion
    (47) estatuto -> . escritura
    (48) estatuto -> . llamada_func
    (49) estatuto -> . objeto_metodo
    (50) estatuto -> . lectura
    (18) condicion -> . IF LPAREN expresion RPAREN bloque_cond
    (19) condicion -> . IF LPAREN expresion RPAREN bloque_cond elif
    (20) condicion -> . IF LPAREN expresion RPAREN bloque_cond elif else
    (29) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (43) scope -> . PRIVATE
    (44) scope -> . PUBLIC
    (45) scope -> . PROTECTED
    (76) asignacion -> . ID EQUALS expresion
    (77) asignacion -> . ID EQUALS llamada_func
    (78) asignacion -> . ID EQUALS objeto_metodo
    (79) asignacion -> . objeto_aAcceso EQUALS expresion
    (80) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (81) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (82) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (84) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (56) escritura -> . PRINT LPAREN aux3 RPAREN
    (95) llamada_func -> . ID LPAREN aux RPAREN
    (94) objeto_metodo -> . ID PERIOD llamada_func
    (51) lectura -> . READ LPAREN aux4 RPAREN
    (132) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 11 (aux6 -> ciclo .)
    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    ciclo                          shift and go to state 19
    aux6                           shift and go to state 41
    vars                           shift and go to state 14
    constructor                    shift and go to state 15
    funcion                        shift and go to state 16
    estatuto                       shift and go to state 17
    condicion                      shift and go to state 18
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 20

    (65) vars -> VAR . aux2 COLON tipo_simple
    (66) vars -> VAR . aux2 COLON tipo_compuesto
    (67) vars -> VAR . ID LBRACKET cint RBRACKET COLON tipo_simple
    (68) vars -> VAR . ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (69) vars -> VAR . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> VAR . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (71) aux2 -> . ID
    (72) aux2 -> . ID COMMA aux2

    ID              shift and go to state 43

    aux2                           shift and go to state 42

state 21

    (76) asignacion -> ID . EQUALS expresion
    (77) asignacion -> ID . EQUALS llamada_func
    (78) asignacion -> ID . EQUALS objeto_metodo
    (82) asignacion -> ID . LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> ID . LBRACKET exp RBRACKET EQUALS llamada_func
    (84) asignacion -> ID . LBRACKET exp RBRACKET EQUALS objeto_metodo
    (88) asignacion -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (95) llamada_func -> ID . LPAREN aux RPAREN
    (94) objeto_metodo -> ID . PERIOD llamada_func
    (132) objeto_aAcceso -> ID . PERIOD ID

    EQUALS          shift and go to state 44
    LBRACKET        shift and go to state 45
    LPAREN          shift and go to state 46
    PERIOD          shift and go to state 47


state 22

    (30) constructor -> PUBLIC . ID LPAREN param RPAREN bloque
    (44) scope -> PUBLIC .

    ID              shift and go to state 48
    DEF             reduce using rule 44 (scope -> PUBLIC .)


state 23

    (32) funcion -> scope . DEF ID LPAREN param RPAREN contexto_func

    DEF             shift and go to state 49


state 24

    (46) estatuto -> asignacion .

    VAR             reduce using rule 46 (estatuto -> asignacion .)
    PUBLIC          reduce using rule 46 (estatuto -> asignacion .)
    IF              reduce using rule 46 (estatuto -> asignacion .)
    WHILE           reduce using rule 46 (estatuto -> asignacion .)
    PRIVATE         reduce using rule 46 (estatuto -> asignacion .)
    PROTECTED       reduce using rule 46 (estatuto -> asignacion .)
    ID              reduce using rule 46 (estatuto -> asignacion .)
    PRINT           reduce using rule 46 (estatuto -> asignacion .)
    READ            reduce using rule 46 (estatuto -> asignacion .)
    RBRACE          reduce using rule 46 (estatuto -> asignacion .)
    RETURN          reduce using rule 46 (estatuto -> asignacion .)


state 25

    (47) estatuto -> escritura .

    VAR             reduce using rule 47 (estatuto -> escritura .)
    PUBLIC          reduce using rule 47 (estatuto -> escritura .)
    IF              reduce using rule 47 (estatuto -> escritura .)
    WHILE           reduce using rule 47 (estatuto -> escritura .)
    PRIVATE         reduce using rule 47 (estatuto -> escritura .)
    PROTECTED       reduce using rule 47 (estatuto -> escritura .)
    ID              reduce using rule 47 (estatuto -> escritura .)
    PRINT           reduce using rule 47 (estatuto -> escritura .)
    READ            reduce using rule 47 (estatuto -> escritura .)
    RBRACE          reduce using rule 47 (estatuto -> escritura .)
    RETURN          reduce using rule 47 (estatuto -> escritura .)


state 26

    (48) estatuto -> llamada_func .

    VAR             reduce using rule 48 (estatuto -> llamada_func .)
    PUBLIC          reduce using rule 48 (estatuto -> llamada_func .)
    IF              reduce using rule 48 (estatuto -> llamada_func .)
    WHILE           reduce using rule 48 (estatuto -> llamada_func .)
    PRIVATE         reduce using rule 48 (estatuto -> llamada_func .)
    PROTECTED       reduce using rule 48 (estatuto -> llamada_func .)
    ID              reduce using rule 48 (estatuto -> llamada_func .)
    PRINT           reduce using rule 48 (estatuto -> llamada_func .)
    READ            reduce using rule 48 (estatuto -> llamada_func .)
    RBRACE          reduce using rule 48 (estatuto -> llamada_func .)
    RETURN          reduce using rule 48 (estatuto -> llamada_func .)


state 27

    (49) estatuto -> objeto_metodo .

    VAR             reduce using rule 49 (estatuto -> objeto_metodo .)
    PUBLIC          reduce using rule 49 (estatuto -> objeto_metodo .)
    IF              reduce using rule 49 (estatuto -> objeto_metodo .)
    WHILE           reduce using rule 49 (estatuto -> objeto_metodo .)
    PRIVATE         reduce using rule 49 (estatuto -> objeto_metodo .)
    PROTECTED       reduce using rule 49 (estatuto -> objeto_metodo .)
    ID              reduce using rule 49 (estatuto -> objeto_metodo .)
    PRINT           reduce using rule 49 (estatuto -> objeto_metodo .)
    READ            reduce using rule 49 (estatuto -> objeto_metodo .)
    RBRACE          reduce using rule 49 (estatuto -> objeto_metodo .)
    RETURN          reduce using rule 49 (estatuto -> objeto_metodo .)


state 28

    (50) estatuto -> lectura .

    VAR             reduce using rule 50 (estatuto -> lectura .)
    PUBLIC          reduce using rule 50 (estatuto -> lectura .)
    IF              reduce using rule 50 (estatuto -> lectura .)
    WHILE           reduce using rule 50 (estatuto -> lectura .)
    PRIVATE         reduce using rule 50 (estatuto -> lectura .)
    PROTECTED       reduce using rule 50 (estatuto -> lectura .)
    ID              reduce using rule 50 (estatuto -> lectura .)
    PRINT           reduce using rule 50 (estatuto -> lectura .)
    READ            reduce using rule 50 (estatuto -> lectura .)
    RBRACE          reduce using rule 50 (estatuto -> lectura .)
    RETURN          reduce using rule 50 (estatuto -> lectura .)


state 29

    (18) condicion -> IF . LPAREN expresion RPAREN bloque_cond
    (19) condicion -> IF . LPAREN expresion RPAREN bloque_cond elif
    (20) condicion -> IF . LPAREN expresion RPAREN bloque_cond elif else

    LPAREN          shift and go to state 50


state 30

    (29) ciclo -> WHILE . LPAREN expresion RPAREN bloque

    LPAREN          shift and go to state 51


state 31

    (79) asignacion -> objeto_aAcceso . EQUALS expresion
    (80) asignacion -> objeto_aAcceso . EQUALS llamada_func
    (81) asignacion -> objeto_aAcceso . EQUALS objeto_metodo
    (85) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET EQUALS expresion
    (86) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> objeto_aAcceso . LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> objeto_aAcceso . LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> objeto_aAcceso . LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo

    EQUALS          shift and go to state 52
    LBRACKET        shift and go to state 53


state 32

    (56) escritura -> PRINT . LPAREN aux3 RPAREN

    LPAREN          shift and go to state 54


state 33

    (51) lectura -> READ . LPAREN aux4 RPAREN

    LPAREN          shift and go to state 55


state 34

    (3) class -> scope CLASS ID .
    (4) class -> scope CLASS ID . COLON ID

    LBRACE          reduce using rule 3 (class -> scope CLASS ID .)
    COLON           shift and go to state 56


state 35

    (5) context -> LBRACE aux6 RBRACE .

    $end            reduce using rule 5 (context -> LBRACE aux6 RBRACE .)


state 36

    (12) aux6 -> vars aux6 .

    RBRACE          reduce using rule 12 (aux6 -> vars aux6 .)


state 37

    (13) aux6 -> constructor aux6 .

    RBRACE          reduce using rule 13 (aux6 -> constructor aux6 .)


state 38

    (14) aux6 -> funcion aux6 .

    RBRACE          reduce using rule 14 (aux6 -> funcion aux6 .)


state 39

    (15) aux6 -> estatuto aux6 .

    RBRACE          reduce using rule 15 (aux6 -> estatuto aux6 .)


state 40

    (16) aux6 -> condicion aux6 .

    RBRACE          reduce using rule 16 (aux6 -> condicion aux6 .)


state 41

    (17) aux6 -> ciclo aux6 .

    RBRACE          reduce using rule 17 (aux6 -> ciclo aux6 .)


state 42

    (65) vars -> VAR aux2 . COLON tipo_simple
    (66) vars -> VAR aux2 . COLON tipo_compuesto

    COLON           shift and go to state 57


state 43

    (67) vars -> VAR ID . LBRACKET cint RBRACKET COLON tipo_simple
    (68) vars -> VAR ID . LBRACKET cint RBRACKET COLON tipo_compuesto
    (69) vars -> VAR ID . LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> VAR ID . LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (71) aux2 -> ID .
    (72) aux2 -> ID . COMMA aux2

    LBRACKET        shift and go to state 58
    COLON           reduce using rule 71 (aux2 -> ID .)
    COMMA           shift and go to state 59


state 44

    (76) asignacion -> ID EQUALS . expresion
    (77) asignacion -> ID EQUALS . llamada_func
    (78) asignacion -> ID EQUALS . objeto_metodo
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . exp_bool AND expresion
    (101) expresion -> . exp_bool OR expresion
    (102) expresion -> . exp_bool rel_op exp_bool AND expresion
    (103) expresion -> . exp_bool rel_op exp_bool OR expresion
    (95) llamada_func -> . ID LPAREN aux RPAREN
    (94) objeto_metodo -> . ID PERIOD llamada_func
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    ID              shift and go to state 60
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    expresion                      shift and go to state 61
    llamada_func                   shift and go to state 62
    objeto_metodo                  shift and go to state 63
    exp_bool                       shift and go to state 64
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 45

    (82) asignacion -> ID LBRACKET . exp RBRACKET EQUALS expresion
    (83) asignacion -> ID LBRACKET . exp RBRACKET EQUALS llamada_func
    (84) asignacion -> ID LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (88) asignacion -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    exp                            shift and go to state 80
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 46

    (95) llamada_func -> ID LPAREN . aux RPAREN
    (96) aux -> . exp
    (97) aux -> . exp COMMA aux
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    aux                            shift and go to state 81
    exp                            shift and go to state 82
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 47

    (94) objeto_metodo -> ID PERIOD . llamada_func
    (132) objeto_aAcceso -> ID PERIOD . ID
    (95) llamada_func -> . ID LPAREN aux RPAREN

    ID              shift and go to state 83

    llamada_func                   shift and go to state 84

state 48

    (30) constructor -> PUBLIC ID . LPAREN param RPAREN bloque

    LPAREN          shift and go to state 85


state 49

    (32) funcion -> scope DEF . ID LPAREN param RPAREN contexto_func

    ID              shift and go to state 86


state 50

    (18) condicion -> IF LPAREN . expresion RPAREN bloque_cond
    (19) condicion -> IF LPAREN . expresion RPAREN bloque_cond elif
    (20) condicion -> IF LPAREN . expresion RPAREN bloque_cond elif else
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . exp_bool AND expresion
    (101) expresion -> . exp_bool OR expresion
    (102) expresion -> . exp_bool rel_op exp_bool AND expresion
    (103) expresion -> . exp_bool rel_op exp_bool OR expresion
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    expresion                      shift and go to state 87
    exp_bool                       shift and go to state 64
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 51

    (29) ciclo -> WHILE LPAREN . expresion RPAREN bloque
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . exp_bool AND expresion
    (101) expresion -> . exp_bool OR expresion
    (102) expresion -> . exp_bool rel_op exp_bool AND expresion
    (103) expresion -> . exp_bool rel_op exp_bool OR expresion
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    expresion                      shift and go to state 88
    exp_bool                       shift and go to state 64
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 52

    (79) asignacion -> objeto_aAcceso EQUALS . expresion
    (80) asignacion -> objeto_aAcceso EQUALS . llamada_func
    (81) asignacion -> objeto_aAcceso EQUALS . objeto_metodo
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . exp_bool AND expresion
    (101) expresion -> . exp_bool OR expresion
    (102) expresion -> . exp_bool rel_op exp_bool AND expresion
    (103) expresion -> . exp_bool rel_op exp_bool OR expresion
    (95) llamada_func -> . ID LPAREN aux RPAREN
    (94) objeto_metodo -> . ID PERIOD llamada_func
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    ID              shift and go to state 60
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    objeto_aAcceso                 shift and go to state 73
    expresion                      shift and go to state 89
    llamada_func                   shift and go to state 90
    objeto_metodo                  shift and go to state 91
    exp_bool                       shift and go to state 64
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 53

    (85) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET EQUALS expresion
    (86) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET EQUALS llamada_func
    (87) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> objeto_aAcceso LBRACKET . LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> objeto_aAcceso LBRACKET . LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> objeto_aAcceso LBRACKET . LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    LBRACKET        shift and go to state 92
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    objeto_aAcceso                 shift and go to state 73
    exp                            shift and go to state 93
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 54

    (56) escritura -> PRINT LPAREN . aux3 RPAREN
    (57) aux3 -> . expresion
    (58) aux3 -> . llamada_func
    (59) aux3 -> . objeto_metodo
    (60) aux3 -> . CSTRING
    (61) aux3 -> . expresion COMMA aux3
    (62) aux3 -> . llamada_func COMMA aux3
    (63) aux3 -> . objeto_metodo COMMA aux3
    (64) aux3 -> . CSTRING COMMA aux3
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . exp_bool AND expresion
    (101) expresion -> . exp_bool OR expresion
    (102) expresion -> . exp_bool rel_op exp_bool AND expresion
    (103) expresion -> . exp_bool rel_op exp_bool OR expresion
    (95) llamada_func -> . ID LPAREN aux RPAREN
    (94) objeto_metodo -> . ID PERIOD llamada_func
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    CSTRING         shift and go to state 98
    ID              shift and go to state 60
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    aux3                           shift and go to state 94
    expresion                      shift and go to state 95
    llamada_func                   shift and go to state 96
    objeto_metodo                  shift and go to state 97
    exp_bool                       shift and go to state 64
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 55

    (51) lectura -> READ LPAREN . aux4 RPAREN
    (52) aux4 -> . ID
    (53) aux4 -> . objeto_aAcceso
    (54) aux4 -> . ID COMMA aux4
    (55) aux4 -> . objeto_aAcceso COMMA aux4
    (132) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 100

    aux4                           shift and go to state 99
    objeto_aAcceso                 shift and go to state 101

state 56

    (4) class -> scope CLASS ID COLON . ID

    ID              shift and go to state 102


state 57

    (65) vars -> VAR aux2 COLON . tipo_simple
    (66) vars -> VAR aux2 COLON . tipo_compuesto
    (73) tipo_simple -> . INT
    (74) tipo_simple -> . FLOAT
    (75) tipo_compuesto -> . ID

    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    ID              shift and go to state 107

    tipo_simple                    shift and go to state 103
    tipo_compuesto                 shift and go to state 104

state 58

    (67) vars -> VAR ID LBRACKET . cint RBRACKET COLON tipo_simple
    (68) vars -> VAR ID LBRACKET . cint RBRACKET COLON tipo_compuesto
    (69) vars -> VAR ID LBRACKET . cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> VAR ID LBRACKET . cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (124) cint -> . CINT

    CINT            shift and go to state 77

    cint                           shift and go to state 108

state 59

    (72) aux2 -> ID COMMA . aux2
    (71) aux2 -> . ID
    (72) aux2 -> . ID COMMA aux2

    ID              shift and go to state 109

    aux2                           shift and go to state 110

state 60

    (95) llamada_func -> ID . LPAREN aux RPAREN
    (94) objeto_metodo -> ID . PERIOD llamada_func
    (121) var -> ID .
    (132) objeto_aAcceso -> ID . PERIOD ID

    LPAREN          shift and go to state 46
    PERIOD          shift and go to state 47
    TIMES           reduce using rule 121 (var -> ID .)
    DIVIDE          reduce using rule 121 (var -> ID .)
    MODULO          reduce using rule 121 (var -> ID .)
    PLUS            reduce using rule 121 (var -> ID .)
    MINUS           reduce using rule 121 (var -> ID .)
    AND             reduce using rule 121 (var -> ID .)
    OR              reduce using rule 121 (var -> ID .)
    LT              reduce using rule 121 (var -> ID .)
    LE              reduce using rule 121 (var -> ID .)
    GT              reduce using rule 121 (var -> ID .)
    GE              reduce using rule 121 (var -> ID .)
    EQ              reduce using rule 121 (var -> ID .)
    NE              reduce using rule 121 (var -> ID .)
    VAR             reduce using rule 121 (var -> ID .)
    PUBLIC          reduce using rule 121 (var -> ID .)
    IF              reduce using rule 121 (var -> ID .)
    WHILE           reduce using rule 121 (var -> ID .)
    PRIVATE         reduce using rule 121 (var -> ID .)
    PROTECTED       reduce using rule 121 (var -> ID .)
    ID              reduce using rule 121 (var -> ID .)
    PRINT           reduce using rule 121 (var -> ID .)
    READ            reduce using rule 121 (var -> ID .)
    RBRACE          reduce using rule 121 (var -> ID .)
    RETURN          reduce using rule 121 (var -> ID .)
    COMMA           reduce using rule 121 (var -> ID .)
    RPAREN          reduce using rule 121 (var -> ID .)


state 61

    (76) asignacion -> ID EQUALS expresion .

    VAR             reduce using rule 76 (asignacion -> ID EQUALS expresion .)
    PUBLIC          reduce using rule 76 (asignacion -> ID EQUALS expresion .)
    IF              reduce using rule 76 (asignacion -> ID EQUALS expresion .)
    WHILE           reduce using rule 76 (asignacion -> ID EQUALS expresion .)
    PRIVATE         reduce using rule 76 (asignacion -> ID EQUALS expresion .)
    PROTECTED       reduce using rule 76 (asignacion -> ID EQUALS expresion .)
    ID              reduce using rule 76 (asignacion -> ID EQUALS expresion .)
    PRINT           reduce using rule 76 (asignacion -> ID EQUALS expresion .)
    READ            reduce using rule 76 (asignacion -> ID EQUALS expresion .)
    RBRACE          reduce using rule 76 (asignacion -> ID EQUALS expresion .)
    RETURN          reduce using rule 76 (asignacion -> ID EQUALS expresion .)


state 62

    (77) asignacion -> ID EQUALS llamada_func .

    VAR             reduce using rule 77 (asignacion -> ID EQUALS llamada_func .)
    PUBLIC          reduce using rule 77 (asignacion -> ID EQUALS llamada_func .)
    IF              reduce using rule 77 (asignacion -> ID EQUALS llamada_func .)
    WHILE           reduce using rule 77 (asignacion -> ID EQUALS llamada_func .)
    PRIVATE         reduce using rule 77 (asignacion -> ID EQUALS llamada_func .)
    PROTECTED       reduce using rule 77 (asignacion -> ID EQUALS llamada_func .)
    ID              reduce using rule 77 (asignacion -> ID EQUALS llamada_func .)
    PRINT           reduce using rule 77 (asignacion -> ID EQUALS llamada_func .)
    READ            reduce using rule 77 (asignacion -> ID EQUALS llamada_func .)
    RBRACE          reduce using rule 77 (asignacion -> ID EQUALS llamada_func .)
    RETURN          reduce using rule 77 (asignacion -> ID EQUALS llamada_func .)


state 63

    (78) asignacion -> ID EQUALS objeto_metodo .

    VAR             reduce using rule 78 (asignacion -> ID EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 78 (asignacion -> ID EQUALS objeto_metodo .)
    IF              reduce using rule 78 (asignacion -> ID EQUALS objeto_metodo .)
    WHILE           reduce using rule 78 (asignacion -> ID EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 78 (asignacion -> ID EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 78 (asignacion -> ID EQUALS objeto_metodo .)
    ID              reduce using rule 78 (asignacion -> ID EQUALS objeto_metodo .)
    PRINT           reduce using rule 78 (asignacion -> ID EQUALS objeto_metodo .)
    READ            reduce using rule 78 (asignacion -> ID EQUALS objeto_metodo .)
    RBRACE          reduce using rule 78 (asignacion -> ID EQUALS objeto_metodo .)
    RETURN          reduce using rule 78 (asignacion -> ID EQUALS objeto_metodo .)


state 64

    (98) expresion -> exp_bool .
    (99) expresion -> exp_bool . rel_op exp_bool
    (100) expresion -> exp_bool . AND expresion
    (101) expresion -> exp_bool . OR expresion
    (102) expresion -> exp_bool . rel_op exp_bool AND expresion
    (103) expresion -> exp_bool . rel_op exp_bool OR expresion
    (126) rel_op -> . LT
    (127) rel_op -> . LE
    (128) rel_op -> . GT
    (129) rel_op -> . GE
    (130) rel_op -> . EQ
    (131) rel_op -> . NE

    VAR             reduce using rule 98 (expresion -> exp_bool .)
    PUBLIC          reduce using rule 98 (expresion -> exp_bool .)
    IF              reduce using rule 98 (expresion -> exp_bool .)
    WHILE           reduce using rule 98 (expresion -> exp_bool .)
    PRIVATE         reduce using rule 98 (expresion -> exp_bool .)
    PROTECTED       reduce using rule 98 (expresion -> exp_bool .)
    ID              reduce using rule 98 (expresion -> exp_bool .)
    PRINT           reduce using rule 98 (expresion -> exp_bool .)
    READ            reduce using rule 98 (expresion -> exp_bool .)
    RBRACE          reduce using rule 98 (expresion -> exp_bool .)
    RETURN          reduce using rule 98 (expresion -> exp_bool .)
    RPAREN          reduce using rule 98 (expresion -> exp_bool .)
    COMMA           reduce using rule 98 (expresion -> exp_bool .)
    AND             shift and go to state 112
    OR              shift and go to state 113
    LT              shift and go to state 114
    LE              shift and go to state 115
    GT              shift and go to state 116
    GE              shift and go to state 117
    EQ              shift and go to state 118
    NE              shift and go to state 119

    rel_op                         shift and go to state 111

state 65

    (114) factor -> LPAREN . expresion RPAREN
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . exp_bool AND expresion
    (101) expresion -> . exp_bool OR expresion
    (102) expresion -> . exp_bool rel_op exp_bool AND expresion
    (103) expresion -> . exp_bool rel_op exp_bool OR expresion
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    expresion                      shift and go to state 120
    exp_bool                       shift and go to state 64
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 66

    (104) exp_bool -> TRUE .

    AND             reduce using rule 104 (exp_bool -> TRUE .)
    OR              reduce using rule 104 (exp_bool -> TRUE .)
    LT              reduce using rule 104 (exp_bool -> TRUE .)
    LE              reduce using rule 104 (exp_bool -> TRUE .)
    GT              reduce using rule 104 (exp_bool -> TRUE .)
    GE              reduce using rule 104 (exp_bool -> TRUE .)
    EQ              reduce using rule 104 (exp_bool -> TRUE .)
    NE              reduce using rule 104 (exp_bool -> TRUE .)
    VAR             reduce using rule 104 (exp_bool -> TRUE .)
    PUBLIC          reduce using rule 104 (exp_bool -> TRUE .)
    IF              reduce using rule 104 (exp_bool -> TRUE .)
    WHILE           reduce using rule 104 (exp_bool -> TRUE .)
    PRIVATE         reduce using rule 104 (exp_bool -> TRUE .)
    PROTECTED       reduce using rule 104 (exp_bool -> TRUE .)
    ID              reduce using rule 104 (exp_bool -> TRUE .)
    PRINT           reduce using rule 104 (exp_bool -> TRUE .)
    READ            reduce using rule 104 (exp_bool -> TRUE .)
    RBRACE          reduce using rule 104 (exp_bool -> TRUE .)
    RETURN          reduce using rule 104 (exp_bool -> TRUE .)
    RPAREN          reduce using rule 104 (exp_bool -> TRUE .)
    COMMA           reduce using rule 104 (exp_bool -> TRUE .)


state 67

    (105) exp_bool -> FALSE .

    AND             reduce using rule 105 (exp_bool -> FALSE .)
    OR              reduce using rule 105 (exp_bool -> FALSE .)
    LT              reduce using rule 105 (exp_bool -> FALSE .)
    LE              reduce using rule 105 (exp_bool -> FALSE .)
    GT              reduce using rule 105 (exp_bool -> FALSE .)
    GE              reduce using rule 105 (exp_bool -> FALSE .)
    EQ              reduce using rule 105 (exp_bool -> FALSE .)
    NE              reduce using rule 105 (exp_bool -> FALSE .)
    VAR             reduce using rule 105 (exp_bool -> FALSE .)
    PUBLIC          reduce using rule 105 (exp_bool -> FALSE .)
    IF              reduce using rule 105 (exp_bool -> FALSE .)
    WHILE           reduce using rule 105 (exp_bool -> FALSE .)
    PRIVATE         reduce using rule 105 (exp_bool -> FALSE .)
    PROTECTED       reduce using rule 105 (exp_bool -> FALSE .)
    ID              reduce using rule 105 (exp_bool -> FALSE .)
    PRINT           reduce using rule 105 (exp_bool -> FALSE .)
    READ            reduce using rule 105 (exp_bool -> FALSE .)
    RBRACE          reduce using rule 105 (exp_bool -> FALSE .)
    RETURN          reduce using rule 105 (exp_bool -> FALSE .)
    RPAREN          reduce using rule 105 (exp_bool -> FALSE .)
    COMMA           reduce using rule 105 (exp_bool -> FALSE .)


state 68

    (106) exp_bool -> exp .
    (108) exp -> exp . PLUS termino
    (109) exp -> exp . MINUS termino

    AND             reduce using rule 106 (exp_bool -> exp .)
    OR              reduce using rule 106 (exp_bool -> exp .)
    LT              reduce using rule 106 (exp_bool -> exp .)
    LE              reduce using rule 106 (exp_bool -> exp .)
    GT              reduce using rule 106 (exp_bool -> exp .)
    GE              reduce using rule 106 (exp_bool -> exp .)
    EQ              reduce using rule 106 (exp_bool -> exp .)
    NE              reduce using rule 106 (exp_bool -> exp .)
    VAR             reduce using rule 106 (exp_bool -> exp .)
    PUBLIC          reduce using rule 106 (exp_bool -> exp .)
    IF              reduce using rule 106 (exp_bool -> exp .)
    WHILE           reduce using rule 106 (exp_bool -> exp .)
    PRIVATE         reduce using rule 106 (exp_bool -> exp .)
    PROTECTED       reduce using rule 106 (exp_bool -> exp .)
    ID              reduce using rule 106 (exp_bool -> exp .)
    PRINT           reduce using rule 106 (exp_bool -> exp .)
    READ            reduce using rule 106 (exp_bool -> exp .)
    RBRACE          reduce using rule 106 (exp_bool -> exp .)
    RETURN          reduce using rule 106 (exp_bool -> exp .)
    RPAREN          reduce using rule 106 (exp_bool -> exp .)
    COMMA           reduce using rule 106 (exp_bool -> exp .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122


state 69

    (107) exp -> termino .
    (111) termino -> termino . TIMES factor
    (112) termino -> termino . DIVIDE factor
    (113) termino -> termino . MODULO factor

    PLUS            reduce using rule 107 (exp -> termino .)
    MINUS           reduce using rule 107 (exp -> termino .)
    AND             reduce using rule 107 (exp -> termino .)
    OR              reduce using rule 107 (exp -> termino .)
    LT              reduce using rule 107 (exp -> termino .)
    LE              reduce using rule 107 (exp -> termino .)
    GT              reduce using rule 107 (exp -> termino .)
    GE              reduce using rule 107 (exp -> termino .)
    EQ              reduce using rule 107 (exp -> termino .)
    NE              reduce using rule 107 (exp -> termino .)
    VAR             reduce using rule 107 (exp -> termino .)
    PUBLIC          reduce using rule 107 (exp -> termino .)
    IF              reduce using rule 107 (exp -> termino .)
    WHILE           reduce using rule 107 (exp -> termino .)
    PRIVATE         reduce using rule 107 (exp -> termino .)
    PROTECTED       reduce using rule 107 (exp -> termino .)
    ID              reduce using rule 107 (exp -> termino .)
    PRINT           reduce using rule 107 (exp -> termino .)
    READ            reduce using rule 107 (exp -> termino .)
    RBRACE          reduce using rule 107 (exp -> termino .)
    RETURN          reduce using rule 107 (exp -> termino .)
    RBRACKET        reduce using rule 107 (exp -> termino .)
    COMMA           reduce using rule 107 (exp -> termino .)
    RPAREN          reduce using rule 107 (exp -> termino .)
    TIMES           shift and go to state 123
    DIVIDE          shift and go to state 124
    MODULO          shift and go to state 125


state 70

    (115) factor -> PLUS . objeto_aAcceso
    (117) factor -> PLUS . var
    (132) objeto_aAcceso -> . ID PERIOD ID
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    ID              shift and go to state 128
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    objeto_aAcceso                 shift and go to state 126
    var                            shift and go to state 127
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 71

    (116) factor -> MINUS . objeto_aAcceso
    (118) factor -> MINUS . var
    (132) objeto_aAcceso -> . ID PERIOD ID
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    ID              shift and go to state 128
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    objeto_aAcceso                 shift and go to state 129
    var                            shift and go to state 130
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 72

    (110) termino -> factor .

    TIMES           reduce using rule 110 (termino -> factor .)
    DIVIDE          reduce using rule 110 (termino -> factor .)
    MODULO          reduce using rule 110 (termino -> factor .)
    PLUS            reduce using rule 110 (termino -> factor .)
    MINUS           reduce using rule 110 (termino -> factor .)
    AND             reduce using rule 110 (termino -> factor .)
    OR              reduce using rule 110 (termino -> factor .)
    LT              reduce using rule 110 (termino -> factor .)
    LE              reduce using rule 110 (termino -> factor .)
    GT              reduce using rule 110 (termino -> factor .)
    GE              reduce using rule 110 (termino -> factor .)
    EQ              reduce using rule 110 (termino -> factor .)
    NE              reduce using rule 110 (termino -> factor .)
    VAR             reduce using rule 110 (termino -> factor .)
    PUBLIC          reduce using rule 110 (termino -> factor .)
    IF              reduce using rule 110 (termino -> factor .)
    WHILE           reduce using rule 110 (termino -> factor .)
    PRIVATE         reduce using rule 110 (termino -> factor .)
    PROTECTED       reduce using rule 110 (termino -> factor .)
    ID              reduce using rule 110 (termino -> factor .)
    PRINT           reduce using rule 110 (termino -> factor .)
    READ            reduce using rule 110 (termino -> factor .)
    RBRACE          reduce using rule 110 (termino -> factor .)
    RETURN          reduce using rule 110 (termino -> factor .)
    RBRACKET        reduce using rule 110 (termino -> factor .)
    COMMA           reduce using rule 110 (termino -> factor .)
    RPAREN          reduce using rule 110 (termino -> factor .)


state 73

    (120) factor -> objeto_aAcceso .

    TIMES           reduce using rule 120 (factor -> objeto_aAcceso .)
    DIVIDE          reduce using rule 120 (factor -> objeto_aAcceso .)
    MODULO          reduce using rule 120 (factor -> objeto_aAcceso .)
    PLUS            reduce using rule 120 (factor -> objeto_aAcceso .)
    MINUS           reduce using rule 120 (factor -> objeto_aAcceso .)
    AND             reduce using rule 120 (factor -> objeto_aAcceso .)
    OR              reduce using rule 120 (factor -> objeto_aAcceso .)
    LT              reduce using rule 120 (factor -> objeto_aAcceso .)
    LE              reduce using rule 120 (factor -> objeto_aAcceso .)
    GT              reduce using rule 120 (factor -> objeto_aAcceso .)
    GE              reduce using rule 120 (factor -> objeto_aAcceso .)
    EQ              reduce using rule 120 (factor -> objeto_aAcceso .)
    NE              reduce using rule 120 (factor -> objeto_aAcceso .)
    VAR             reduce using rule 120 (factor -> objeto_aAcceso .)
    PUBLIC          reduce using rule 120 (factor -> objeto_aAcceso .)
    IF              reduce using rule 120 (factor -> objeto_aAcceso .)
    WHILE           reduce using rule 120 (factor -> objeto_aAcceso .)
    PRIVATE         reduce using rule 120 (factor -> objeto_aAcceso .)
    PROTECTED       reduce using rule 120 (factor -> objeto_aAcceso .)
    ID              reduce using rule 120 (factor -> objeto_aAcceso .)
    PRINT           reduce using rule 120 (factor -> objeto_aAcceso .)
    READ            reduce using rule 120 (factor -> objeto_aAcceso .)
    RBRACE          reduce using rule 120 (factor -> objeto_aAcceso .)
    RETURN          reduce using rule 120 (factor -> objeto_aAcceso .)
    RBRACKET        reduce using rule 120 (factor -> objeto_aAcceso .)
    COMMA           reduce using rule 120 (factor -> objeto_aAcceso .)
    RPAREN          reduce using rule 120 (factor -> objeto_aAcceso .)


state 74

    (119) factor -> var .

    TIMES           reduce using rule 119 (factor -> var .)
    DIVIDE          reduce using rule 119 (factor -> var .)
    MODULO          reduce using rule 119 (factor -> var .)
    PLUS            reduce using rule 119 (factor -> var .)
    MINUS           reduce using rule 119 (factor -> var .)
    AND             reduce using rule 119 (factor -> var .)
    OR              reduce using rule 119 (factor -> var .)
    LT              reduce using rule 119 (factor -> var .)
    LE              reduce using rule 119 (factor -> var .)
    GT              reduce using rule 119 (factor -> var .)
    GE              reduce using rule 119 (factor -> var .)
    EQ              reduce using rule 119 (factor -> var .)
    NE              reduce using rule 119 (factor -> var .)
    VAR             reduce using rule 119 (factor -> var .)
    PUBLIC          reduce using rule 119 (factor -> var .)
    IF              reduce using rule 119 (factor -> var .)
    WHILE           reduce using rule 119 (factor -> var .)
    PRIVATE         reduce using rule 119 (factor -> var .)
    PROTECTED       reduce using rule 119 (factor -> var .)
    ID              reduce using rule 119 (factor -> var .)
    PRINT           reduce using rule 119 (factor -> var .)
    READ            reduce using rule 119 (factor -> var .)
    RBRACE          reduce using rule 119 (factor -> var .)
    RETURN          reduce using rule 119 (factor -> var .)
    RBRACKET        reduce using rule 119 (factor -> var .)
    COMMA           reduce using rule 119 (factor -> var .)
    RPAREN          reduce using rule 119 (factor -> var .)


state 75

    (122) var -> cint .

    TIMES           reduce using rule 122 (var -> cint .)
    DIVIDE          reduce using rule 122 (var -> cint .)
    MODULO          reduce using rule 122 (var -> cint .)
    PLUS            reduce using rule 122 (var -> cint .)
    MINUS           reduce using rule 122 (var -> cint .)
    AND             reduce using rule 122 (var -> cint .)
    OR              reduce using rule 122 (var -> cint .)
    LT              reduce using rule 122 (var -> cint .)
    LE              reduce using rule 122 (var -> cint .)
    GT              reduce using rule 122 (var -> cint .)
    GE              reduce using rule 122 (var -> cint .)
    EQ              reduce using rule 122 (var -> cint .)
    NE              reduce using rule 122 (var -> cint .)
    VAR             reduce using rule 122 (var -> cint .)
    PUBLIC          reduce using rule 122 (var -> cint .)
    IF              reduce using rule 122 (var -> cint .)
    WHILE           reduce using rule 122 (var -> cint .)
    PRIVATE         reduce using rule 122 (var -> cint .)
    PROTECTED       reduce using rule 122 (var -> cint .)
    ID              reduce using rule 122 (var -> cint .)
    PRINT           reduce using rule 122 (var -> cint .)
    READ            reduce using rule 122 (var -> cint .)
    RBRACE          reduce using rule 122 (var -> cint .)
    RETURN          reduce using rule 122 (var -> cint .)
    RBRACKET        reduce using rule 122 (var -> cint .)
    COMMA           reduce using rule 122 (var -> cint .)
    RPAREN          reduce using rule 122 (var -> cint .)


state 76

    (123) var -> cfloat .

    TIMES           reduce using rule 123 (var -> cfloat .)
    DIVIDE          reduce using rule 123 (var -> cfloat .)
    MODULO          reduce using rule 123 (var -> cfloat .)
    PLUS            reduce using rule 123 (var -> cfloat .)
    MINUS           reduce using rule 123 (var -> cfloat .)
    AND             reduce using rule 123 (var -> cfloat .)
    OR              reduce using rule 123 (var -> cfloat .)
    LT              reduce using rule 123 (var -> cfloat .)
    LE              reduce using rule 123 (var -> cfloat .)
    GT              reduce using rule 123 (var -> cfloat .)
    GE              reduce using rule 123 (var -> cfloat .)
    EQ              reduce using rule 123 (var -> cfloat .)
    NE              reduce using rule 123 (var -> cfloat .)
    VAR             reduce using rule 123 (var -> cfloat .)
    PUBLIC          reduce using rule 123 (var -> cfloat .)
    IF              reduce using rule 123 (var -> cfloat .)
    WHILE           reduce using rule 123 (var -> cfloat .)
    PRIVATE         reduce using rule 123 (var -> cfloat .)
    PROTECTED       reduce using rule 123 (var -> cfloat .)
    ID              reduce using rule 123 (var -> cfloat .)
    PRINT           reduce using rule 123 (var -> cfloat .)
    READ            reduce using rule 123 (var -> cfloat .)
    RBRACE          reduce using rule 123 (var -> cfloat .)
    RETURN          reduce using rule 123 (var -> cfloat .)
    RBRACKET        reduce using rule 123 (var -> cfloat .)
    COMMA           reduce using rule 123 (var -> cfloat .)
    RPAREN          reduce using rule 123 (var -> cfloat .)


state 77

    (124) cint -> CINT .

    TIMES           reduce using rule 124 (cint -> CINT .)
    DIVIDE          reduce using rule 124 (cint -> CINT .)
    MODULO          reduce using rule 124 (cint -> CINT .)
    PLUS            reduce using rule 124 (cint -> CINT .)
    MINUS           reduce using rule 124 (cint -> CINT .)
    AND             reduce using rule 124 (cint -> CINT .)
    OR              reduce using rule 124 (cint -> CINT .)
    LT              reduce using rule 124 (cint -> CINT .)
    LE              reduce using rule 124 (cint -> CINT .)
    GT              reduce using rule 124 (cint -> CINT .)
    GE              reduce using rule 124 (cint -> CINT .)
    EQ              reduce using rule 124 (cint -> CINT .)
    NE              reduce using rule 124 (cint -> CINT .)
    VAR             reduce using rule 124 (cint -> CINT .)
    PUBLIC          reduce using rule 124 (cint -> CINT .)
    IF              reduce using rule 124 (cint -> CINT .)
    WHILE           reduce using rule 124 (cint -> CINT .)
    PRIVATE         reduce using rule 124 (cint -> CINT .)
    PROTECTED       reduce using rule 124 (cint -> CINT .)
    ID              reduce using rule 124 (cint -> CINT .)
    PRINT           reduce using rule 124 (cint -> CINT .)
    READ            reduce using rule 124 (cint -> CINT .)
    RBRACE          reduce using rule 124 (cint -> CINT .)
    RETURN          reduce using rule 124 (cint -> CINT .)
    RBRACKET        reduce using rule 124 (cint -> CINT .)
    COMMA           reduce using rule 124 (cint -> CINT .)
    RPAREN          reduce using rule 124 (cint -> CINT .)


state 78

    (125) cfloat -> NUMBER .

    TIMES           reduce using rule 125 (cfloat -> NUMBER .)
    DIVIDE          reduce using rule 125 (cfloat -> NUMBER .)
    MODULO          reduce using rule 125 (cfloat -> NUMBER .)
    PLUS            reduce using rule 125 (cfloat -> NUMBER .)
    MINUS           reduce using rule 125 (cfloat -> NUMBER .)
    AND             reduce using rule 125 (cfloat -> NUMBER .)
    OR              reduce using rule 125 (cfloat -> NUMBER .)
    LT              reduce using rule 125 (cfloat -> NUMBER .)
    LE              reduce using rule 125 (cfloat -> NUMBER .)
    GT              reduce using rule 125 (cfloat -> NUMBER .)
    GE              reduce using rule 125 (cfloat -> NUMBER .)
    EQ              reduce using rule 125 (cfloat -> NUMBER .)
    NE              reduce using rule 125 (cfloat -> NUMBER .)
    VAR             reduce using rule 125 (cfloat -> NUMBER .)
    PUBLIC          reduce using rule 125 (cfloat -> NUMBER .)
    IF              reduce using rule 125 (cfloat -> NUMBER .)
    WHILE           reduce using rule 125 (cfloat -> NUMBER .)
    PRIVATE         reduce using rule 125 (cfloat -> NUMBER .)
    PROTECTED       reduce using rule 125 (cfloat -> NUMBER .)
    ID              reduce using rule 125 (cfloat -> NUMBER .)
    PRINT           reduce using rule 125 (cfloat -> NUMBER .)
    READ            reduce using rule 125 (cfloat -> NUMBER .)
    RBRACE          reduce using rule 125 (cfloat -> NUMBER .)
    RETURN          reduce using rule 125 (cfloat -> NUMBER .)
    RBRACKET        reduce using rule 125 (cfloat -> NUMBER .)
    COMMA           reduce using rule 125 (cfloat -> NUMBER .)
    RPAREN          reduce using rule 125 (cfloat -> NUMBER .)


state 79

    (121) var -> ID .
    (132) objeto_aAcceso -> ID . PERIOD ID

    TIMES           reduce using rule 121 (var -> ID .)
    DIVIDE          reduce using rule 121 (var -> ID .)
    MODULO          reduce using rule 121 (var -> ID .)
    RBRACKET        reduce using rule 121 (var -> ID .)
    PLUS            reduce using rule 121 (var -> ID .)
    MINUS           reduce using rule 121 (var -> ID .)
    COMMA           reduce using rule 121 (var -> ID .)
    RPAREN          reduce using rule 121 (var -> ID .)
    AND             reduce using rule 121 (var -> ID .)
    OR              reduce using rule 121 (var -> ID .)
    LT              reduce using rule 121 (var -> ID .)
    LE              reduce using rule 121 (var -> ID .)
    GT              reduce using rule 121 (var -> ID .)
    GE              reduce using rule 121 (var -> ID .)
    EQ              reduce using rule 121 (var -> ID .)
    NE              reduce using rule 121 (var -> ID .)
    VAR             reduce using rule 121 (var -> ID .)
    PUBLIC          reduce using rule 121 (var -> ID .)
    IF              reduce using rule 121 (var -> ID .)
    WHILE           reduce using rule 121 (var -> ID .)
    PRIVATE         reduce using rule 121 (var -> ID .)
    PROTECTED       reduce using rule 121 (var -> ID .)
    ID              reduce using rule 121 (var -> ID .)
    PRINT           reduce using rule 121 (var -> ID .)
    READ            reduce using rule 121 (var -> ID .)
    RBRACE          reduce using rule 121 (var -> ID .)
    RETURN          reduce using rule 121 (var -> ID .)
    PERIOD          shift and go to state 131


state 80

    (82) asignacion -> ID LBRACKET exp . RBRACKET EQUALS expresion
    (83) asignacion -> ID LBRACKET exp . RBRACKET EQUALS llamada_func
    (84) asignacion -> ID LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (88) asignacion -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (108) exp -> exp . PLUS termino
    (109) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 132
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122


state 81

    (95) llamada_func -> ID LPAREN aux . RPAREN

    RPAREN          shift and go to state 133


state 82

    (96) aux -> exp .
    (97) aux -> exp . COMMA aux
    (108) exp -> exp . PLUS termino
    (109) exp -> exp . MINUS termino

    RPAREN          reduce using rule 96 (aux -> exp .)
    COMMA           shift and go to state 134
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122


state 83

    (132) objeto_aAcceso -> ID PERIOD ID .
    (95) llamada_func -> ID . LPAREN aux RPAREN

    EQUALS          reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    LBRACKET        reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    TIMES           reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    DIVIDE          reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    MODULO          reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    PLUS            reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    MINUS           reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    AND             reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    OR              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    LT              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    LE              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    GT              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    GE              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    EQ              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    NE              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    VAR             reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    PUBLIC          reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    IF              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    WHILE           reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    PRIVATE         reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    PROTECTED       reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    ID              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    PRINT           reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    READ            reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACE          reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    RETURN          reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    COMMA           reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    RPAREN          reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    LPAREN          shift and go to state 46


state 84

    (94) objeto_metodo -> ID PERIOD llamada_func .

    VAR             reduce using rule 94 (objeto_metodo -> ID PERIOD llamada_func .)
    PUBLIC          reduce using rule 94 (objeto_metodo -> ID PERIOD llamada_func .)
    IF              reduce using rule 94 (objeto_metodo -> ID PERIOD llamada_func .)
    WHILE           reduce using rule 94 (objeto_metodo -> ID PERIOD llamada_func .)
    PRIVATE         reduce using rule 94 (objeto_metodo -> ID PERIOD llamada_func .)
    PROTECTED       reduce using rule 94 (objeto_metodo -> ID PERIOD llamada_func .)
    ID              reduce using rule 94 (objeto_metodo -> ID PERIOD llamada_func .)
    PRINT           reduce using rule 94 (objeto_metodo -> ID PERIOD llamada_func .)
    READ            reduce using rule 94 (objeto_metodo -> ID PERIOD llamada_func .)
    RBRACE          reduce using rule 94 (objeto_metodo -> ID PERIOD llamada_func .)
    RETURN          reduce using rule 94 (objeto_metodo -> ID PERIOD llamada_func .)
    COMMA           reduce using rule 94 (objeto_metodo -> ID PERIOD llamada_func .)
    RPAREN          reduce using rule 94 (objeto_metodo -> ID PERIOD llamada_func .)


state 85

    (30) constructor -> PUBLIC ID LPAREN . param RPAREN bloque
    (40) param -> .
    (41) param -> . tipo_simple ID
    (42) param -> . tipo_simple ID COMMA param
    (73) tipo_simple -> . INT
    (74) tipo_simple -> . FLOAT

    RPAREN          reduce using rule 40 (param -> .)
    INT             shift and go to state 105
    FLOAT           shift and go to state 106

    param                          shift and go to state 135
    tipo_simple                    shift and go to state 136

state 86

    (32) funcion -> scope DEF ID . LPAREN param RPAREN contexto_func

    LPAREN          shift and go to state 137


state 87

    (18) condicion -> IF LPAREN expresion . RPAREN bloque_cond
    (19) condicion -> IF LPAREN expresion . RPAREN bloque_cond elif
    (20) condicion -> IF LPAREN expresion . RPAREN bloque_cond elif else

    RPAREN          shift and go to state 138


state 88

    (29) ciclo -> WHILE LPAREN expresion . RPAREN bloque

    RPAREN          shift and go to state 139


state 89

    (79) asignacion -> objeto_aAcceso EQUALS expresion .

    VAR             reduce using rule 79 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PUBLIC          reduce using rule 79 (asignacion -> objeto_aAcceso EQUALS expresion .)
    IF              reduce using rule 79 (asignacion -> objeto_aAcceso EQUALS expresion .)
    WHILE           reduce using rule 79 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PRIVATE         reduce using rule 79 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PROTECTED       reduce using rule 79 (asignacion -> objeto_aAcceso EQUALS expresion .)
    ID              reduce using rule 79 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PRINT           reduce using rule 79 (asignacion -> objeto_aAcceso EQUALS expresion .)
    READ            reduce using rule 79 (asignacion -> objeto_aAcceso EQUALS expresion .)
    RBRACE          reduce using rule 79 (asignacion -> objeto_aAcceso EQUALS expresion .)
    RETURN          reduce using rule 79 (asignacion -> objeto_aAcceso EQUALS expresion .)


state 90

    (80) asignacion -> objeto_aAcceso EQUALS llamada_func .

    VAR             reduce using rule 80 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PUBLIC          reduce using rule 80 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    IF              reduce using rule 80 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    WHILE           reduce using rule 80 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PRIVATE         reduce using rule 80 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PROTECTED       reduce using rule 80 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    ID              reduce using rule 80 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PRINT           reduce using rule 80 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    READ            reduce using rule 80 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    RBRACE          reduce using rule 80 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    RETURN          reduce using rule 80 (asignacion -> objeto_aAcceso EQUALS llamada_func .)


state 91

    (81) asignacion -> objeto_aAcceso EQUALS objeto_metodo .

    VAR             reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    IF              reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    WHILE           reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    ID              reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PRINT           reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    READ            reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    RBRACE          reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    RETURN          reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)


state 92

    (91) asignacion -> objeto_aAcceso LBRACKET LBRACKET . exp RBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> objeto_aAcceso LBRACKET LBRACKET . exp RBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> objeto_aAcceso LBRACKET LBRACKET . exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    objeto_aAcceso                 shift and go to state 73
    exp                            shift and go to state 140
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 93

    (85) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET EQUALS expresion
    (86) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET EQUALS llamada_func
    (87) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (108) exp -> exp . PLUS termino
    (109) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 141
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122


state 94

    (56) escritura -> PRINT LPAREN aux3 . RPAREN

    RPAREN          shift and go to state 142


state 95

    (57) aux3 -> expresion .
    (61) aux3 -> expresion . COMMA aux3

    RPAREN          reduce using rule 57 (aux3 -> expresion .)
    COMMA           shift and go to state 143


state 96

    (58) aux3 -> llamada_func .
    (62) aux3 -> llamada_func . COMMA aux3

    RPAREN          reduce using rule 58 (aux3 -> llamada_func .)
    COMMA           shift and go to state 144


state 97

    (59) aux3 -> objeto_metodo .
    (63) aux3 -> objeto_metodo . COMMA aux3

    RPAREN          reduce using rule 59 (aux3 -> objeto_metodo .)
    COMMA           shift and go to state 145


state 98

    (60) aux3 -> CSTRING .
    (64) aux3 -> CSTRING . COMMA aux3

    RPAREN          reduce using rule 60 (aux3 -> CSTRING .)
    COMMA           shift and go to state 146


state 99

    (51) lectura -> READ LPAREN aux4 . RPAREN

    RPAREN          shift and go to state 147


state 100

    (52) aux4 -> ID .
    (54) aux4 -> ID . COMMA aux4
    (132) objeto_aAcceso -> ID . PERIOD ID

    RPAREN          reduce using rule 52 (aux4 -> ID .)
    COMMA           shift and go to state 148
    PERIOD          shift and go to state 131


state 101

    (53) aux4 -> objeto_aAcceso .
    (55) aux4 -> objeto_aAcceso . COMMA aux4

    RPAREN          reduce using rule 53 (aux4 -> objeto_aAcceso .)
    COMMA           shift and go to state 149


state 102

    (4) class -> scope CLASS ID COLON ID .

    LBRACE          reduce using rule 4 (class -> scope CLASS ID COLON ID .)


state 103

    (65) vars -> VAR aux2 COLON tipo_simple .

    VAR             reduce using rule 65 (vars -> VAR aux2 COLON tipo_simple .)
    PUBLIC          reduce using rule 65 (vars -> VAR aux2 COLON tipo_simple .)
    IF              reduce using rule 65 (vars -> VAR aux2 COLON tipo_simple .)
    WHILE           reduce using rule 65 (vars -> VAR aux2 COLON tipo_simple .)
    PRIVATE         reduce using rule 65 (vars -> VAR aux2 COLON tipo_simple .)
    PROTECTED       reduce using rule 65 (vars -> VAR aux2 COLON tipo_simple .)
    ID              reduce using rule 65 (vars -> VAR aux2 COLON tipo_simple .)
    PRINT           reduce using rule 65 (vars -> VAR aux2 COLON tipo_simple .)
    READ            reduce using rule 65 (vars -> VAR aux2 COLON tipo_simple .)
    RBRACE          reduce using rule 65 (vars -> VAR aux2 COLON tipo_simple .)
    RETURN          reduce using rule 65 (vars -> VAR aux2 COLON tipo_simple .)


state 104

    (66) vars -> VAR aux2 COLON tipo_compuesto .

    VAR             reduce using rule 66 (vars -> VAR aux2 COLON tipo_compuesto .)
    PUBLIC          reduce using rule 66 (vars -> VAR aux2 COLON tipo_compuesto .)
    IF              reduce using rule 66 (vars -> VAR aux2 COLON tipo_compuesto .)
    WHILE           reduce using rule 66 (vars -> VAR aux2 COLON tipo_compuesto .)
    PRIVATE         reduce using rule 66 (vars -> VAR aux2 COLON tipo_compuesto .)
    PROTECTED       reduce using rule 66 (vars -> VAR aux2 COLON tipo_compuesto .)
    ID              reduce using rule 66 (vars -> VAR aux2 COLON tipo_compuesto .)
    PRINT           reduce using rule 66 (vars -> VAR aux2 COLON tipo_compuesto .)
    READ            reduce using rule 66 (vars -> VAR aux2 COLON tipo_compuesto .)
    RBRACE          reduce using rule 66 (vars -> VAR aux2 COLON tipo_compuesto .)
    RETURN          reduce using rule 66 (vars -> VAR aux2 COLON tipo_compuesto .)


state 105

    (73) tipo_simple -> INT .

    VAR             reduce using rule 73 (tipo_simple -> INT .)
    PUBLIC          reduce using rule 73 (tipo_simple -> INT .)
    IF              reduce using rule 73 (tipo_simple -> INT .)
    WHILE           reduce using rule 73 (tipo_simple -> INT .)
    PRIVATE         reduce using rule 73 (tipo_simple -> INT .)
    PROTECTED       reduce using rule 73 (tipo_simple -> INT .)
    ID              reduce using rule 73 (tipo_simple -> INT .)
    PRINT           reduce using rule 73 (tipo_simple -> INT .)
    READ            reduce using rule 73 (tipo_simple -> INT .)
    RBRACE          reduce using rule 73 (tipo_simple -> INT .)
    RETURN          reduce using rule 73 (tipo_simple -> INT .)


state 106

    (74) tipo_simple -> FLOAT .

    VAR             reduce using rule 74 (tipo_simple -> FLOAT .)
    PUBLIC          reduce using rule 74 (tipo_simple -> FLOAT .)
    IF              reduce using rule 74 (tipo_simple -> FLOAT .)
    WHILE           reduce using rule 74 (tipo_simple -> FLOAT .)
    PRIVATE         reduce using rule 74 (tipo_simple -> FLOAT .)
    PROTECTED       reduce using rule 74 (tipo_simple -> FLOAT .)
    ID              reduce using rule 74 (tipo_simple -> FLOAT .)
    PRINT           reduce using rule 74 (tipo_simple -> FLOAT .)
    READ            reduce using rule 74 (tipo_simple -> FLOAT .)
    RBRACE          reduce using rule 74 (tipo_simple -> FLOAT .)
    RETURN          reduce using rule 74 (tipo_simple -> FLOAT .)


state 107

    (75) tipo_compuesto -> ID .

    VAR             reduce using rule 75 (tipo_compuesto -> ID .)
    PUBLIC          reduce using rule 75 (tipo_compuesto -> ID .)
    IF              reduce using rule 75 (tipo_compuesto -> ID .)
    WHILE           reduce using rule 75 (tipo_compuesto -> ID .)
    PRIVATE         reduce using rule 75 (tipo_compuesto -> ID .)
    PROTECTED       reduce using rule 75 (tipo_compuesto -> ID .)
    ID              reduce using rule 75 (tipo_compuesto -> ID .)
    PRINT           reduce using rule 75 (tipo_compuesto -> ID .)
    READ            reduce using rule 75 (tipo_compuesto -> ID .)
    RBRACE          reduce using rule 75 (tipo_compuesto -> ID .)
    RETURN          reduce using rule 75 (tipo_compuesto -> ID .)


state 108

    (67) vars -> VAR ID LBRACKET cint . RBRACKET COLON tipo_simple
    (68) vars -> VAR ID LBRACKET cint . RBRACKET COLON tipo_compuesto
    (69) vars -> VAR ID LBRACKET cint . RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> VAR ID LBRACKET cint . RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto

    RBRACKET        shift and go to state 150


state 109

    (71) aux2 -> ID .
    (72) aux2 -> ID . COMMA aux2

    COLON           reduce using rule 71 (aux2 -> ID .)
    COMMA           shift and go to state 59


state 110

    (72) aux2 -> ID COMMA aux2 .

    COLON           reduce using rule 72 (aux2 -> ID COMMA aux2 .)


state 111

    (99) expresion -> exp_bool rel_op . exp_bool
    (102) expresion -> exp_bool rel_op . exp_bool AND expresion
    (103) expresion -> exp_bool rel_op . exp_bool OR expresion
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    exp_bool                       shift and go to state 151
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 112

    (100) expresion -> exp_bool AND . expresion
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . exp_bool AND expresion
    (101) expresion -> . exp_bool OR expresion
    (102) expresion -> . exp_bool rel_op exp_bool AND expresion
    (103) expresion -> . exp_bool rel_op exp_bool OR expresion
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    exp_bool                       shift and go to state 64
    expresion                      shift and go to state 152
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 113

    (101) expresion -> exp_bool OR . expresion
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . exp_bool AND expresion
    (101) expresion -> . exp_bool OR expresion
    (102) expresion -> . exp_bool rel_op exp_bool AND expresion
    (103) expresion -> . exp_bool rel_op exp_bool OR expresion
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    exp_bool                       shift and go to state 64
    expresion                      shift and go to state 153
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 114

    (126) rel_op -> LT .

    TRUE            reduce using rule 126 (rel_op -> LT .)
    FALSE           reduce using rule 126 (rel_op -> LT .)
    LPAREN          reduce using rule 126 (rel_op -> LT .)
    PLUS            reduce using rule 126 (rel_op -> LT .)
    MINUS           reduce using rule 126 (rel_op -> LT .)
    ID              reduce using rule 126 (rel_op -> LT .)
    CINT            reduce using rule 126 (rel_op -> LT .)
    NUMBER          reduce using rule 126 (rel_op -> LT .)


state 115

    (127) rel_op -> LE .

    TRUE            reduce using rule 127 (rel_op -> LE .)
    FALSE           reduce using rule 127 (rel_op -> LE .)
    LPAREN          reduce using rule 127 (rel_op -> LE .)
    PLUS            reduce using rule 127 (rel_op -> LE .)
    MINUS           reduce using rule 127 (rel_op -> LE .)
    ID              reduce using rule 127 (rel_op -> LE .)
    CINT            reduce using rule 127 (rel_op -> LE .)
    NUMBER          reduce using rule 127 (rel_op -> LE .)


state 116

    (128) rel_op -> GT .

    TRUE            reduce using rule 128 (rel_op -> GT .)
    FALSE           reduce using rule 128 (rel_op -> GT .)
    LPAREN          reduce using rule 128 (rel_op -> GT .)
    PLUS            reduce using rule 128 (rel_op -> GT .)
    MINUS           reduce using rule 128 (rel_op -> GT .)
    ID              reduce using rule 128 (rel_op -> GT .)
    CINT            reduce using rule 128 (rel_op -> GT .)
    NUMBER          reduce using rule 128 (rel_op -> GT .)


state 117

    (129) rel_op -> GE .

    TRUE            reduce using rule 129 (rel_op -> GE .)
    FALSE           reduce using rule 129 (rel_op -> GE .)
    LPAREN          reduce using rule 129 (rel_op -> GE .)
    PLUS            reduce using rule 129 (rel_op -> GE .)
    MINUS           reduce using rule 129 (rel_op -> GE .)
    ID              reduce using rule 129 (rel_op -> GE .)
    CINT            reduce using rule 129 (rel_op -> GE .)
    NUMBER          reduce using rule 129 (rel_op -> GE .)


state 118

    (130) rel_op -> EQ .

    TRUE            reduce using rule 130 (rel_op -> EQ .)
    FALSE           reduce using rule 130 (rel_op -> EQ .)
    LPAREN          reduce using rule 130 (rel_op -> EQ .)
    PLUS            reduce using rule 130 (rel_op -> EQ .)
    MINUS           reduce using rule 130 (rel_op -> EQ .)
    ID              reduce using rule 130 (rel_op -> EQ .)
    CINT            reduce using rule 130 (rel_op -> EQ .)
    NUMBER          reduce using rule 130 (rel_op -> EQ .)


state 119

    (131) rel_op -> NE .

    TRUE            reduce using rule 131 (rel_op -> NE .)
    FALSE           reduce using rule 131 (rel_op -> NE .)
    LPAREN          reduce using rule 131 (rel_op -> NE .)
    PLUS            reduce using rule 131 (rel_op -> NE .)
    MINUS           reduce using rule 131 (rel_op -> NE .)
    ID              reduce using rule 131 (rel_op -> NE .)
    CINT            reduce using rule 131 (rel_op -> NE .)
    NUMBER          reduce using rule 131 (rel_op -> NE .)


state 120

    (114) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 154


state 121

    (108) exp -> exp PLUS . termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    termino                        shift and go to state 155
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 122

    (109) exp -> exp MINUS . termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    termino                        shift and go to state 156
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 123

    (111) termino -> termino TIMES . factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    factor                         shift and go to state 157
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 124

    (112) termino -> termino DIVIDE . factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    factor                         shift and go to state 158
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 125

    (113) termino -> termino MODULO . factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    factor                         shift and go to state 159
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 126

    (115) factor -> PLUS objeto_aAcceso .

    TIMES           reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    DIVIDE          reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    MODULO          reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    PLUS            reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    MINUS           reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    AND             reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    OR              reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    LT              reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    LE              reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    GT              reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    GE              reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    EQ              reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    NE              reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    VAR             reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    PUBLIC          reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    IF              reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    WHILE           reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    PRIVATE         reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    PROTECTED       reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    ID              reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    PRINT           reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    READ            reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    RBRACE          reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    RETURN          reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    RBRACKET        reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    COMMA           reduce using rule 115 (factor -> PLUS objeto_aAcceso .)
    RPAREN          reduce using rule 115 (factor -> PLUS objeto_aAcceso .)


state 127

    (117) factor -> PLUS var .

    TIMES           reduce using rule 117 (factor -> PLUS var .)
    DIVIDE          reduce using rule 117 (factor -> PLUS var .)
    MODULO          reduce using rule 117 (factor -> PLUS var .)
    PLUS            reduce using rule 117 (factor -> PLUS var .)
    MINUS           reduce using rule 117 (factor -> PLUS var .)
    AND             reduce using rule 117 (factor -> PLUS var .)
    OR              reduce using rule 117 (factor -> PLUS var .)
    LT              reduce using rule 117 (factor -> PLUS var .)
    LE              reduce using rule 117 (factor -> PLUS var .)
    GT              reduce using rule 117 (factor -> PLUS var .)
    GE              reduce using rule 117 (factor -> PLUS var .)
    EQ              reduce using rule 117 (factor -> PLUS var .)
    NE              reduce using rule 117 (factor -> PLUS var .)
    VAR             reduce using rule 117 (factor -> PLUS var .)
    PUBLIC          reduce using rule 117 (factor -> PLUS var .)
    IF              reduce using rule 117 (factor -> PLUS var .)
    WHILE           reduce using rule 117 (factor -> PLUS var .)
    PRIVATE         reduce using rule 117 (factor -> PLUS var .)
    PROTECTED       reduce using rule 117 (factor -> PLUS var .)
    ID              reduce using rule 117 (factor -> PLUS var .)
    PRINT           reduce using rule 117 (factor -> PLUS var .)
    READ            reduce using rule 117 (factor -> PLUS var .)
    RBRACE          reduce using rule 117 (factor -> PLUS var .)
    RETURN          reduce using rule 117 (factor -> PLUS var .)
    RBRACKET        reduce using rule 117 (factor -> PLUS var .)
    COMMA           reduce using rule 117 (factor -> PLUS var .)
    RPAREN          reduce using rule 117 (factor -> PLUS var .)


state 128

    (132) objeto_aAcceso -> ID . PERIOD ID
    (121) var -> ID .

    PERIOD          shift and go to state 131
    TIMES           reduce using rule 121 (var -> ID .)
    DIVIDE          reduce using rule 121 (var -> ID .)
    MODULO          reduce using rule 121 (var -> ID .)
    PLUS            reduce using rule 121 (var -> ID .)
    MINUS           reduce using rule 121 (var -> ID .)
    AND             reduce using rule 121 (var -> ID .)
    OR              reduce using rule 121 (var -> ID .)
    LT              reduce using rule 121 (var -> ID .)
    LE              reduce using rule 121 (var -> ID .)
    GT              reduce using rule 121 (var -> ID .)
    GE              reduce using rule 121 (var -> ID .)
    EQ              reduce using rule 121 (var -> ID .)
    NE              reduce using rule 121 (var -> ID .)
    VAR             reduce using rule 121 (var -> ID .)
    PUBLIC          reduce using rule 121 (var -> ID .)
    IF              reduce using rule 121 (var -> ID .)
    WHILE           reduce using rule 121 (var -> ID .)
    PRIVATE         reduce using rule 121 (var -> ID .)
    PROTECTED       reduce using rule 121 (var -> ID .)
    ID              reduce using rule 121 (var -> ID .)
    PRINT           reduce using rule 121 (var -> ID .)
    READ            reduce using rule 121 (var -> ID .)
    RBRACE          reduce using rule 121 (var -> ID .)
    RETURN          reduce using rule 121 (var -> ID .)
    RBRACKET        reduce using rule 121 (var -> ID .)
    COMMA           reduce using rule 121 (var -> ID .)
    RPAREN          reduce using rule 121 (var -> ID .)


state 129

    (116) factor -> MINUS objeto_aAcceso .

    TIMES           reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    DIVIDE          reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    MODULO          reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    PLUS            reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    MINUS           reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    AND             reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    OR              reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    LT              reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    LE              reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    GT              reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    GE              reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    EQ              reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    NE              reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    VAR             reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    PUBLIC          reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    IF              reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    WHILE           reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    PRIVATE         reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    PROTECTED       reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    ID              reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    PRINT           reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    READ            reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    RBRACE          reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    RETURN          reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    RBRACKET        reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    COMMA           reduce using rule 116 (factor -> MINUS objeto_aAcceso .)
    RPAREN          reduce using rule 116 (factor -> MINUS objeto_aAcceso .)


state 130

    (118) factor -> MINUS var .

    TIMES           reduce using rule 118 (factor -> MINUS var .)
    DIVIDE          reduce using rule 118 (factor -> MINUS var .)
    MODULO          reduce using rule 118 (factor -> MINUS var .)
    PLUS            reduce using rule 118 (factor -> MINUS var .)
    MINUS           reduce using rule 118 (factor -> MINUS var .)
    AND             reduce using rule 118 (factor -> MINUS var .)
    OR              reduce using rule 118 (factor -> MINUS var .)
    LT              reduce using rule 118 (factor -> MINUS var .)
    LE              reduce using rule 118 (factor -> MINUS var .)
    GT              reduce using rule 118 (factor -> MINUS var .)
    GE              reduce using rule 118 (factor -> MINUS var .)
    EQ              reduce using rule 118 (factor -> MINUS var .)
    NE              reduce using rule 118 (factor -> MINUS var .)
    VAR             reduce using rule 118 (factor -> MINUS var .)
    PUBLIC          reduce using rule 118 (factor -> MINUS var .)
    IF              reduce using rule 118 (factor -> MINUS var .)
    WHILE           reduce using rule 118 (factor -> MINUS var .)
    PRIVATE         reduce using rule 118 (factor -> MINUS var .)
    PROTECTED       reduce using rule 118 (factor -> MINUS var .)
    ID              reduce using rule 118 (factor -> MINUS var .)
    PRINT           reduce using rule 118 (factor -> MINUS var .)
    READ            reduce using rule 118 (factor -> MINUS var .)
    RBRACE          reduce using rule 118 (factor -> MINUS var .)
    RETURN          reduce using rule 118 (factor -> MINUS var .)
    RBRACKET        reduce using rule 118 (factor -> MINUS var .)
    COMMA           reduce using rule 118 (factor -> MINUS var .)
    RPAREN          reduce using rule 118 (factor -> MINUS var .)


state 131

    (132) objeto_aAcceso -> ID PERIOD . ID

    ID              shift and go to state 160


state 132

    (82) asignacion -> ID LBRACKET exp RBRACKET . EQUALS expresion
    (83) asignacion -> ID LBRACKET exp RBRACKET . EQUALS llamada_func
    (84) asignacion -> ID LBRACKET exp RBRACKET . EQUALS objeto_metodo
    (88) asignacion -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS objeto_metodo

    EQUALS          shift and go to state 162
    LBRACKET        shift and go to state 161


state 133

    (95) llamada_func -> ID LPAREN aux RPAREN .

    VAR             reduce using rule 95 (llamada_func -> ID LPAREN aux RPAREN .)
    PUBLIC          reduce using rule 95 (llamada_func -> ID LPAREN aux RPAREN .)
    IF              reduce using rule 95 (llamada_func -> ID LPAREN aux RPAREN .)
    WHILE           reduce using rule 95 (llamada_func -> ID LPAREN aux RPAREN .)
    PRIVATE         reduce using rule 95 (llamada_func -> ID LPAREN aux RPAREN .)
    PROTECTED       reduce using rule 95 (llamada_func -> ID LPAREN aux RPAREN .)
    ID              reduce using rule 95 (llamada_func -> ID LPAREN aux RPAREN .)
    PRINT           reduce using rule 95 (llamada_func -> ID LPAREN aux RPAREN .)
    READ            reduce using rule 95 (llamada_func -> ID LPAREN aux RPAREN .)
    RBRACE          reduce using rule 95 (llamada_func -> ID LPAREN aux RPAREN .)
    RETURN          reduce using rule 95 (llamada_func -> ID LPAREN aux RPAREN .)
    COMMA           reduce using rule 95 (llamada_func -> ID LPAREN aux RPAREN .)
    RPAREN          reduce using rule 95 (llamada_func -> ID LPAREN aux RPAREN .)


state 134

    (97) aux -> exp COMMA . aux
    (96) aux -> . exp
    (97) aux -> . exp COMMA aux
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    exp                            shift and go to state 82
    aux                            shift and go to state 163
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 135

    (30) constructor -> PUBLIC ID LPAREN param . RPAREN bloque

    RPAREN          shift and go to state 164


state 136

    (41) param -> tipo_simple . ID
    (42) param -> tipo_simple . ID COMMA param

    ID              shift and go to state 165


state 137

    (32) funcion -> scope DEF ID LPAREN . param RPAREN contexto_func
    (40) param -> .
    (41) param -> . tipo_simple ID
    (42) param -> . tipo_simple ID COMMA param
    (73) tipo_simple -> . INT
    (74) tipo_simple -> . FLOAT

    RPAREN          reduce using rule 40 (param -> .)
    INT             shift and go to state 105
    FLOAT           shift and go to state 106

    param                          shift and go to state 166
    tipo_simple                    shift and go to state 136

state 138

    (18) condicion -> IF LPAREN expresion RPAREN . bloque_cond
    (19) condicion -> IF LPAREN expresion RPAREN . bloque_cond elif
    (20) condicion -> IF LPAREN expresion RPAREN . bloque_cond elif else
    (24) bloque_cond -> . LBRACE aux5_cond RBRACE

    LBRACE          shift and go to state 168

    bloque_cond                    shift and go to state 167

state 139

    (29) ciclo -> WHILE LPAREN expresion RPAREN . bloque
    (31) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 170

    bloque                         shift and go to state 169

state 140

    (91) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp . RBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp . RBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp . RBRACKET exp RBRACKET EQUALS objeto_metodo
    (108) exp -> exp . PLUS termino
    (109) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 171
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122


state 141

    (85) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . EQUALS expresion
    (86) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . EQUALS llamada_func
    (87) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . EQUALS objeto_metodo

    EQUALS          shift and go to state 172


state 142

    (56) escritura -> PRINT LPAREN aux3 RPAREN .

    VAR             reduce using rule 56 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PUBLIC          reduce using rule 56 (escritura -> PRINT LPAREN aux3 RPAREN .)
    IF              reduce using rule 56 (escritura -> PRINT LPAREN aux3 RPAREN .)
    WHILE           reduce using rule 56 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PRIVATE         reduce using rule 56 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PROTECTED       reduce using rule 56 (escritura -> PRINT LPAREN aux3 RPAREN .)
    ID              reduce using rule 56 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PRINT           reduce using rule 56 (escritura -> PRINT LPAREN aux3 RPAREN .)
    READ            reduce using rule 56 (escritura -> PRINT LPAREN aux3 RPAREN .)
    RBRACE          reduce using rule 56 (escritura -> PRINT LPAREN aux3 RPAREN .)
    RETURN          reduce using rule 56 (escritura -> PRINT LPAREN aux3 RPAREN .)


state 143

    (61) aux3 -> expresion COMMA . aux3
    (57) aux3 -> . expresion
    (58) aux3 -> . llamada_func
    (59) aux3 -> . objeto_metodo
    (60) aux3 -> . CSTRING
    (61) aux3 -> . expresion COMMA aux3
    (62) aux3 -> . llamada_func COMMA aux3
    (63) aux3 -> . objeto_metodo COMMA aux3
    (64) aux3 -> . CSTRING COMMA aux3
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . exp_bool AND expresion
    (101) expresion -> . exp_bool OR expresion
    (102) expresion -> . exp_bool rel_op exp_bool AND expresion
    (103) expresion -> . exp_bool rel_op exp_bool OR expresion
    (95) llamada_func -> . ID LPAREN aux RPAREN
    (94) objeto_metodo -> . ID PERIOD llamada_func
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    CSTRING         shift and go to state 98
    ID              shift and go to state 60
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    expresion                      shift and go to state 95
    aux3                           shift and go to state 173
    llamada_func                   shift and go to state 96
    objeto_metodo                  shift and go to state 97
    exp_bool                       shift and go to state 64
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 144

    (62) aux3 -> llamada_func COMMA . aux3
    (57) aux3 -> . expresion
    (58) aux3 -> . llamada_func
    (59) aux3 -> . objeto_metodo
    (60) aux3 -> . CSTRING
    (61) aux3 -> . expresion COMMA aux3
    (62) aux3 -> . llamada_func COMMA aux3
    (63) aux3 -> . objeto_metodo COMMA aux3
    (64) aux3 -> . CSTRING COMMA aux3
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . exp_bool AND expresion
    (101) expresion -> . exp_bool OR expresion
    (102) expresion -> . exp_bool rel_op exp_bool AND expresion
    (103) expresion -> . exp_bool rel_op exp_bool OR expresion
    (95) llamada_func -> . ID LPAREN aux RPAREN
    (94) objeto_metodo -> . ID PERIOD llamada_func
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    CSTRING         shift and go to state 98
    ID              shift and go to state 60
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    llamada_func                   shift and go to state 96
    aux3                           shift and go to state 174
    expresion                      shift and go to state 95
    objeto_metodo                  shift and go to state 97
    exp_bool                       shift and go to state 64
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 145

    (63) aux3 -> objeto_metodo COMMA . aux3
    (57) aux3 -> . expresion
    (58) aux3 -> . llamada_func
    (59) aux3 -> . objeto_metodo
    (60) aux3 -> . CSTRING
    (61) aux3 -> . expresion COMMA aux3
    (62) aux3 -> . llamada_func COMMA aux3
    (63) aux3 -> . objeto_metodo COMMA aux3
    (64) aux3 -> . CSTRING COMMA aux3
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . exp_bool AND expresion
    (101) expresion -> . exp_bool OR expresion
    (102) expresion -> . exp_bool rel_op exp_bool AND expresion
    (103) expresion -> . exp_bool rel_op exp_bool OR expresion
    (95) llamada_func -> . ID LPAREN aux RPAREN
    (94) objeto_metodo -> . ID PERIOD llamada_func
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    CSTRING         shift and go to state 98
    ID              shift and go to state 60
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    objeto_metodo                  shift and go to state 97
    aux3                           shift and go to state 175
    expresion                      shift and go to state 95
    llamada_func                   shift and go to state 96
    exp_bool                       shift and go to state 64
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 146

    (64) aux3 -> CSTRING COMMA . aux3
    (57) aux3 -> . expresion
    (58) aux3 -> . llamada_func
    (59) aux3 -> . objeto_metodo
    (60) aux3 -> . CSTRING
    (61) aux3 -> . expresion COMMA aux3
    (62) aux3 -> . llamada_func COMMA aux3
    (63) aux3 -> . objeto_metodo COMMA aux3
    (64) aux3 -> . CSTRING COMMA aux3
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . exp_bool AND expresion
    (101) expresion -> . exp_bool OR expresion
    (102) expresion -> . exp_bool rel_op exp_bool AND expresion
    (103) expresion -> . exp_bool rel_op exp_bool OR expresion
    (95) llamada_func -> . ID LPAREN aux RPAREN
    (94) objeto_metodo -> . ID PERIOD llamada_func
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    CSTRING         shift and go to state 98
    ID              shift and go to state 60
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    aux3                           shift and go to state 176
    expresion                      shift and go to state 95
    llamada_func                   shift and go to state 96
    objeto_metodo                  shift and go to state 97
    exp_bool                       shift and go to state 64
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 147

    (51) lectura -> READ LPAREN aux4 RPAREN .

    VAR             reduce using rule 51 (lectura -> READ LPAREN aux4 RPAREN .)
    PUBLIC          reduce using rule 51 (lectura -> READ LPAREN aux4 RPAREN .)
    IF              reduce using rule 51 (lectura -> READ LPAREN aux4 RPAREN .)
    WHILE           reduce using rule 51 (lectura -> READ LPAREN aux4 RPAREN .)
    PRIVATE         reduce using rule 51 (lectura -> READ LPAREN aux4 RPAREN .)
    PROTECTED       reduce using rule 51 (lectura -> READ LPAREN aux4 RPAREN .)
    ID              reduce using rule 51 (lectura -> READ LPAREN aux4 RPAREN .)
    PRINT           reduce using rule 51 (lectura -> READ LPAREN aux4 RPAREN .)
    READ            reduce using rule 51 (lectura -> READ LPAREN aux4 RPAREN .)
    RBRACE          reduce using rule 51 (lectura -> READ LPAREN aux4 RPAREN .)
    RETURN          reduce using rule 51 (lectura -> READ LPAREN aux4 RPAREN .)


state 148

    (54) aux4 -> ID COMMA . aux4
    (52) aux4 -> . ID
    (53) aux4 -> . objeto_aAcceso
    (54) aux4 -> . ID COMMA aux4
    (55) aux4 -> . objeto_aAcceso COMMA aux4
    (132) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 100

    aux4                           shift and go to state 177
    objeto_aAcceso                 shift and go to state 101

state 149

    (55) aux4 -> objeto_aAcceso COMMA . aux4
    (52) aux4 -> . ID
    (53) aux4 -> . objeto_aAcceso
    (54) aux4 -> . ID COMMA aux4
    (55) aux4 -> . objeto_aAcceso COMMA aux4
    (132) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 100

    objeto_aAcceso                 shift and go to state 101
    aux4                           shift and go to state 178

state 150

    (67) vars -> VAR ID LBRACKET cint RBRACKET . COLON tipo_simple
    (68) vars -> VAR ID LBRACKET cint RBRACKET . COLON tipo_compuesto
    (69) vars -> VAR ID LBRACKET cint RBRACKET . LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> VAR ID LBRACKET cint RBRACKET . LBRACKET cint RBRACKET COLON tipo_compuesto

    COLON           shift and go to state 180
    LBRACKET        shift and go to state 179


state 151

    (99) expresion -> exp_bool rel_op exp_bool .
    (102) expresion -> exp_bool rel_op exp_bool . AND expresion
    (103) expresion -> exp_bool rel_op exp_bool . OR expresion

    VAR             reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)
    PUBLIC          reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)
    IF              reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)
    WHILE           reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)
    PRIVATE         reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)
    PROTECTED       reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)
    ID              reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)
    PRINT           reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)
    READ            reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)
    RBRACE          reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)
    RETURN          reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)
    RPAREN          reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)
    COMMA           reduce using rule 99 (expresion -> exp_bool rel_op exp_bool .)
    AND             shift and go to state 181
    OR              shift and go to state 182


state 152

    (100) expresion -> exp_bool AND expresion .

    VAR             reduce using rule 100 (expresion -> exp_bool AND expresion .)
    PUBLIC          reduce using rule 100 (expresion -> exp_bool AND expresion .)
    IF              reduce using rule 100 (expresion -> exp_bool AND expresion .)
    WHILE           reduce using rule 100 (expresion -> exp_bool AND expresion .)
    PRIVATE         reduce using rule 100 (expresion -> exp_bool AND expresion .)
    PROTECTED       reduce using rule 100 (expresion -> exp_bool AND expresion .)
    ID              reduce using rule 100 (expresion -> exp_bool AND expresion .)
    PRINT           reduce using rule 100 (expresion -> exp_bool AND expresion .)
    READ            reduce using rule 100 (expresion -> exp_bool AND expresion .)
    RBRACE          reduce using rule 100 (expresion -> exp_bool AND expresion .)
    RETURN          reduce using rule 100 (expresion -> exp_bool AND expresion .)
    RPAREN          reduce using rule 100 (expresion -> exp_bool AND expresion .)
    COMMA           reduce using rule 100 (expresion -> exp_bool AND expresion .)


state 153

    (101) expresion -> exp_bool OR expresion .

    VAR             reduce using rule 101 (expresion -> exp_bool OR expresion .)
    PUBLIC          reduce using rule 101 (expresion -> exp_bool OR expresion .)
    IF              reduce using rule 101 (expresion -> exp_bool OR expresion .)
    WHILE           reduce using rule 101 (expresion -> exp_bool OR expresion .)
    PRIVATE         reduce using rule 101 (expresion -> exp_bool OR expresion .)
    PROTECTED       reduce using rule 101 (expresion -> exp_bool OR expresion .)
    ID              reduce using rule 101 (expresion -> exp_bool OR expresion .)
    PRINT           reduce using rule 101 (expresion -> exp_bool OR expresion .)
    READ            reduce using rule 101 (expresion -> exp_bool OR expresion .)
    RBRACE          reduce using rule 101 (expresion -> exp_bool OR expresion .)
    RETURN          reduce using rule 101 (expresion -> exp_bool OR expresion .)
    RPAREN          reduce using rule 101 (expresion -> exp_bool OR expresion .)
    COMMA           reduce using rule 101 (expresion -> exp_bool OR expresion .)


state 154

    (114) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    MODULO          reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    AND             reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    OR              reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    LT              reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    LE              reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    GT              reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    GE              reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    EQ              reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    NE              reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    VAR             reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    PUBLIC          reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    IF              reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    WHILE           reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    PRIVATE         reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    PROTECTED       reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    ID              reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    PRINT           reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    READ            reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    RBRACE          reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    RETURN          reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 114 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 114 (factor -> LPAREN expresion RPAREN .)


state 155

    (108) exp -> exp PLUS termino .
    (111) termino -> termino . TIMES factor
    (112) termino -> termino . DIVIDE factor
    (113) termino -> termino . MODULO factor

    PLUS            reduce using rule 108 (exp -> exp PLUS termino .)
    MINUS           reduce using rule 108 (exp -> exp PLUS termino .)
    AND             reduce using rule 108 (exp -> exp PLUS termino .)
    OR              reduce using rule 108 (exp -> exp PLUS termino .)
    LT              reduce using rule 108 (exp -> exp PLUS termino .)
    LE              reduce using rule 108 (exp -> exp PLUS termino .)
    GT              reduce using rule 108 (exp -> exp PLUS termino .)
    GE              reduce using rule 108 (exp -> exp PLUS termino .)
    EQ              reduce using rule 108 (exp -> exp PLUS termino .)
    NE              reduce using rule 108 (exp -> exp PLUS termino .)
    VAR             reduce using rule 108 (exp -> exp PLUS termino .)
    PUBLIC          reduce using rule 108 (exp -> exp PLUS termino .)
    IF              reduce using rule 108 (exp -> exp PLUS termino .)
    WHILE           reduce using rule 108 (exp -> exp PLUS termino .)
    PRIVATE         reduce using rule 108 (exp -> exp PLUS termino .)
    PROTECTED       reduce using rule 108 (exp -> exp PLUS termino .)
    ID              reduce using rule 108 (exp -> exp PLUS termino .)
    PRINT           reduce using rule 108 (exp -> exp PLUS termino .)
    READ            reduce using rule 108 (exp -> exp PLUS termino .)
    RBRACE          reduce using rule 108 (exp -> exp PLUS termino .)
    RETURN          reduce using rule 108 (exp -> exp PLUS termino .)
    RBRACKET        reduce using rule 108 (exp -> exp PLUS termino .)
    COMMA           reduce using rule 108 (exp -> exp PLUS termino .)
    RPAREN          reduce using rule 108 (exp -> exp PLUS termino .)
    TIMES           shift and go to state 123
    DIVIDE          shift and go to state 124
    MODULO          shift and go to state 125


state 156

    (109) exp -> exp MINUS termino .
    (111) termino -> termino . TIMES factor
    (112) termino -> termino . DIVIDE factor
    (113) termino -> termino . MODULO factor

    PLUS            reduce using rule 109 (exp -> exp MINUS termino .)
    MINUS           reduce using rule 109 (exp -> exp MINUS termino .)
    AND             reduce using rule 109 (exp -> exp MINUS termino .)
    OR              reduce using rule 109 (exp -> exp MINUS termino .)
    LT              reduce using rule 109 (exp -> exp MINUS termino .)
    LE              reduce using rule 109 (exp -> exp MINUS termino .)
    GT              reduce using rule 109 (exp -> exp MINUS termino .)
    GE              reduce using rule 109 (exp -> exp MINUS termino .)
    EQ              reduce using rule 109 (exp -> exp MINUS termino .)
    NE              reduce using rule 109 (exp -> exp MINUS termino .)
    VAR             reduce using rule 109 (exp -> exp MINUS termino .)
    PUBLIC          reduce using rule 109 (exp -> exp MINUS termino .)
    IF              reduce using rule 109 (exp -> exp MINUS termino .)
    WHILE           reduce using rule 109 (exp -> exp MINUS termino .)
    PRIVATE         reduce using rule 109 (exp -> exp MINUS termino .)
    PROTECTED       reduce using rule 109 (exp -> exp MINUS termino .)
    ID              reduce using rule 109 (exp -> exp MINUS termino .)
    PRINT           reduce using rule 109 (exp -> exp MINUS termino .)
    READ            reduce using rule 109 (exp -> exp MINUS termino .)
    RBRACE          reduce using rule 109 (exp -> exp MINUS termino .)
    RETURN          reduce using rule 109 (exp -> exp MINUS termino .)
    RBRACKET        reduce using rule 109 (exp -> exp MINUS termino .)
    COMMA           reduce using rule 109 (exp -> exp MINUS termino .)
    RPAREN          reduce using rule 109 (exp -> exp MINUS termino .)
    TIMES           shift and go to state 123
    DIVIDE          shift and go to state 124
    MODULO          shift and go to state 125


state 157

    (111) termino -> termino TIMES factor .

    TIMES           reduce using rule 111 (termino -> termino TIMES factor .)
    DIVIDE          reduce using rule 111 (termino -> termino TIMES factor .)
    MODULO          reduce using rule 111 (termino -> termino TIMES factor .)
    PLUS            reduce using rule 111 (termino -> termino TIMES factor .)
    MINUS           reduce using rule 111 (termino -> termino TIMES factor .)
    AND             reduce using rule 111 (termino -> termino TIMES factor .)
    OR              reduce using rule 111 (termino -> termino TIMES factor .)
    LT              reduce using rule 111 (termino -> termino TIMES factor .)
    LE              reduce using rule 111 (termino -> termino TIMES factor .)
    GT              reduce using rule 111 (termino -> termino TIMES factor .)
    GE              reduce using rule 111 (termino -> termino TIMES factor .)
    EQ              reduce using rule 111 (termino -> termino TIMES factor .)
    NE              reduce using rule 111 (termino -> termino TIMES factor .)
    VAR             reduce using rule 111 (termino -> termino TIMES factor .)
    PUBLIC          reduce using rule 111 (termino -> termino TIMES factor .)
    IF              reduce using rule 111 (termino -> termino TIMES factor .)
    WHILE           reduce using rule 111 (termino -> termino TIMES factor .)
    PRIVATE         reduce using rule 111 (termino -> termino TIMES factor .)
    PROTECTED       reduce using rule 111 (termino -> termino TIMES factor .)
    ID              reduce using rule 111 (termino -> termino TIMES factor .)
    PRINT           reduce using rule 111 (termino -> termino TIMES factor .)
    READ            reduce using rule 111 (termino -> termino TIMES factor .)
    RBRACE          reduce using rule 111 (termino -> termino TIMES factor .)
    RETURN          reduce using rule 111 (termino -> termino TIMES factor .)
    RBRACKET        reduce using rule 111 (termino -> termino TIMES factor .)
    COMMA           reduce using rule 111 (termino -> termino TIMES factor .)
    RPAREN          reduce using rule 111 (termino -> termino TIMES factor .)


state 158

    (112) termino -> termino DIVIDE factor .

    TIMES           reduce using rule 112 (termino -> termino DIVIDE factor .)
    DIVIDE          reduce using rule 112 (termino -> termino DIVIDE factor .)
    MODULO          reduce using rule 112 (termino -> termino DIVIDE factor .)
    PLUS            reduce using rule 112 (termino -> termino DIVIDE factor .)
    MINUS           reduce using rule 112 (termino -> termino DIVIDE factor .)
    AND             reduce using rule 112 (termino -> termino DIVIDE factor .)
    OR              reduce using rule 112 (termino -> termino DIVIDE factor .)
    LT              reduce using rule 112 (termino -> termino DIVIDE factor .)
    LE              reduce using rule 112 (termino -> termino DIVIDE factor .)
    GT              reduce using rule 112 (termino -> termino DIVIDE factor .)
    GE              reduce using rule 112 (termino -> termino DIVIDE factor .)
    EQ              reduce using rule 112 (termino -> termino DIVIDE factor .)
    NE              reduce using rule 112 (termino -> termino DIVIDE factor .)
    VAR             reduce using rule 112 (termino -> termino DIVIDE factor .)
    PUBLIC          reduce using rule 112 (termino -> termino DIVIDE factor .)
    IF              reduce using rule 112 (termino -> termino DIVIDE factor .)
    WHILE           reduce using rule 112 (termino -> termino DIVIDE factor .)
    PRIVATE         reduce using rule 112 (termino -> termino DIVIDE factor .)
    PROTECTED       reduce using rule 112 (termino -> termino DIVIDE factor .)
    ID              reduce using rule 112 (termino -> termino DIVIDE factor .)
    PRINT           reduce using rule 112 (termino -> termino DIVIDE factor .)
    READ            reduce using rule 112 (termino -> termino DIVIDE factor .)
    RBRACE          reduce using rule 112 (termino -> termino DIVIDE factor .)
    RETURN          reduce using rule 112 (termino -> termino DIVIDE factor .)
    RBRACKET        reduce using rule 112 (termino -> termino DIVIDE factor .)
    COMMA           reduce using rule 112 (termino -> termino DIVIDE factor .)
    RPAREN          reduce using rule 112 (termino -> termino DIVIDE factor .)


state 159

    (113) termino -> termino MODULO factor .

    TIMES           reduce using rule 113 (termino -> termino MODULO factor .)
    DIVIDE          reduce using rule 113 (termino -> termino MODULO factor .)
    MODULO          reduce using rule 113 (termino -> termino MODULO factor .)
    PLUS            reduce using rule 113 (termino -> termino MODULO factor .)
    MINUS           reduce using rule 113 (termino -> termino MODULO factor .)
    AND             reduce using rule 113 (termino -> termino MODULO factor .)
    OR              reduce using rule 113 (termino -> termino MODULO factor .)
    LT              reduce using rule 113 (termino -> termino MODULO factor .)
    LE              reduce using rule 113 (termino -> termino MODULO factor .)
    GT              reduce using rule 113 (termino -> termino MODULO factor .)
    GE              reduce using rule 113 (termino -> termino MODULO factor .)
    EQ              reduce using rule 113 (termino -> termino MODULO factor .)
    NE              reduce using rule 113 (termino -> termino MODULO factor .)
    VAR             reduce using rule 113 (termino -> termino MODULO factor .)
    PUBLIC          reduce using rule 113 (termino -> termino MODULO factor .)
    IF              reduce using rule 113 (termino -> termino MODULO factor .)
    WHILE           reduce using rule 113 (termino -> termino MODULO factor .)
    PRIVATE         reduce using rule 113 (termino -> termino MODULO factor .)
    PROTECTED       reduce using rule 113 (termino -> termino MODULO factor .)
    ID              reduce using rule 113 (termino -> termino MODULO factor .)
    PRINT           reduce using rule 113 (termino -> termino MODULO factor .)
    READ            reduce using rule 113 (termino -> termino MODULO factor .)
    RBRACE          reduce using rule 113 (termino -> termino MODULO factor .)
    RETURN          reduce using rule 113 (termino -> termino MODULO factor .)
    RBRACKET        reduce using rule 113 (termino -> termino MODULO factor .)
    COMMA           reduce using rule 113 (termino -> termino MODULO factor .)
    RPAREN          reduce using rule 113 (termino -> termino MODULO factor .)


state 160

    (132) objeto_aAcceso -> ID PERIOD ID .

    TIMES           reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    DIVIDE          reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    MODULO          reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACKET        reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    PLUS            reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    MINUS           reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    COMMA           reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    RPAREN          reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    AND             reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    OR              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    LT              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    LE              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    GT              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    GE              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    EQ              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    NE              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    VAR             reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    PUBLIC          reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    IF              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    WHILE           reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    PRIVATE         reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    PROTECTED       reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    ID              reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    PRINT           reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    READ            reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACE          reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)
    RETURN          reduce using rule 132 (objeto_aAcceso -> ID PERIOD ID .)


state 161

    (88) asignacion -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS expresion
    (89) asignacion -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS llamada_func
    (90) asignacion -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    exp                            shift and go to state 183
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 162

    (82) asignacion -> ID LBRACKET exp RBRACKET EQUALS . expresion
    (83) asignacion -> ID LBRACKET exp RBRACKET EQUALS . llamada_func
    (84) asignacion -> ID LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . exp_bool AND expresion
    (101) expresion -> . exp_bool OR expresion
    (102) expresion -> . exp_bool rel_op exp_bool AND expresion
    (103) expresion -> . exp_bool rel_op exp_bool OR expresion
    (95) llamada_func -> . ID LPAREN aux RPAREN
    (94) objeto_metodo -> . ID PERIOD llamada_func
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    ID              shift and go to state 60
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    exp                            shift and go to state 68
    expresion                      shift and go to state 184
    llamada_func                   shift and go to state 185
    objeto_metodo                  shift and go to state 186
    exp_bool                       shift and go to state 64
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 163

    (97) aux -> exp COMMA aux .

    RPAREN          reduce using rule 97 (aux -> exp COMMA aux .)


state 164

    (30) constructor -> PUBLIC ID LPAREN param RPAREN . bloque
    (31) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 170

    bloque                         shift and go to state 187

state 165

    (41) param -> tipo_simple ID .
    (42) param -> tipo_simple ID . COMMA param

    RPAREN          reduce using rule 41 (param -> tipo_simple ID .)
    COMMA           shift and go to state 188


state 166

    (32) funcion -> scope DEF ID LPAREN param . RPAREN contexto_func

    RPAREN          shift and go to state 189


state 167

    (18) condicion -> IF LPAREN expresion RPAREN bloque_cond .
    (19) condicion -> IF LPAREN expresion RPAREN bloque_cond . elif
    (20) condicion -> IF LPAREN expresion RPAREN bloque_cond . elif else
    (21) elif -> .
    (22) elif -> . ELIF LPAREN expresion RPAREN bloque_cond elif

  ! reduce/reduce conflict for VAR resolved using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque_cond .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque_cond .)
  ! reduce/reduce conflict for IF resolved using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque_cond .)
  ! reduce/reduce conflict for WHILE resolved using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque_cond .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque_cond .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque_cond .)
  ! reduce/reduce conflict for ID resolved using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque_cond .)
  ! reduce/reduce conflict for PRINT resolved using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque_cond .)
  ! reduce/reduce conflict for READ resolved using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque_cond .)
  ! reduce/reduce conflict for RBRACE resolved using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque_cond .)
    VAR             reduce using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque_cond .)
    PUBLIC          reduce using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque_cond .)
    IF              reduce using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque_cond .)
    WHILE           reduce using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque_cond .)
    PRIVATE         reduce using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque_cond .)
    PROTECTED       reduce using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque_cond .)
    ID              reduce using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque_cond .)
    PRINT           reduce using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque_cond .)
    READ            reduce using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque_cond .)
    RBRACE          reduce using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque_cond .)
    ELSE            reduce using rule 21 (elif -> .)
    ELIF            shift and go to state 191

  ! VAR             [ reduce using rule 21 (elif -> .) ]
  ! PUBLIC          [ reduce using rule 21 (elif -> .) ]
  ! IF              [ reduce using rule 21 (elif -> .) ]
  ! WHILE           [ reduce using rule 21 (elif -> .) ]
  ! PRIVATE         [ reduce using rule 21 (elif -> .) ]
  ! PROTECTED       [ reduce using rule 21 (elif -> .) ]
  ! ID              [ reduce using rule 21 (elif -> .) ]
  ! PRINT           [ reduce using rule 21 (elif -> .) ]
  ! READ            [ reduce using rule 21 (elif -> .) ]
  ! RBRACE          [ reduce using rule 21 (elif -> .) ]

    elif                           shift and go to state 190

state 168

    (24) bloque_cond -> LBRACE . aux5_cond RBRACE
    (25) aux5_cond -> . vars
    (26) aux5_cond -> . estatuto
    (27) aux5_cond -> . vars aux5_cond
    (28) aux5_cond -> . estatuto aux5_cond
    (65) vars -> . VAR aux2 COLON tipo_simple
    (66) vars -> . VAR aux2 COLON tipo_compuesto
    (67) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (68) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (69) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (46) estatuto -> . asignacion
    (47) estatuto -> . escritura
    (48) estatuto -> . llamada_func
    (49) estatuto -> . objeto_metodo
    (50) estatuto -> . lectura
    (76) asignacion -> . ID EQUALS expresion
    (77) asignacion -> . ID EQUALS llamada_func
    (78) asignacion -> . ID EQUALS objeto_metodo
    (79) asignacion -> . objeto_aAcceso EQUALS expresion
    (80) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (81) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (82) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (84) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (56) escritura -> . PRINT LPAREN aux3 RPAREN
    (95) llamada_func -> . ID LPAREN aux RPAREN
    (94) objeto_metodo -> . ID PERIOD llamada_func
    (51) lectura -> . READ LPAREN aux4 RPAREN
    (132) objeto_aAcceso -> . ID PERIOD ID

    VAR             shift and go to state 20
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    aux5_cond                      shift and go to state 192
    vars                           shift and go to state 193
    estatuto                       shift and go to state 194
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 169

    (29) ciclo -> WHILE LPAREN expresion RPAREN bloque .

    VAR             reduce using rule 29 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    PUBLIC          reduce using rule 29 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    IF              reduce using rule 29 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    WHILE           reduce using rule 29 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    PRIVATE         reduce using rule 29 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    PROTECTED       reduce using rule 29 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    ID              reduce using rule 29 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    PRINT           reduce using rule 29 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    READ            reduce using rule 29 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    RBRACE          reduce using rule 29 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)


state 170

    (31) bloque -> LBRACE . aux5 RBRACE
    (36) aux5 -> . vars
    (37) aux5 -> . estatuto
    (38) aux5 -> . vars aux5
    (39) aux5 -> . estatuto aux5
    (65) vars -> . VAR aux2 COLON tipo_simple
    (66) vars -> . VAR aux2 COLON tipo_compuesto
    (67) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (68) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (69) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (46) estatuto -> . asignacion
    (47) estatuto -> . escritura
    (48) estatuto -> . llamada_func
    (49) estatuto -> . objeto_metodo
    (50) estatuto -> . lectura
    (76) asignacion -> . ID EQUALS expresion
    (77) asignacion -> . ID EQUALS llamada_func
    (78) asignacion -> . ID EQUALS objeto_metodo
    (79) asignacion -> . objeto_aAcceso EQUALS expresion
    (80) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (81) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (82) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (84) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (56) escritura -> . PRINT LPAREN aux3 RPAREN
    (95) llamada_func -> . ID LPAREN aux RPAREN
    (94) objeto_metodo -> . ID PERIOD llamada_func
    (51) lectura -> . READ LPAREN aux4 RPAREN
    (132) objeto_aAcceso -> . ID PERIOD ID

    VAR             shift and go to state 20
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    aux5                           shift and go to state 195
    vars                           shift and go to state 196
    estatuto                       shift and go to state 197
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 171

    (91) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET . exp RBRACKET EQUALS expresion
    (92) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET . exp RBRACKET EQUALS llamada_func
    (93) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET . exp RBRACKET EQUALS objeto_metodo
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    objeto_aAcceso                 shift and go to state 73
    exp                            shift and go to state 198
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 172

    (85) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS . expresion
    (86) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS . llamada_func
    (87) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . exp_bool AND expresion
    (101) expresion -> . exp_bool OR expresion
    (102) expresion -> . exp_bool rel_op exp_bool AND expresion
    (103) expresion -> . exp_bool rel_op exp_bool OR expresion
    (95) llamada_func -> . ID LPAREN aux RPAREN
    (94) objeto_metodo -> . ID PERIOD llamada_func
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    ID              shift and go to state 60
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    objeto_aAcceso                 shift and go to state 73
    exp                            shift and go to state 68
    expresion                      shift and go to state 199
    llamada_func                   shift and go to state 200
    objeto_metodo                  shift and go to state 201
    exp_bool                       shift and go to state 64
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 173

    (61) aux3 -> expresion COMMA aux3 .

    RPAREN          reduce using rule 61 (aux3 -> expresion COMMA aux3 .)


state 174

    (62) aux3 -> llamada_func COMMA aux3 .

    RPAREN          reduce using rule 62 (aux3 -> llamada_func COMMA aux3 .)


state 175

    (63) aux3 -> objeto_metodo COMMA aux3 .

    RPAREN          reduce using rule 63 (aux3 -> objeto_metodo COMMA aux3 .)


state 176

    (64) aux3 -> CSTRING COMMA aux3 .

    RPAREN          reduce using rule 64 (aux3 -> CSTRING COMMA aux3 .)


state 177

    (54) aux4 -> ID COMMA aux4 .

    RPAREN          reduce using rule 54 (aux4 -> ID COMMA aux4 .)


state 178

    (55) aux4 -> objeto_aAcceso COMMA aux4 .

    RPAREN          reduce using rule 55 (aux4 -> objeto_aAcceso COMMA aux4 .)


state 179

    (69) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET . cint RBRACKET COLON tipo_simple
    (70) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET . cint RBRACKET COLON tipo_compuesto
    (124) cint -> . CINT

    CINT            shift and go to state 77

    cint                           shift and go to state 202

state 180

    (67) vars -> VAR ID LBRACKET cint RBRACKET COLON . tipo_simple
    (68) vars -> VAR ID LBRACKET cint RBRACKET COLON . tipo_compuesto
    (73) tipo_simple -> . INT
    (74) tipo_simple -> . FLOAT
    (75) tipo_compuesto -> . ID

    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    ID              shift and go to state 107

    tipo_simple                    shift and go to state 203
    tipo_compuesto                 shift and go to state 204

state 181

    (102) expresion -> exp_bool rel_op exp_bool AND . expresion
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . exp_bool AND expresion
    (101) expresion -> . exp_bool OR expresion
    (102) expresion -> . exp_bool rel_op exp_bool AND expresion
    (103) expresion -> . exp_bool rel_op exp_bool OR expresion
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    exp_bool                       shift and go to state 64
    expresion                      shift and go to state 205
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 182

    (103) expresion -> exp_bool rel_op exp_bool OR . expresion
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . exp_bool AND expresion
    (101) expresion -> . exp_bool OR expresion
    (102) expresion -> . exp_bool rel_op exp_bool AND expresion
    (103) expresion -> . exp_bool rel_op exp_bool OR expresion
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    exp_bool                       shift and go to state 64
    expresion                      shift and go to state 206
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 183

    (88) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS expresion
    (89) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS llamada_func
    (90) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (108) exp -> exp . PLUS termino
    (109) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 207
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122


state 184

    (82) asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .

    VAR             reduce using rule 82 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 82 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 82 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 82 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 82 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 82 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    ID              reduce using rule 82 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 82 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 82 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 82 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 82 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)


state 185

    (83) asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .

    VAR             reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)


state 186

    (84) asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 187

    (30) constructor -> PUBLIC ID LPAREN param RPAREN bloque .

    VAR             reduce using rule 30 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PUBLIC          reduce using rule 30 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    IF              reduce using rule 30 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    WHILE           reduce using rule 30 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PRIVATE         reduce using rule 30 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PROTECTED       reduce using rule 30 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    ID              reduce using rule 30 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PRINT           reduce using rule 30 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    READ            reduce using rule 30 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    RBRACE          reduce using rule 30 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)


state 188

    (42) param -> tipo_simple ID COMMA . param
    (40) param -> .
    (41) param -> . tipo_simple ID
    (42) param -> . tipo_simple ID COMMA param
    (73) tipo_simple -> . INT
    (74) tipo_simple -> . FLOAT

    RPAREN          reduce using rule 40 (param -> .)
    INT             shift and go to state 105
    FLOAT           shift and go to state 106

    tipo_simple                    shift and go to state 136
    param                          shift and go to state 208

state 189

    (32) funcion -> scope DEF ID LPAREN param RPAREN . contexto_func
    (33) contexto_func -> . LBRACE aux5 RBRACE
    (34) contexto_func -> . LBRACE aux5 RETURN INT ID RBRACE
    (35) contexto_func -> . LBRACE aux5 RETURN FLOAT ID RBRACE

    LBRACE          shift and go to state 210

    contexto_func                  shift and go to state 209

state 190

    (19) condicion -> IF LPAREN expresion RPAREN bloque_cond elif .
    (20) condicion -> IF LPAREN expresion RPAREN bloque_cond elif . else
    (23) else -> . ELSE bloque_cond

    VAR             reduce using rule 19 (condicion -> IF LPAREN expresion RPAREN bloque_cond elif .)
    PUBLIC          reduce using rule 19 (condicion -> IF LPAREN expresion RPAREN bloque_cond elif .)
    IF              reduce using rule 19 (condicion -> IF LPAREN expresion RPAREN bloque_cond elif .)
    WHILE           reduce using rule 19 (condicion -> IF LPAREN expresion RPAREN bloque_cond elif .)
    PRIVATE         reduce using rule 19 (condicion -> IF LPAREN expresion RPAREN bloque_cond elif .)
    PROTECTED       reduce using rule 19 (condicion -> IF LPAREN expresion RPAREN bloque_cond elif .)
    ID              reduce using rule 19 (condicion -> IF LPAREN expresion RPAREN bloque_cond elif .)
    PRINT           reduce using rule 19 (condicion -> IF LPAREN expresion RPAREN bloque_cond elif .)
    READ            reduce using rule 19 (condicion -> IF LPAREN expresion RPAREN bloque_cond elif .)
    RBRACE          reduce using rule 19 (condicion -> IF LPAREN expresion RPAREN bloque_cond elif .)
    ELSE            shift and go to state 212

    else                           shift and go to state 211

state 191

    (22) elif -> ELIF . LPAREN expresion RPAREN bloque_cond elif

    LPAREN          shift and go to state 213


state 192

    (24) bloque_cond -> LBRACE aux5_cond . RBRACE

    RBRACE          shift and go to state 214


state 193

    (25) aux5_cond -> vars .
    (27) aux5_cond -> vars . aux5_cond
    (25) aux5_cond -> . vars
    (26) aux5_cond -> . estatuto
    (27) aux5_cond -> . vars aux5_cond
    (28) aux5_cond -> . estatuto aux5_cond
    (65) vars -> . VAR aux2 COLON tipo_simple
    (66) vars -> . VAR aux2 COLON tipo_compuesto
    (67) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (68) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (69) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (46) estatuto -> . asignacion
    (47) estatuto -> . escritura
    (48) estatuto -> . llamada_func
    (49) estatuto -> . objeto_metodo
    (50) estatuto -> . lectura
    (76) asignacion -> . ID EQUALS expresion
    (77) asignacion -> . ID EQUALS llamada_func
    (78) asignacion -> . ID EQUALS objeto_metodo
    (79) asignacion -> . objeto_aAcceso EQUALS expresion
    (80) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (81) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (82) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (84) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (56) escritura -> . PRINT LPAREN aux3 RPAREN
    (95) llamada_func -> . ID LPAREN aux RPAREN
    (94) objeto_metodo -> . ID PERIOD llamada_func
    (51) lectura -> . READ LPAREN aux4 RPAREN
    (132) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 25 (aux5_cond -> vars .)
    VAR             shift and go to state 20
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    vars                           shift and go to state 193
    aux5_cond                      shift and go to state 215
    estatuto                       shift and go to state 194
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 194

    (26) aux5_cond -> estatuto .
    (28) aux5_cond -> estatuto . aux5_cond
    (25) aux5_cond -> . vars
    (26) aux5_cond -> . estatuto
    (27) aux5_cond -> . vars aux5_cond
    (28) aux5_cond -> . estatuto aux5_cond
    (65) vars -> . VAR aux2 COLON tipo_simple
    (66) vars -> . VAR aux2 COLON tipo_compuesto
    (67) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (68) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (69) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (46) estatuto -> . asignacion
    (47) estatuto -> . escritura
    (48) estatuto -> . llamada_func
    (49) estatuto -> . objeto_metodo
    (50) estatuto -> . lectura
    (76) asignacion -> . ID EQUALS expresion
    (77) asignacion -> . ID EQUALS llamada_func
    (78) asignacion -> . ID EQUALS objeto_metodo
    (79) asignacion -> . objeto_aAcceso EQUALS expresion
    (80) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (81) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (82) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (84) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (56) escritura -> . PRINT LPAREN aux3 RPAREN
    (95) llamada_func -> . ID LPAREN aux RPAREN
    (94) objeto_metodo -> . ID PERIOD llamada_func
    (51) lectura -> . READ LPAREN aux4 RPAREN
    (132) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 26 (aux5_cond -> estatuto .)
    VAR             shift and go to state 20
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    estatuto                       shift and go to state 194
    aux5_cond                      shift and go to state 216
    vars                           shift and go to state 193
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 195

    (31) bloque -> LBRACE aux5 . RBRACE

    RBRACE          shift and go to state 217


state 196

    (36) aux5 -> vars .
    (38) aux5 -> vars . aux5
    (36) aux5 -> . vars
    (37) aux5 -> . estatuto
    (38) aux5 -> . vars aux5
    (39) aux5 -> . estatuto aux5
    (65) vars -> . VAR aux2 COLON tipo_simple
    (66) vars -> . VAR aux2 COLON tipo_compuesto
    (67) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (68) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (69) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (46) estatuto -> . asignacion
    (47) estatuto -> . escritura
    (48) estatuto -> . llamada_func
    (49) estatuto -> . objeto_metodo
    (50) estatuto -> . lectura
    (76) asignacion -> . ID EQUALS expresion
    (77) asignacion -> . ID EQUALS llamada_func
    (78) asignacion -> . ID EQUALS objeto_metodo
    (79) asignacion -> . objeto_aAcceso EQUALS expresion
    (80) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (81) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (82) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (84) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (56) escritura -> . PRINT LPAREN aux3 RPAREN
    (95) llamada_func -> . ID LPAREN aux RPAREN
    (94) objeto_metodo -> . ID PERIOD llamada_func
    (51) lectura -> . READ LPAREN aux4 RPAREN
    (132) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 36 (aux5 -> vars .)
    RETURN          reduce using rule 36 (aux5 -> vars .)
    VAR             shift and go to state 20
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    vars                           shift and go to state 196
    aux5                           shift and go to state 218
    estatuto                       shift and go to state 197
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 197

    (37) aux5 -> estatuto .
    (39) aux5 -> estatuto . aux5
    (36) aux5 -> . vars
    (37) aux5 -> . estatuto
    (38) aux5 -> . vars aux5
    (39) aux5 -> . estatuto aux5
    (65) vars -> . VAR aux2 COLON tipo_simple
    (66) vars -> . VAR aux2 COLON tipo_compuesto
    (67) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (68) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (69) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (46) estatuto -> . asignacion
    (47) estatuto -> . escritura
    (48) estatuto -> . llamada_func
    (49) estatuto -> . objeto_metodo
    (50) estatuto -> . lectura
    (76) asignacion -> . ID EQUALS expresion
    (77) asignacion -> . ID EQUALS llamada_func
    (78) asignacion -> . ID EQUALS objeto_metodo
    (79) asignacion -> . objeto_aAcceso EQUALS expresion
    (80) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (81) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (82) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (84) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (56) escritura -> . PRINT LPAREN aux3 RPAREN
    (95) llamada_func -> . ID LPAREN aux RPAREN
    (94) objeto_metodo -> . ID PERIOD llamada_func
    (51) lectura -> . READ LPAREN aux4 RPAREN
    (132) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 37 (aux5 -> estatuto .)
    RETURN          reduce using rule 37 (aux5 -> estatuto .)
    VAR             shift and go to state 20
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    estatuto                       shift and go to state 197
    aux5                           shift and go to state 219
    vars                           shift and go to state 196
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 198

    (91) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp . RBRACKET EQUALS expresion
    (92) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp . RBRACKET EQUALS llamada_func
    (93) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp . RBRACKET EQUALS objeto_metodo
    (108) exp -> exp . PLUS termino
    (109) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 220
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122


state 199

    (85) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .

    VAR             reduce using rule 85 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 85 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 85 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 85 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 85 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 85 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    ID              reduce using rule 85 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 85 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 85 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 85 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 85 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)


state 200

    (86) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .

    VAR             reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)


state 201

    (87) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 202

    (69) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint . RBRACKET COLON tipo_simple
    (70) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint . RBRACKET COLON tipo_compuesto

    RBRACKET        shift and go to state 221


state 203

    (67) vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .

    VAR             reduce using rule 67 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PUBLIC          reduce using rule 67 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    IF              reduce using rule 67 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    WHILE           reduce using rule 67 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PRIVATE         reduce using rule 67 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PROTECTED       reduce using rule 67 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    ID              reduce using rule 67 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PRINT           reduce using rule 67 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    READ            reduce using rule 67 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    RBRACE          reduce using rule 67 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    RETURN          reduce using rule 67 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)


state 204

    (68) vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .

    VAR             reduce using rule 68 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PUBLIC          reduce using rule 68 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    IF              reduce using rule 68 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    WHILE           reduce using rule 68 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRIVATE         reduce using rule 68 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PROTECTED       reduce using rule 68 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    ID              reduce using rule 68 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRINT           reduce using rule 68 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    READ            reduce using rule 68 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RBRACE          reduce using rule 68 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RETURN          reduce using rule 68 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)


state 205

    (102) expresion -> exp_bool rel_op exp_bool AND expresion .

    VAR             reduce using rule 102 (expresion -> exp_bool rel_op exp_bool AND expresion .)
    PUBLIC          reduce using rule 102 (expresion -> exp_bool rel_op exp_bool AND expresion .)
    IF              reduce using rule 102 (expresion -> exp_bool rel_op exp_bool AND expresion .)
    WHILE           reduce using rule 102 (expresion -> exp_bool rel_op exp_bool AND expresion .)
    PRIVATE         reduce using rule 102 (expresion -> exp_bool rel_op exp_bool AND expresion .)
    PROTECTED       reduce using rule 102 (expresion -> exp_bool rel_op exp_bool AND expresion .)
    ID              reduce using rule 102 (expresion -> exp_bool rel_op exp_bool AND expresion .)
    PRINT           reduce using rule 102 (expresion -> exp_bool rel_op exp_bool AND expresion .)
    READ            reduce using rule 102 (expresion -> exp_bool rel_op exp_bool AND expresion .)
    RBRACE          reduce using rule 102 (expresion -> exp_bool rel_op exp_bool AND expresion .)
    RETURN          reduce using rule 102 (expresion -> exp_bool rel_op exp_bool AND expresion .)
    RPAREN          reduce using rule 102 (expresion -> exp_bool rel_op exp_bool AND expresion .)
    COMMA           reduce using rule 102 (expresion -> exp_bool rel_op exp_bool AND expresion .)


state 206

    (103) expresion -> exp_bool rel_op exp_bool OR expresion .

    VAR             reduce using rule 103 (expresion -> exp_bool rel_op exp_bool OR expresion .)
    PUBLIC          reduce using rule 103 (expresion -> exp_bool rel_op exp_bool OR expresion .)
    IF              reduce using rule 103 (expresion -> exp_bool rel_op exp_bool OR expresion .)
    WHILE           reduce using rule 103 (expresion -> exp_bool rel_op exp_bool OR expresion .)
    PRIVATE         reduce using rule 103 (expresion -> exp_bool rel_op exp_bool OR expresion .)
    PROTECTED       reduce using rule 103 (expresion -> exp_bool rel_op exp_bool OR expresion .)
    ID              reduce using rule 103 (expresion -> exp_bool rel_op exp_bool OR expresion .)
    PRINT           reduce using rule 103 (expresion -> exp_bool rel_op exp_bool OR expresion .)
    READ            reduce using rule 103 (expresion -> exp_bool rel_op exp_bool OR expresion .)
    RBRACE          reduce using rule 103 (expresion -> exp_bool rel_op exp_bool OR expresion .)
    RETURN          reduce using rule 103 (expresion -> exp_bool rel_op exp_bool OR expresion .)
    RPAREN          reduce using rule 103 (expresion -> exp_bool rel_op exp_bool OR expresion .)
    COMMA           reduce using rule 103 (expresion -> exp_bool rel_op exp_bool OR expresion .)


state 207

    (88) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS expresion
    (89) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS llamada_func
    (90) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS objeto_metodo

    EQUALS          shift and go to state 222


state 208

    (42) param -> tipo_simple ID COMMA param .

    RPAREN          reduce using rule 42 (param -> tipo_simple ID COMMA param .)


state 209

    (32) funcion -> scope DEF ID LPAREN param RPAREN contexto_func .

    VAR             reduce using rule 32 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    PUBLIC          reduce using rule 32 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    IF              reduce using rule 32 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    WHILE           reduce using rule 32 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    PRIVATE         reduce using rule 32 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    PROTECTED       reduce using rule 32 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    ID              reduce using rule 32 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    PRINT           reduce using rule 32 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    READ            reduce using rule 32 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    RBRACE          reduce using rule 32 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)


state 210

    (33) contexto_func -> LBRACE . aux5 RBRACE
    (34) contexto_func -> LBRACE . aux5 RETURN INT ID RBRACE
    (35) contexto_func -> LBRACE . aux5 RETURN FLOAT ID RBRACE
    (36) aux5 -> . vars
    (37) aux5 -> . estatuto
    (38) aux5 -> . vars aux5
    (39) aux5 -> . estatuto aux5
    (65) vars -> . VAR aux2 COLON tipo_simple
    (66) vars -> . VAR aux2 COLON tipo_compuesto
    (67) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (68) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (69) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (46) estatuto -> . asignacion
    (47) estatuto -> . escritura
    (48) estatuto -> . llamada_func
    (49) estatuto -> . objeto_metodo
    (50) estatuto -> . lectura
    (76) asignacion -> . ID EQUALS expresion
    (77) asignacion -> . ID EQUALS llamada_func
    (78) asignacion -> . ID EQUALS objeto_metodo
    (79) asignacion -> . objeto_aAcceso EQUALS expresion
    (80) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (81) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (82) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (83) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (84) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (85) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (86) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (88) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (56) escritura -> . PRINT LPAREN aux3 RPAREN
    (95) llamada_func -> . ID LPAREN aux RPAREN
    (94) objeto_metodo -> . ID PERIOD llamada_func
    (51) lectura -> . READ LPAREN aux4 RPAREN
    (132) objeto_aAcceso -> . ID PERIOD ID

    VAR             shift and go to state 20
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    aux5                           shift and go to state 223
    vars                           shift and go to state 196
    estatuto                       shift and go to state 197
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 211

    (20) condicion -> IF LPAREN expresion RPAREN bloque_cond elif else .

    VAR             reduce using rule 20 (condicion -> IF LPAREN expresion RPAREN bloque_cond elif else .)
    PUBLIC          reduce using rule 20 (condicion -> IF LPAREN expresion RPAREN bloque_cond elif else .)
    IF              reduce using rule 20 (condicion -> IF LPAREN expresion RPAREN bloque_cond elif else .)
    WHILE           reduce using rule 20 (condicion -> IF LPAREN expresion RPAREN bloque_cond elif else .)
    PRIVATE         reduce using rule 20 (condicion -> IF LPAREN expresion RPAREN bloque_cond elif else .)
    PROTECTED       reduce using rule 20 (condicion -> IF LPAREN expresion RPAREN bloque_cond elif else .)
    ID              reduce using rule 20 (condicion -> IF LPAREN expresion RPAREN bloque_cond elif else .)
    PRINT           reduce using rule 20 (condicion -> IF LPAREN expresion RPAREN bloque_cond elif else .)
    READ            reduce using rule 20 (condicion -> IF LPAREN expresion RPAREN bloque_cond elif else .)
    RBRACE          reduce using rule 20 (condicion -> IF LPAREN expresion RPAREN bloque_cond elif else .)


state 212

    (23) else -> ELSE . bloque_cond
    (24) bloque_cond -> . LBRACE aux5_cond RBRACE

    LBRACE          shift and go to state 168

    bloque_cond                    shift and go to state 224

state 213

    (22) elif -> ELIF LPAREN . expresion RPAREN bloque_cond elif
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . exp_bool AND expresion
    (101) expresion -> . exp_bool OR expresion
    (102) expresion -> . exp_bool rel_op exp_bool AND expresion
    (103) expresion -> . exp_bool rel_op exp_bool OR expresion
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    expresion                      shift and go to state 225
    exp_bool                       shift and go to state 64
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 214

    (24) bloque_cond -> LBRACE aux5_cond RBRACE .

    ELIF            reduce using rule 24 (bloque_cond -> LBRACE aux5_cond RBRACE .)
    ELSE            reduce using rule 24 (bloque_cond -> LBRACE aux5_cond RBRACE .)
    VAR             reduce using rule 24 (bloque_cond -> LBRACE aux5_cond RBRACE .)
    PUBLIC          reduce using rule 24 (bloque_cond -> LBRACE aux5_cond RBRACE .)
    IF              reduce using rule 24 (bloque_cond -> LBRACE aux5_cond RBRACE .)
    WHILE           reduce using rule 24 (bloque_cond -> LBRACE aux5_cond RBRACE .)
    PRIVATE         reduce using rule 24 (bloque_cond -> LBRACE aux5_cond RBRACE .)
    PROTECTED       reduce using rule 24 (bloque_cond -> LBRACE aux5_cond RBRACE .)
    ID              reduce using rule 24 (bloque_cond -> LBRACE aux5_cond RBRACE .)
    PRINT           reduce using rule 24 (bloque_cond -> LBRACE aux5_cond RBRACE .)
    READ            reduce using rule 24 (bloque_cond -> LBRACE aux5_cond RBRACE .)
    RBRACE          reduce using rule 24 (bloque_cond -> LBRACE aux5_cond RBRACE .)


state 215

    (27) aux5_cond -> vars aux5_cond .

    RBRACE          reduce using rule 27 (aux5_cond -> vars aux5_cond .)


state 216

    (28) aux5_cond -> estatuto aux5_cond .

    RBRACE          reduce using rule 28 (aux5_cond -> estatuto aux5_cond .)


state 217

    (31) bloque -> LBRACE aux5 RBRACE .

    VAR             reduce using rule 31 (bloque -> LBRACE aux5 RBRACE .)
    PUBLIC          reduce using rule 31 (bloque -> LBRACE aux5 RBRACE .)
    IF              reduce using rule 31 (bloque -> LBRACE aux5 RBRACE .)
    WHILE           reduce using rule 31 (bloque -> LBRACE aux5 RBRACE .)
    PRIVATE         reduce using rule 31 (bloque -> LBRACE aux5 RBRACE .)
    PROTECTED       reduce using rule 31 (bloque -> LBRACE aux5 RBRACE .)
    ID              reduce using rule 31 (bloque -> LBRACE aux5 RBRACE .)
    PRINT           reduce using rule 31 (bloque -> LBRACE aux5 RBRACE .)
    READ            reduce using rule 31 (bloque -> LBRACE aux5 RBRACE .)
    RBRACE          reduce using rule 31 (bloque -> LBRACE aux5 RBRACE .)


state 218

    (38) aux5 -> vars aux5 .

    RBRACE          reduce using rule 38 (aux5 -> vars aux5 .)
    RETURN          reduce using rule 38 (aux5 -> vars aux5 .)


state 219

    (39) aux5 -> estatuto aux5 .

    RBRACE          reduce using rule 39 (aux5 -> estatuto aux5 .)
    RETURN          reduce using rule 39 (aux5 -> estatuto aux5 .)


state 220

    (91) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET . EQUALS expresion
    (92) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET . EQUALS llamada_func
    (93) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET . EQUALS objeto_metodo

    EQUALS          shift and go to state 226


state 221

    (69) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET . COLON tipo_simple
    (70) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET . COLON tipo_compuesto

    COLON           shift and go to state 227


state 222

    (88) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . expresion
    (89) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . llamada_func
    (90) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . exp_bool AND expresion
    (101) expresion -> . exp_bool OR expresion
    (102) expresion -> . exp_bool rel_op exp_bool AND expresion
    (103) expresion -> . exp_bool rel_op exp_bool OR expresion
    (95) llamada_func -> . ID LPAREN aux RPAREN
    (94) objeto_metodo -> . ID PERIOD llamada_func
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    ID              shift and go to state 60
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    exp                            shift and go to state 68
    expresion                      shift and go to state 228
    llamada_func                   shift and go to state 229
    objeto_metodo                  shift and go to state 230
    exp_bool                       shift and go to state 64
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 223

    (33) contexto_func -> LBRACE aux5 . RBRACE
    (34) contexto_func -> LBRACE aux5 . RETURN INT ID RBRACE
    (35) contexto_func -> LBRACE aux5 . RETURN FLOAT ID RBRACE

    RBRACE          shift and go to state 231
    RETURN          shift and go to state 232


state 224

    (23) else -> ELSE bloque_cond .

    VAR             reduce using rule 23 (else -> ELSE bloque_cond .)
    PUBLIC          reduce using rule 23 (else -> ELSE bloque_cond .)
    IF              reduce using rule 23 (else -> ELSE bloque_cond .)
    WHILE           reduce using rule 23 (else -> ELSE bloque_cond .)
    PRIVATE         reduce using rule 23 (else -> ELSE bloque_cond .)
    PROTECTED       reduce using rule 23 (else -> ELSE bloque_cond .)
    ID              reduce using rule 23 (else -> ELSE bloque_cond .)
    PRINT           reduce using rule 23 (else -> ELSE bloque_cond .)
    READ            reduce using rule 23 (else -> ELSE bloque_cond .)
    RBRACE          reduce using rule 23 (else -> ELSE bloque_cond .)


state 225

    (22) elif -> ELIF LPAREN expresion . RPAREN bloque_cond elif

    RPAREN          shift and go to state 233


state 226

    (91) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS . expresion
    (92) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS . llamada_func
    (93) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS . objeto_metodo
    (98) expresion -> . exp_bool
    (99) expresion -> . exp_bool rel_op exp_bool
    (100) expresion -> . exp_bool AND expresion
    (101) expresion -> . exp_bool OR expresion
    (102) expresion -> . exp_bool rel_op exp_bool AND expresion
    (103) expresion -> . exp_bool rel_op exp_bool OR expresion
    (95) llamada_func -> . ID LPAREN aux RPAREN
    (94) objeto_metodo -> . ID PERIOD llamada_func
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . exp
    (107) exp -> . termino
    (108) exp -> . exp PLUS termino
    (109) exp -> . exp MINUS termino
    (110) termino -> . factor
    (111) termino -> . termino TIMES factor
    (112) termino -> . termino DIVIDE factor
    (113) termino -> . termino MODULO factor
    (114) factor -> . LPAREN expresion RPAREN
    (115) factor -> . PLUS objeto_aAcceso
    (116) factor -> . MINUS objeto_aAcceso
    (117) factor -> . PLUS var
    (118) factor -> . MINUS var
    (119) factor -> . var
    (120) factor -> . objeto_aAcceso
    (121) var -> . ID
    (122) var -> . cint
    (123) var -> . cfloat
    (132) objeto_aAcceso -> . ID PERIOD ID
    (124) cint -> . CINT
    (125) cfloat -> . NUMBER

    ID              shift and go to state 60
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    objeto_aAcceso                 shift and go to state 73
    exp                            shift and go to state 68
    expresion                      shift and go to state 234
    llamada_func                   shift and go to state 235
    objeto_metodo                  shift and go to state 236
    exp_bool                       shift and go to state 64
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 227

    (69) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON . tipo_simple
    (70) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON . tipo_compuesto
    (73) tipo_simple -> . INT
    (74) tipo_simple -> . FLOAT
    (75) tipo_compuesto -> . ID

    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    ID              shift and go to state 107

    tipo_simple                    shift and go to state 237
    tipo_compuesto                 shift and go to state 238

state 228

    (88) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .

    VAR             reduce using rule 88 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 88 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 88 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 88 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 88 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 88 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    ID              reduce using rule 88 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 88 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 88 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 88 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 88 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)


state 229

    (89) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .

    VAR             reduce using rule 89 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 89 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 89 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 89 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 89 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 89 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 89 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 89 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 89 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 89 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 89 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)


state 230

    (90) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 90 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 90 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 90 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 90 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 90 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 90 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 90 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 90 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 90 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 90 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 90 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 231

    (33) contexto_func -> LBRACE aux5 RBRACE .

    VAR             reduce using rule 33 (contexto_func -> LBRACE aux5 RBRACE .)
    PUBLIC          reduce using rule 33 (contexto_func -> LBRACE aux5 RBRACE .)
    IF              reduce using rule 33 (contexto_func -> LBRACE aux5 RBRACE .)
    WHILE           reduce using rule 33 (contexto_func -> LBRACE aux5 RBRACE .)
    PRIVATE         reduce using rule 33 (contexto_func -> LBRACE aux5 RBRACE .)
    PROTECTED       reduce using rule 33 (contexto_func -> LBRACE aux5 RBRACE .)
    ID              reduce using rule 33 (contexto_func -> LBRACE aux5 RBRACE .)
    PRINT           reduce using rule 33 (contexto_func -> LBRACE aux5 RBRACE .)
    READ            reduce using rule 33 (contexto_func -> LBRACE aux5 RBRACE .)
    RBRACE          reduce using rule 33 (contexto_func -> LBRACE aux5 RBRACE .)


state 232

    (34) contexto_func -> LBRACE aux5 RETURN . INT ID RBRACE
    (35) contexto_func -> LBRACE aux5 RETURN . FLOAT ID RBRACE

    INT             shift and go to state 239
    FLOAT           shift and go to state 240


state 233

    (22) elif -> ELIF LPAREN expresion RPAREN . bloque_cond elif
    (24) bloque_cond -> . LBRACE aux5_cond RBRACE

    LBRACE          shift and go to state 168

    bloque_cond                    shift and go to state 241

state 234

    (91) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .

    VAR             reduce using rule 91 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 91 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 91 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 91 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 91 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 91 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    ID              reduce using rule 91 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 91 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 91 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 91 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 91 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)


state 235

    (92) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .

    VAR             reduce using rule 92 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 92 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 92 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 92 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 92 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 92 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 92 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 92 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 92 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 92 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 92 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)


state 236

    (93) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 237

    (69) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .

    VAR             reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PUBLIC          reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    IF              reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    WHILE           reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PRIVATE         reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PROTECTED       reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    ID              reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PRINT           reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    READ            reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    RBRACE          reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    RETURN          reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)


state 238

    (70) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .

    VAR             reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PUBLIC          reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    IF              reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    WHILE           reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRIVATE         reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PROTECTED       reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    ID              reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRINT           reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    READ            reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RBRACE          reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RETURN          reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)


state 239

    (34) contexto_func -> LBRACE aux5 RETURN INT . ID RBRACE

    ID              shift and go to state 242


state 240

    (35) contexto_func -> LBRACE aux5 RETURN FLOAT . ID RBRACE

    ID              shift and go to state 243


state 241

    (22) elif -> ELIF LPAREN expresion RPAREN bloque_cond . elif
    (21) elif -> .
    (22) elif -> . ELIF LPAREN expresion RPAREN bloque_cond elif

    ELSE            reduce using rule 21 (elif -> .)
    VAR             reduce using rule 21 (elif -> .)
    PUBLIC          reduce using rule 21 (elif -> .)
    IF              reduce using rule 21 (elif -> .)
    WHILE           reduce using rule 21 (elif -> .)
    PRIVATE         reduce using rule 21 (elif -> .)
    PROTECTED       reduce using rule 21 (elif -> .)
    ID              reduce using rule 21 (elif -> .)
    PRINT           reduce using rule 21 (elif -> .)
    READ            reduce using rule 21 (elif -> .)
    RBRACE          reduce using rule 21 (elif -> .)
    ELIF            shift and go to state 191

    elif                           shift and go to state 244

state 242

    (34) contexto_func -> LBRACE aux5 RETURN INT ID . RBRACE

    RBRACE          shift and go to state 245


state 243

    (35) contexto_func -> LBRACE aux5 RETURN FLOAT ID . RBRACE

    RBRACE          shift and go to state 246


state 244

    (22) elif -> ELIF LPAREN expresion RPAREN bloque_cond elif .

    ELSE            reduce using rule 22 (elif -> ELIF LPAREN expresion RPAREN bloque_cond elif .)
    VAR             reduce using rule 22 (elif -> ELIF LPAREN expresion RPAREN bloque_cond elif .)
    PUBLIC          reduce using rule 22 (elif -> ELIF LPAREN expresion RPAREN bloque_cond elif .)
    IF              reduce using rule 22 (elif -> ELIF LPAREN expresion RPAREN bloque_cond elif .)
    WHILE           reduce using rule 22 (elif -> ELIF LPAREN expresion RPAREN bloque_cond elif .)
    PRIVATE         reduce using rule 22 (elif -> ELIF LPAREN expresion RPAREN bloque_cond elif .)
    PROTECTED       reduce using rule 22 (elif -> ELIF LPAREN expresion RPAREN bloque_cond elif .)
    ID              reduce using rule 22 (elif -> ELIF LPAREN expresion RPAREN bloque_cond elif .)
    PRINT           reduce using rule 22 (elif -> ELIF LPAREN expresion RPAREN bloque_cond elif .)
    READ            reduce using rule 22 (elif -> ELIF LPAREN expresion RPAREN bloque_cond elif .)
    RBRACE          reduce using rule 22 (elif -> ELIF LPAREN expresion RPAREN bloque_cond elif .)


state 245

    (34) contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .

    VAR             reduce using rule 34 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)
    PUBLIC          reduce using rule 34 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)
    IF              reduce using rule 34 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)
    WHILE           reduce using rule 34 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)
    PRIVATE         reduce using rule 34 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)
    PROTECTED       reduce using rule 34 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)
    ID              reduce using rule 34 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)
    PRINT           reduce using rule 34 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)
    READ            reduce using rule 34 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)
    RBRACE          reduce using rule 34 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)


state 246

    (35) contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .

    VAR             reduce using rule 35 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)
    PUBLIC          reduce using rule 35 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)
    IF              reduce using rule 35 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)
    WHILE           reduce using rule 35 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)
    PRIVATE         reduce using rule 35 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)
    PROTECTED       reduce using rule 35 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)
    ID              reduce using rule 35 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)
    PRINT           reduce using rule 35 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)
    READ            reduce using rule 35 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)
    RBRACE          reduce using rule 35 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 167 resolved using rule (condicion -> IF LPAREN expresion RPAREN bloque_cond)
WARNING: rejected rule (elif -> <empty>) in state 167
