Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID class context
Rule 2     programa -> PROGRAM ID context
Rule 3     class -> scope CLASS ID
Rule 4     class -> scope CLASS ID COLON ID
Rule 5     context -> LBRACE aux6 RBRACE
Rule 6     aux6 -> vars
Rule 7     aux6 -> constructor
Rule 8     aux6 -> funcion
Rule 9     aux6 -> estatuto
Rule 10    aux6 -> condicion
Rule 11    aux6 -> ciclo
Rule 12    aux6 -> vars aux6
Rule 13    aux6 -> constructor aux6
Rule 14    aux6 -> funcion aux6
Rule 15    aux6 -> estatuto aux6
Rule 16    aux6 -> condicion aux6
Rule 17    aux6 -> ciclo aux6
Rule 18    condicion -> IF LPAREN gotoF RPAREN bloque
Rule 19    condicion -> IF LPAREN gotoF RPAREN bloque elif
Rule 20    elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque
Rule 21    elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif
Rule 22    aux_elif -> <empty>
Rule 23    ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque
Rule 24    aux_ciclo -> <empty>
Rule 25    constructor -> PUBLIC ID LPAREN param RPAREN bloque
Rule 26    bloque -> LBRACE aux5 RBRACE
Rule 27    funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func
Rule 28    funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
Rule 29    id -> ID
Rule 30    type -> INT
Rule 31    type -> FLOAT
Rule 32    type -> CHAR
Rule 33    contexto_func -> LBRACE aux5 RBRACE
Rule 34    contexto_func -> LBRACE aux5 RETURN ID RBRACE
Rule 35    aux5 -> vars
Rule 36    aux5 -> estatuto
Rule 37    aux5 -> vars aux5
Rule 38    aux5 -> estatuto aux5
Rule 39    param -> <empty>
Rule 40    param -> tipo_simple ID
Rule 41    param -> tipo_simple ID COMMA param
Rule 42    aux_param -> <empty>
Rule 43    scope -> <empty>
Rule 44    scope -> PRIVATE
Rule 45    scope -> PUBLIC
Rule 46    scope -> PROTECTED
Rule 47    estatuto -> asignacion
Rule 48    estatuto -> escritura
Rule 49    estatuto -> llamada_func
Rule 50    estatuto -> objeto_metodo
Rule 51    estatuto -> lectura
Rule 52    lectura -> READ LPAREN aux4 RPAREN
Rule 53    aux4 -> ID
Rule 54    aux4 -> objeto_aAcceso
Rule 55    aux4 -> ID COMMA aux4
Rule 56    aux4 -> objeto_aAcceso COMMA aux4
Rule 57    escritura -> PRINT LPAREN aux3 RPAREN
Rule 58    aux3 -> expresion
Rule 59    aux3 -> llamada_func
Rule 60    aux3 -> objeto_metodo
Rule 61    aux3 -> CSTRING
Rule 62    aux3 -> expresion COMMA aux3
Rule 63    aux3 -> llamada_func COMMA aux3
Rule 64    aux3 -> objeto_metodo COMMA aux3
Rule 65    aux3 -> CSTRING COMMA aux3
Rule 66    vars -> VAR aux2 COLON tipo_simple
Rule 67    vars -> VAR aux2 COLON tipo_compuesto
Rule 68    vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple
Rule 69    vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
Rule 70    vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
Rule 71    vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
Rule 72    aux2 -> ID
Rule 73    aux2 -> ID COMMA aux2
Rule 74    tipo_simple -> INT
Rule 75    tipo_simple -> FLOAT
Rule 76    tipo_simple -> CHAR
Rule 77    tipo_compuesto -> ID
Rule 78    asignacion -> ID EQUALS expresion
Rule 79    asignacion -> ID EQUALS llamada_func
Rule 80    asignacion -> ID EQUALS objeto_metodo
Rule 81    asignacion -> objeto_aAcceso EQUALS expresion
Rule 82    asignacion -> objeto_aAcceso EQUALS llamada_func
Rule 83    asignacion -> objeto_aAcceso EQUALS objeto_metodo
Rule 84    asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion
Rule 85    asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func
Rule 86    asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 87    asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
Rule 88    asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
Rule 89    asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 90    asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
Rule 91    asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
Rule 92    asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 93    asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
Rule 94    asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
Rule 95    asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 96    objeto_metodo -> ID PERIOD llamada_func
Rule 97    llamada_func -> ID LPAREN aux RPAREN
Rule 98    aux -> exp
Rule 99    aux -> exp COMMA aux
Rule 100   gotoF -> exp_cond
Rule 101   exp_cond -> exp_bool
Rule 102   exp_cond -> exp_bool AND exp_cond
Rule 103   exp_cond -> exp_bool OR exp_cond
Rule 104   exp_bool -> TRUE
Rule 105   exp_bool -> FALSE
Rule 106   exp_bool -> expresion
Rule 107   expresion -> exp
Rule 108   expresion -> exp LT expresion
Rule 109   expresion -> exp GT expresion
Rule 110   expresion -> exp GE expresion
Rule 111   expresion -> exp LE expresion
Rule 112   expresion -> exp EQ expresion
Rule 113   expresion -> exp NE expresion
Rule 114   exp -> termino
Rule 115   exp -> exp PLUS termino
Rule 116   exp -> exp MINUS termino
Rule 117   termino -> factor
Rule 118   termino -> termino TIMES factor
Rule 119   termino -> termino DIVIDE factor
Rule 120   termino -> termino MODULO factor
Rule 121   factor -> LPAREN exp_cond RPAREN
Rule 122   factor -> PLUS objeto_aAcceso
Rule 123   factor -> MINUS objeto_aAcceso
Rule 124   factor -> PLUS var
Rule 125   factor -> MINUS var
Rule 126   factor -> var
Rule 127   factor -> objeto_aAcceso
Rule 128   var -> ID
Rule 129   var -> cint
Rule 130   var -> cfloat
Rule 131   var -> cchar
Rule 132   cint -> CINT
Rule 133   cfloat -> NUMBER
Rule 134   cchar -> CCHAR
Rule 135   objeto_aAcceso -> ID PERIOD ID

Terminals, with rules where they appear

AND                  : 102
CCHAR                : 134
CHAR                 : 32 76
CINT                 : 132
CLASS                : 3 4
COLON                : 4 66 67 68 69 70 71
COMMA                : 41 55 56 62 63 64 65 73 99
CSTRING              : 61 65
DEF                  : 27 28
DIVIDE               : 119
ELIF                 : 20 21
EQ                   : 112
EQUALS               : 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
FALSE                : 105
FLOAT                : 31 75
GE                   : 110
GT                   : 109
ID                   : 1 2 3 4 4 25 29 34 40 41 53 55 68 69 70 71 72 73 77 78 79 80 84 85 86 90 91 92 96 97 128 135 135
IF                   : 18 19
INT                  : 30 74
LBRACE               : 5 26 33 34
LBRACKET             : 68 69 70 70 71 71 84 85 86 87 88 89 90 90 91 91 92 92 93 93 94 94 95 95
LE                   : 111
LPAREN               : 18 19 20 21 23 25 27 28 52 57 97 121
LT                   : 108
MINUS                : 116 123 125
MODULO               : 120
NE                   : 113
NUMBER               : 133
OR                   : 103
PERIOD               : 96 135
PLUS                 : 115 122 124
PRINT                : 57
PRIVATE              : 44
PROGRAM              : 1 2
PROTECTED            : 46
PUBLIC               : 25 45
RBRACE               : 5 26 33 34
RBRACKET             : 68 69 70 70 71 71 84 85 86 87 88 89 90 90 91 91 92 92 93 93 94 94 95 95
READ                 : 52
RETURN               : 34
RPAREN               : 18 19 20 21 23 25 27 28 52 57 97 121
TIMES                : 118
TRUE                 : 104
VAR                  : 66 67 68 69 70 71
VOID                 : 28
WHILE                : 23
error                : 

Nonterminals, with rules where they appear

asignacion           : 47
aux                  : 97 99
aux2                 : 66 67 73
aux3                 : 57 62 63 64 65
aux4                 : 52 55 56
aux5                 : 26 33 34 37 38
aux6                 : 5 12 13 14 15 16 17
aux_ciclo            : 23
aux_elif             : 20 21
aux_param            : 27 28
bloque               : 18 19 20 21 23 25
cchar                : 131
cfloat               : 130
ciclo                : 11 17
cint                 : 68 69 70 70 71 71 129
class                : 1
condicion            : 10 16
constructor          : 7 13
context              : 1 2
contexto_func        : 27 28
elif                 : 19 21
escritura            : 48
estatuto             : 9 15 36 38
exp                  : 84 85 86 87 88 89 90 90 91 91 92 92 93 93 94 94 95 95 98 99 107 108 109 110 111 112 113 115 116
exp_bool             : 101 102 103
exp_cond             : 100 102 103 121
expresion            : 58 62 78 81 84 87 90 93 106 108 109 110 111 112 113
factor               : 117 118 119 120
funcion              : 8 14
gotoF                : 18 19 20 21 23
id                   : 27 28
lectura              : 51
llamada_func         : 49 59 63 79 82 85 88 91 94 96
objeto_aAcceso       : 54 56 81 82 83 87 88 89 93 94 95 122 123 127
objeto_metodo        : 50 60 64 80 83 86 89 92 95
param                : 25 27 28 41
programa             : 0
scope                : 3 4 27 28
termino              : 114 115 116 118 119 120
tipo_compuesto       : 67 69 71
tipo_simple          : 40 41 66 68 70
type                 : 27
var                  : 124 125 126
vars                 : 6 12 35 37

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID class context
    (2) programa -> . PROGRAM ID context

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID class context
    (2) programa -> PROGRAM . ID context

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . class context
    (2) programa -> PROGRAM ID . context
    (3) class -> . scope CLASS ID
    (4) class -> . scope CLASS ID COLON ID
    (5) context -> . LBRACE aux6 RBRACE
    (43) scope -> .
    (44) scope -> . PRIVATE
    (45) scope -> . PUBLIC
    (46) scope -> . PROTECTED

    LBRACE          shift and go to state 7
    CLASS           reduce using rule 43 (scope -> .)
    PRIVATE         shift and go to state 8
    PUBLIC          shift and go to state 9
    PROTECTED       shift and go to state 10

    class                          shift and go to state 4
    context                        shift and go to state 5
    scope                          shift and go to state 6

state 4

    (1) programa -> PROGRAM ID class . context
    (5) context -> . LBRACE aux6 RBRACE

    LBRACE          shift and go to state 7

    context                        shift and go to state 11

state 5

    (2) programa -> PROGRAM ID context .

    $end            reduce using rule 2 (programa -> PROGRAM ID context .)


state 6

    (3) class -> scope . CLASS ID
    (4) class -> scope . CLASS ID COLON ID

    CLASS           shift and go to state 12


state 7

    (5) context -> LBRACE . aux6 RBRACE
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (66) vars -> . VAR aux2 COLON tipo_simple
    (67) vars -> . VAR aux2 COLON tipo_compuesto
    (68) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (69) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (70) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (71) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (25) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (27) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (28) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (47) estatuto -> . asignacion
    (48) estatuto -> . escritura
    (49) estatuto -> . llamada_func
    (50) estatuto -> . objeto_metodo
    (51) estatuto -> . lectura
    (18) condicion -> . IF LPAREN gotoF RPAREN bloque
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (23) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (43) scope -> .
    (44) scope -> . PRIVATE
    (45) scope -> . PUBLIC
    (46) scope -> . PROTECTED
    (78) asignacion -> . ID EQUALS expresion
    (79) asignacion -> . ID EQUALS llamada_func
    (80) asignacion -> . ID EQUALS objeto_metodo
    (81) asignacion -> . objeto_aAcceso EQUALS expresion
    (82) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (83) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (84) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (87) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (88) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (90) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (91) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (94) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (95) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (57) escritura -> . PRINT LPAREN aux3 RPAREN
    (97) llamada_func -> . ID LPAREN aux RPAREN
    (96) objeto_metodo -> . ID PERIOD llamada_func
    (52) lectura -> . READ LPAREN aux4 RPAREN
    (24) aux_ciclo -> .
    (135) objeto_aAcceso -> . ID PERIOD ID

    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    VOID            reduce using rule 43 (scope -> .)
    INT             reduce using rule 43 (scope -> .)
    FLOAT           reduce using rule 43 (scope -> .)
    CHAR            reduce using rule 43 (scope -> .)
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33
    WHILE           reduce using rule 24 (aux_ciclo -> .)

    aux6                           shift and go to state 13
    vars                           shift and go to state 14
    constructor                    shift and go to state 15
    funcion                        shift and go to state 16
    estatuto                       shift and go to state 17
    condicion                      shift and go to state 18
    ciclo                          shift and go to state 19
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    aux_ciclo                      shift and go to state 30
    objeto_aAcceso                 shift and go to state 31

state 8

    (44) scope -> PRIVATE .

    CLASS           reduce using rule 44 (scope -> PRIVATE .)
    VOID            reduce using rule 44 (scope -> PRIVATE .)
    INT             reduce using rule 44 (scope -> PRIVATE .)
    FLOAT           reduce using rule 44 (scope -> PRIVATE .)
    CHAR            reduce using rule 44 (scope -> PRIVATE .)


state 9

    (45) scope -> PUBLIC .

    CLASS           reduce using rule 45 (scope -> PUBLIC .)


state 10

    (46) scope -> PROTECTED .

    CLASS           reduce using rule 46 (scope -> PROTECTED .)
    VOID            reduce using rule 46 (scope -> PROTECTED .)
    INT             reduce using rule 46 (scope -> PROTECTED .)
    FLOAT           reduce using rule 46 (scope -> PROTECTED .)
    CHAR            reduce using rule 46 (scope -> PROTECTED .)


state 11

    (1) programa -> PROGRAM ID class context .

    $end            reduce using rule 1 (programa -> PROGRAM ID class context .)


state 12

    (3) class -> scope CLASS . ID
    (4) class -> scope CLASS . ID COLON ID

    ID              shift and go to state 34


state 13

    (5) context -> LBRACE aux6 . RBRACE

    RBRACE          shift and go to state 35


state 14

    (6) aux6 -> vars .
    (12) aux6 -> vars . aux6
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (66) vars -> . VAR aux2 COLON tipo_simple
    (67) vars -> . VAR aux2 COLON tipo_compuesto
    (68) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (69) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (70) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (71) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (25) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (27) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (28) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (47) estatuto -> . asignacion
    (48) estatuto -> . escritura
    (49) estatuto -> . llamada_func
    (50) estatuto -> . objeto_metodo
    (51) estatuto -> . lectura
    (18) condicion -> . IF LPAREN gotoF RPAREN bloque
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (23) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (43) scope -> .
    (44) scope -> . PRIVATE
    (45) scope -> . PUBLIC
    (46) scope -> . PROTECTED
    (78) asignacion -> . ID EQUALS expresion
    (79) asignacion -> . ID EQUALS llamada_func
    (80) asignacion -> . ID EQUALS objeto_metodo
    (81) asignacion -> . objeto_aAcceso EQUALS expresion
    (82) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (83) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (84) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (87) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (88) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (90) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (91) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (94) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (95) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (57) escritura -> . PRINT LPAREN aux3 RPAREN
    (97) llamada_func -> . ID LPAREN aux RPAREN
    (96) objeto_metodo -> . ID PERIOD llamada_func
    (52) lectura -> . READ LPAREN aux4 RPAREN
    (24) aux_ciclo -> .
    (135) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 6 (aux6 -> vars .)
    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    VOID            reduce using rule 43 (scope -> .)
    INT             reduce using rule 43 (scope -> .)
    FLOAT           reduce using rule 43 (scope -> .)
    CHAR            reduce using rule 43 (scope -> .)
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33
    WHILE           reduce using rule 24 (aux_ciclo -> .)

    vars                           shift and go to state 14
    aux6                           shift and go to state 36
    constructor                    shift and go to state 15
    funcion                        shift and go to state 16
    estatuto                       shift and go to state 17
    condicion                      shift and go to state 18
    ciclo                          shift and go to state 19
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    aux_ciclo                      shift and go to state 30
    objeto_aAcceso                 shift and go to state 31

state 15

    (7) aux6 -> constructor .
    (13) aux6 -> constructor . aux6
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (66) vars -> . VAR aux2 COLON tipo_simple
    (67) vars -> . VAR aux2 COLON tipo_compuesto
    (68) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (69) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (70) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (71) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (25) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (27) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (28) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (47) estatuto -> . asignacion
    (48) estatuto -> . escritura
    (49) estatuto -> . llamada_func
    (50) estatuto -> . objeto_metodo
    (51) estatuto -> . lectura
    (18) condicion -> . IF LPAREN gotoF RPAREN bloque
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (23) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (43) scope -> .
    (44) scope -> . PRIVATE
    (45) scope -> . PUBLIC
    (46) scope -> . PROTECTED
    (78) asignacion -> . ID EQUALS expresion
    (79) asignacion -> . ID EQUALS llamada_func
    (80) asignacion -> . ID EQUALS objeto_metodo
    (81) asignacion -> . objeto_aAcceso EQUALS expresion
    (82) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (83) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (84) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (87) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (88) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (90) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (91) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (94) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (95) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (57) escritura -> . PRINT LPAREN aux3 RPAREN
    (97) llamada_func -> . ID LPAREN aux RPAREN
    (96) objeto_metodo -> . ID PERIOD llamada_func
    (52) lectura -> . READ LPAREN aux4 RPAREN
    (24) aux_ciclo -> .
    (135) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 7 (aux6 -> constructor .)
    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    VOID            reduce using rule 43 (scope -> .)
    INT             reduce using rule 43 (scope -> .)
    FLOAT           reduce using rule 43 (scope -> .)
    CHAR            reduce using rule 43 (scope -> .)
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33
    WHILE           reduce using rule 24 (aux_ciclo -> .)

    constructor                    shift and go to state 15
    aux6                           shift and go to state 37
    vars                           shift and go to state 14
    funcion                        shift and go to state 16
    estatuto                       shift and go to state 17
    condicion                      shift and go to state 18
    ciclo                          shift and go to state 19
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    aux_ciclo                      shift and go to state 30
    objeto_aAcceso                 shift and go to state 31

state 16

    (8) aux6 -> funcion .
    (14) aux6 -> funcion . aux6
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (66) vars -> . VAR aux2 COLON tipo_simple
    (67) vars -> . VAR aux2 COLON tipo_compuesto
    (68) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (69) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (70) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (71) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (25) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (27) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (28) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (47) estatuto -> . asignacion
    (48) estatuto -> . escritura
    (49) estatuto -> . llamada_func
    (50) estatuto -> . objeto_metodo
    (51) estatuto -> . lectura
    (18) condicion -> . IF LPAREN gotoF RPAREN bloque
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (23) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (43) scope -> .
    (44) scope -> . PRIVATE
    (45) scope -> . PUBLIC
    (46) scope -> . PROTECTED
    (78) asignacion -> . ID EQUALS expresion
    (79) asignacion -> . ID EQUALS llamada_func
    (80) asignacion -> . ID EQUALS objeto_metodo
    (81) asignacion -> . objeto_aAcceso EQUALS expresion
    (82) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (83) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (84) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (87) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (88) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (90) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (91) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (94) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (95) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (57) escritura -> . PRINT LPAREN aux3 RPAREN
    (97) llamada_func -> . ID LPAREN aux RPAREN
    (96) objeto_metodo -> . ID PERIOD llamada_func
    (52) lectura -> . READ LPAREN aux4 RPAREN
    (24) aux_ciclo -> .
    (135) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 8 (aux6 -> funcion .)
    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    VOID            reduce using rule 43 (scope -> .)
    INT             reduce using rule 43 (scope -> .)
    FLOAT           reduce using rule 43 (scope -> .)
    CHAR            reduce using rule 43 (scope -> .)
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33
    WHILE           reduce using rule 24 (aux_ciclo -> .)

    funcion                        shift and go to state 16
    aux6                           shift and go to state 38
    vars                           shift and go to state 14
    constructor                    shift and go to state 15
    estatuto                       shift and go to state 17
    condicion                      shift and go to state 18
    ciclo                          shift and go to state 19
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    aux_ciclo                      shift and go to state 30
    objeto_aAcceso                 shift and go to state 31

state 17

    (9) aux6 -> estatuto .
    (15) aux6 -> estatuto . aux6
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (66) vars -> . VAR aux2 COLON tipo_simple
    (67) vars -> . VAR aux2 COLON tipo_compuesto
    (68) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (69) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (70) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (71) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (25) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (27) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (28) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (47) estatuto -> . asignacion
    (48) estatuto -> . escritura
    (49) estatuto -> . llamada_func
    (50) estatuto -> . objeto_metodo
    (51) estatuto -> . lectura
    (18) condicion -> . IF LPAREN gotoF RPAREN bloque
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (23) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (43) scope -> .
    (44) scope -> . PRIVATE
    (45) scope -> . PUBLIC
    (46) scope -> . PROTECTED
    (78) asignacion -> . ID EQUALS expresion
    (79) asignacion -> . ID EQUALS llamada_func
    (80) asignacion -> . ID EQUALS objeto_metodo
    (81) asignacion -> . objeto_aAcceso EQUALS expresion
    (82) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (83) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (84) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (87) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (88) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (90) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (91) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (94) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (95) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (57) escritura -> . PRINT LPAREN aux3 RPAREN
    (97) llamada_func -> . ID LPAREN aux RPAREN
    (96) objeto_metodo -> . ID PERIOD llamada_func
    (52) lectura -> . READ LPAREN aux4 RPAREN
    (24) aux_ciclo -> .
    (135) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 9 (aux6 -> estatuto .)
    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    VOID            reduce using rule 43 (scope -> .)
    INT             reduce using rule 43 (scope -> .)
    FLOAT           reduce using rule 43 (scope -> .)
    CHAR            reduce using rule 43 (scope -> .)
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33
    WHILE           reduce using rule 24 (aux_ciclo -> .)

    estatuto                       shift and go to state 17
    aux6                           shift and go to state 39
    vars                           shift and go to state 14
    constructor                    shift and go to state 15
    funcion                        shift and go to state 16
    condicion                      shift and go to state 18
    ciclo                          shift and go to state 19
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    aux_ciclo                      shift and go to state 30
    objeto_aAcceso                 shift and go to state 31

state 18

    (10) aux6 -> condicion .
    (16) aux6 -> condicion . aux6
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (66) vars -> . VAR aux2 COLON tipo_simple
    (67) vars -> . VAR aux2 COLON tipo_compuesto
    (68) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (69) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (70) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (71) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (25) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (27) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (28) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (47) estatuto -> . asignacion
    (48) estatuto -> . escritura
    (49) estatuto -> . llamada_func
    (50) estatuto -> . objeto_metodo
    (51) estatuto -> . lectura
    (18) condicion -> . IF LPAREN gotoF RPAREN bloque
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (23) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (43) scope -> .
    (44) scope -> . PRIVATE
    (45) scope -> . PUBLIC
    (46) scope -> . PROTECTED
    (78) asignacion -> . ID EQUALS expresion
    (79) asignacion -> . ID EQUALS llamada_func
    (80) asignacion -> . ID EQUALS objeto_metodo
    (81) asignacion -> . objeto_aAcceso EQUALS expresion
    (82) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (83) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (84) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (87) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (88) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (90) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (91) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (94) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (95) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (57) escritura -> . PRINT LPAREN aux3 RPAREN
    (97) llamada_func -> . ID LPAREN aux RPAREN
    (96) objeto_metodo -> . ID PERIOD llamada_func
    (52) lectura -> . READ LPAREN aux4 RPAREN
    (24) aux_ciclo -> .
    (135) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 10 (aux6 -> condicion .)
    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    VOID            reduce using rule 43 (scope -> .)
    INT             reduce using rule 43 (scope -> .)
    FLOAT           reduce using rule 43 (scope -> .)
    CHAR            reduce using rule 43 (scope -> .)
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33
    WHILE           reduce using rule 24 (aux_ciclo -> .)

    condicion                      shift and go to state 18
    aux6                           shift and go to state 40
    vars                           shift and go to state 14
    constructor                    shift and go to state 15
    funcion                        shift and go to state 16
    estatuto                       shift and go to state 17
    ciclo                          shift and go to state 19
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    aux_ciclo                      shift and go to state 30
    objeto_aAcceso                 shift and go to state 31

state 19

    (11) aux6 -> ciclo .
    (17) aux6 -> ciclo . aux6
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (66) vars -> . VAR aux2 COLON tipo_simple
    (67) vars -> . VAR aux2 COLON tipo_compuesto
    (68) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (69) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (70) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (71) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (25) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (27) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (28) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (47) estatuto -> . asignacion
    (48) estatuto -> . escritura
    (49) estatuto -> . llamada_func
    (50) estatuto -> . objeto_metodo
    (51) estatuto -> . lectura
    (18) condicion -> . IF LPAREN gotoF RPAREN bloque
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (23) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (43) scope -> .
    (44) scope -> . PRIVATE
    (45) scope -> . PUBLIC
    (46) scope -> . PROTECTED
    (78) asignacion -> . ID EQUALS expresion
    (79) asignacion -> . ID EQUALS llamada_func
    (80) asignacion -> . ID EQUALS objeto_metodo
    (81) asignacion -> . objeto_aAcceso EQUALS expresion
    (82) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (83) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (84) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (87) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (88) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (90) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (91) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (94) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (95) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (57) escritura -> . PRINT LPAREN aux3 RPAREN
    (97) llamada_func -> . ID LPAREN aux RPAREN
    (96) objeto_metodo -> . ID PERIOD llamada_func
    (52) lectura -> . READ LPAREN aux4 RPAREN
    (24) aux_ciclo -> .
    (135) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 11 (aux6 -> ciclo .)
    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    VOID            reduce using rule 43 (scope -> .)
    INT             reduce using rule 43 (scope -> .)
    FLOAT           reduce using rule 43 (scope -> .)
    CHAR            reduce using rule 43 (scope -> .)
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33
    WHILE           reduce using rule 24 (aux_ciclo -> .)

    ciclo                          shift and go to state 19
    aux6                           shift and go to state 41
    vars                           shift and go to state 14
    constructor                    shift and go to state 15
    funcion                        shift and go to state 16
    estatuto                       shift and go to state 17
    condicion                      shift and go to state 18
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    aux_ciclo                      shift and go to state 30
    objeto_aAcceso                 shift and go to state 31

state 20

    (66) vars -> VAR . aux2 COLON tipo_simple
    (67) vars -> VAR . aux2 COLON tipo_compuesto
    (68) vars -> VAR . ID LBRACKET cint RBRACKET COLON tipo_simple
    (69) vars -> VAR . ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (70) vars -> VAR . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (71) vars -> VAR . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (72) aux2 -> . ID
    (73) aux2 -> . ID COMMA aux2

    ID              shift and go to state 43

    aux2                           shift and go to state 42

state 21

    (78) asignacion -> ID . EQUALS expresion
    (79) asignacion -> ID . EQUALS llamada_func
    (80) asignacion -> ID . EQUALS objeto_metodo
    (84) asignacion -> ID . LBRACKET exp RBRACKET EQUALS expresion
    (85) asignacion -> ID . LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> ID . LBRACKET exp RBRACKET EQUALS objeto_metodo
    (90) asignacion -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (91) asignacion -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (92) asignacion -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (97) llamada_func -> ID . LPAREN aux RPAREN
    (96) objeto_metodo -> ID . PERIOD llamada_func
    (135) objeto_aAcceso -> ID . PERIOD ID

    EQUALS          shift and go to state 44
    LBRACKET        shift and go to state 45
    LPAREN          shift and go to state 46
    PERIOD          shift and go to state 47


state 22

    (25) constructor -> PUBLIC . ID LPAREN param RPAREN bloque
    (45) scope -> PUBLIC .

    ID              shift and go to state 48
    VOID            reduce using rule 45 (scope -> PUBLIC .)
    INT             reduce using rule 45 (scope -> PUBLIC .)
    FLOAT           reduce using rule 45 (scope -> PUBLIC .)
    CHAR            reduce using rule 45 (scope -> PUBLIC .)


state 23

    (27) funcion -> scope . type DEF id LPAREN param aux_param RPAREN contexto_func
    (28) funcion -> scope . VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (30) type -> . INT
    (31) type -> . FLOAT
    (32) type -> . CHAR

    VOID            shift and go to state 50
    INT             shift and go to state 51
    FLOAT           shift and go to state 52
    CHAR            shift and go to state 53

    type                           shift and go to state 49

state 24

    (47) estatuto -> asignacion .

    VAR             reduce using rule 47 (estatuto -> asignacion .)
    PUBLIC          reduce using rule 47 (estatuto -> asignacion .)
    IF              reduce using rule 47 (estatuto -> asignacion .)
    PRIVATE         reduce using rule 47 (estatuto -> asignacion .)
    PROTECTED       reduce using rule 47 (estatuto -> asignacion .)
    ID              reduce using rule 47 (estatuto -> asignacion .)
    PRINT           reduce using rule 47 (estatuto -> asignacion .)
    READ            reduce using rule 47 (estatuto -> asignacion .)
    VOID            reduce using rule 47 (estatuto -> asignacion .)
    INT             reduce using rule 47 (estatuto -> asignacion .)
    FLOAT           reduce using rule 47 (estatuto -> asignacion .)
    CHAR            reduce using rule 47 (estatuto -> asignacion .)
    WHILE           reduce using rule 47 (estatuto -> asignacion .)
    RBRACE          reduce using rule 47 (estatuto -> asignacion .)
    RETURN          reduce using rule 47 (estatuto -> asignacion .)


state 25

    (48) estatuto -> escritura .

    VAR             reduce using rule 48 (estatuto -> escritura .)
    PUBLIC          reduce using rule 48 (estatuto -> escritura .)
    IF              reduce using rule 48 (estatuto -> escritura .)
    PRIVATE         reduce using rule 48 (estatuto -> escritura .)
    PROTECTED       reduce using rule 48 (estatuto -> escritura .)
    ID              reduce using rule 48 (estatuto -> escritura .)
    PRINT           reduce using rule 48 (estatuto -> escritura .)
    READ            reduce using rule 48 (estatuto -> escritura .)
    VOID            reduce using rule 48 (estatuto -> escritura .)
    INT             reduce using rule 48 (estatuto -> escritura .)
    FLOAT           reduce using rule 48 (estatuto -> escritura .)
    CHAR            reduce using rule 48 (estatuto -> escritura .)
    WHILE           reduce using rule 48 (estatuto -> escritura .)
    RBRACE          reduce using rule 48 (estatuto -> escritura .)
    RETURN          reduce using rule 48 (estatuto -> escritura .)


state 26

    (49) estatuto -> llamada_func .

    VAR             reduce using rule 49 (estatuto -> llamada_func .)
    PUBLIC          reduce using rule 49 (estatuto -> llamada_func .)
    IF              reduce using rule 49 (estatuto -> llamada_func .)
    PRIVATE         reduce using rule 49 (estatuto -> llamada_func .)
    PROTECTED       reduce using rule 49 (estatuto -> llamada_func .)
    ID              reduce using rule 49 (estatuto -> llamada_func .)
    PRINT           reduce using rule 49 (estatuto -> llamada_func .)
    READ            reduce using rule 49 (estatuto -> llamada_func .)
    VOID            reduce using rule 49 (estatuto -> llamada_func .)
    INT             reduce using rule 49 (estatuto -> llamada_func .)
    FLOAT           reduce using rule 49 (estatuto -> llamada_func .)
    CHAR            reduce using rule 49 (estatuto -> llamada_func .)
    WHILE           reduce using rule 49 (estatuto -> llamada_func .)
    RBRACE          reduce using rule 49 (estatuto -> llamada_func .)
    RETURN          reduce using rule 49 (estatuto -> llamada_func .)


state 27

    (50) estatuto -> objeto_metodo .

    VAR             reduce using rule 50 (estatuto -> objeto_metodo .)
    PUBLIC          reduce using rule 50 (estatuto -> objeto_metodo .)
    IF              reduce using rule 50 (estatuto -> objeto_metodo .)
    PRIVATE         reduce using rule 50 (estatuto -> objeto_metodo .)
    PROTECTED       reduce using rule 50 (estatuto -> objeto_metodo .)
    ID              reduce using rule 50 (estatuto -> objeto_metodo .)
    PRINT           reduce using rule 50 (estatuto -> objeto_metodo .)
    READ            reduce using rule 50 (estatuto -> objeto_metodo .)
    VOID            reduce using rule 50 (estatuto -> objeto_metodo .)
    INT             reduce using rule 50 (estatuto -> objeto_metodo .)
    FLOAT           reduce using rule 50 (estatuto -> objeto_metodo .)
    CHAR            reduce using rule 50 (estatuto -> objeto_metodo .)
    WHILE           reduce using rule 50 (estatuto -> objeto_metodo .)
    RBRACE          reduce using rule 50 (estatuto -> objeto_metodo .)
    RETURN          reduce using rule 50 (estatuto -> objeto_metodo .)


state 28

    (51) estatuto -> lectura .

    VAR             reduce using rule 51 (estatuto -> lectura .)
    PUBLIC          reduce using rule 51 (estatuto -> lectura .)
    IF              reduce using rule 51 (estatuto -> lectura .)
    PRIVATE         reduce using rule 51 (estatuto -> lectura .)
    PROTECTED       reduce using rule 51 (estatuto -> lectura .)
    ID              reduce using rule 51 (estatuto -> lectura .)
    PRINT           reduce using rule 51 (estatuto -> lectura .)
    READ            reduce using rule 51 (estatuto -> lectura .)
    VOID            reduce using rule 51 (estatuto -> lectura .)
    INT             reduce using rule 51 (estatuto -> lectura .)
    FLOAT           reduce using rule 51 (estatuto -> lectura .)
    CHAR            reduce using rule 51 (estatuto -> lectura .)
    WHILE           reduce using rule 51 (estatuto -> lectura .)
    RBRACE          reduce using rule 51 (estatuto -> lectura .)
    RETURN          reduce using rule 51 (estatuto -> lectura .)


state 29

    (18) condicion -> IF . LPAREN gotoF RPAREN bloque
    (19) condicion -> IF . LPAREN gotoF RPAREN bloque elif

    LPAREN          shift and go to state 54


state 30

    (23) ciclo -> aux_ciclo . WHILE LPAREN gotoF RPAREN bloque

    WHILE           shift and go to state 55


state 31

    (81) asignacion -> objeto_aAcceso . EQUALS expresion
    (82) asignacion -> objeto_aAcceso . EQUALS llamada_func
    (83) asignacion -> objeto_aAcceso . EQUALS objeto_metodo
    (87) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET EQUALS expresion
    (88) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> objeto_aAcceso . LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (94) asignacion -> objeto_aAcceso . LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (95) asignacion -> objeto_aAcceso . LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo

    EQUALS          shift and go to state 56
    LBRACKET        shift and go to state 57


state 32

    (57) escritura -> PRINT . LPAREN aux3 RPAREN

    LPAREN          shift and go to state 58


state 33

    (52) lectura -> READ . LPAREN aux4 RPAREN

    LPAREN          shift and go to state 59


state 34

    (3) class -> scope CLASS ID .
    (4) class -> scope CLASS ID . COLON ID

    LBRACE          reduce using rule 3 (class -> scope CLASS ID .)
    COLON           shift and go to state 60


state 35

    (5) context -> LBRACE aux6 RBRACE .

    $end            reduce using rule 5 (context -> LBRACE aux6 RBRACE .)


state 36

    (12) aux6 -> vars aux6 .

    RBRACE          reduce using rule 12 (aux6 -> vars aux6 .)


state 37

    (13) aux6 -> constructor aux6 .

    RBRACE          reduce using rule 13 (aux6 -> constructor aux6 .)


state 38

    (14) aux6 -> funcion aux6 .

    RBRACE          reduce using rule 14 (aux6 -> funcion aux6 .)


state 39

    (15) aux6 -> estatuto aux6 .

    RBRACE          reduce using rule 15 (aux6 -> estatuto aux6 .)


state 40

    (16) aux6 -> condicion aux6 .

    RBRACE          reduce using rule 16 (aux6 -> condicion aux6 .)


state 41

    (17) aux6 -> ciclo aux6 .

    RBRACE          reduce using rule 17 (aux6 -> ciclo aux6 .)


state 42

    (66) vars -> VAR aux2 . COLON tipo_simple
    (67) vars -> VAR aux2 . COLON tipo_compuesto

    COLON           shift and go to state 61


state 43

    (68) vars -> VAR ID . LBRACKET cint RBRACKET COLON tipo_simple
    (69) vars -> VAR ID . LBRACKET cint RBRACKET COLON tipo_compuesto
    (70) vars -> VAR ID . LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (71) vars -> VAR ID . LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (72) aux2 -> ID .
    (73) aux2 -> ID . COMMA aux2

    LBRACKET        shift and go to state 62
    COLON           reduce using rule 72 (aux2 -> ID .)
    COMMA           shift and go to state 63


state 44

    (78) asignacion -> ID EQUALS . expresion
    (79) asignacion -> ID EQUALS . llamada_func
    (80) asignacion -> ID EQUALS . objeto_metodo
    (107) expresion -> . exp
    (108) expresion -> . exp LT expresion
    (109) expresion -> . exp GT expresion
    (110) expresion -> . exp GE expresion
    (111) expresion -> . exp LE expresion
    (112) expresion -> . exp EQ expresion
    (113) expresion -> . exp NE expresion
    (97) llamada_func -> . ID LPAREN aux RPAREN
    (96) objeto_metodo -> . ID PERIOD llamada_func
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    ID              shift and go to state 64
    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    expresion                      shift and go to state 65
    llamada_func                   shift and go to state 66
    objeto_metodo                  shift and go to state 67
    exp                            shift and go to state 68
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 45

    (84) asignacion -> ID LBRACKET . exp RBRACKET EQUALS expresion
    (85) asignacion -> ID LBRACKET . exp RBRACKET EQUALS llamada_func
    (86) asignacion -> ID LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (90) asignacion -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (91) asignacion -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (92) asignacion -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 82
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    exp                            shift and go to state 83
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 46

    (97) llamada_func -> ID LPAREN . aux RPAREN
    (98) aux -> . exp
    (99) aux -> . exp COMMA aux
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 82
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    aux                            shift and go to state 84
    exp                            shift and go to state 85
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 47

    (96) objeto_metodo -> ID PERIOD . llamada_func
    (135) objeto_aAcceso -> ID PERIOD . ID
    (97) llamada_func -> . ID LPAREN aux RPAREN

    ID              shift and go to state 86

    llamada_func                   shift and go to state 87

state 48

    (25) constructor -> PUBLIC ID . LPAREN param RPAREN bloque

    LPAREN          shift and go to state 88


state 49

    (27) funcion -> scope type . DEF id LPAREN param aux_param RPAREN contexto_func

    DEF             shift and go to state 89


state 50

    (28) funcion -> scope VOID . DEF id LPAREN param aux_param RPAREN contexto_func

    DEF             shift and go to state 90


state 51

    (30) type -> INT .

    DEF             reduce using rule 30 (type -> INT .)


state 52

    (31) type -> FLOAT .

    DEF             reduce using rule 31 (type -> FLOAT .)


state 53

    (32) type -> CHAR .

    DEF             reduce using rule 32 (type -> CHAR .)


state 54

    (18) condicion -> IF LPAREN . gotoF RPAREN bloque
    (19) condicion -> IF LPAREN . gotoF RPAREN bloque elif
    (100) gotoF -> . exp_cond
    (101) exp_cond -> . exp_bool
    (102) exp_cond -> . exp_bool AND exp_cond
    (103) exp_cond -> . exp_bool OR exp_cond
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . expresion
    (107) expresion -> . exp
    (108) expresion -> . exp LT expresion
    (109) expresion -> . exp GT expresion
    (110) expresion -> . exp GE expresion
    (111) expresion -> . exp LE expresion
    (112) expresion -> . exp EQ expresion
    (113) expresion -> . exp NE expresion
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 82
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    gotoF                          shift and go to state 91
    exp_cond                       shift and go to state 92
    exp_bool                       shift and go to state 93
    expresion                      shift and go to state 96
    exp                            shift and go to state 68
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 55

    (23) ciclo -> aux_ciclo WHILE . LPAREN gotoF RPAREN bloque

    LPAREN          shift and go to state 97


state 56

    (81) asignacion -> objeto_aAcceso EQUALS . expresion
    (82) asignacion -> objeto_aAcceso EQUALS . llamada_func
    (83) asignacion -> objeto_aAcceso EQUALS . objeto_metodo
    (107) expresion -> . exp
    (108) expresion -> . exp LT expresion
    (109) expresion -> . exp GT expresion
    (110) expresion -> . exp GE expresion
    (111) expresion -> . exp LE expresion
    (112) expresion -> . exp EQ expresion
    (113) expresion -> . exp NE expresion
    (97) llamada_func -> . ID LPAREN aux RPAREN
    (96) objeto_metodo -> . ID PERIOD llamada_func
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    ID              shift and go to state 64
    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    objeto_aAcceso                 shift and go to state 74
    expresion                      shift and go to state 98
    llamada_func                   shift and go to state 99
    objeto_metodo                  shift and go to state 100
    exp                            shift and go to state 68
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 57

    (87) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET EQUALS expresion
    (88) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET EQUALS llamada_func
    (89) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> objeto_aAcceso LBRACKET . LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (94) asignacion -> objeto_aAcceso LBRACKET . LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (95) asignacion -> objeto_aAcceso LBRACKET . LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    LBRACKET        shift and go to state 101
    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 82
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    objeto_aAcceso                 shift and go to state 74
    exp                            shift and go to state 102
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 58

    (57) escritura -> PRINT LPAREN . aux3 RPAREN
    (58) aux3 -> . expresion
    (59) aux3 -> . llamada_func
    (60) aux3 -> . objeto_metodo
    (61) aux3 -> . CSTRING
    (62) aux3 -> . expresion COMMA aux3
    (63) aux3 -> . llamada_func COMMA aux3
    (64) aux3 -> . objeto_metodo COMMA aux3
    (65) aux3 -> . CSTRING COMMA aux3
    (107) expresion -> . exp
    (108) expresion -> . exp LT expresion
    (109) expresion -> . exp GT expresion
    (110) expresion -> . exp GE expresion
    (111) expresion -> . exp LE expresion
    (112) expresion -> . exp EQ expresion
    (113) expresion -> . exp NE expresion
    (97) llamada_func -> . ID LPAREN aux RPAREN
    (96) objeto_metodo -> . ID PERIOD llamada_func
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    CSTRING         shift and go to state 107
    ID              shift and go to state 64
    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    aux3                           shift and go to state 103
    expresion                      shift and go to state 104
    llamada_func                   shift and go to state 105
    objeto_metodo                  shift and go to state 106
    exp                            shift and go to state 68
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 59

    (52) lectura -> READ LPAREN . aux4 RPAREN
    (53) aux4 -> . ID
    (54) aux4 -> . objeto_aAcceso
    (55) aux4 -> . ID COMMA aux4
    (56) aux4 -> . objeto_aAcceso COMMA aux4
    (135) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 109

    aux4                           shift and go to state 108
    objeto_aAcceso                 shift and go to state 110

state 60

    (4) class -> scope CLASS ID COLON . ID

    ID              shift and go to state 111


state 61

    (66) vars -> VAR aux2 COLON . tipo_simple
    (67) vars -> VAR aux2 COLON . tipo_compuesto
    (74) tipo_simple -> . INT
    (75) tipo_simple -> . FLOAT
    (76) tipo_simple -> . CHAR
    (77) tipo_compuesto -> . ID

    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    CHAR            shift and go to state 116
    ID              shift and go to state 117

    tipo_simple                    shift and go to state 112
    tipo_compuesto                 shift and go to state 113

state 62

    (68) vars -> VAR ID LBRACKET . cint RBRACKET COLON tipo_simple
    (69) vars -> VAR ID LBRACKET . cint RBRACKET COLON tipo_compuesto
    (70) vars -> VAR ID LBRACKET . cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (71) vars -> VAR ID LBRACKET . cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (132) cint -> . CINT

    CINT            shift and go to state 79

    cint                           shift and go to state 118

state 63

    (73) aux2 -> ID COMMA . aux2
    (72) aux2 -> . ID
    (73) aux2 -> . ID COMMA aux2

    ID              shift and go to state 119

    aux2                           shift and go to state 120

state 64

    (97) llamada_func -> ID . LPAREN aux RPAREN
    (96) objeto_metodo -> ID . PERIOD llamada_func
    (128) var -> ID .
    (135) objeto_aAcceso -> ID . PERIOD ID

    LPAREN          shift and go to state 46
    PERIOD          shift and go to state 47
    TIMES           reduce using rule 128 (var -> ID .)
    DIVIDE          reduce using rule 128 (var -> ID .)
    MODULO          reduce using rule 128 (var -> ID .)
    LT              reduce using rule 128 (var -> ID .)
    GT              reduce using rule 128 (var -> ID .)
    GE              reduce using rule 128 (var -> ID .)
    LE              reduce using rule 128 (var -> ID .)
    EQ              reduce using rule 128 (var -> ID .)
    NE              reduce using rule 128 (var -> ID .)
    PLUS            reduce using rule 128 (var -> ID .)
    MINUS           reduce using rule 128 (var -> ID .)
    VAR             reduce using rule 128 (var -> ID .)
    PUBLIC          reduce using rule 128 (var -> ID .)
    IF              reduce using rule 128 (var -> ID .)
    PRIVATE         reduce using rule 128 (var -> ID .)
    PROTECTED       reduce using rule 128 (var -> ID .)
    ID              reduce using rule 128 (var -> ID .)
    PRINT           reduce using rule 128 (var -> ID .)
    READ            reduce using rule 128 (var -> ID .)
    VOID            reduce using rule 128 (var -> ID .)
    INT             reduce using rule 128 (var -> ID .)
    FLOAT           reduce using rule 128 (var -> ID .)
    CHAR            reduce using rule 128 (var -> ID .)
    WHILE           reduce using rule 128 (var -> ID .)
    RBRACE          reduce using rule 128 (var -> ID .)
    RETURN          reduce using rule 128 (var -> ID .)
    COMMA           reduce using rule 128 (var -> ID .)
    RPAREN          reduce using rule 128 (var -> ID .)


state 65

    (78) asignacion -> ID EQUALS expresion .

    VAR             reduce using rule 78 (asignacion -> ID EQUALS expresion .)
    PUBLIC          reduce using rule 78 (asignacion -> ID EQUALS expresion .)
    IF              reduce using rule 78 (asignacion -> ID EQUALS expresion .)
    PRIVATE         reduce using rule 78 (asignacion -> ID EQUALS expresion .)
    PROTECTED       reduce using rule 78 (asignacion -> ID EQUALS expresion .)
    ID              reduce using rule 78 (asignacion -> ID EQUALS expresion .)
    PRINT           reduce using rule 78 (asignacion -> ID EQUALS expresion .)
    READ            reduce using rule 78 (asignacion -> ID EQUALS expresion .)
    VOID            reduce using rule 78 (asignacion -> ID EQUALS expresion .)
    INT             reduce using rule 78 (asignacion -> ID EQUALS expresion .)
    FLOAT           reduce using rule 78 (asignacion -> ID EQUALS expresion .)
    CHAR            reduce using rule 78 (asignacion -> ID EQUALS expresion .)
    WHILE           reduce using rule 78 (asignacion -> ID EQUALS expresion .)
    RBRACE          reduce using rule 78 (asignacion -> ID EQUALS expresion .)
    RETURN          reduce using rule 78 (asignacion -> ID EQUALS expresion .)


state 66

    (79) asignacion -> ID EQUALS llamada_func .

    VAR             reduce using rule 79 (asignacion -> ID EQUALS llamada_func .)
    PUBLIC          reduce using rule 79 (asignacion -> ID EQUALS llamada_func .)
    IF              reduce using rule 79 (asignacion -> ID EQUALS llamada_func .)
    PRIVATE         reduce using rule 79 (asignacion -> ID EQUALS llamada_func .)
    PROTECTED       reduce using rule 79 (asignacion -> ID EQUALS llamada_func .)
    ID              reduce using rule 79 (asignacion -> ID EQUALS llamada_func .)
    PRINT           reduce using rule 79 (asignacion -> ID EQUALS llamada_func .)
    READ            reduce using rule 79 (asignacion -> ID EQUALS llamada_func .)
    VOID            reduce using rule 79 (asignacion -> ID EQUALS llamada_func .)
    INT             reduce using rule 79 (asignacion -> ID EQUALS llamada_func .)
    FLOAT           reduce using rule 79 (asignacion -> ID EQUALS llamada_func .)
    CHAR            reduce using rule 79 (asignacion -> ID EQUALS llamada_func .)
    WHILE           reduce using rule 79 (asignacion -> ID EQUALS llamada_func .)
    RBRACE          reduce using rule 79 (asignacion -> ID EQUALS llamada_func .)
    RETURN          reduce using rule 79 (asignacion -> ID EQUALS llamada_func .)


state 67

    (80) asignacion -> ID EQUALS objeto_metodo .

    VAR             reduce using rule 80 (asignacion -> ID EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 80 (asignacion -> ID EQUALS objeto_metodo .)
    IF              reduce using rule 80 (asignacion -> ID EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 80 (asignacion -> ID EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 80 (asignacion -> ID EQUALS objeto_metodo .)
    ID              reduce using rule 80 (asignacion -> ID EQUALS objeto_metodo .)
    PRINT           reduce using rule 80 (asignacion -> ID EQUALS objeto_metodo .)
    READ            reduce using rule 80 (asignacion -> ID EQUALS objeto_metodo .)
    VOID            reduce using rule 80 (asignacion -> ID EQUALS objeto_metodo .)
    INT             reduce using rule 80 (asignacion -> ID EQUALS objeto_metodo .)
    FLOAT           reduce using rule 80 (asignacion -> ID EQUALS objeto_metodo .)
    CHAR            reduce using rule 80 (asignacion -> ID EQUALS objeto_metodo .)
    WHILE           reduce using rule 80 (asignacion -> ID EQUALS objeto_metodo .)
    RBRACE          reduce using rule 80 (asignacion -> ID EQUALS objeto_metodo .)
    RETURN          reduce using rule 80 (asignacion -> ID EQUALS objeto_metodo .)


state 68

    (107) expresion -> exp .
    (108) expresion -> exp . LT expresion
    (109) expresion -> exp . GT expresion
    (110) expresion -> exp . GE expresion
    (111) expresion -> exp . LE expresion
    (112) expresion -> exp . EQ expresion
    (113) expresion -> exp . NE expresion
    (115) exp -> exp . PLUS termino
    (116) exp -> exp . MINUS termino

    VAR             reduce using rule 107 (expresion -> exp .)
    PUBLIC          reduce using rule 107 (expresion -> exp .)
    IF              reduce using rule 107 (expresion -> exp .)
    PRIVATE         reduce using rule 107 (expresion -> exp .)
    PROTECTED       reduce using rule 107 (expresion -> exp .)
    ID              reduce using rule 107 (expresion -> exp .)
    PRINT           reduce using rule 107 (expresion -> exp .)
    READ            reduce using rule 107 (expresion -> exp .)
    VOID            reduce using rule 107 (expresion -> exp .)
    INT             reduce using rule 107 (expresion -> exp .)
    FLOAT           reduce using rule 107 (expresion -> exp .)
    CHAR            reduce using rule 107 (expresion -> exp .)
    WHILE           reduce using rule 107 (expresion -> exp .)
    RBRACE          reduce using rule 107 (expresion -> exp .)
    RETURN          reduce using rule 107 (expresion -> exp .)
    AND             reduce using rule 107 (expresion -> exp .)
    OR              reduce using rule 107 (expresion -> exp .)
    RPAREN          reduce using rule 107 (expresion -> exp .)
    COMMA           reduce using rule 107 (expresion -> exp .)
    LT              shift and go to state 121
    GT              shift and go to state 122
    GE              shift and go to state 123
    LE              shift and go to state 124
    EQ              shift and go to state 125
    NE              shift and go to state 126
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128


state 69

    (121) factor -> LPAREN . exp_cond RPAREN
    (101) exp_cond -> . exp_bool
    (102) exp_cond -> . exp_bool AND exp_cond
    (103) exp_cond -> . exp_bool OR exp_cond
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . expresion
    (107) expresion -> . exp
    (108) expresion -> . exp LT expresion
    (109) expresion -> . exp GT expresion
    (110) expresion -> . exp GE expresion
    (111) expresion -> . exp LE expresion
    (112) expresion -> . exp EQ expresion
    (113) expresion -> . exp NE expresion
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 82
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    exp_cond                       shift and go to state 129
    exp_bool                       shift and go to state 93
    expresion                      shift and go to state 96
    exp                            shift and go to state 68
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 70

    (114) exp -> termino .
    (118) termino -> termino . TIMES factor
    (119) termino -> termino . DIVIDE factor
    (120) termino -> termino . MODULO factor

    LT              reduce using rule 114 (exp -> termino .)
    GT              reduce using rule 114 (exp -> termino .)
    GE              reduce using rule 114 (exp -> termino .)
    LE              reduce using rule 114 (exp -> termino .)
    EQ              reduce using rule 114 (exp -> termino .)
    NE              reduce using rule 114 (exp -> termino .)
    PLUS            reduce using rule 114 (exp -> termino .)
    MINUS           reduce using rule 114 (exp -> termino .)
    VAR             reduce using rule 114 (exp -> termino .)
    PUBLIC          reduce using rule 114 (exp -> termino .)
    IF              reduce using rule 114 (exp -> termino .)
    PRIVATE         reduce using rule 114 (exp -> termino .)
    PROTECTED       reduce using rule 114 (exp -> termino .)
    ID              reduce using rule 114 (exp -> termino .)
    PRINT           reduce using rule 114 (exp -> termino .)
    READ            reduce using rule 114 (exp -> termino .)
    VOID            reduce using rule 114 (exp -> termino .)
    INT             reduce using rule 114 (exp -> termino .)
    FLOAT           reduce using rule 114 (exp -> termino .)
    CHAR            reduce using rule 114 (exp -> termino .)
    WHILE           reduce using rule 114 (exp -> termino .)
    RBRACE          reduce using rule 114 (exp -> termino .)
    RETURN          reduce using rule 114 (exp -> termino .)
    RBRACKET        reduce using rule 114 (exp -> termino .)
    COMMA           reduce using rule 114 (exp -> termino .)
    RPAREN          reduce using rule 114 (exp -> termino .)
    AND             reduce using rule 114 (exp -> termino .)
    OR              reduce using rule 114 (exp -> termino .)
    TIMES           shift and go to state 130
    DIVIDE          shift and go to state 131
    MODULO          shift and go to state 132


state 71

    (122) factor -> PLUS . objeto_aAcceso
    (124) factor -> PLUS . var
    (135) objeto_aAcceso -> . ID PERIOD ID
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    ID              shift and go to state 135
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    objeto_aAcceso                 shift and go to state 133
    var                            shift and go to state 134
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 72

    (123) factor -> MINUS . objeto_aAcceso
    (125) factor -> MINUS . var
    (135) objeto_aAcceso -> . ID PERIOD ID
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    ID              shift and go to state 135
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    objeto_aAcceso                 shift and go to state 136
    var                            shift and go to state 137
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 73

    (117) termino -> factor .

    TIMES           reduce using rule 117 (termino -> factor .)
    DIVIDE          reduce using rule 117 (termino -> factor .)
    MODULO          reduce using rule 117 (termino -> factor .)
    LT              reduce using rule 117 (termino -> factor .)
    GT              reduce using rule 117 (termino -> factor .)
    GE              reduce using rule 117 (termino -> factor .)
    LE              reduce using rule 117 (termino -> factor .)
    EQ              reduce using rule 117 (termino -> factor .)
    NE              reduce using rule 117 (termino -> factor .)
    PLUS            reduce using rule 117 (termino -> factor .)
    MINUS           reduce using rule 117 (termino -> factor .)
    VAR             reduce using rule 117 (termino -> factor .)
    PUBLIC          reduce using rule 117 (termino -> factor .)
    IF              reduce using rule 117 (termino -> factor .)
    PRIVATE         reduce using rule 117 (termino -> factor .)
    PROTECTED       reduce using rule 117 (termino -> factor .)
    ID              reduce using rule 117 (termino -> factor .)
    PRINT           reduce using rule 117 (termino -> factor .)
    READ            reduce using rule 117 (termino -> factor .)
    VOID            reduce using rule 117 (termino -> factor .)
    INT             reduce using rule 117 (termino -> factor .)
    FLOAT           reduce using rule 117 (termino -> factor .)
    CHAR            reduce using rule 117 (termino -> factor .)
    WHILE           reduce using rule 117 (termino -> factor .)
    RBRACE          reduce using rule 117 (termino -> factor .)
    RETURN          reduce using rule 117 (termino -> factor .)
    RBRACKET        reduce using rule 117 (termino -> factor .)
    COMMA           reduce using rule 117 (termino -> factor .)
    RPAREN          reduce using rule 117 (termino -> factor .)
    AND             reduce using rule 117 (termino -> factor .)
    OR              reduce using rule 117 (termino -> factor .)


state 74

    (127) factor -> objeto_aAcceso .

    TIMES           reduce using rule 127 (factor -> objeto_aAcceso .)
    DIVIDE          reduce using rule 127 (factor -> objeto_aAcceso .)
    MODULO          reduce using rule 127 (factor -> objeto_aAcceso .)
    LT              reduce using rule 127 (factor -> objeto_aAcceso .)
    GT              reduce using rule 127 (factor -> objeto_aAcceso .)
    GE              reduce using rule 127 (factor -> objeto_aAcceso .)
    LE              reduce using rule 127 (factor -> objeto_aAcceso .)
    EQ              reduce using rule 127 (factor -> objeto_aAcceso .)
    NE              reduce using rule 127 (factor -> objeto_aAcceso .)
    PLUS            reduce using rule 127 (factor -> objeto_aAcceso .)
    MINUS           reduce using rule 127 (factor -> objeto_aAcceso .)
    VAR             reduce using rule 127 (factor -> objeto_aAcceso .)
    PUBLIC          reduce using rule 127 (factor -> objeto_aAcceso .)
    IF              reduce using rule 127 (factor -> objeto_aAcceso .)
    PRIVATE         reduce using rule 127 (factor -> objeto_aAcceso .)
    PROTECTED       reduce using rule 127 (factor -> objeto_aAcceso .)
    ID              reduce using rule 127 (factor -> objeto_aAcceso .)
    PRINT           reduce using rule 127 (factor -> objeto_aAcceso .)
    READ            reduce using rule 127 (factor -> objeto_aAcceso .)
    VOID            reduce using rule 127 (factor -> objeto_aAcceso .)
    INT             reduce using rule 127 (factor -> objeto_aAcceso .)
    FLOAT           reduce using rule 127 (factor -> objeto_aAcceso .)
    CHAR            reduce using rule 127 (factor -> objeto_aAcceso .)
    WHILE           reduce using rule 127 (factor -> objeto_aAcceso .)
    RBRACE          reduce using rule 127 (factor -> objeto_aAcceso .)
    RETURN          reduce using rule 127 (factor -> objeto_aAcceso .)
    RBRACKET        reduce using rule 127 (factor -> objeto_aAcceso .)
    COMMA           reduce using rule 127 (factor -> objeto_aAcceso .)
    RPAREN          reduce using rule 127 (factor -> objeto_aAcceso .)
    AND             reduce using rule 127 (factor -> objeto_aAcceso .)
    OR              reduce using rule 127 (factor -> objeto_aAcceso .)


state 75

    (126) factor -> var .

    TIMES           reduce using rule 126 (factor -> var .)
    DIVIDE          reduce using rule 126 (factor -> var .)
    MODULO          reduce using rule 126 (factor -> var .)
    LT              reduce using rule 126 (factor -> var .)
    GT              reduce using rule 126 (factor -> var .)
    GE              reduce using rule 126 (factor -> var .)
    LE              reduce using rule 126 (factor -> var .)
    EQ              reduce using rule 126 (factor -> var .)
    NE              reduce using rule 126 (factor -> var .)
    PLUS            reduce using rule 126 (factor -> var .)
    MINUS           reduce using rule 126 (factor -> var .)
    VAR             reduce using rule 126 (factor -> var .)
    PUBLIC          reduce using rule 126 (factor -> var .)
    IF              reduce using rule 126 (factor -> var .)
    PRIVATE         reduce using rule 126 (factor -> var .)
    PROTECTED       reduce using rule 126 (factor -> var .)
    ID              reduce using rule 126 (factor -> var .)
    PRINT           reduce using rule 126 (factor -> var .)
    READ            reduce using rule 126 (factor -> var .)
    VOID            reduce using rule 126 (factor -> var .)
    INT             reduce using rule 126 (factor -> var .)
    FLOAT           reduce using rule 126 (factor -> var .)
    CHAR            reduce using rule 126 (factor -> var .)
    WHILE           reduce using rule 126 (factor -> var .)
    RBRACE          reduce using rule 126 (factor -> var .)
    RETURN          reduce using rule 126 (factor -> var .)
    RBRACKET        reduce using rule 126 (factor -> var .)
    COMMA           reduce using rule 126 (factor -> var .)
    RPAREN          reduce using rule 126 (factor -> var .)
    AND             reduce using rule 126 (factor -> var .)
    OR              reduce using rule 126 (factor -> var .)


state 76

    (129) var -> cint .

    TIMES           reduce using rule 129 (var -> cint .)
    DIVIDE          reduce using rule 129 (var -> cint .)
    MODULO          reduce using rule 129 (var -> cint .)
    LT              reduce using rule 129 (var -> cint .)
    GT              reduce using rule 129 (var -> cint .)
    GE              reduce using rule 129 (var -> cint .)
    LE              reduce using rule 129 (var -> cint .)
    EQ              reduce using rule 129 (var -> cint .)
    NE              reduce using rule 129 (var -> cint .)
    PLUS            reduce using rule 129 (var -> cint .)
    MINUS           reduce using rule 129 (var -> cint .)
    VAR             reduce using rule 129 (var -> cint .)
    PUBLIC          reduce using rule 129 (var -> cint .)
    IF              reduce using rule 129 (var -> cint .)
    PRIVATE         reduce using rule 129 (var -> cint .)
    PROTECTED       reduce using rule 129 (var -> cint .)
    ID              reduce using rule 129 (var -> cint .)
    PRINT           reduce using rule 129 (var -> cint .)
    READ            reduce using rule 129 (var -> cint .)
    VOID            reduce using rule 129 (var -> cint .)
    INT             reduce using rule 129 (var -> cint .)
    FLOAT           reduce using rule 129 (var -> cint .)
    CHAR            reduce using rule 129 (var -> cint .)
    WHILE           reduce using rule 129 (var -> cint .)
    RBRACE          reduce using rule 129 (var -> cint .)
    RETURN          reduce using rule 129 (var -> cint .)
    RBRACKET        reduce using rule 129 (var -> cint .)
    COMMA           reduce using rule 129 (var -> cint .)
    RPAREN          reduce using rule 129 (var -> cint .)
    AND             reduce using rule 129 (var -> cint .)
    OR              reduce using rule 129 (var -> cint .)


state 77

    (130) var -> cfloat .

    TIMES           reduce using rule 130 (var -> cfloat .)
    DIVIDE          reduce using rule 130 (var -> cfloat .)
    MODULO          reduce using rule 130 (var -> cfloat .)
    LT              reduce using rule 130 (var -> cfloat .)
    GT              reduce using rule 130 (var -> cfloat .)
    GE              reduce using rule 130 (var -> cfloat .)
    LE              reduce using rule 130 (var -> cfloat .)
    EQ              reduce using rule 130 (var -> cfloat .)
    NE              reduce using rule 130 (var -> cfloat .)
    PLUS            reduce using rule 130 (var -> cfloat .)
    MINUS           reduce using rule 130 (var -> cfloat .)
    VAR             reduce using rule 130 (var -> cfloat .)
    PUBLIC          reduce using rule 130 (var -> cfloat .)
    IF              reduce using rule 130 (var -> cfloat .)
    PRIVATE         reduce using rule 130 (var -> cfloat .)
    PROTECTED       reduce using rule 130 (var -> cfloat .)
    ID              reduce using rule 130 (var -> cfloat .)
    PRINT           reduce using rule 130 (var -> cfloat .)
    READ            reduce using rule 130 (var -> cfloat .)
    VOID            reduce using rule 130 (var -> cfloat .)
    INT             reduce using rule 130 (var -> cfloat .)
    FLOAT           reduce using rule 130 (var -> cfloat .)
    CHAR            reduce using rule 130 (var -> cfloat .)
    WHILE           reduce using rule 130 (var -> cfloat .)
    RBRACE          reduce using rule 130 (var -> cfloat .)
    RETURN          reduce using rule 130 (var -> cfloat .)
    RBRACKET        reduce using rule 130 (var -> cfloat .)
    COMMA           reduce using rule 130 (var -> cfloat .)
    RPAREN          reduce using rule 130 (var -> cfloat .)
    AND             reduce using rule 130 (var -> cfloat .)
    OR              reduce using rule 130 (var -> cfloat .)


state 78

    (131) var -> cchar .

    TIMES           reduce using rule 131 (var -> cchar .)
    DIVIDE          reduce using rule 131 (var -> cchar .)
    MODULO          reduce using rule 131 (var -> cchar .)
    LT              reduce using rule 131 (var -> cchar .)
    GT              reduce using rule 131 (var -> cchar .)
    GE              reduce using rule 131 (var -> cchar .)
    LE              reduce using rule 131 (var -> cchar .)
    EQ              reduce using rule 131 (var -> cchar .)
    NE              reduce using rule 131 (var -> cchar .)
    PLUS            reduce using rule 131 (var -> cchar .)
    MINUS           reduce using rule 131 (var -> cchar .)
    VAR             reduce using rule 131 (var -> cchar .)
    PUBLIC          reduce using rule 131 (var -> cchar .)
    IF              reduce using rule 131 (var -> cchar .)
    PRIVATE         reduce using rule 131 (var -> cchar .)
    PROTECTED       reduce using rule 131 (var -> cchar .)
    ID              reduce using rule 131 (var -> cchar .)
    PRINT           reduce using rule 131 (var -> cchar .)
    READ            reduce using rule 131 (var -> cchar .)
    VOID            reduce using rule 131 (var -> cchar .)
    INT             reduce using rule 131 (var -> cchar .)
    FLOAT           reduce using rule 131 (var -> cchar .)
    CHAR            reduce using rule 131 (var -> cchar .)
    WHILE           reduce using rule 131 (var -> cchar .)
    RBRACE          reduce using rule 131 (var -> cchar .)
    RETURN          reduce using rule 131 (var -> cchar .)
    RBRACKET        reduce using rule 131 (var -> cchar .)
    COMMA           reduce using rule 131 (var -> cchar .)
    RPAREN          reduce using rule 131 (var -> cchar .)
    AND             reduce using rule 131 (var -> cchar .)
    OR              reduce using rule 131 (var -> cchar .)


state 79

    (132) cint -> CINT .

    TIMES           reduce using rule 132 (cint -> CINT .)
    DIVIDE          reduce using rule 132 (cint -> CINT .)
    MODULO          reduce using rule 132 (cint -> CINT .)
    LT              reduce using rule 132 (cint -> CINT .)
    GT              reduce using rule 132 (cint -> CINT .)
    GE              reduce using rule 132 (cint -> CINT .)
    LE              reduce using rule 132 (cint -> CINT .)
    EQ              reduce using rule 132 (cint -> CINT .)
    NE              reduce using rule 132 (cint -> CINT .)
    PLUS            reduce using rule 132 (cint -> CINT .)
    MINUS           reduce using rule 132 (cint -> CINT .)
    VAR             reduce using rule 132 (cint -> CINT .)
    PUBLIC          reduce using rule 132 (cint -> CINT .)
    IF              reduce using rule 132 (cint -> CINT .)
    PRIVATE         reduce using rule 132 (cint -> CINT .)
    PROTECTED       reduce using rule 132 (cint -> CINT .)
    ID              reduce using rule 132 (cint -> CINT .)
    PRINT           reduce using rule 132 (cint -> CINT .)
    READ            reduce using rule 132 (cint -> CINT .)
    VOID            reduce using rule 132 (cint -> CINT .)
    INT             reduce using rule 132 (cint -> CINT .)
    FLOAT           reduce using rule 132 (cint -> CINT .)
    CHAR            reduce using rule 132 (cint -> CINT .)
    WHILE           reduce using rule 132 (cint -> CINT .)
    RBRACE          reduce using rule 132 (cint -> CINT .)
    RETURN          reduce using rule 132 (cint -> CINT .)
    RBRACKET        reduce using rule 132 (cint -> CINT .)
    COMMA           reduce using rule 132 (cint -> CINT .)
    RPAREN          reduce using rule 132 (cint -> CINT .)
    AND             reduce using rule 132 (cint -> CINT .)
    OR              reduce using rule 132 (cint -> CINT .)


state 80

    (133) cfloat -> NUMBER .

    TIMES           reduce using rule 133 (cfloat -> NUMBER .)
    DIVIDE          reduce using rule 133 (cfloat -> NUMBER .)
    MODULO          reduce using rule 133 (cfloat -> NUMBER .)
    LT              reduce using rule 133 (cfloat -> NUMBER .)
    GT              reduce using rule 133 (cfloat -> NUMBER .)
    GE              reduce using rule 133 (cfloat -> NUMBER .)
    LE              reduce using rule 133 (cfloat -> NUMBER .)
    EQ              reduce using rule 133 (cfloat -> NUMBER .)
    NE              reduce using rule 133 (cfloat -> NUMBER .)
    PLUS            reduce using rule 133 (cfloat -> NUMBER .)
    MINUS           reduce using rule 133 (cfloat -> NUMBER .)
    VAR             reduce using rule 133 (cfloat -> NUMBER .)
    PUBLIC          reduce using rule 133 (cfloat -> NUMBER .)
    IF              reduce using rule 133 (cfloat -> NUMBER .)
    PRIVATE         reduce using rule 133 (cfloat -> NUMBER .)
    PROTECTED       reduce using rule 133 (cfloat -> NUMBER .)
    ID              reduce using rule 133 (cfloat -> NUMBER .)
    PRINT           reduce using rule 133 (cfloat -> NUMBER .)
    READ            reduce using rule 133 (cfloat -> NUMBER .)
    VOID            reduce using rule 133 (cfloat -> NUMBER .)
    INT             reduce using rule 133 (cfloat -> NUMBER .)
    FLOAT           reduce using rule 133 (cfloat -> NUMBER .)
    CHAR            reduce using rule 133 (cfloat -> NUMBER .)
    WHILE           reduce using rule 133 (cfloat -> NUMBER .)
    RBRACE          reduce using rule 133 (cfloat -> NUMBER .)
    RETURN          reduce using rule 133 (cfloat -> NUMBER .)
    RBRACKET        reduce using rule 133 (cfloat -> NUMBER .)
    COMMA           reduce using rule 133 (cfloat -> NUMBER .)
    RPAREN          reduce using rule 133 (cfloat -> NUMBER .)
    AND             reduce using rule 133 (cfloat -> NUMBER .)
    OR              reduce using rule 133 (cfloat -> NUMBER .)


state 81

    (134) cchar -> CCHAR .

    TIMES           reduce using rule 134 (cchar -> CCHAR .)
    DIVIDE          reduce using rule 134 (cchar -> CCHAR .)
    MODULO          reduce using rule 134 (cchar -> CCHAR .)
    LT              reduce using rule 134 (cchar -> CCHAR .)
    GT              reduce using rule 134 (cchar -> CCHAR .)
    GE              reduce using rule 134 (cchar -> CCHAR .)
    LE              reduce using rule 134 (cchar -> CCHAR .)
    EQ              reduce using rule 134 (cchar -> CCHAR .)
    NE              reduce using rule 134 (cchar -> CCHAR .)
    PLUS            reduce using rule 134 (cchar -> CCHAR .)
    MINUS           reduce using rule 134 (cchar -> CCHAR .)
    VAR             reduce using rule 134 (cchar -> CCHAR .)
    PUBLIC          reduce using rule 134 (cchar -> CCHAR .)
    IF              reduce using rule 134 (cchar -> CCHAR .)
    PRIVATE         reduce using rule 134 (cchar -> CCHAR .)
    PROTECTED       reduce using rule 134 (cchar -> CCHAR .)
    ID              reduce using rule 134 (cchar -> CCHAR .)
    PRINT           reduce using rule 134 (cchar -> CCHAR .)
    READ            reduce using rule 134 (cchar -> CCHAR .)
    VOID            reduce using rule 134 (cchar -> CCHAR .)
    INT             reduce using rule 134 (cchar -> CCHAR .)
    FLOAT           reduce using rule 134 (cchar -> CCHAR .)
    CHAR            reduce using rule 134 (cchar -> CCHAR .)
    WHILE           reduce using rule 134 (cchar -> CCHAR .)
    RBRACE          reduce using rule 134 (cchar -> CCHAR .)
    RETURN          reduce using rule 134 (cchar -> CCHAR .)
    RBRACKET        reduce using rule 134 (cchar -> CCHAR .)
    COMMA           reduce using rule 134 (cchar -> CCHAR .)
    RPAREN          reduce using rule 134 (cchar -> CCHAR .)
    AND             reduce using rule 134 (cchar -> CCHAR .)
    OR              reduce using rule 134 (cchar -> CCHAR .)


state 82

    (128) var -> ID .
    (135) objeto_aAcceso -> ID . PERIOD ID

    TIMES           reduce using rule 128 (var -> ID .)
    DIVIDE          reduce using rule 128 (var -> ID .)
    MODULO          reduce using rule 128 (var -> ID .)
    RBRACKET        reduce using rule 128 (var -> ID .)
    PLUS            reduce using rule 128 (var -> ID .)
    MINUS           reduce using rule 128 (var -> ID .)
    COMMA           reduce using rule 128 (var -> ID .)
    RPAREN          reduce using rule 128 (var -> ID .)
    LT              reduce using rule 128 (var -> ID .)
    GT              reduce using rule 128 (var -> ID .)
    GE              reduce using rule 128 (var -> ID .)
    LE              reduce using rule 128 (var -> ID .)
    EQ              reduce using rule 128 (var -> ID .)
    NE              reduce using rule 128 (var -> ID .)
    AND             reduce using rule 128 (var -> ID .)
    OR              reduce using rule 128 (var -> ID .)
    VAR             reduce using rule 128 (var -> ID .)
    PUBLIC          reduce using rule 128 (var -> ID .)
    IF              reduce using rule 128 (var -> ID .)
    PRIVATE         reduce using rule 128 (var -> ID .)
    PROTECTED       reduce using rule 128 (var -> ID .)
    ID              reduce using rule 128 (var -> ID .)
    PRINT           reduce using rule 128 (var -> ID .)
    READ            reduce using rule 128 (var -> ID .)
    VOID            reduce using rule 128 (var -> ID .)
    INT             reduce using rule 128 (var -> ID .)
    FLOAT           reduce using rule 128 (var -> ID .)
    CHAR            reduce using rule 128 (var -> ID .)
    WHILE           reduce using rule 128 (var -> ID .)
    RBRACE          reduce using rule 128 (var -> ID .)
    RETURN          reduce using rule 128 (var -> ID .)
    PERIOD          shift and go to state 138


state 83

    (84) asignacion -> ID LBRACKET exp . RBRACKET EQUALS expresion
    (85) asignacion -> ID LBRACKET exp . RBRACKET EQUALS llamada_func
    (86) asignacion -> ID LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (90) asignacion -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (91) asignacion -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (92) asignacion -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (115) exp -> exp . PLUS termino
    (116) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 139
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128


state 84

    (97) llamada_func -> ID LPAREN aux . RPAREN

    RPAREN          shift and go to state 140


state 85

    (98) aux -> exp .
    (99) aux -> exp . COMMA aux
    (115) exp -> exp . PLUS termino
    (116) exp -> exp . MINUS termino

    RPAREN          reduce using rule 98 (aux -> exp .)
    COMMA           shift and go to state 141
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128


state 86

    (135) objeto_aAcceso -> ID PERIOD ID .
    (97) llamada_func -> ID . LPAREN aux RPAREN

    EQUALS          reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    LBRACKET        reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    TIMES           reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    DIVIDE          reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    MODULO          reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    LT              reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    GT              reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    GE              reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    LE              reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    EQ              reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    NE              reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    PLUS            reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    MINUS           reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    VAR             reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    PUBLIC          reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    IF              reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    PRIVATE         reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    PROTECTED       reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    ID              reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    PRINT           reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    READ            reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    VOID            reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    INT             reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    FLOAT           reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    CHAR            reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    WHILE           reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACE          reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    RETURN          reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    COMMA           reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    RPAREN          reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    LPAREN          shift and go to state 46


state 87

    (96) objeto_metodo -> ID PERIOD llamada_func .

    VAR             reduce using rule 96 (objeto_metodo -> ID PERIOD llamada_func .)
    PUBLIC          reduce using rule 96 (objeto_metodo -> ID PERIOD llamada_func .)
    IF              reduce using rule 96 (objeto_metodo -> ID PERIOD llamada_func .)
    PRIVATE         reduce using rule 96 (objeto_metodo -> ID PERIOD llamada_func .)
    PROTECTED       reduce using rule 96 (objeto_metodo -> ID PERIOD llamada_func .)
    ID              reduce using rule 96 (objeto_metodo -> ID PERIOD llamada_func .)
    PRINT           reduce using rule 96 (objeto_metodo -> ID PERIOD llamada_func .)
    READ            reduce using rule 96 (objeto_metodo -> ID PERIOD llamada_func .)
    VOID            reduce using rule 96 (objeto_metodo -> ID PERIOD llamada_func .)
    INT             reduce using rule 96 (objeto_metodo -> ID PERIOD llamada_func .)
    FLOAT           reduce using rule 96 (objeto_metodo -> ID PERIOD llamada_func .)
    CHAR            reduce using rule 96 (objeto_metodo -> ID PERIOD llamada_func .)
    WHILE           reduce using rule 96 (objeto_metodo -> ID PERIOD llamada_func .)
    RBRACE          reduce using rule 96 (objeto_metodo -> ID PERIOD llamada_func .)
    RETURN          reduce using rule 96 (objeto_metodo -> ID PERIOD llamada_func .)
    COMMA           reduce using rule 96 (objeto_metodo -> ID PERIOD llamada_func .)
    RPAREN          reduce using rule 96 (objeto_metodo -> ID PERIOD llamada_func .)


state 88

    (25) constructor -> PUBLIC ID LPAREN . param RPAREN bloque
    (39) param -> .
    (40) param -> . tipo_simple ID
    (41) param -> . tipo_simple ID COMMA param
    (74) tipo_simple -> . INT
    (75) tipo_simple -> . FLOAT
    (76) tipo_simple -> . CHAR

    RPAREN          reduce using rule 39 (param -> .)
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    CHAR            shift and go to state 116

    param                          shift and go to state 142
    tipo_simple                    shift and go to state 143

state 89

    (27) funcion -> scope type DEF . id LPAREN param aux_param RPAREN contexto_func
    (29) id -> . ID

    ID              shift and go to state 145

    id                             shift and go to state 144

state 90

    (28) funcion -> scope VOID DEF . id LPAREN param aux_param RPAREN contexto_func
    (29) id -> . ID

    ID              shift and go to state 145

    id                             shift and go to state 146

state 91

    (18) condicion -> IF LPAREN gotoF . RPAREN bloque
    (19) condicion -> IF LPAREN gotoF . RPAREN bloque elif

    RPAREN          shift and go to state 147


state 92

    (100) gotoF -> exp_cond .

    RPAREN          reduce using rule 100 (gotoF -> exp_cond .)


state 93

    (101) exp_cond -> exp_bool .
    (102) exp_cond -> exp_bool . AND exp_cond
    (103) exp_cond -> exp_bool . OR exp_cond

    RPAREN          reduce using rule 101 (exp_cond -> exp_bool .)
    AND             shift and go to state 148
    OR              shift and go to state 149


state 94

    (104) exp_bool -> TRUE .

    AND             reduce using rule 104 (exp_bool -> TRUE .)
    OR              reduce using rule 104 (exp_bool -> TRUE .)
    RPAREN          reduce using rule 104 (exp_bool -> TRUE .)


state 95

    (105) exp_bool -> FALSE .

    AND             reduce using rule 105 (exp_bool -> FALSE .)
    OR              reduce using rule 105 (exp_bool -> FALSE .)
    RPAREN          reduce using rule 105 (exp_bool -> FALSE .)


state 96

    (106) exp_bool -> expresion .

    AND             reduce using rule 106 (exp_bool -> expresion .)
    OR              reduce using rule 106 (exp_bool -> expresion .)
    RPAREN          reduce using rule 106 (exp_bool -> expresion .)


state 97

    (23) ciclo -> aux_ciclo WHILE LPAREN . gotoF RPAREN bloque
    (100) gotoF -> . exp_cond
    (101) exp_cond -> . exp_bool
    (102) exp_cond -> . exp_bool AND exp_cond
    (103) exp_cond -> . exp_bool OR exp_cond
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . expresion
    (107) expresion -> . exp
    (108) expresion -> . exp LT expresion
    (109) expresion -> . exp GT expresion
    (110) expresion -> . exp GE expresion
    (111) expresion -> . exp LE expresion
    (112) expresion -> . exp EQ expresion
    (113) expresion -> . exp NE expresion
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 82
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    gotoF                          shift and go to state 150
    exp_cond                       shift and go to state 92
    exp_bool                       shift and go to state 93
    expresion                      shift and go to state 96
    exp                            shift and go to state 68
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 98

    (81) asignacion -> objeto_aAcceso EQUALS expresion .

    VAR             reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PUBLIC          reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS expresion .)
    IF              reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PRIVATE         reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PROTECTED       reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS expresion .)
    ID              reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PRINT           reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS expresion .)
    READ            reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS expresion .)
    VOID            reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS expresion .)
    INT             reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS expresion .)
    FLOAT           reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS expresion .)
    CHAR            reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS expresion .)
    WHILE           reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS expresion .)
    RBRACE          reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS expresion .)
    RETURN          reduce using rule 81 (asignacion -> objeto_aAcceso EQUALS expresion .)


state 99

    (82) asignacion -> objeto_aAcceso EQUALS llamada_func .

    VAR             reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PUBLIC          reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    IF              reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PRIVATE         reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PROTECTED       reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    ID              reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PRINT           reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    READ            reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    VOID            reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    INT             reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    FLOAT           reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    CHAR            reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    WHILE           reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    RBRACE          reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    RETURN          reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS llamada_func .)


state 100

    (83) asignacion -> objeto_aAcceso EQUALS objeto_metodo .

    VAR             reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    IF              reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    ID              reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PRINT           reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    READ            reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    VOID            reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    INT             reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    FLOAT           reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    CHAR            reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    WHILE           reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    RBRACE          reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    RETURN          reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)


state 101

    (93) asignacion -> objeto_aAcceso LBRACKET LBRACKET . exp RBRACKET exp RBRACKET EQUALS expresion
    (94) asignacion -> objeto_aAcceso LBRACKET LBRACKET . exp RBRACKET exp RBRACKET EQUALS llamada_func
    (95) asignacion -> objeto_aAcceso LBRACKET LBRACKET . exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 82
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    objeto_aAcceso                 shift and go to state 74
    exp                            shift and go to state 151
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 102

    (87) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET EQUALS expresion
    (88) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET EQUALS llamada_func
    (89) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (115) exp -> exp . PLUS termino
    (116) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 152
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128


state 103

    (57) escritura -> PRINT LPAREN aux3 . RPAREN

    RPAREN          shift and go to state 153


state 104

    (58) aux3 -> expresion .
    (62) aux3 -> expresion . COMMA aux3

    RPAREN          reduce using rule 58 (aux3 -> expresion .)
    COMMA           shift and go to state 154


state 105

    (59) aux3 -> llamada_func .
    (63) aux3 -> llamada_func . COMMA aux3

    RPAREN          reduce using rule 59 (aux3 -> llamada_func .)
    COMMA           shift and go to state 155


state 106

    (60) aux3 -> objeto_metodo .
    (64) aux3 -> objeto_metodo . COMMA aux3

    RPAREN          reduce using rule 60 (aux3 -> objeto_metodo .)
    COMMA           shift and go to state 156


state 107

    (61) aux3 -> CSTRING .
    (65) aux3 -> CSTRING . COMMA aux3

    RPAREN          reduce using rule 61 (aux3 -> CSTRING .)
    COMMA           shift and go to state 157


state 108

    (52) lectura -> READ LPAREN aux4 . RPAREN

    RPAREN          shift and go to state 158


state 109

    (53) aux4 -> ID .
    (55) aux4 -> ID . COMMA aux4
    (135) objeto_aAcceso -> ID . PERIOD ID

    RPAREN          reduce using rule 53 (aux4 -> ID .)
    COMMA           shift and go to state 159
    PERIOD          shift and go to state 138


state 110

    (54) aux4 -> objeto_aAcceso .
    (56) aux4 -> objeto_aAcceso . COMMA aux4

    RPAREN          reduce using rule 54 (aux4 -> objeto_aAcceso .)
    COMMA           shift and go to state 160


state 111

    (4) class -> scope CLASS ID COLON ID .

    LBRACE          reduce using rule 4 (class -> scope CLASS ID COLON ID .)


state 112

    (66) vars -> VAR aux2 COLON tipo_simple .

    VAR             reduce using rule 66 (vars -> VAR aux2 COLON tipo_simple .)
    PUBLIC          reduce using rule 66 (vars -> VAR aux2 COLON tipo_simple .)
    IF              reduce using rule 66 (vars -> VAR aux2 COLON tipo_simple .)
    PRIVATE         reduce using rule 66 (vars -> VAR aux2 COLON tipo_simple .)
    PROTECTED       reduce using rule 66 (vars -> VAR aux2 COLON tipo_simple .)
    ID              reduce using rule 66 (vars -> VAR aux2 COLON tipo_simple .)
    PRINT           reduce using rule 66 (vars -> VAR aux2 COLON tipo_simple .)
    READ            reduce using rule 66 (vars -> VAR aux2 COLON tipo_simple .)
    VOID            reduce using rule 66 (vars -> VAR aux2 COLON tipo_simple .)
    INT             reduce using rule 66 (vars -> VAR aux2 COLON tipo_simple .)
    FLOAT           reduce using rule 66 (vars -> VAR aux2 COLON tipo_simple .)
    CHAR            reduce using rule 66 (vars -> VAR aux2 COLON tipo_simple .)
    WHILE           reduce using rule 66 (vars -> VAR aux2 COLON tipo_simple .)
    RBRACE          reduce using rule 66 (vars -> VAR aux2 COLON tipo_simple .)
    RETURN          reduce using rule 66 (vars -> VAR aux2 COLON tipo_simple .)


state 113

    (67) vars -> VAR aux2 COLON tipo_compuesto .

    VAR             reduce using rule 67 (vars -> VAR aux2 COLON tipo_compuesto .)
    PUBLIC          reduce using rule 67 (vars -> VAR aux2 COLON tipo_compuesto .)
    IF              reduce using rule 67 (vars -> VAR aux2 COLON tipo_compuesto .)
    PRIVATE         reduce using rule 67 (vars -> VAR aux2 COLON tipo_compuesto .)
    PROTECTED       reduce using rule 67 (vars -> VAR aux2 COLON tipo_compuesto .)
    ID              reduce using rule 67 (vars -> VAR aux2 COLON tipo_compuesto .)
    PRINT           reduce using rule 67 (vars -> VAR aux2 COLON tipo_compuesto .)
    READ            reduce using rule 67 (vars -> VAR aux2 COLON tipo_compuesto .)
    VOID            reduce using rule 67 (vars -> VAR aux2 COLON tipo_compuesto .)
    INT             reduce using rule 67 (vars -> VAR aux2 COLON tipo_compuesto .)
    FLOAT           reduce using rule 67 (vars -> VAR aux2 COLON tipo_compuesto .)
    CHAR            reduce using rule 67 (vars -> VAR aux2 COLON tipo_compuesto .)
    WHILE           reduce using rule 67 (vars -> VAR aux2 COLON tipo_compuesto .)
    RBRACE          reduce using rule 67 (vars -> VAR aux2 COLON tipo_compuesto .)
    RETURN          reduce using rule 67 (vars -> VAR aux2 COLON tipo_compuesto .)


state 114

    (74) tipo_simple -> INT .

    VAR             reduce using rule 74 (tipo_simple -> INT .)
    PUBLIC          reduce using rule 74 (tipo_simple -> INT .)
    IF              reduce using rule 74 (tipo_simple -> INT .)
    PRIVATE         reduce using rule 74 (tipo_simple -> INT .)
    PROTECTED       reduce using rule 74 (tipo_simple -> INT .)
    ID              reduce using rule 74 (tipo_simple -> INT .)
    PRINT           reduce using rule 74 (tipo_simple -> INT .)
    READ            reduce using rule 74 (tipo_simple -> INT .)
    VOID            reduce using rule 74 (tipo_simple -> INT .)
    INT             reduce using rule 74 (tipo_simple -> INT .)
    FLOAT           reduce using rule 74 (tipo_simple -> INT .)
    CHAR            reduce using rule 74 (tipo_simple -> INT .)
    WHILE           reduce using rule 74 (tipo_simple -> INT .)
    RBRACE          reduce using rule 74 (tipo_simple -> INT .)
    RETURN          reduce using rule 74 (tipo_simple -> INT .)


state 115

    (75) tipo_simple -> FLOAT .

    VAR             reduce using rule 75 (tipo_simple -> FLOAT .)
    PUBLIC          reduce using rule 75 (tipo_simple -> FLOAT .)
    IF              reduce using rule 75 (tipo_simple -> FLOAT .)
    PRIVATE         reduce using rule 75 (tipo_simple -> FLOAT .)
    PROTECTED       reduce using rule 75 (tipo_simple -> FLOAT .)
    ID              reduce using rule 75 (tipo_simple -> FLOAT .)
    PRINT           reduce using rule 75 (tipo_simple -> FLOAT .)
    READ            reduce using rule 75 (tipo_simple -> FLOAT .)
    VOID            reduce using rule 75 (tipo_simple -> FLOAT .)
    INT             reduce using rule 75 (tipo_simple -> FLOAT .)
    FLOAT           reduce using rule 75 (tipo_simple -> FLOAT .)
    CHAR            reduce using rule 75 (tipo_simple -> FLOAT .)
    WHILE           reduce using rule 75 (tipo_simple -> FLOAT .)
    RBRACE          reduce using rule 75 (tipo_simple -> FLOAT .)
    RETURN          reduce using rule 75 (tipo_simple -> FLOAT .)


state 116

    (76) tipo_simple -> CHAR .

    VAR             reduce using rule 76 (tipo_simple -> CHAR .)
    PUBLIC          reduce using rule 76 (tipo_simple -> CHAR .)
    IF              reduce using rule 76 (tipo_simple -> CHAR .)
    PRIVATE         reduce using rule 76 (tipo_simple -> CHAR .)
    PROTECTED       reduce using rule 76 (tipo_simple -> CHAR .)
    ID              reduce using rule 76 (tipo_simple -> CHAR .)
    PRINT           reduce using rule 76 (tipo_simple -> CHAR .)
    READ            reduce using rule 76 (tipo_simple -> CHAR .)
    VOID            reduce using rule 76 (tipo_simple -> CHAR .)
    INT             reduce using rule 76 (tipo_simple -> CHAR .)
    FLOAT           reduce using rule 76 (tipo_simple -> CHAR .)
    CHAR            reduce using rule 76 (tipo_simple -> CHAR .)
    WHILE           reduce using rule 76 (tipo_simple -> CHAR .)
    RBRACE          reduce using rule 76 (tipo_simple -> CHAR .)
    RETURN          reduce using rule 76 (tipo_simple -> CHAR .)


state 117

    (77) tipo_compuesto -> ID .

    VAR             reduce using rule 77 (tipo_compuesto -> ID .)
    PUBLIC          reduce using rule 77 (tipo_compuesto -> ID .)
    IF              reduce using rule 77 (tipo_compuesto -> ID .)
    PRIVATE         reduce using rule 77 (tipo_compuesto -> ID .)
    PROTECTED       reduce using rule 77 (tipo_compuesto -> ID .)
    ID              reduce using rule 77 (tipo_compuesto -> ID .)
    PRINT           reduce using rule 77 (tipo_compuesto -> ID .)
    READ            reduce using rule 77 (tipo_compuesto -> ID .)
    VOID            reduce using rule 77 (tipo_compuesto -> ID .)
    INT             reduce using rule 77 (tipo_compuesto -> ID .)
    FLOAT           reduce using rule 77 (tipo_compuesto -> ID .)
    CHAR            reduce using rule 77 (tipo_compuesto -> ID .)
    WHILE           reduce using rule 77 (tipo_compuesto -> ID .)
    RBRACE          reduce using rule 77 (tipo_compuesto -> ID .)
    RETURN          reduce using rule 77 (tipo_compuesto -> ID .)


state 118

    (68) vars -> VAR ID LBRACKET cint . RBRACKET COLON tipo_simple
    (69) vars -> VAR ID LBRACKET cint . RBRACKET COLON tipo_compuesto
    (70) vars -> VAR ID LBRACKET cint . RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (71) vars -> VAR ID LBRACKET cint . RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto

    RBRACKET        shift and go to state 161


state 119

    (72) aux2 -> ID .
    (73) aux2 -> ID . COMMA aux2

    COLON           reduce using rule 72 (aux2 -> ID .)
    COMMA           shift and go to state 63


state 120

    (73) aux2 -> ID COMMA aux2 .

    COLON           reduce using rule 73 (aux2 -> ID COMMA aux2 .)


state 121

    (108) expresion -> exp LT . expresion
    (107) expresion -> . exp
    (108) expresion -> . exp LT expresion
    (109) expresion -> . exp GT expresion
    (110) expresion -> . exp GE expresion
    (111) expresion -> . exp LE expresion
    (112) expresion -> . exp EQ expresion
    (113) expresion -> . exp NE expresion
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 82
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    exp                            shift and go to state 68
    expresion                      shift and go to state 162
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 122

    (109) expresion -> exp GT . expresion
    (107) expresion -> . exp
    (108) expresion -> . exp LT expresion
    (109) expresion -> . exp GT expresion
    (110) expresion -> . exp GE expresion
    (111) expresion -> . exp LE expresion
    (112) expresion -> . exp EQ expresion
    (113) expresion -> . exp NE expresion
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 82
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    exp                            shift and go to state 68
    expresion                      shift and go to state 163
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 123

    (110) expresion -> exp GE . expresion
    (107) expresion -> . exp
    (108) expresion -> . exp LT expresion
    (109) expresion -> . exp GT expresion
    (110) expresion -> . exp GE expresion
    (111) expresion -> . exp LE expresion
    (112) expresion -> . exp EQ expresion
    (113) expresion -> . exp NE expresion
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 82
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    exp                            shift and go to state 68
    expresion                      shift and go to state 164
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 124

    (111) expresion -> exp LE . expresion
    (107) expresion -> . exp
    (108) expresion -> . exp LT expresion
    (109) expresion -> . exp GT expresion
    (110) expresion -> . exp GE expresion
    (111) expresion -> . exp LE expresion
    (112) expresion -> . exp EQ expresion
    (113) expresion -> . exp NE expresion
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 82
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    exp                            shift and go to state 68
    expresion                      shift and go to state 165
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 125

    (112) expresion -> exp EQ . expresion
    (107) expresion -> . exp
    (108) expresion -> . exp LT expresion
    (109) expresion -> . exp GT expresion
    (110) expresion -> . exp GE expresion
    (111) expresion -> . exp LE expresion
    (112) expresion -> . exp EQ expresion
    (113) expresion -> . exp NE expresion
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 82
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    exp                            shift and go to state 68
    expresion                      shift and go to state 166
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 126

    (113) expresion -> exp NE . expresion
    (107) expresion -> . exp
    (108) expresion -> . exp LT expresion
    (109) expresion -> . exp GT expresion
    (110) expresion -> . exp GE expresion
    (111) expresion -> . exp LE expresion
    (112) expresion -> . exp EQ expresion
    (113) expresion -> . exp NE expresion
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 82
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    exp                            shift and go to state 68
    expresion                      shift and go to state 167
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 127

    (115) exp -> exp PLUS . termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 82
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    termino                        shift and go to state 168
    factor                         shift and go to state 73
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 128

    (116) exp -> exp MINUS . termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 82
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    termino                        shift and go to state 169
    factor                         shift and go to state 73
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 129

    (121) factor -> LPAREN exp_cond . RPAREN

    RPAREN          shift and go to state 170


state 130

    (118) termino -> termino TIMES . factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 82
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    factor                         shift and go to state 171
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 131

    (119) termino -> termino DIVIDE . factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 82
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    factor                         shift and go to state 172
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 132

    (120) termino -> termino MODULO . factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 82
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    factor                         shift and go to state 173
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 133

    (122) factor -> PLUS objeto_aAcceso .

    TIMES           reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    DIVIDE          reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    MODULO          reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    LT              reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    GT              reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    GE              reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    LE              reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    EQ              reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    NE              reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    PLUS            reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    MINUS           reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    VAR             reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    PUBLIC          reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    IF              reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    PRIVATE         reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    PROTECTED       reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    ID              reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    PRINT           reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    READ            reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    VOID            reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    INT             reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    FLOAT           reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    CHAR            reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    WHILE           reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    RBRACE          reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    RETURN          reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    RBRACKET        reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    COMMA           reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    RPAREN          reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    AND             reduce using rule 122 (factor -> PLUS objeto_aAcceso .)
    OR              reduce using rule 122 (factor -> PLUS objeto_aAcceso .)


state 134

    (124) factor -> PLUS var .

    TIMES           reduce using rule 124 (factor -> PLUS var .)
    DIVIDE          reduce using rule 124 (factor -> PLUS var .)
    MODULO          reduce using rule 124 (factor -> PLUS var .)
    LT              reduce using rule 124 (factor -> PLUS var .)
    GT              reduce using rule 124 (factor -> PLUS var .)
    GE              reduce using rule 124 (factor -> PLUS var .)
    LE              reduce using rule 124 (factor -> PLUS var .)
    EQ              reduce using rule 124 (factor -> PLUS var .)
    NE              reduce using rule 124 (factor -> PLUS var .)
    PLUS            reduce using rule 124 (factor -> PLUS var .)
    MINUS           reduce using rule 124 (factor -> PLUS var .)
    VAR             reduce using rule 124 (factor -> PLUS var .)
    PUBLIC          reduce using rule 124 (factor -> PLUS var .)
    IF              reduce using rule 124 (factor -> PLUS var .)
    PRIVATE         reduce using rule 124 (factor -> PLUS var .)
    PROTECTED       reduce using rule 124 (factor -> PLUS var .)
    ID              reduce using rule 124 (factor -> PLUS var .)
    PRINT           reduce using rule 124 (factor -> PLUS var .)
    READ            reduce using rule 124 (factor -> PLUS var .)
    VOID            reduce using rule 124 (factor -> PLUS var .)
    INT             reduce using rule 124 (factor -> PLUS var .)
    FLOAT           reduce using rule 124 (factor -> PLUS var .)
    CHAR            reduce using rule 124 (factor -> PLUS var .)
    WHILE           reduce using rule 124 (factor -> PLUS var .)
    RBRACE          reduce using rule 124 (factor -> PLUS var .)
    RETURN          reduce using rule 124 (factor -> PLUS var .)
    RBRACKET        reduce using rule 124 (factor -> PLUS var .)
    COMMA           reduce using rule 124 (factor -> PLUS var .)
    RPAREN          reduce using rule 124 (factor -> PLUS var .)
    AND             reduce using rule 124 (factor -> PLUS var .)
    OR              reduce using rule 124 (factor -> PLUS var .)


state 135

    (135) objeto_aAcceso -> ID . PERIOD ID
    (128) var -> ID .

    PERIOD          shift and go to state 138
    TIMES           reduce using rule 128 (var -> ID .)
    DIVIDE          reduce using rule 128 (var -> ID .)
    MODULO          reduce using rule 128 (var -> ID .)
    LT              reduce using rule 128 (var -> ID .)
    GT              reduce using rule 128 (var -> ID .)
    GE              reduce using rule 128 (var -> ID .)
    LE              reduce using rule 128 (var -> ID .)
    EQ              reduce using rule 128 (var -> ID .)
    NE              reduce using rule 128 (var -> ID .)
    PLUS            reduce using rule 128 (var -> ID .)
    MINUS           reduce using rule 128 (var -> ID .)
    VAR             reduce using rule 128 (var -> ID .)
    PUBLIC          reduce using rule 128 (var -> ID .)
    IF              reduce using rule 128 (var -> ID .)
    PRIVATE         reduce using rule 128 (var -> ID .)
    PROTECTED       reduce using rule 128 (var -> ID .)
    ID              reduce using rule 128 (var -> ID .)
    PRINT           reduce using rule 128 (var -> ID .)
    READ            reduce using rule 128 (var -> ID .)
    VOID            reduce using rule 128 (var -> ID .)
    INT             reduce using rule 128 (var -> ID .)
    FLOAT           reduce using rule 128 (var -> ID .)
    CHAR            reduce using rule 128 (var -> ID .)
    WHILE           reduce using rule 128 (var -> ID .)
    RBRACE          reduce using rule 128 (var -> ID .)
    RETURN          reduce using rule 128 (var -> ID .)
    RBRACKET        reduce using rule 128 (var -> ID .)
    COMMA           reduce using rule 128 (var -> ID .)
    RPAREN          reduce using rule 128 (var -> ID .)
    AND             reduce using rule 128 (var -> ID .)
    OR              reduce using rule 128 (var -> ID .)


state 136

    (123) factor -> MINUS objeto_aAcceso .

    TIMES           reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    DIVIDE          reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    MODULO          reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    LT              reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    GT              reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    GE              reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    LE              reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    EQ              reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    NE              reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    PLUS            reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    MINUS           reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    VAR             reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    PUBLIC          reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    IF              reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    PRIVATE         reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    PROTECTED       reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    ID              reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    PRINT           reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    READ            reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    VOID            reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    INT             reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    FLOAT           reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    CHAR            reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    WHILE           reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    RBRACE          reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    RETURN          reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    RBRACKET        reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    COMMA           reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    RPAREN          reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    AND             reduce using rule 123 (factor -> MINUS objeto_aAcceso .)
    OR              reduce using rule 123 (factor -> MINUS objeto_aAcceso .)


state 137

    (125) factor -> MINUS var .

    TIMES           reduce using rule 125 (factor -> MINUS var .)
    DIVIDE          reduce using rule 125 (factor -> MINUS var .)
    MODULO          reduce using rule 125 (factor -> MINUS var .)
    LT              reduce using rule 125 (factor -> MINUS var .)
    GT              reduce using rule 125 (factor -> MINUS var .)
    GE              reduce using rule 125 (factor -> MINUS var .)
    LE              reduce using rule 125 (factor -> MINUS var .)
    EQ              reduce using rule 125 (factor -> MINUS var .)
    NE              reduce using rule 125 (factor -> MINUS var .)
    PLUS            reduce using rule 125 (factor -> MINUS var .)
    MINUS           reduce using rule 125 (factor -> MINUS var .)
    VAR             reduce using rule 125 (factor -> MINUS var .)
    PUBLIC          reduce using rule 125 (factor -> MINUS var .)
    IF              reduce using rule 125 (factor -> MINUS var .)
    PRIVATE         reduce using rule 125 (factor -> MINUS var .)
    PROTECTED       reduce using rule 125 (factor -> MINUS var .)
    ID              reduce using rule 125 (factor -> MINUS var .)
    PRINT           reduce using rule 125 (factor -> MINUS var .)
    READ            reduce using rule 125 (factor -> MINUS var .)
    VOID            reduce using rule 125 (factor -> MINUS var .)
    INT             reduce using rule 125 (factor -> MINUS var .)
    FLOAT           reduce using rule 125 (factor -> MINUS var .)
    CHAR            reduce using rule 125 (factor -> MINUS var .)
    WHILE           reduce using rule 125 (factor -> MINUS var .)
    RBRACE          reduce using rule 125 (factor -> MINUS var .)
    RETURN          reduce using rule 125 (factor -> MINUS var .)
    RBRACKET        reduce using rule 125 (factor -> MINUS var .)
    COMMA           reduce using rule 125 (factor -> MINUS var .)
    RPAREN          reduce using rule 125 (factor -> MINUS var .)
    AND             reduce using rule 125 (factor -> MINUS var .)
    OR              reduce using rule 125 (factor -> MINUS var .)


state 138

    (135) objeto_aAcceso -> ID PERIOD . ID

    ID              shift and go to state 174


state 139

    (84) asignacion -> ID LBRACKET exp RBRACKET . EQUALS expresion
    (85) asignacion -> ID LBRACKET exp RBRACKET . EQUALS llamada_func
    (86) asignacion -> ID LBRACKET exp RBRACKET . EQUALS objeto_metodo
    (90) asignacion -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS expresion
    (91) asignacion -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS llamada_func
    (92) asignacion -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS objeto_metodo

    EQUALS          shift and go to state 176
    LBRACKET        shift and go to state 175


state 140

    (97) llamada_func -> ID LPAREN aux RPAREN .

    VAR             reduce using rule 97 (llamada_func -> ID LPAREN aux RPAREN .)
    PUBLIC          reduce using rule 97 (llamada_func -> ID LPAREN aux RPAREN .)
    IF              reduce using rule 97 (llamada_func -> ID LPAREN aux RPAREN .)
    PRIVATE         reduce using rule 97 (llamada_func -> ID LPAREN aux RPAREN .)
    PROTECTED       reduce using rule 97 (llamada_func -> ID LPAREN aux RPAREN .)
    ID              reduce using rule 97 (llamada_func -> ID LPAREN aux RPAREN .)
    PRINT           reduce using rule 97 (llamada_func -> ID LPAREN aux RPAREN .)
    READ            reduce using rule 97 (llamada_func -> ID LPAREN aux RPAREN .)
    VOID            reduce using rule 97 (llamada_func -> ID LPAREN aux RPAREN .)
    INT             reduce using rule 97 (llamada_func -> ID LPAREN aux RPAREN .)
    FLOAT           reduce using rule 97 (llamada_func -> ID LPAREN aux RPAREN .)
    CHAR            reduce using rule 97 (llamada_func -> ID LPAREN aux RPAREN .)
    WHILE           reduce using rule 97 (llamada_func -> ID LPAREN aux RPAREN .)
    RBRACE          reduce using rule 97 (llamada_func -> ID LPAREN aux RPAREN .)
    RETURN          reduce using rule 97 (llamada_func -> ID LPAREN aux RPAREN .)
    COMMA           reduce using rule 97 (llamada_func -> ID LPAREN aux RPAREN .)
    RPAREN          reduce using rule 97 (llamada_func -> ID LPAREN aux RPAREN .)


state 141

    (99) aux -> exp COMMA . aux
    (98) aux -> . exp
    (99) aux -> . exp COMMA aux
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 82
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    exp                            shift and go to state 85
    aux                            shift and go to state 177
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 142

    (25) constructor -> PUBLIC ID LPAREN param . RPAREN bloque

    RPAREN          shift and go to state 178


state 143

    (40) param -> tipo_simple . ID
    (41) param -> tipo_simple . ID COMMA param

    ID              shift and go to state 179


state 144

    (27) funcion -> scope type DEF id . LPAREN param aux_param RPAREN contexto_func

    LPAREN          shift and go to state 180


state 145

    (29) id -> ID .

    LPAREN          reduce using rule 29 (id -> ID .)


state 146

    (28) funcion -> scope VOID DEF id . LPAREN param aux_param RPAREN contexto_func

    LPAREN          shift and go to state 181


state 147

    (18) condicion -> IF LPAREN gotoF RPAREN . bloque
    (19) condicion -> IF LPAREN gotoF RPAREN . bloque elif
    (26) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 183

    bloque                         shift and go to state 182

state 148

    (102) exp_cond -> exp_bool AND . exp_cond
    (101) exp_cond -> . exp_bool
    (102) exp_cond -> . exp_bool AND exp_cond
    (103) exp_cond -> . exp_bool OR exp_cond
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . expresion
    (107) expresion -> . exp
    (108) expresion -> . exp LT expresion
    (109) expresion -> . exp GT expresion
    (110) expresion -> . exp GE expresion
    (111) expresion -> . exp LE expresion
    (112) expresion -> . exp EQ expresion
    (113) expresion -> . exp NE expresion
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 82
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    exp_bool                       shift and go to state 93
    exp_cond                       shift and go to state 184
    expresion                      shift and go to state 96
    exp                            shift and go to state 68
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 149

    (103) exp_cond -> exp_bool OR . exp_cond
    (101) exp_cond -> . exp_bool
    (102) exp_cond -> . exp_bool AND exp_cond
    (103) exp_cond -> . exp_bool OR exp_cond
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . expresion
    (107) expresion -> . exp
    (108) expresion -> . exp LT expresion
    (109) expresion -> . exp GT expresion
    (110) expresion -> . exp GE expresion
    (111) expresion -> . exp LE expresion
    (112) expresion -> . exp EQ expresion
    (113) expresion -> . exp NE expresion
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 82
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    exp_bool                       shift and go to state 93
    exp_cond                       shift and go to state 185
    expresion                      shift and go to state 96
    exp                            shift and go to state 68
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 150

    (23) ciclo -> aux_ciclo WHILE LPAREN gotoF . RPAREN bloque

    RPAREN          shift and go to state 186


state 151

    (93) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp . RBRACKET exp RBRACKET EQUALS expresion
    (94) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp . RBRACKET exp RBRACKET EQUALS llamada_func
    (95) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp . RBRACKET exp RBRACKET EQUALS objeto_metodo
    (115) exp -> exp . PLUS termino
    (116) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 187
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128


state 152

    (87) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . EQUALS expresion
    (88) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . EQUALS llamada_func
    (89) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . EQUALS objeto_metodo

    EQUALS          shift and go to state 188


state 153

    (57) escritura -> PRINT LPAREN aux3 RPAREN .

    VAR             reduce using rule 57 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PUBLIC          reduce using rule 57 (escritura -> PRINT LPAREN aux3 RPAREN .)
    IF              reduce using rule 57 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PRIVATE         reduce using rule 57 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PROTECTED       reduce using rule 57 (escritura -> PRINT LPAREN aux3 RPAREN .)
    ID              reduce using rule 57 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PRINT           reduce using rule 57 (escritura -> PRINT LPAREN aux3 RPAREN .)
    READ            reduce using rule 57 (escritura -> PRINT LPAREN aux3 RPAREN .)
    VOID            reduce using rule 57 (escritura -> PRINT LPAREN aux3 RPAREN .)
    INT             reduce using rule 57 (escritura -> PRINT LPAREN aux3 RPAREN .)
    FLOAT           reduce using rule 57 (escritura -> PRINT LPAREN aux3 RPAREN .)
    CHAR            reduce using rule 57 (escritura -> PRINT LPAREN aux3 RPAREN .)
    WHILE           reduce using rule 57 (escritura -> PRINT LPAREN aux3 RPAREN .)
    RBRACE          reduce using rule 57 (escritura -> PRINT LPAREN aux3 RPAREN .)
    RETURN          reduce using rule 57 (escritura -> PRINT LPAREN aux3 RPAREN .)


state 154

    (62) aux3 -> expresion COMMA . aux3
    (58) aux3 -> . expresion
    (59) aux3 -> . llamada_func
    (60) aux3 -> . objeto_metodo
    (61) aux3 -> . CSTRING
    (62) aux3 -> . expresion COMMA aux3
    (63) aux3 -> . llamada_func COMMA aux3
    (64) aux3 -> . objeto_metodo COMMA aux3
    (65) aux3 -> . CSTRING COMMA aux3
    (107) expresion -> . exp
    (108) expresion -> . exp LT expresion
    (109) expresion -> . exp GT expresion
    (110) expresion -> . exp GE expresion
    (111) expresion -> . exp LE expresion
    (112) expresion -> . exp EQ expresion
    (113) expresion -> . exp NE expresion
    (97) llamada_func -> . ID LPAREN aux RPAREN
    (96) objeto_metodo -> . ID PERIOD llamada_func
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    CSTRING         shift and go to state 107
    ID              shift and go to state 64
    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    expresion                      shift and go to state 104
    aux3                           shift and go to state 189
    llamada_func                   shift and go to state 105
    objeto_metodo                  shift and go to state 106
    exp                            shift and go to state 68
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 155

    (63) aux3 -> llamada_func COMMA . aux3
    (58) aux3 -> . expresion
    (59) aux3 -> . llamada_func
    (60) aux3 -> . objeto_metodo
    (61) aux3 -> . CSTRING
    (62) aux3 -> . expresion COMMA aux3
    (63) aux3 -> . llamada_func COMMA aux3
    (64) aux3 -> . objeto_metodo COMMA aux3
    (65) aux3 -> . CSTRING COMMA aux3
    (107) expresion -> . exp
    (108) expresion -> . exp LT expresion
    (109) expresion -> . exp GT expresion
    (110) expresion -> . exp GE expresion
    (111) expresion -> . exp LE expresion
    (112) expresion -> . exp EQ expresion
    (113) expresion -> . exp NE expresion
    (97) llamada_func -> . ID LPAREN aux RPAREN
    (96) objeto_metodo -> . ID PERIOD llamada_func
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    CSTRING         shift and go to state 107
    ID              shift and go to state 64
    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    llamada_func                   shift and go to state 105
    aux3                           shift and go to state 190
    expresion                      shift and go to state 104
    objeto_metodo                  shift and go to state 106
    exp                            shift and go to state 68
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 156

    (64) aux3 -> objeto_metodo COMMA . aux3
    (58) aux3 -> . expresion
    (59) aux3 -> . llamada_func
    (60) aux3 -> . objeto_metodo
    (61) aux3 -> . CSTRING
    (62) aux3 -> . expresion COMMA aux3
    (63) aux3 -> . llamada_func COMMA aux3
    (64) aux3 -> . objeto_metodo COMMA aux3
    (65) aux3 -> . CSTRING COMMA aux3
    (107) expresion -> . exp
    (108) expresion -> . exp LT expresion
    (109) expresion -> . exp GT expresion
    (110) expresion -> . exp GE expresion
    (111) expresion -> . exp LE expresion
    (112) expresion -> . exp EQ expresion
    (113) expresion -> . exp NE expresion
    (97) llamada_func -> . ID LPAREN aux RPAREN
    (96) objeto_metodo -> . ID PERIOD llamada_func
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    CSTRING         shift and go to state 107
    ID              shift and go to state 64
    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    objeto_metodo                  shift and go to state 106
    aux3                           shift and go to state 191
    expresion                      shift and go to state 104
    llamada_func                   shift and go to state 105
    exp                            shift and go to state 68
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 157

    (65) aux3 -> CSTRING COMMA . aux3
    (58) aux3 -> . expresion
    (59) aux3 -> . llamada_func
    (60) aux3 -> . objeto_metodo
    (61) aux3 -> . CSTRING
    (62) aux3 -> . expresion COMMA aux3
    (63) aux3 -> . llamada_func COMMA aux3
    (64) aux3 -> . objeto_metodo COMMA aux3
    (65) aux3 -> . CSTRING COMMA aux3
    (107) expresion -> . exp
    (108) expresion -> . exp LT expresion
    (109) expresion -> . exp GT expresion
    (110) expresion -> . exp GE expresion
    (111) expresion -> . exp LE expresion
    (112) expresion -> . exp EQ expresion
    (113) expresion -> . exp NE expresion
    (97) llamada_func -> . ID LPAREN aux RPAREN
    (96) objeto_metodo -> . ID PERIOD llamada_func
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    CSTRING         shift and go to state 107
    ID              shift and go to state 64
    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    aux3                           shift and go to state 192
    expresion                      shift and go to state 104
    llamada_func                   shift and go to state 105
    objeto_metodo                  shift and go to state 106
    exp                            shift and go to state 68
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 158

    (52) lectura -> READ LPAREN aux4 RPAREN .

    VAR             reduce using rule 52 (lectura -> READ LPAREN aux4 RPAREN .)
    PUBLIC          reduce using rule 52 (lectura -> READ LPAREN aux4 RPAREN .)
    IF              reduce using rule 52 (lectura -> READ LPAREN aux4 RPAREN .)
    PRIVATE         reduce using rule 52 (lectura -> READ LPAREN aux4 RPAREN .)
    PROTECTED       reduce using rule 52 (lectura -> READ LPAREN aux4 RPAREN .)
    ID              reduce using rule 52 (lectura -> READ LPAREN aux4 RPAREN .)
    PRINT           reduce using rule 52 (lectura -> READ LPAREN aux4 RPAREN .)
    READ            reduce using rule 52 (lectura -> READ LPAREN aux4 RPAREN .)
    VOID            reduce using rule 52 (lectura -> READ LPAREN aux4 RPAREN .)
    INT             reduce using rule 52 (lectura -> READ LPAREN aux4 RPAREN .)
    FLOAT           reduce using rule 52 (lectura -> READ LPAREN aux4 RPAREN .)
    CHAR            reduce using rule 52 (lectura -> READ LPAREN aux4 RPAREN .)
    WHILE           reduce using rule 52 (lectura -> READ LPAREN aux4 RPAREN .)
    RBRACE          reduce using rule 52 (lectura -> READ LPAREN aux4 RPAREN .)
    RETURN          reduce using rule 52 (lectura -> READ LPAREN aux4 RPAREN .)


state 159

    (55) aux4 -> ID COMMA . aux4
    (53) aux4 -> . ID
    (54) aux4 -> . objeto_aAcceso
    (55) aux4 -> . ID COMMA aux4
    (56) aux4 -> . objeto_aAcceso COMMA aux4
    (135) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 109

    aux4                           shift and go to state 193
    objeto_aAcceso                 shift and go to state 110

state 160

    (56) aux4 -> objeto_aAcceso COMMA . aux4
    (53) aux4 -> . ID
    (54) aux4 -> . objeto_aAcceso
    (55) aux4 -> . ID COMMA aux4
    (56) aux4 -> . objeto_aAcceso COMMA aux4
    (135) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 109

    objeto_aAcceso                 shift and go to state 110
    aux4                           shift and go to state 194

state 161

    (68) vars -> VAR ID LBRACKET cint RBRACKET . COLON tipo_simple
    (69) vars -> VAR ID LBRACKET cint RBRACKET . COLON tipo_compuesto
    (70) vars -> VAR ID LBRACKET cint RBRACKET . LBRACKET cint RBRACKET COLON tipo_simple
    (71) vars -> VAR ID LBRACKET cint RBRACKET . LBRACKET cint RBRACKET COLON tipo_compuesto

    COLON           shift and go to state 196
    LBRACKET        shift and go to state 195


state 162

    (108) expresion -> exp LT expresion .

    VAR             reduce using rule 108 (expresion -> exp LT expresion .)
    PUBLIC          reduce using rule 108 (expresion -> exp LT expresion .)
    IF              reduce using rule 108 (expresion -> exp LT expresion .)
    PRIVATE         reduce using rule 108 (expresion -> exp LT expresion .)
    PROTECTED       reduce using rule 108 (expresion -> exp LT expresion .)
    ID              reduce using rule 108 (expresion -> exp LT expresion .)
    PRINT           reduce using rule 108 (expresion -> exp LT expresion .)
    READ            reduce using rule 108 (expresion -> exp LT expresion .)
    VOID            reduce using rule 108 (expresion -> exp LT expresion .)
    INT             reduce using rule 108 (expresion -> exp LT expresion .)
    FLOAT           reduce using rule 108 (expresion -> exp LT expresion .)
    CHAR            reduce using rule 108 (expresion -> exp LT expresion .)
    WHILE           reduce using rule 108 (expresion -> exp LT expresion .)
    RBRACE          reduce using rule 108 (expresion -> exp LT expresion .)
    RETURN          reduce using rule 108 (expresion -> exp LT expresion .)
    AND             reduce using rule 108 (expresion -> exp LT expresion .)
    OR              reduce using rule 108 (expresion -> exp LT expresion .)
    RPAREN          reduce using rule 108 (expresion -> exp LT expresion .)
    COMMA           reduce using rule 108 (expresion -> exp LT expresion .)


state 163

    (109) expresion -> exp GT expresion .

    VAR             reduce using rule 109 (expresion -> exp GT expresion .)
    PUBLIC          reduce using rule 109 (expresion -> exp GT expresion .)
    IF              reduce using rule 109 (expresion -> exp GT expresion .)
    PRIVATE         reduce using rule 109 (expresion -> exp GT expresion .)
    PROTECTED       reduce using rule 109 (expresion -> exp GT expresion .)
    ID              reduce using rule 109 (expresion -> exp GT expresion .)
    PRINT           reduce using rule 109 (expresion -> exp GT expresion .)
    READ            reduce using rule 109 (expresion -> exp GT expresion .)
    VOID            reduce using rule 109 (expresion -> exp GT expresion .)
    INT             reduce using rule 109 (expresion -> exp GT expresion .)
    FLOAT           reduce using rule 109 (expresion -> exp GT expresion .)
    CHAR            reduce using rule 109 (expresion -> exp GT expresion .)
    WHILE           reduce using rule 109 (expresion -> exp GT expresion .)
    RBRACE          reduce using rule 109 (expresion -> exp GT expresion .)
    RETURN          reduce using rule 109 (expresion -> exp GT expresion .)
    AND             reduce using rule 109 (expresion -> exp GT expresion .)
    OR              reduce using rule 109 (expresion -> exp GT expresion .)
    RPAREN          reduce using rule 109 (expresion -> exp GT expresion .)
    COMMA           reduce using rule 109 (expresion -> exp GT expresion .)


state 164

    (110) expresion -> exp GE expresion .

    VAR             reduce using rule 110 (expresion -> exp GE expresion .)
    PUBLIC          reduce using rule 110 (expresion -> exp GE expresion .)
    IF              reduce using rule 110 (expresion -> exp GE expresion .)
    PRIVATE         reduce using rule 110 (expresion -> exp GE expresion .)
    PROTECTED       reduce using rule 110 (expresion -> exp GE expresion .)
    ID              reduce using rule 110 (expresion -> exp GE expresion .)
    PRINT           reduce using rule 110 (expresion -> exp GE expresion .)
    READ            reduce using rule 110 (expresion -> exp GE expresion .)
    VOID            reduce using rule 110 (expresion -> exp GE expresion .)
    INT             reduce using rule 110 (expresion -> exp GE expresion .)
    FLOAT           reduce using rule 110 (expresion -> exp GE expresion .)
    CHAR            reduce using rule 110 (expresion -> exp GE expresion .)
    WHILE           reduce using rule 110 (expresion -> exp GE expresion .)
    RBRACE          reduce using rule 110 (expresion -> exp GE expresion .)
    RETURN          reduce using rule 110 (expresion -> exp GE expresion .)
    AND             reduce using rule 110 (expresion -> exp GE expresion .)
    OR              reduce using rule 110 (expresion -> exp GE expresion .)
    RPAREN          reduce using rule 110 (expresion -> exp GE expresion .)
    COMMA           reduce using rule 110 (expresion -> exp GE expresion .)


state 165

    (111) expresion -> exp LE expresion .

    VAR             reduce using rule 111 (expresion -> exp LE expresion .)
    PUBLIC          reduce using rule 111 (expresion -> exp LE expresion .)
    IF              reduce using rule 111 (expresion -> exp LE expresion .)
    PRIVATE         reduce using rule 111 (expresion -> exp LE expresion .)
    PROTECTED       reduce using rule 111 (expresion -> exp LE expresion .)
    ID              reduce using rule 111 (expresion -> exp LE expresion .)
    PRINT           reduce using rule 111 (expresion -> exp LE expresion .)
    READ            reduce using rule 111 (expresion -> exp LE expresion .)
    VOID            reduce using rule 111 (expresion -> exp LE expresion .)
    INT             reduce using rule 111 (expresion -> exp LE expresion .)
    FLOAT           reduce using rule 111 (expresion -> exp LE expresion .)
    CHAR            reduce using rule 111 (expresion -> exp LE expresion .)
    WHILE           reduce using rule 111 (expresion -> exp LE expresion .)
    RBRACE          reduce using rule 111 (expresion -> exp LE expresion .)
    RETURN          reduce using rule 111 (expresion -> exp LE expresion .)
    AND             reduce using rule 111 (expresion -> exp LE expresion .)
    OR              reduce using rule 111 (expresion -> exp LE expresion .)
    RPAREN          reduce using rule 111 (expresion -> exp LE expresion .)
    COMMA           reduce using rule 111 (expresion -> exp LE expresion .)


state 166

    (112) expresion -> exp EQ expresion .

    VAR             reduce using rule 112 (expresion -> exp EQ expresion .)
    PUBLIC          reduce using rule 112 (expresion -> exp EQ expresion .)
    IF              reduce using rule 112 (expresion -> exp EQ expresion .)
    PRIVATE         reduce using rule 112 (expresion -> exp EQ expresion .)
    PROTECTED       reduce using rule 112 (expresion -> exp EQ expresion .)
    ID              reduce using rule 112 (expresion -> exp EQ expresion .)
    PRINT           reduce using rule 112 (expresion -> exp EQ expresion .)
    READ            reduce using rule 112 (expresion -> exp EQ expresion .)
    VOID            reduce using rule 112 (expresion -> exp EQ expresion .)
    INT             reduce using rule 112 (expresion -> exp EQ expresion .)
    FLOAT           reduce using rule 112 (expresion -> exp EQ expresion .)
    CHAR            reduce using rule 112 (expresion -> exp EQ expresion .)
    WHILE           reduce using rule 112 (expresion -> exp EQ expresion .)
    RBRACE          reduce using rule 112 (expresion -> exp EQ expresion .)
    RETURN          reduce using rule 112 (expresion -> exp EQ expresion .)
    AND             reduce using rule 112 (expresion -> exp EQ expresion .)
    OR              reduce using rule 112 (expresion -> exp EQ expresion .)
    RPAREN          reduce using rule 112 (expresion -> exp EQ expresion .)
    COMMA           reduce using rule 112 (expresion -> exp EQ expresion .)


state 167

    (113) expresion -> exp NE expresion .

    VAR             reduce using rule 113 (expresion -> exp NE expresion .)
    PUBLIC          reduce using rule 113 (expresion -> exp NE expresion .)
    IF              reduce using rule 113 (expresion -> exp NE expresion .)
    PRIVATE         reduce using rule 113 (expresion -> exp NE expresion .)
    PROTECTED       reduce using rule 113 (expresion -> exp NE expresion .)
    ID              reduce using rule 113 (expresion -> exp NE expresion .)
    PRINT           reduce using rule 113 (expresion -> exp NE expresion .)
    READ            reduce using rule 113 (expresion -> exp NE expresion .)
    VOID            reduce using rule 113 (expresion -> exp NE expresion .)
    INT             reduce using rule 113 (expresion -> exp NE expresion .)
    FLOAT           reduce using rule 113 (expresion -> exp NE expresion .)
    CHAR            reduce using rule 113 (expresion -> exp NE expresion .)
    WHILE           reduce using rule 113 (expresion -> exp NE expresion .)
    RBRACE          reduce using rule 113 (expresion -> exp NE expresion .)
    RETURN          reduce using rule 113 (expresion -> exp NE expresion .)
    AND             reduce using rule 113 (expresion -> exp NE expresion .)
    OR              reduce using rule 113 (expresion -> exp NE expresion .)
    RPAREN          reduce using rule 113 (expresion -> exp NE expresion .)
    COMMA           reduce using rule 113 (expresion -> exp NE expresion .)


state 168

    (115) exp -> exp PLUS termino .
    (118) termino -> termino . TIMES factor
    (119) termino -> termino . DIVIDE factor
    (120) termino -> termino . MODULO factor

    LT              reduce using rule 115 (exp -> exp PLUS termino .)
    GT              reduce using rule 115 (exp -> exp PLUS termino .)
    GE              reduce using rule 115 (exp -> exp PLUS termino .)
    LE              reduce using rule 115 (exp -> exp PLUS termino .)
    EQ              reduce using rule 115 (exp -> exp PLUS termino .)
    NE              reduce using rule 115 (exp -> exp PLUS termino .)
    PLUS            reduce using rule 115 (exp -> exp PLUS termino .)
    MINUS           reduce using rule 115 (exp -> exp PLUS termino .)
    VAR             reduce using rule 115 (exp -> exp PLUS termino .)
    PUBLIC          reduce using rule 115 (exp -> exp PLUS termino .)
    IF              reduce using rule 115 (exp -> exp PLUS termino .)
    PRIVATE         reduce using rule 115 (exp -> exp PLUS termino .)
    PROTECTED       reduce using rule 115 (exp -> exp PLUS termino .)
    ID              reduce using rule 115 (exp -> exp PLUS termino .)
    PRINT           reduce using rule 115 (exp -> exp PLUS termino .)
    READ            reduce using rule 115 (exp -> exp PLUS termino .)
    VOID            reduce using rule 115 (exp -> exp PLUS termino .)
    INT             reduce using rule 115 (exp -> exp PLUS termino .)
    FLOAT           reduce using rule 115 (exp -> exp PLUS termino .)
    CHAR            reduce using rule 115 (exp -> exp PLUS termino .)
    WHILE           reduce using rule 115 (exp -> exp PLUS termino .)
    RBRACE          reduce using rule 115 (exp -> exp PLUS termino .)
    RETURN          reduce using rule 115 (exp -> exp PLUS termino .)
    RBRACKET        reduce using rule 115 (exp -> exp PLUS termino .)
    COMMA           reduce using rule 115 (exp -> exp PLUS termino .)
    RPAREN          reduce using rule 115 (exp -> exp PLUS termino .)
    AND             reduce using rule 115 (exp -> exp PLUS termino .)
    OR              reduce using rule 115 (exp -> exp PLUS termino .)
    TIMES           shift and go to state 130
    DIVIDE          shift and go to state 131
    MODULO          shift and go to state 132


state 169

    (116) exp -> exp MINUS termino .
    (118) termino -> termino . TIMES factor
    (119) termino -> termino . DIVIDE factor
    (120) termino -> termino . MODULO factor

    LT              reduce using rule 116 (exp -> exp MINUS termino .)
    GT              reduce using rule 116 (exp -> exp MINUS termino .)
    GE              reduce using rule 116 (exp -> exp MINUS termino .)
    LE              reduce using rule 116 (exp -> exp MINUS termino .)
    EQ              reduce using rule 116 (exp -> exp MINUS termino .)
    NE              reduce using rule 116 (exp -> exp MINUS termino .)
    PLUS            reduce using rule 116 (exp -> exp MINUS termino .)
    MINUS           reduce using rule 116 (exp -> exp MINUS termino .)
    VAR             reduce using rule 116 (exp -> exp MINUS termino .)
    PUBLIC          reduce using rule 116 (exp -> exp MINUS termino .)
    IF              reduce using rule 116 (exp -> exp MINUS termino .)
    PRIVATE         reduce using rule 116 (exp -> exp MINUS termino .)
    PROTECTED       reduce using rule 116 (exp -> exp MINUS termino .)
    ID              reduce using rule 116 (exp -> exp MINUS termino .)
    PRINT           reduce using rule 116 (exp -> exp MINUS termino .)
    READ            reduce using rule 116 (exp -> exp MINUS termino .)
    VOID            reduce using rule 116 (exp -> exp MINUS termino .)
    INT             reduce using rule 116 (exp -> exp MINUS termino .)
    FLOAT           reduce using rule 116 (exp -> exp MINUS termino .)
    CHAR            reduce using rule 116 (exp -> exp MINUS termino .)
    WHILE           reduce using rule 116 (exp -> exp MINUS termino .)
    RBRACE          reduce using rule 116 (exp -> exp MINUS termino .)
    RETURN          reduce using rule 116 (exp -> exp MINUS termino .)
    RBRACKET        reduce using rule 116 (exp -> exp MINUS termino .)
    COMMA           reduce using rule 116 (exp -> exp MINUS termino .)
    RPAREN          reduce using rule 116 (exp -> exp MINUS termino .)
    AND             reduce using rule 116 (exp -> exp MINUS termino .)
    OR              reduce using rule 116 (exp -> exp MINUS termino .)
    TIMES           shift and go to state 130
    DIVIDE          shift and go to state 131
    MODULO          shift and go to state 132


state 170

    (121) factor -> LPAREN exp_cond RPAREN .

    TIMES           reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    DIVIDE          reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    MODULO          reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    LT              reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    GT              reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    GE              reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    LE              reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    EQ              reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    NE              reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    PLUS            reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    MINUS           reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    VAR             reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    PUBLIC          reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    IF              reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    PRIVATE         reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    PROTECTED       reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    ID              reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    PRINT           reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    READ            reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    VOID            reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    INT             reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    FLOAT           reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    CHAR            reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    WHILE           reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    RBRACE          reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    RETURN          reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    RBRACKET        reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    COMMA           reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    RPAREN          reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    AND             reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)
    OR              reduce using rule 121 (factor -> LPAREN exp_cond RPAREN .)


state 171

    (118) termino -> termino TIMES factor .

    TIMES           reduce using rule 118 (termino -> termino TIMES factor .)
    DIVIDE          reduce using rule 118 (termino -> termino TIMES factor .)
    MODULO          reduce using rule 118 (termino -> termino TIMES factor .)
    LT              reduce using rule 118 (termino -> termino TIMES factor .)
    GT              reduce using rule 118 (termino -> termino TIMES factor .)
    GE              reduce using rule 118 (termino -> termino TIMES factor .)
    LE              reduce using rule 118 (termino -> termino TIMES factor .)
    EQ              reduce using rule 118 (termino -> termino TIMES factor .)
    NE              reduce using rule 118 (termino -> termino TIMES factor .)
    PLUS            reduce using rule 118 (termino -> termino TIMES factor .)
    MINUS           reduce using rule 118 (termino -> termino TIMES factor .)
    VAR             reduce using rule 118 (termino -> termino TIMES factor .)
    PUBLIC          reduce using rule 118 (termino -> termino TIMES factor .)
    IF              reduce using rule 118 (termino -> termino TIMES factor .)
    PRIVATE         reduce using rule 118 (termino -> termino TIMES factor .)
    PROTECTED       reduce using rule 118 (termino -> termino TIMES factor .)
    ID              reduce using rule 118 (termino -> termino TIMES factor .)
    PRINT           reduce using rule 118 (termino -> termino TIMES factor .)
    READ            reduce using rule 118 (termino -> termino TIMES factor .)
    VOID            reduce using rule 118 (termino -> termino TIMES factor .)
    INT             reduce using rule 118 (termino -> termino TIMES factor .)
    FLOAT           reduce using rule 118 (termino -> termino TIMES factor .)
    CHAR            reduce using rule 118 (termino -> termino TIMES factor .)
    WHILE           reduce using rule 118 (termino -> termino TIMES factor .)
    RBRACE          reduce using rule 118 (termino -> termino TIMES factor .)
    RETURN          reduce using rule 118 (termino -> termino TIMES factor .)
    RBRACKET        reduce using rule 118 (termino -> termino TIMES factor .)
    COMMA           reduce using rule 118 (termino -> termino TIMES factor .)
    RPAREN          reduce using rule 118 (termino -> termino TIMES factor .)
    AND             reduce using rule 118 (termino -> termino TIMES factor .)
    OR              reduce using rule 118 (termino -> termino TIMES factor .)


state 172

    (119) termino -> termino DIVIDE factor .

    TIMES           reduce using rule 119 (termino -> termino DIVIDE factor .)
    DIVIDE          reduce using rule 119 (termino -> termino DIVIDE factor .)
    MODULO          reduce using rule 119 (termino -> termino DIVIDE factor .)
    LT              reduce using rule 119 (termino -> termino DIVIDE factor .)
    GT              reduce using rule 119 (termino -> termino DIVIDE factor .)
    GE              reduce using rule 119 (termino -> termino DIVIDE factor .)
    LE              reduce using rule 119 (termino -> termino DIVIDE factor .)
    EQ              reduce using rule 119 (termino -> termino DIVIDE factor .)
    NE              reduce using rule 119 (termino -> termino DIVIDE factor .)
    PLUS            reduce using rule 119 (termino -> termino DIVIDE factor .)
    MINUS           reduce using rule 119 (termino -> termino DIVIDE factor .)
    VAR             reduce using rule 119 (termino -> termino DIVIDE factor .)
    PUBLIC          reduce using rule 119 (termino -> termino DIVIDE factor .)
    IF              reduce using rule 119 (termino -> termino DIVIDE factor .)
    PRIVATE         reduce using rule 119 (termino -> termino DIVIDE factor .)
    PROTECTED       reduce using rule 119 (termino -> termino DIVIDE factor .)
    ID              reduce using rule 119 (termino -> termino DIVIDE factor .)
    PRINT           reduce using rule 119 (termino -> termino DIVIDE factor .)
    READ            reduce using rule 119 (termino -> termino DIVIDE factor .)
    VOID            reduce using rule 119 (termino -> termino DIVIDE factor .)
    INT             reduce using rule 119 (termino -> termino DIVIDE factor .)
    FLOAT           reduce using rule 119 (termino -> termino DIVIDE factor .)
    CHAR            reduce using rule 119 (termino -> termino DIVIDE factor .)
    WHILE           reduce using rule 119 (termino -> termino DIVIDE factor .)
    RBRACE          reduce using rule 119 (termino -> termino DIVIDE factor .)
    RETURN          reduce using rule 119 (termino -> termino DIVIDE factor .)
    RBRACKET        reduce using rule 119 (termino -> termino DIVIDE factor .)
    COMMA           reduce using rule 119 (termino -> termino DIVIDE factor .)
    RPAREN          reduce using rule 119 (termino -> termino DIVIDE factor .)
    AND             reduce using rule 119 (termino -> termino DIVIDE factor .)
    OR              reduce using rule 119 (termino -> termino DIVIDE factor .)


state 173

    (120) termino -> termino MODULO factor .

    TIMES           reduce using rule 120 (termino -> termino MODULO factor .)
    DIVIDE          reduce using rule 120 (termino -> termino MODULO factor .)
    MODULO          reduce using rule 120 (termino -> termino MODULO factor .)
    LT              reduce using rule 120 (termino -> termino MODULO factor .)
    GT              reduce using rule 120 (termino -> termino MODULO factor .)
    GE              reduce using rule 120 (termino -> termino MODULO factor .)
    LE              reduce using rule 120 (termino -> termino MODULO factor .)
    EQ              reduce using rule 120 (termino -> termino MODULO factor .)
    NE              reduce using rule 120 (termino -> termino MODULO factor .)
    PLUS            reduce using rule 120 (termino -> termino MODULO factor .)
    MINUS           reduce using rule 120 (termino -> termino MODULO factor .)
    VAR             reduce using rule 120 (termino -> termino MODULO factor .)
    PUBLIC          reduce using rule 120 (termino -> termino MODULO factor .)
    IF              reduce using rule 120 (termino -> termino MODULO factor .)
    PRIVATE         reduce using rule 120 (termino -> termino MODULO factor .)
    PROTECTED       reduce using rule 120 (termino -> termino MODULO factor .)
    ID              reduce using rule 120 (termino -> termino MODULO factor .)
    PRINT           reduce using rule 120 (termino -> termino MODULO factor .)
    READ            reduce using rule 120 (termino -> termino MODULO factor .)
    VOID            reduce using rule 120 (termino -> termino MODULO factor .)
    INT             reduce using rule 120 (termino -> termino MODULO factor .)
    FLOAT           reduce using rule 120 (termino -> termino MODULO factor .)
    CHAR            reduce using rule 120 (termino -> termino MODULO factor .)
    WHILE           reduce using rule 120 (termino -> termino MODULO factor .)
    RBRACE          reduce using rule 120 (termino -> termino MODULO factor .)
    RETURN          reduce using rule 120 (termino -> termino MODULO factor .)
    RBRACKET        reduce using rule 120 (termino -> termino MODULO factor .)
    COMMA           reduce using rule 120 (termino -> termino MODULO factor .)
    RPAREN          reduce using rule 120 (termino -> termino MODULO factor .)
    AND             reduce using rule 120 (termino -> termino MODULO factor .)
    OR              reduce using rule 120 (termino -> termino MODULO factor .)


state 174

    (135) objeto_aAcceso -> ID PERIOD ID .

    TIMES           reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    DIVIDE          reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    MODULO          reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACKET        reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    PLUS            reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    MINUS           reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    COMMA           reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    RPAREN          reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    LT              reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    GT              reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    GE              reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    LE              reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    EQ              reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    NE              reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    AND             reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    OR              reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    VAR             reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    PUBLIC          reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    IF              reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    PRIVATE         reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    PROTECTED       reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    ID              reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    PRINT           reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    READ            reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    VOID            reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    INT             reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    FLOAT           reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    CHAR            reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    WHILE           reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACE          reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)
    RETURN          reduce using rule 135 (objeto_aAcceso -> ID PERIOD ID .)


state 175

    (90) asignacion -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS expresion
    (91) asignacion -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS llamada_func
    (92) asignacion -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 82
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    exp                            shift and go to state 197
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 176

    (84) asignacion -> ID LBRACKET exp RBRACKET EQUALS . expresion
    (85) asignacion -> ID LBRACKET exp RBRACKET EQUALS . llamada_func
    (86) asignacion -> ID LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (107) expresion -> . exp
    (108) expresion -> . exp LT expresion
    (109) expresion -> . exp GT expresion
    (110) expresion -> . exp GE expresion
    (111) expresion -> . exp LE expresion
    (112) expresion -> . exp EQ expresion
    (113) expresion -> . exp NE expresion
    (97) llamada_func -> . ID LPAREN aux RPAREN
    (96) objeto_metodo -> . ID PERIOD llamada_func
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    ID              shift and go to state 64
    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    exp                            shift and go to state 68
    expresion                      shift and go to state 198
    llamada_func                   shift and go to state 199
    objeto_metodo                  shift and go to state 200
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 177

    (99) aux -> exp COMMA aux .

    RPAREN          reduce using rule 99 (aux -> exp COMMA aux .)


state 178

    (25) constructor -> PUBLIC ID LPAREN param RPAREN . bloque
    (26) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 183

    bloque                         shift and go to state 201

state 179

    (40) param -> tipo_simple ID .
    (41) param -> tipo_simple ID . COMMA param

    RPAREN          reduce using rule 40 (param -> tipo_simple ID .)
    COMMA           shift and go to state 202


state 180

    (27) funcion -> scope type DEF id LPAREN . param aux_param RPAREN contexto_func
    (39) param -> .
    (40) param -> . tipo_simple ID
    (41) param -> . tipo_simple ID COMMA param
    (74) tipo_simple -> . INT
    (75) tipo_simple -> . FLOAT
    (76) tipo_simple -> . CHAR

    RPAREN          reduce using rule 39 (param -> .)
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    CHAR            shift and go to state 116

    param                          shift and go to state 203
    tipo_simple                    shift and go to state 143

state 181

    (28) funcion -> scope VOID DEF id LPAREN . param aux_param RPAREN contexto_func
    (39) param -> .
    (40) param -> . tipo_simple ID
    (41) param -> . tipo_simple ID COMMA param
    (74) tipo_simple -> . INT
    (75) tipo_simple -> . FLOAT
    (76) tipo_simple -> . CHAR

    RPAREN          reduce using rule 39 (param -> .)
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    CHAR            shift and go to state 116

    param                          shift and go to state 204
    tipo_simple                    shift and go to state 143

state 182

    (18) condicion -> IF LPAREN gotoF RPAREN bloque .
    (19) condicion -> IF LPAREN gotoF RPAREN bloque . elif
    (20) elif -> . aux_elif ELIF LPAREN gotoF RPAREN bloque
    (21) elif -> . aux_elif ELIF LPAREN gotoF RPAREN bloque elif
    (22) aux_elif -> .

    VAR             reduce using rule 18 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    PUBLIC          reduce using rule 18 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    IF              reduce using rule 18 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    PRIVATE         reduce using rule 18 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    PROTECTED       reduce using rule 18 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    ID              reduce using rule 18 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    PRINT           reduce using rule 18 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    READ            reduce using rule 18 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    VOID            reduce using rule 18 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    INT             reduce using rule 18 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    FLOAT           reduce using rule 18 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    CHAR            reduce using rule 18 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    WHILE           reduce using rule 18 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    RBRACE          reduce using rule 18 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    ELIF            reduce using rule 22 (aux_elif -> .)

    elif                           shift and go to state 205
    aux_elif                       shift and go to state 206

state 183

    (26) bloque -> LBRACE . aux5 RBRACE
    (35) aux5 -> . vars
    (36) aux5 -> . estatuto
    (37) aux5 -> . vars aux5
    (38) aux5 -> . estatuto aux5
    (66) vars -> . VAR aux2 COLON tipo_simple
    (67) vars -> . VAR aux2 COLON tipo_compuesto
    (68) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (69) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (70) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (71) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (47) estatuto -> . asignacion
    (48) estatuto -> . escritura
    (49) estatuto -> . llamada_func
    (50) estatuto -> . objeto_metodo
    (51) estatuto -> . lectura
    (78) asignacion -> . ID EQUALS expresion
    (79) asignacion -> . ID EQUALS llamada_func
    (80) asignacion -> . ID EQUALS objeto_metodo
    (81) asignacion -> . objeto_aAcceso EQUALS expresion
    (82) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (83) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (84) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (87) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (88) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (90) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (91) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (94) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (95) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (57) escritura -> . PRINT LPAREN aux3 RPAREN
    (97) llamada_func -> . ID LPAREN aux RPAREN
    (96) objeto_metodo -> . ID PERIOD llamada_func
    (52) lectura -> . READ LPAREN aux4 RPAREN
    (135) objeto_aAcceso -> . ID PERIOD ID

    VAR             shift and go to state 20
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    aux5                           shift and go to state 207
    vars                           shift and go to state 208
    estatuto                       shift and go to state 209
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 184

    (102) exp_cond -> exp_bool AND exp_cond .

    RPAREN          reduce using rule 102 (exp_cond -> exp_bool AND exp_cond .)


state 185

    (103) exp_cond -> exp_bool OR exp_cond .

    RPAREN          reduce using rule 103 (exp_cond -> exp_bool OR exp_cond .)


state 186

    (23) ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN . bloque
    (26) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 183

    bloque                         shift and go to state 210

state 187

    (93) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET . exp RBRACKET EQUALS expresion
    (94) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET . exp RBRACKET EQUALS llamada_func
    (95) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET . exp RBRACKET EQUALS objeto_metodo
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 82
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    objeto_aAcceso                 shift and go to state 74
    exp                            shift and go to state 211
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 188

    (87) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS . expresion
    (88) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS . llamada_func
    (89) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (107) expresion -> . exp
    (108) expresion -> . exp LT expresion
    (109) expresion -> . exp GT expresion
    (110) expresion -> . exp GE expresion
    (111) expresion -> . exp LE expresion
    (112) expresion -> . exp EQ expresion
    (113) expresion -> . exp NE expresion
    (97) llamada_func -> . ID LPAREN aux RPAREN
    (96) objeto_metodo -> . ID PERIOD llamada_func
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    ID              shift and go to state 64
    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    objeto_aAcceso                 shift and go to state 74
    exp                            shift and go to state 68
    expresion                      shift and go to state 212
    llamada_func                   shift and go to state 213
    objeto_metodo                  shift and go to state 214
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 189

    (62) aux3 -> expresion COMMA aux3 .

    RPAREN          reduce using rule 62 (aux3 -> expresion COMMA aux3 .)


state 190

    (63) aux3 -> llamada_func COMMA aux3 .

    RPAREN          reduce using rule 63 (aux3 -> llamada_func COMMA aux3 .)


state 191

    (64) aux3 -> objeto_metodo COMMA aux3 .

    RPAREN          reduce using rule 64 (aux3 -> objeto_metodo COMMA aux3 .)


state 192

    (65) aux3 -> CSTRING COMMA aux3 .

    RPAREN          reduce using rule 65 (aux3 -> CSTRING COMMA aux3 .)


state 193

    (55) aux4 -> ID COMMA aux4 .

    RPAREN          reduce using rule 55 (aux4 -> ID COMMA aux4 .)


state 194

    (56) aux4 -> objeto_aAcceso COMMA aux4 .

    RPAREN          reduce using rule 56 (aux4 -> objeto_aAcceso COMMA aux4 .)


state 195

    (70) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET . cint RBRACKET COLON tipo_simple
    (71) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET . cint RBRACKET COLON tipo_compuesto
    (132) cint -> . CINT

    CINT            shift and go to state 79

    cint                           shift and go to state 215

state 196

    (68) vars -> VAR ID LBRACKET cint RBRACKET COLON . tipo_simple
    (69) vars -> VAR ID LBRACKET cint RBRACKET COLON . tipo_compuesto
    (74) tipo_simple -> . INT
    (75) tipo_simple -> . FLOAT
    (76) tipo_simple -> . CHAR
    (77) tipo_compuesto -> . ID

    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    CHAR            shift and go to state 116
    ID              shift and go to state 117

    tipo_simple                    shift and go to state 216
    tipo_compuesto                 shift and go to state 217

state 197

    (90) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS expresion
    (91) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS llamada_func
    (92) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (115) exp -> exp . PLUS termino
    (116) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 218
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128


state 198

    (84) asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .

    VAR             reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    ID              reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    VOID            reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    INT             reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    FLOAT           reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    CHAR            reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)


state 199

    (85) asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .

    VAR             reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    VOID            reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    INT             reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    FLOAT           reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    CHAR            reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)


state 200

    (86) asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    VOID            reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    INT             reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    FLOAT           reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    CHAR            reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 201

    (25) constructor -> PUBLIC ID LPAREN param RPAREN bloque .

    VAR             reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PUBLIC          reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    IF              reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PRIVATE         reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PROTECTED       reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    ID              reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PRINT           reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    READ            reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    VOID            reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    INT             reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    FLOAT           reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    CHAR            reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    WHILE           reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    RBRACE          reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)


state 202

    (41) param -> tipo_simple ID COMMA . param
    (39) param -> .
    (40) param -> . tipo_simple ID
    (41) param -> . tipo_simple ID COMMA param
    (74) tipo_simple -> . INT
    (75) tipo_simple -> . FLOAT
    (76) tipo_simple -> . CHAR

    RPAREN          reduce using rule 39 (param -> .)
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    CHAR            shift and go to state 116

    tipo_simple                    shift and go to state 143
    param                          shift and go to state 219

state 203

    (27) funcion -> scope type DEF id LPAREN param . aux_param RPAREN contexto_func
    (42) aux_param -> .

    RPAREN          reduce using rule 42 (aux_param -> .)

    aux_param                      shift and go to state 220

state 204

    (28) funcion -> scope VOID DEF id LPAREN param . aux_param RPAREN contexto_func
    (42) aux_param -> .

    RPAREN          reduce using rule 42 (aux_param -> .)

    aux_param                      shift and go to state 221

state 205

    (19) condicion -> IF LPAREN gotoF RPAREN bloque elif .

    VAR             reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    PUBLIC          reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    IF              reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    PRIVATE         reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    PROTECTED       reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    ID              reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    PRINT           reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    READ            reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    VOID            reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    INT             reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    FLOAT           reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    CHAR            reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    WHILE           reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    RBRACE          reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)


state 206

    (20) elif -> aux_elif . ELIF LPAREN gotoF RPAREN bloque
    (21) elif -> aux_elif . ELIF LPAREN gotoF RPAREN bloque elif

    ELIF            shift and go to state 222


state 207

    (26) bloque -> LBRACE aux5 . RBRACE

    RBRACE          shift and go to state 223


state 208

    (35) aux5 -> vars .
    (37) aux5 -> vars . aux5
    (35) aux5 -> . vars
    (36) aux5 -> . estatuto
    (37) aux5 -> . vars aux5
    (38) aux5 -> . estatuto aux5
    (66) vars -> . VAR aux2 COLON tipo_simple
    (67) vars -> . VAR aux2 COLON tipo_compuesto
    (68) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (69) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (70) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (71) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (47) estatuto -> . asignacion
    (48) estatuto -> . escritura
    (49) estatuto -> . llamada_func
    (50) estatuto -> . objeto_metodo
    (51) estatuto -> . lectura
    (78) asignacion -> . ID EQUALS expresion
    (79) asignacion -> . ID EQUALS llamada_func
    (80) asignacion -> . ID EQUALS objeto_metodo
    (81) asignacion -> . objeto_aAcceso EQUALS expresion
    (82) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (83) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (84) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (87) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (88) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (90) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (91) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (94) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (95) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (57) escritura -> . PRINT LPAREN aux3 RPAREN
    (97) llamada_func -> . ID LPAREN aux RPAREN
    (96) objeto_metodo -> . ID PERIOD llamada_func
    (52) lectura -> . READ LPAREN aux4 RPAREN
    (135) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 35 (aux5 -> vars .)
    RETURN          reduce using rule 35 (aux5 -> vars .)
    VAR             shift and go to state 20
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    vars                           shift and go to state 208
    aux5                           shift and go to state 224
    estatuto                       shift and go to state 209
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 209

    (36) aux5 -> estatuto .
    (38) aux5 -> estatuto . aux5
    (35) aux5 -> . vars
    (36) aux5 -> . estatuto
    (37) aux5 -> . vars aux5
    (38) aux5 -> . estatuto aux5
    (66) vars -> . VAR aux2 COLON tipo_simple
    (67) vars -> . VAR aux2 COLON tipo_compuesto
    (68) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (69) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (70) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (71) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (47) estatuto -> . asignacion
    (48) estatuto -> . escritura
    (49) estatuto -> . llamada_func
    (50) estatuto -> . objeto_metodo
    (51) estatuto -> . lectura
    (78) asignacion -> . ID EQUALS expresion
    (79) asignacion -> . ID EQUALS llamada_func
    (80) asignacion -> . ID EQUALS objeto_metodo
    (81) asignacion -> . objeto_aAcceso EQUALS expresion
    (82) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (83) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (84) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (87) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (88) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (90) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (91) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (94) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (95) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (57) escritura -> . PRINT LPAREN aux3 RPAREN
    (97) llamada_func -> . ID LPAREN aux RPAREN
    (96) objeto_metodo -> . ID PERIOD llamada_func
    (52) lectura -> . READ LPAREN aux4 RPAREN
    (135) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 36 (aux5 -> estatuto .)
    RETURN          reduce using rule 36 (aux5 -> estatuto .)
    VAR             shift and go to state 20
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    estatuto                       shift and go to state 209
    aux5                           shift and go to state 225
    vars                           shift and go to state 208
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 210

    (23) ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .

    VAR             reduce using rule 23 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    PUBLIC          reduce using rule 23 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    IF              reduce using rule 23 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    PRIVATE         reduce using rule 23 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    PROTECTED       reduce using rule 23 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    ID              reduce using rule 23 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    PRINT           reduce using rule 23 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    READ            reduce using rule 23 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    VOID            reduce using rule 23 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    INT             reduce using rule 23 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    FLOAT           reduce using rule 23 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    CHAR            reduce using rule 23 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    WHILE           reduce using rule 23 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    RBRACE          reduce using rule 23 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)


state 211

    (93) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp . RBRACKET EQUALS expresion
    (94) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp . RBRACKET EQUALS llamada_func
    (95) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp . RBRACKET EQUALS objeto_metodo
    (115) exp -> exp . PLUS termino
    (116) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 226
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128


state 212

    (87) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .

    VAR             reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    ID              reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    VOID            reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    INT             reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    FLOAT           reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    CHAR            reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)


state 213

    (88) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .

    VAR             reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    VOID            reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    INT             reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    FLOAT           reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    CHAR            reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)


state 214

    (89) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    VOID            reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    INT             reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    FLOAT           reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    CHAR            reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 215

    (70) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint . RBRACKET COLON tipo_simple
    (71) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint . RBRACKET COLON tipo_compuesto

    RBRACKET        shift and go to state 227


state 216

    (68) vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .

    VAR             reduce using rule 68 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PUBLIC          reduce using rule 68 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    IF              reduce using rule 68 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PRIVATE         reduce using rule 68 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PROTECTED       reduce using rule 68 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    ID              reduce using rule 68 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PRINT           reduce using rule 68 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    READ            reduce using rule 68 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    VOID            reduce using rule 68 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    INT             reduce using rule 68 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    FLOAT           reduce using rule 68 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    CHAR            reduce using rule 68 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    WHILE           reduce using rule 68 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    RBRACE          reduce using rule 68 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    RETURN          reduce using rule 68 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)


state 217

    (69) vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .

    VAR             reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PUBLIC          reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    IF              reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRIVATE         reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PROTECTED       reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    ID              reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRINT           reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    READ            reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    VOID            reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    INT             reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    FLOAT           reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    CHAR            reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    WHILE           reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RBRACE          reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RETURN          reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)


state 218

    (90) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS expresion
    (91) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS llamada_func
    (92) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS objeto_metodo

    EQUALS          shift and go to state 228


state 219

    (41) param -> tipo_simple ID COMMA param .

    RPAREN          reduce using rule 41 (param -> tipo_simple ID COMMA param .)


state 220

    (27) funcion -> scope type DEF id LPAREN param aux_param . RPAREN contexto_func

    RPAREN          shift and go to state 229


state 221

    (28) funcion -> scope VOID DEF id LPAREN param aux_param . RPAREN contexto_func

    RPAREN          shift and go to state 230


state 222

    (20) elif -> aux_elif ELIF . LPAREN gotoF RPAREN bloque
    (21) elif -> aux_elif ELIF . LPAREN gotoF RPAREN bloque elif

    LPAREN          shift and go to state 231


state 223

    (26) bloque -> LBRACE aux5 RBRACE .

    ELIF            reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    VAR             reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    PUBLIC          reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    IF              reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    PRIVATE         reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    PROTECTED       reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    ID              reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    PRINT           reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    READ            reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    VOID            reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    INT             reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    FLOAT           reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    CHAR            reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    WHILE           reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    RBRACE          reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)


state 224

    (37) aux5 -> vars aux5 .

    RBRACE          reduce using rule 37 (aux5 -> vars aux5 .)
    RETURN          reduce using rule 37 (aux5 -> vars aux5 .)


state 225

    (38) aux5 -> estatuto aux5 .

    RBRACE          reduce using rule 38 (aux5 -> estatuto aux5 .)
    RETURN          reduce using rule 38 (aux5 -> estatuto aux5 .)


state 226

    (93) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET . EQUALS expresion
    (94) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET . EQUALS llamada_func
    (95) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET . EQUALS objeto_metodo

    EQUALS          shift and go to state 232


state 227

    (70) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET . COLON tipo_simple
    (71) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET . COLON tipo_compuesto

    COLON           shift and go to state 233


state 228

    (90) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . expresion
    (91) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . llamada_func
    (92) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (107) expresion -> . exp
    (108) expresion -> . exp LT expresion
    (109) expresion -> . exp GT expresion
    (110) expresion -> . exp GE expresion
    (111) expresion -> . exp LE expresion
    (112) expresion -> . exp EQ expresion
    (113) expresion -> . exp NE expresion
    (97) llamada_func -> . ID LPAREN aux RPAREN
    (96) objeto_metodo -> . ID PERIOD llamada_func
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    ID              shift and go to state 64
    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    exp                            shift and go to state 68
    expresion                      shift and go to state 234
    llamada_func                   shift and go to state 235
    objeto_metodo                  shift and go to state 236
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 229

    (27) funcion -> scope type DEF id LPAREN param aux_param RPAREN . contexto_func
    (33) contexto_func -> . LBRACE aux5 RBRACE
    (34) contexto_func -> . LBRACE aux5 RETURN ID RBRACE

    LBRACE          shift and go to state 238

    contexto_func                  shift and go to state 237

state 230

    (28) funcion -> scope VOID DEF id LPAREN param aux_param RPAREN . contexto_func
    (33) contexto_func -> . LBRACE aux5 RBRACE
    (34) contexto_func -> . LBRACE aux5 RETURN ID RBRACE

    LBRACE          shift and go to state 238

    contexto_func                  shift and go to state 239

state 231

    (20) elif -> aux_elif ELIF LPAREN . gotoF RPAREN bloque
    (21) elif -> aux_elif ELIF LPAREN . gotoF RPAREN bloque elif
    (100) gotoF -> . exp_cond
    (101) exp_cond -> . exp_bool
    (102) exp_cond -> . exp_bool AND exp_cond
    (103) exp_cond -> . exp_bool OR exp_cond
    (104) exp_bool -> . TRUE
    (105) exp_bool -> . FALSE
    (106) exp_bool -> . expresion
    (107) expresion -> . exp
    (108) expresion -> . exp LT expresion
    (109) expresion -> . exp GT expresion
    (110) expresion -> . exp GE expresion
    (111) expresion -> . exp LE expresion
    (112) expresion -> . exp EQ expresion
    (113) expresion -> . exp NE expresion
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              shift and go to state 82
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    gotoF                          shift and go to state 240
    exp_cond                       shift and go to state 92
    exp_bool                       shift and go to state 93
    expresion                      shift and go to state 96
    exp                            shift and go to state 68
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    objeto_aAcceso                 shift and go to state 74
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 232

    (93) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS . expresion
    (94) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS . llamada_func
    (95) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS . objeto_metodo
    (107) expresion -> . exp
    (108) expresion -> . exp LT expresion
    (109) expresion -> . exp GT expresion
    (110) expresion -> . exp GE expresion
    (111) expresion -> . exp LE expresion
    (112) expresion -> . exp EQ expresion
    (113) expresion -> . exp NE expresion
    (97) llamada_func -> . ID LPAREN aux RPAREN
    (96) objeto_metodo -> . ID PERIOD llamada_func
    (114) exp -> . termino
    (115) exp -> . exp PLUS termino
    (116) exp -> . exp MINUS termino
    (117) termino -> . factor
    (118) termino -> . termino TIMES factor
    (119) termino -> . termino DIVIDE factor
    (120) termino -> . termino MODULO factor
    (121) factor -> . LPAREN exp_cond RPAREN
    (122) factor -> . PLUS objeto_aAcceso
    (123) factor -> . MINUS objeto_aAcceso
    (124) factor -> . PLUS var
    (125) factor -> . MINUS var
    (126) factor -> . var
    (127) factor -> . objeto_aAcceso
    (128) var -> . ID
    (129) var -> . cint
    (130) var -> . cfloat
    (131) var -> . cchar
    (135) objeto_aAcceso -> . ID PERIOD ID
    (132) cint -> . CINT
    (133) cfloat -> . NUMBER
    (134) cchar -> . CCHAR

    ID              shift and go to state 64
    LPAREN          shift and go to state 69
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    CINT            shift and go to state 79
    NUMBER          shift and go to state 80
    CCHAR           shift and go to state 81

    objeto_aAcceso                 shift and go to state 74
    exp                            shift and go to state 68
    expresion                      shift and go to state 241
    llamada_func                   shift and go to state 242
    objeto_metodo                  shift and go to state 243
    termino                        shift and go to state 70
    factor                         shift and go to state 73
    var                            shift and go to state 75
    cint                           shift and go to state 76
    cfloat                         shift and go to state 77
    cchar                          shift and go to state 78

state 233

    (70) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON . tipo_simple
    (71) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON . tipo_compuesto
    (74) tipo_simple -> . INT
    (75) tipo_simple -> . FLOAT
    (76) tipo_simple -> . CHAR
    (77) tipo_compuesto -> . ID

    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    CHAR            shift and go to state 116
    ID              shift and go to state 117

    tipo_simple                    shift and go to state 244
    tipo_compuesto                 shift and go to state 245

state 234

    (90) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .

    VAR             reduce using rule 90 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 90 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 90 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 90 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 90 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    ID              reduce using rule 90 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 90 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 90 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    VOID            reduce using rule 90 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    INT             reduce using rule 90 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    FLOAT           reduce using rule 90 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    CHAR            reduce using rule 90 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 90 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 90 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 90 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)


state 235

    (91) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .

    VAR             reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    VOID            reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    INT             reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    FLOAT           reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    CHAR            reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)


state 236

    (92) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    VOID            reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    INT             reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    FLOAT           reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    CHAR            reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 237

    (27) funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .

    VAR             reduce using rule 27 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    PUBLIC          reduce using rule 27 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    IF              reduce using rule 27 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    PRIVATE         reduce using rule 27 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    PROTECTED       reduce using rule 27 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    ID              reduce using rule 27 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    PRINT           reduce using rule 27 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    READ            reduce using rule 27 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    VOID            reduce using rule 27 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    INT             reduce using rule 27 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    FLOAT           reduce using rule 27 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    CHAR            reduce using rule 27 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    WHILE           reduce using rule 27 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    RBRACE          reduce using rule 27 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)


state 238

    (33) contexto_func -> LBRACE . aux5 RBRACE
    (34) contexto_func -> LBRACE . aux5 RETURN ID RBRACE
    (35) aux5 -> . vars
    (36) aux5 -> . estatuto
    (37) aux5 -> . vars aux5
    (38) aux5 -> . estatuto aux5
    (66) vars -> . VAR aux2 COLON tipo_simple
    (67) vars -> . VAR aux2 COLON tipo_compuesto
    (68) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (69) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (70) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (71) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (47) estatuto -> . asignacion
    (48) estatuto -> . escritura
    (49) estatuto -> . llamada_func
    (50) estatuto -> . objeto_metodo
    (51) estatuto -> . lectura
    (78) asignacion -> . ID EQUALS expresion
    (79) asignacion -> . ID EQUALS llamada_func
    (80) asignacion -> . ID EQUALS objeto_metodo
    (81) asignacion -> . objeto_aAcceso EQUALS expresion
    (82) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (83) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (84) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (87) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (88) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (90) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (91) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (92) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (93) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (94) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (95) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (57) escritura -> . PRINT LPAREN aux3 RPAREN
    (97) llamada_func -> . ID LPAREN aux RPAREN
    (96) objeto_metodo -> . ID PERIOD llamada_func
    (52) lectura -> . READ LPAREN aux4 RPAREN
    (135) objeto_aAcceso -> . ID PERIOD ID

    VAR             shift and go to state 20
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    aux5                           shift and go to state 246
    vars                           shift and go to state 208
    estatuto                       shift and go to state 209
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 239

    (28) funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .

    VAR             reduce using rule 28 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    PUBLIC          reduce using rule 28 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    IF              reduce using rule 28 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    PRIVATE         reduce using rule 28 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    PROTECTED       reduce using rule 28 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    ID              reduce using rule 28 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    PRINT           reduce using rule 28 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    READ            reduce using rule 28 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    VOID            reduce using rule 28 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    INT             reduce using rule 28 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    FLOAT           reduce using rule 28 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    CHAR            reduce using rule 28 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    WHILE           reduce using rule 28 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    RBRACE          reduce using rule 28 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)


state 240

    (20) elif -> aux_elif ELIF LPAREN gotoF . RPAREN bloque
    (21) elif -> aux_elif ELIF LPAREN gotoF . RPAREN bloque elif

    RPAREN          shift and go to state 247


state 241

    (93) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .

    VAR             reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    ID              reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    VOID            reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    INT             reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    FLOAT           reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    CHAR            reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 93 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)


state 242

    (94) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .

    VAR             reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    VOID            reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    INT             reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    FLOAT           reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    CHAR            reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)


state 243

    (95) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    VOID            reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    INT             reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    FLOAT           reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    CHAR            reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 244

    (70) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .

    VAR             reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PUBLIC          reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    IF              reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PRIVATE         reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PROTECTED       reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    ID              reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PRINT           reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    READ            reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    VOID            reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    INT             reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    FLOAT           reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    CHAR            reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    WHILE           reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    RBRACE          reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    RETURN          reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)


state 245

    (71) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .

    VAR             reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PUBLIC          reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    IF              reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRIVATE         reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PROTECTED       reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    ID              reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRINT           reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    READ            reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    VOID            reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    INT             reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    FLOAT           reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    CHAR            reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    WHILE           reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RBRACE          reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RETURN          reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)


state 246

    (33) contexto_func -> LBRACE aux5 . RBRACE
    (34) contexto_func -> LBRACE aux5 . RETURN ID RBRACE

    RBRACE          shift and go to state 248
    RETURN          shift and go to state 249


state 247

    (20) elif -> aux_elif ELIF LPAREN gotoF RPAREN . bloque
    (21) elif -> aux_elif ELIF LPAREN gotoF RPAREN . bloque elif
    (26) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 183

    bloque                         shift and go to state 250

state 248

    (33) contexto_func -> LBRACE aux5 RBRACE .

    VAR             reduce using rule 33 (contexto_func -> LBRACE aux5 RBRACE .)
    PUBLIC          reduce using rule 33 (contexto_func -> LBRACE aux5 RBRACE .)
    IF              reduce using rule 33 (contexto_func -> LBRACE aux5 RBRACE .)
    PRIVATE         reduce using rule 33 (contexto_func -> LBRACE aux5 RBRACE .)
    PROTECTED       reduce using rule 33 (contexto_func -> LBRACE aux5 RBRACE .)
    ID              reduce using rule 33 (contexto_func -> LBRACE aux5 RBRACE .)
    PRINT           reduce using rule 33 (contexto_func -> LBRACE aux5 RBRACE .)
    READ            reduce using rule 33 (contexto_func -> LBRACE aux5 RBRACE .)
    VOID            reduce using rule 33 (contexto_func -> LBRACE aux5 RBRACE .)
    INT             reduce using rule 33 (contexto_func -> LBRACE aux5 RBRACE .)
    FLOAT           reduce using rule 33 (contexto_func -> LBRACE aux5 RBRACE .)
    CHAR            reduce using rule 33 (contexto_func -> LBRACE aux5 RBRACE .)
    WHILE           reduce using rule 33 (contexto_func -> LBRACE aux5 RBRACE .)
    RBRACE          reduce using rule 33 (contexto_func -> LBRACE aux5 RBRACE .)


state 249

    (34) contexto_func -> LBRACE aux5 RETURN . ID RBRACE

    ID              shift and go to state 251


state 250

    (20) elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .
    (21) elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque . elif
    (20) elif -> . aux_elif ELIF LPAREN gotoF RPAREN bloque
    (21) elif -> . aux_elif ELIF LPAREN gotoF RPAREN bloque elif
    (22) aux_elif -> .

    VAR             reduce using rule 20 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    PUBLIC          reduce using rule 20 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    IF              reduce using rule 20 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    PRIVATE         reduce using rule 20 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    PROTECTED       reduce using rule 20 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    ID              reduce using rule 20 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    PRINT           reduce using rule 20 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    READ            reduce using rule 20 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    VOID            reduce using rule 20 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    INT             reduce using rule 20 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    FLOAT           reduce using rule 20 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    CHAR            reduce using rule 20 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    WHILE           reduce using rule 20 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    RBRACE          reduce using rule 20 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    ELIF            reduce using rule 22 (aux_elif -> .)

    aux_elif                       shift and go to state 206
    elif                           shift and go to state 252

state 251

    (34) contexto_func -> LBRACE aux5 RETURN ID . RBRACE

    RBRACE          shift and go to state 253


state 252

    (21) elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .

    VAR             reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    PUBLIC          reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    IF              reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    PRIVATE         reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    PROTECTED       reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    ID              reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    PRINT           reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    READ            reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    VOID            reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    INT             reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    FLOAT           reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    CHAR            reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    WHILE           reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    RBRACE          reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)


state 253

    (34) contexto_func -> LBRACE aux5 RETURN ID RBRACE .

    VAR             reduce using rule 34 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)
    PUBLIC          reduce using rule 34 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)
    IF              reduce using rule 34 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)
    PRIVATE         reduce using rule 34 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)
    PROTECTED       reduce using rule 34 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)
    ID              reduce using rule 34 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)
    PRINT           reduce using rule 34 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)
    READ            reduce using rule 34 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)
    VOID            reduce using rule 34 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)
    INT             reduce using rule 34 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)
    FLOAT           reduce using rule 34 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)
    CHAR            reduce using rule 34 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)
    WHILE           reduce using rule 34 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)
    RBRACE          reduce using rule 34 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)

