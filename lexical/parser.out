Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID class context
Rule 2     programa -> PROGRAM ID context
Rule 3     class -> scope CLASS ID
Rule 4     class -> scope CLASS ID COLON ID
Rule 5     context -> LBRACE aux6 RBRACE
Rule 6     aux6 -> vars
Rule 7     aux6 -> constructor
Rule 8     aux6 -> funcion
Rule 9     aux6 -> estatuto
Rule 10    aux6 -> condicion
Rule 11    aux6 -> ciclo
Rule 12    aux6 -> vars aux6
Rule 13    aux6 -> constructor aux6
Rule 14    aux6 -> funcion aux6
Rule 15    aux6 -> estatuto aux6
Rule 16    aux6 -> condicion aux6
Rule 17    aux6 -> ciclo aux6
Rule 18    condicion -> IF LPAREN gotoF RPAREN bloque
Rule 19    condicion -> IF LPAREN gotoF RPAREN bloque elif
Rule 20    elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque
Rule 21    elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif
Rule 22    aux_elif -> <empty>
Rule 23    ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque
Rule 24    aux_ciclo -> <empty>
Rule 25    constructor -> PUBLIC ID LPAREN param RPAREN bloque
Rule 26    bloque -> LBRACE aux5 RBRACE
Rule 27    funcion -> scope DEF ID LPAREN param RPAREN contexto_func
Rule 28    contexto_func -> LBRACE aux5 RBRACE
Rule 29    contexto_func -> LBRACE aux5 RETURN INT ID RBRACE
Rule 30    contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE
Rule 31    aux5 -> vars
Rule 32    aux5 -> estatuto
Rule 33    aux5 -> vars aux5
Rule 34    aux5 -> estatuto aux5
Rule 35    param -> <empty>
Rule 36    param -> tipo_simple ID
Rule 37    param -> tipo_simple ID COMMA param
Rule 38    scope -> PRIVATE
Rule 39    scope -> PUBLIC
Rule 40    scope -> PROTECTED
Rule 41    estatuto -> asignacion
Rule 42    estatuto -> escritura
Rule 43    estatuto -> llamada_func
Rule 44    estatuto -> objeto_metodo
Rule 45    estatuto -> lectura
Rule 46    lectura -> READ LPAREN aux4 RPAREN
Rule 47    aux4 -> ID
Rule 48    aux4 -> objeto_aAcceso
Rule 49    aux4 -> ID COMMA aux4
Rule 50    aux4 -> objeto_aAcceso COMMA aux4
Rule 51    escritura -> PRINT LPAREN aux3 RPAREN
Rule 52    aux3 -> expresion
Rule 53    aux3 -> llamada_func
Rule 54    aux3 -> objeto_metodo
Rule 55    aux3 -> CSTRING
Rule 56    aux3 -> expresion COMMA aux3
Rule 57    aux3 -> llamada_func COMMA aux3
Rule 58    aux3 -> objeto_metodo COMMA aux3
Rule 59    aux3 -> CSTRING COMMA aux3
Rule 60    vars -> VAR aux2 COLON tipo_simple
Rule 61    vars -> VAR aux2 COLON tipo_compuesto
Rule 62    vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple
Rule 63    vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
Rule 64    vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
Rule 65    vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
Rule 66    aux2 -> ID
Rule 67    aux2 -> ID COMMA aux2
Rule 68    tipo_simple -> INT
Rule 69    tipo_simple -> FLOAT
Rule 70    tipo_simple -> CHAR
Rule 71    tipo_compuesto -> ID
Rule 72    asignacion -> ID EQUALS expresion
Rule 73    asignacion -> ID EQUALS llamada_func
Rule 74    asignacion -> ID EQUALS objeto_metodo
Rule 75    asignacion -> objeto_aAcceso EQUALS expresion
Rule 76    asignacion -> objeto_aAcceso EQUALS llamada_func
Rule 77    asignacion -> objeto_aAcceso EQUALS objeto_metodo
Rule 78    asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion
Rule 79    asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func
Rule 80    asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 81    asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
Rule 82    asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
Rule 83    asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 84    asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
Rule 85    asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
Rule 86    asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 87    asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
Rule 88    asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
Rule 89    asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 90    objeto_metodo -> ID PERIOD llamada_func
Rule 91    llamada_func -> ID LPAREN aux RPAREN
Rule 92    aux -> exp
Rule 93    aux -> exp COMMA aux
Rule 94    gotoF -> exp_cond
Rule 95    exp_cond -> exp_bool
Rule 96    exp_cond -> exp_bool AND exp_cond
Rule 97    exp_cond -> exp_bool OR exp_cond
Rule 98    exp_bool -> TRUE
Rule 99    exp_bool -> FALSE
Rule 100   exp_bool -> expresion
Rule 101   expresion -> exp
Rule 102   expresion -> exp LT expresion
Rule 103   expresion -> exp GT expresion
Rule 104   expresion -> exp GE expresion
Rule 105   expresion -> exp LE expresion
Rule 106   expresion -> exp EQ expresion
Rule 107   expresion -> exp NE expresion
Rule 108   exp -> termino
Rule 109   exp -> exp PLUS termino
Rule 110   exp -> exp MINUS termino
Rule 111   termino -> factor
Rule 112   termino -> termino TIMES factor
Rule 113   termino -> termino DIVIDE factor
Rule 114   termino -> termino MODULO factor
Rule 115   factor -> LPAREN exp_cond RPAREN
Rule 116   factor -> PLUS objeto_aAcceso
Rule 117   factor -> MINUS objeto_aAcceso
Rule 118   factor -> PLUS var
Rule 119   factor -> MINUS var
Rule 120   factor -> var
Rule 121   factor -> objeto_aAcceso
Rule 122   var -> ID
Rule 123   var -> cint
Rule 124   var -> cfloat
Rule 125   var -> cchar
Rule 126   cint -> CINT
Rule 127   cfloat -> NUMBER
Rule 128   cchar -> CCHAR
Rule 129   objeto_aAcceso -> ID PERIOD ID

Terminals, with rules where they appear

AND                  : 96
CCHAR                : 128
CHAR                 : 70
CINT                 : 126
CLASS                : 3 4
COLON                : 4 60 61 62 63 64 65
COMMA                : 37 49 50 56 57 58 59 67 93
CSTRING              : 55 59
DEF                  : 27
DIVIDE               : 113
ELIF                 : 20 21
EQ                   : 106
EQUALS               : 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89
FALSE                : 99
FLOAT                : 30 69
GE                   : 104
GT                   : 103
ID                   : 1 2 3 4 4 25 27 29 30 36 37 47 49 62 63 64 65 66 67 71 72 73 74 78 79 80 84 85 86 90 91 122 129 129
IF                   : 18 19
INT                  : 29 68
LBRACE               : 5 26 28 29 30
LBRACKET             : 62 63 64 64 65 65 78 79 80 81 82 83 84 84 85 85 86 86 87 87 88 88 89 89
LE                   : 105
LPAREN               : 18 19 20 21 23 25 27 46 51 91 115
LT                   : 102
MINUS                : 110 117 119
MODULO               : 114
NE                   : 107
NUMBER               : 127
OR                   : 97
PERIOD               : 90 129
PLUS                 : 109 116 118
PRINT                : 51
PRIVATE              : 38
PROGRAM              : 1 2
PROTECTED            : 40
PUBLIC               : 25 39
RBRACE               : 5 26 28 29 30
RBRACKET             : 62 63 64 64 65 65 78 79 80 81 82 83 84 84 85 85 86 86 87 87 88 88 89 89
READ                 : 46
RETURN               : 29 30
RPAREN               : 18 19 20 21 23 25 27 46 51 91 115
TIMES                : 112
TRUE                 : 98
VAR                  : 60 61 62 63 64 65
WHILE                : 23
error                : 

Nonterminals, with rules where they appear

asignacion           : 41
aux                  : 91 93
aux2                 : 60 61 67
aux3                 : 51 56 57 58 59
aux4                 : 46 49 50
aux5                 : 26 28 29 30 33 34
aux6                 : 5 12 13 14 15 16 17
aux_ciclo            : 23
aux_elif             : 20 21
bloque               : 18 19 20 21 23 25
cchar                : 125
cfloat               : 124
ciclo                : 11 17
cint                 : 62 63 64 64 65 65 123
class                : 1
condicion            : 10 16
constructor          : 7 13
context              : 1 2
contexto_func        : 27
elif                 : 19 21
escritura            : 42
estatuto             : 9 15 32 34
exp                  : 78 79 80 81 82 83 84 84 85 85 86 86 87 87 88 88 89 89 92 93 101 102 103 104 105 106 107 109 110
exp_bool             : 95 96 97
exp_cond             : 94 96 97 115
expresion            : 52 56 72 75 78 81 84 87 100 102 103 104 105 106 107
factor               : 111 112 113 114
funcion              : 8 14
gotoF                : 18 19 20 21 23
lectura              : 45
llamada_func         : 43 53 57 73 76 79 82 85 88 90
objeto_aAcceso       : 48 50 75 76 77 81 82 83 87 88 89 116 117 121
objeto_metodo        : 44 54 58 74 77 80 83 86 89
param                : 25 27 37
programa             : 0
scope                : 3 4 27
termino              : 108 109 110 112 113 114
tipo_compuesto       : 61 63 65
tipo_simple          : 36 37 60 62 64
var                  : 118 119 120
vars                 : 6 12 31 33

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID class context
    (2) programa -> . PROGRAM ID context

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID class context
    (2) programa -> PROGRAM . ID context

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . class context
    (2) programa -> PROGRAM ID . context
    (3) class -> . scope CLASS ID
    (4) class -> . scope CLASS ID COLON ID
    (5) context -> . LBRACE aux6 RBRACE
    (38) scope -> . PRIVATE
    (39) scope -> . PUBLIC
    (40) scope -> . PROTECTED

    LBRACE          shift and go to state 7
    PRIVATE         shift and go to state 8
    PUBLIC          shift and go to state 9
    PROTECTED       shift and go to state 10

    class                          shift and go to state 4
    context                        shift and go to state 5
    scope                          shift and go to state 6

state 4

    (1) programa -> PROGRAM ID class . context
    (5) context -> . LBRACE aux6 RBRACE

    LBRACE          shift and go to state 7

    context                        shift and go to state 11

state 5

    (2) programa -> PROGRAM ID context .

    $end            reduce using rule 2 (programa -> PROGRAM ID context .)


state 6

    (3) class -> scope . CLASS ID
    (4) class -> scope . CLASS ID COLON ID

    CLASS           shift and go to state 12


state 7

    (5) context -> LBRACE . aux6 RBRACE
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (60) vars -> . VAR aux2 COLON tipo_simple
    (61) vars -> . VAR aux2 COLON tipo_compuesto
    (62) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (63) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (64) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (25) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (27) funcion -> . scope DEF ID LPAREN param RPAREN contexto_func
    (41) estatuto -> . asignacion
    (42) estatuto -> . escritura
    (43) estatuto -> . llamada_func
    (44) estatuto -> . objeto_metodo
    (45) estatuto -> . lectura
    (18) condicion -> . IF LPAREN gotoF RPAREN bloque
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (23) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (38) scope -> . PRIVATE
    (39) scope -> . PUBLIC
    (40) scope -> . PROTECTED
    (72) asignacion -> . ID EQUALS expresion
    (73) asignacion -> . ID EQUALS llamada_func
    (74) asignacion -> . ID EQUALS objeto_metodo
    (75) asignacion -> . objeto_aAcceso EQUALS expresion
    (76) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (77) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (78) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (79) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (80) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (81) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (83) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (84) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (87) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (88) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (51) escritura -> . PRINT LPAREN aux3 RPAREN
    (91) llamada_func -> . ID LPAREN aux RPAREN
    (90) objeto_metodo -> . ID PERIOD llamada_func
    (46) lectura -> . READ LPAREN aux4 RPAREN
    (24) aux_ciclo -> .
    (129) objeto_aAcceso -> . ID PERIOD ID

    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33
    WHILE           reduce using rule 24 (aux_ciclo -> .)

    aux6                           shift and go to state 13
    vars                           shift and go to state 14
    constructor                    shift and go to state 15
    funcion                        shift and go to state 16
    estatuto                       shift and go to state 17
    condicion                      shift and go to state 18
    ciclo                          shift and go to state 19
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    aux_ciclo                      shift and go to state 30
    objeto_aAcceso                 shift and go to state 31

state 8

    (38) scope -> PRIVATE .

    CLASS           reduce using rule 38 (scope -> PRIVATE .)
    DEF             reduce using rule 38 (scope -> PRIVATE .)


state 9

    (39) scope -> PUBLIC .

    CLASS           reduce using rule 39 (scope -> PUBLIC .)


state 10

    (40) scope -> PROTECTED .

    CLASS           reduce using rule 40 (scope -> PROTECTED .)
    DEF             reduce using rule 40 (scope -> PROTECTED .)


state 11

    (1) programa -> PROGRAM ID class context .

    $end            reduce using rule 1 (programa -> PROGRAM ID class context .)


state 12

    (3) class -> scope CLASS . ID
    (4) class -> scope CLASS . ID COLON ID

    ID              shift and go to state 34


state 13

    (5) context -> LBRACE aux6 . RBRACE

    RBRACE          shift and go to state 35


state 14

    (6) aux6 -> vars .
    (12) aux6 -> vars . aux6
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (60) vars -> . VAR aux2 COLON tipo_simple
    (61) vars -> . VAR aux2 COLON tipo_compuesto
    (62) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (63) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (64) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (25) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (27) funcion -> . scope DEF ID LPAREN param RPAREN contexto_func
    (41) estatuto -> . asignacion
    (42) estatuto -> . escritura
    (43) estatuto -> . llamada_func
    (44) estatuto -> . objeto_metodo
    (45) estatuto -> . lectura
    (18) condicion -> . IF LPAREN gotoF RPAREN bloque
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (23) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (38) scope -> . PRIVATE
    (39) scope -> . PUBLIC
    (40) scope -> . PROTECTED
    (72) asignacion -> . ID EQUALS expresion
    (73) asignacion -> . ID EQUALS llamada_func
    (74) asignacion -> . ID EQUALS objeto_metodo
    (75) asignacion -> . objeto_aAcceso EQUALS expresion
    (76) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (77) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (78) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (79) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (80) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (81) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (83) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (84) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (87) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (88) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (51) escritura -> . PRINT LPAREN aux3 RPAREN
    (91) llamada_func -> . ID LPAREN aux RPAREN
    (90) objeto_metodo -> . ID PERIOD llamada_func
    (46) lectura -> . READ LPAREN aux4 RPAREN
    (24) aux_ciclo -> .
    (129) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 6 (aux6 -> vars .)
    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33
    WHILE           reduce using rule 24 (aux_ciclo -> .)

    vars                           shift and go to state 14
    aux6                           shift and go to state 36
    constructor                    shift and go to state 15
    funcion                        shift and go to state 16
    estatuto                       shift and go to state 17
    condicion                      shift and go to state 18
    ciclo                          shift and go to state 19
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    aux_ciclo                      shift and go to state 30
    objeto_aAcceso                 shift and go to state 31

state 15

    (7) aux6 -> constructor .
    (13) aux6 -> constructor . aux6
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (60) vars -> . VAR aux2 COLON tipo_simple
    (61) vars -> . VAR aux2 COLON tipo_compuesto
    (62) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (63) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (64) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (25) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (27) funcion -> . scope DEF ID LPAREN param RPAREN contexto_func
    (41) estatuto -> . asignacion
    (42) estatuto -> . escritura
    (43) estatuto -> . llamada_func
    (44) estatuto -> . objeto_metodo
    (45) estatuto -> . lectura
    (18) condicion -> . IF LPAREN gotoF RPAREN bloque
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (23) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (38) scope -> . PRIVATE
    (39) scope -> . PUBLIC
    (40) scope -> . PROTECTED
    (72) asignacion -> . ID EQUALS expresion
    (73) asignacion -> . ID EQUALS llamada_func
    (74) asignacion -> . ID EQUALS objeto_metodo
    (75) asignacion -> . objeto_aAcceso EQUALS expresion
    (76) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (77) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (78) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (79) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (80) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (81) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (83) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (84) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (87) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (88) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (51) escritura -> . PRINT LPAREN aux3 RPAREN
    (91) llamada_func -> . ID LPAREN aux RPAREN
    (90) objeto_metodo -> . ID PERIOD llamada_func
    (46) lectura -> . READ LPAREN aux4 RPAREN
    (24) aux_ciclo -> .
    (129) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 7 (aux6 -> constructor .)
    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33
    WHILE           reduce using rule 24 (aux_ciclo -> .)

    constructor                    shift and go to state 15
    aux6                           shift and go to state 37
    vars                           shift and go to state 14
    funcion                        shift and go to state 16
    estatuto                       shift and go to state 17
    condicion                      shift and go to state 18
    ciclo                          shift and go to state 19
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    aux_ciclo                      shift and go to state 30
    objeto_aAcceso                 shift and go to state 31

state 16

    (8) aux6 -> funcion .
    (14) aux6 -> funcion . aux6
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (60) vars -> . VAR aux2 COLON tipo_simple
    (61) vars -> . VAR aux2 COLON tipo_compuesto
    (62) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (63) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (64) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (25) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (27) funcion -> . scope DEF ID LPAREN param RPAREN contexto_func
    (41) estatuto -> . asignacion
    (42) estatuto -> . escritura
    (43) estatuto -> . llamada_func
    (44) estatuto -> . objeto_metodo
    (45) estatuto -> . lectura
    (18) condicion -> . IF LPAREN gotoF RPAREN bloque
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (23) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (38) scope -> . PRIVATE
    (39) scope -> . PUBLIC
    (40) scope -> . PROTECTED
    (72) asignacion -> . ID EQUALS expresion
    (73) asignacion -> . ID EQUALS llamada_func
    (74) asignacion -> . ID EQUALS objeto_metodo
    (75) asignacion -> . objeto_aAcceso EQUALS expresion
    (76) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (77) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (78) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (79) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (80) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (81) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (83) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (84) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (87) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (88) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (51) escritura -> . PRINT LPAREN aux3 RPAREN
    (91) llamada_func -> . ID LPAREN aux RPAREN
    (90) objeto_metodo -> . ID PERIOD llamada_func
    (46) lectura -> . READ LPAREN aux4 RPAREN
    (24) aux_ciclo -> .
    (129) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 8 (aux6 -> funcion .)
    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33
    WHILE           reduce using rule 24 (aux_ciclo -> .)

    funcion                        shift and go to state 16
    aux6                           shift and go to state 38
    vars                           shift and go to state 14
    constructor                    shift and go to state 15
    estatuto                       shift and go to state 17
    condicion                      shift and go to state 18
    ciclo                          shift and go to state 19
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    aux_ciclo                      shift and go to state 30
    objeto_aAcceso                 shift and go to state 31

state 17

    (9) aux6 -> estatuto .
    (15) aux6 -> estatuto . aux6
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (60) vars -> . VAR aux2 COLON tipo_simple
    (61) vars -> . VAR aux2 COLON tipo_compuesto
    (62) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (63) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (64) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (25) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (27) funcion -> . scope DEF ID LPAREN param RPAREN contexto_func
    (41) estatuto -> . asignacion
    (42) estatuto -> . escritura
    (43) estatuto -> . llamada_func
    (44) estatuto -> . objeto_metodo
    (45) estatuto -> . lectura
    (18) condicion -> . IF LPAREN gotoF RPAREN bloque
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (23) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (38) scope -> . PRIVATE
    (39) scope -> . PUBLIC
    (40) scope -> . PROTECTED
    (72) asignacion -> . ID EQUALS expresion
    (73) asignacion -> . ID EQUALS llamada_func
    (74) asignacion -> . ID EQUALS objeto_metodo
    (75) asignacion -> . objeto_aAcceso EQUALS expresion
    (76) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (77) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (78) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (79) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (80) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (81) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (83) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (84) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (87) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (88) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (51) escritura -> . PRINT LPAREN aux3 RPAREN
    (91) llamada_func -> . ID LPAREN aux RPAREN
    (90) objeto_metodo -> . ID PERIOD llamada_func
    (46) lectura -> . READ LPAREN aux4 RPAREN
    (24) aux_ciclo -> .
    (129) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 9 (aux6 -> estatuto .)
    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33
    WHILE           reduce using rule 24 (aux_ciclo -> .)

    estatuto                       shift and go to state 17
    aux6                           shift and go to state 39
    vars                           shift and go to state 14
    constructor                    shift and go to state 15
    funcion                        shift and go to state 16
    condicion                      shift and go to state 18
    ciclo                          shift and go to state 19
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    aux_ciclo                      shift and go to state 30
    objeto_aAcceso                 shift and go to state 31

state 18

    (10) aux6 -> condicion .
    (16) aux6 -> condicion . aux6
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (60) vars -> . VAR aux2 COLON tipo_simple
    (61) vars -> . VAR aux2 COLON tipo_compuesto
    (62) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (63) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (64) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (25) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (27) funcion -> . scope DEF ID LPAREN param RPAREN contexto_func
    (41) estatuto -> . asignacion
    (42) estatuto -> . escritura
    (43) estatuto -> . llamada_func
    (44) estatuto -> . objeto_metodo
    (45) estatuto -> . lectura
    (18) condicion -> . IF LPAREN gotoF RPAREN bloque
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (23) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (38) scope -> . PRIVATE
    (39) scope -> . PUBLIC
    (40) scope -> . PROTECTED
    (72) asignacion -> . ID EQUALS expresion
    (73) asignacion -> . ID EQUALS llamada_func
    (74) asignacion -> . ID EQUALS objeto_metodo
    (75) asignacion -> . objeto_aAcceso EQUALS expresion
    (76) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (77) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (78) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (79) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (80) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (81) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (83) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (84) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (87) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (88) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (51) escritura -> . PRINT LPAREN aux3 RPAREN
    (91) llamada_func -> . ID LPAREN aux RPAREN
    (90) objeto_metodo -> . ID PERIOD llamada_func
    (46) lectura -> . READ LPAREN aux4 RPAREN
    (24) aux_ciclo -> .
    (129) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 10 (aux6 -> condicion .)
    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33
    WHILE           reduce using rule 24 (aux_ciclo -> .)

    condicion                      shift and go to state 18
    aux6                           shift and go to state 40
    vars                           shift and go to state 14
    constructor                    shift and go to state 15
    funcion                        shift and go to state 16
    estatuto                       shift and go to state 17
    ciclo                          shift and go to state 19
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    aux_ciclo                      shift and go to state 30
    objeto_aAcceso                 shift and go to state 31

state 19

    (11) aux6 -> ciclo .
    (17) aux6 -> ciclo . aux6
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (60) vars -> . VAR aux2 COLON tipo_simple
    (61) vars -> . VAR aux2 COLON tipo_compuesto
    (62) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (63) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (64) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (25) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (27) funcion -> . scope DEF ID LPAREN param RPAREN contexto_func
    (41) estatuto -> . asignacion
    (42) estatuto -> . escritura
    (43) estatuto -> . llamada_func
    (44) estatuto -> . objeto_metodo
    (45) estatuto -> . lectura
    (18) condicion -> . IF LPAREN gotoF RPAREN bloque
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (23) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (38) scope -> . PRIVATE
    (39) scope -> . PUBLIC
    (40) scope -> . PROTECTED
    (72) asignacion -> . ID EQUALS expresion
    (73) asignacion -> . ID EQUALS llamada_func
    (74) asignacion -> . ID EQUALS objeto_metodo
    (75) asignacion -> . objeto_aAcceso EQUALS expresion
    (76) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (77) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (78) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (79) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (80) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (81) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (83) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (84) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (87) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (88) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (51) escritura -> . PRINT LPAREN aux3 RPAREN
    (91) llamada_func -> . ID LPAREN aux RPAREN
    (90) objeto_metodo -> . ID PERIOD llamada_func
    (46) lectura -> . READ LPAREN aux4 RPAREN
    (24) aux_ciclo -> .
    (129) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 11 (aux6 -> ciclo .)
    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33
    WHILE           reduce using rule 24 (aux_ciclo -> .)

    ciclo                          shift and go to state 19
    aux6                           shift and go to state 41
    vars                           shift and go to state 14
    constructor                    shift and go to state 15
    funcion                        shift and go to state 16
    estatuto                       shift and go to state 17
    condicion                      shift and go to state 18
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    aux_ciclo                      shift and go to state 30
    objeto_aAcceso                 shift and go to state 31

state 20

    (60) vars -> VAR . aux2 COLON tipo_simple
    (61) vars -> VAR . aux2 COLON tipo_compuesto
    (62) vars -> VAR . ID LBRACKET cint RBRACKET COLON tipo_simple
    (63) vars -> VAR . ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (64) vars -> VAR . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> VAR . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (66) aux2 -> . ID
    (67) aux2 -> . ID COMMA aux2

    ID              shift and go to state 43

    aux2                           shift and go to state 42

state 21

    (72) asignacion -> ID . EQUALS expresion
    (73) asignacion -> ID . EQUALS llamada_func
    (74) asignacion -> ID . EQUALS objeto_metodo
    (78) asignacion -> ID . LBRACKET exp RBRACKET EQUALS expresion
    (79) asignacion -> ID . LBRACKET exp RBRACKET EQUALS llamada_func
    (80) asignacion -> ID . LBRACKET exp RBRACKET EQUALS objeto_metodo
    (84) asignacion -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (85) asignacion -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) llamada_func -> ID . LPAREN aux RPAREN
    (90) objeto_metodo -> ID . PERIOD llamada_func
    (129) objeto_aAcceso -> ID . PERIOD ID

    EQUALS          shift and go to state 44
    LBRACKET        shift and go to state 45
    LPAREN          shift and go to state 46
    PERIOD          shift and go to state 47


state 22

    (25) constructor -> PUBLIC . ID LPAREN param RPAREN bloque
    (39) scope -> PUBLIC .

    ID              shift and go to state 48
    DEF             reduce using rule 39 (scope -> PUBLIC .)


state 23

    (27) funcion -> scope . DEF ID LPAREN param RPAREN contexto_func

    DEF             shift and go to state 49


state 24

    (41) estatuto -> asignacion .

    VAR             reduce using rule 41 (estatuto -> asignacion .)
    PUBLIC          reduce using rule 41 (estatuto -> asignacion .)
    IF              reduce using rule 41 (estatuto -> asignacion .)
    PRIVATE         reduce using rule 41 (estatuto -> asignacion .)
    PROTECTED       reduce using rule 41 (estatuto -> asignacion .)
    ID              reduce using rule 41 (estatuto -> asignacion .)
    PRINT           reduce using rule 41 (estatuto -> asignacion .)
    READ            reduce using rule 41 (estatuto -> asignacion .)
    WHILE           reduce using rule 41 (estatuto -> asignacion .)
    RBRACE          reduce using rule 41 (estatuto -> asignacion .)
    RETURN          reduce using rule 41 (estatuto -> asignacion .)


state 25

    (42) estatuto -> escritura .

    VAR             reduce using rule 42 (estatuto -> escritura .)
    PUBLIC          reduce using rule 42 (estatuto -> escritura .)
    IF              reduce using rule 42 (estatuto -> escritura .)
    PRIVATE         reduce using rule 42 (estatuto -> escritura .)
    PROTECTED       reduce using rule 42 (estatuto -> escritura .)
    ID              reduce using rule 42 (estatuto -> escritura .)
    PRINT           reduce using rule 42 (estatuto -> escritura .)
    READ            reduce using rule 42 (estatuto -> escritura .)
    WHILE           reduce using rule 42 (estatuto -> escritura .)
    RBRACE          reduce using rule 42 (estatuto -> escritura .)
    RETURN          reduce using rule 42 (estatuto -> escritura .)


state 26

    (43) estatuto -> llamada_func .

    VAR             reduce using rule 43 (estatuto -> llamada_func .)
    PUBLIC          reduce using rule 43 (estatuto -> llamada_func .)
    IF              reduce using rule 43 (estatuto -> llamada_func .)
    PRIVATE         reduce using rule 43 (estatuto -> llamada_func .)
    PROTECTED       reduce using rule 43 (estatuto -> llamada_func .)
    ID              reduce using rule 43 (estatuto -> llamada_func .)
    PRINT           reduce using rule 43 (estatuto -> llamada_func .)
    READ            reduce using rule 43 (estatuto -> llamada_func .)
    WHILE           reduce using rule 43 (estatuto -> llamada_func .)
    RBRACE          reduce using rule 43 (estatuto -> llamada_func .)
    RETURN          reduce using rule 43 (estatuto -> llamada_func .)


state 27

    (44) estatuto -> objeto_metodo .

    VAR             reduce using rule 44 (estatuto -> objeto_metodo .)
    PUBLIC          reduce using rule 44 (estatuto -> objeto_metodo .)
    IF              reduce using rule 44 (estatuto -> objeto_metodo .)
    PRIVATE         reduce using rule 44 (estatuto -> objeto_metodo .)
    PROTECTED       reduce using rule 44 (estatuto -> objeto_metodo .)
    ID              reduce using rule 44 (estatuto -> objeto_metodo .)
    PRINT           reduce using rule 44 (estatuto -> objeto_metodo .)
    READ            reduce using rule 44 (estatuto -> objeto_metodo .)
    WHILE           reduce using rule 44 (estatuto -> objeto_metodo .)
    RBRACE          reduce using rule 44 (estatuto -> objeto_metodo .)
    RETURN          reduce using rule 44 (estatuto -> objeto_metodo .)


state 28

    (45) estatuto -> lectura .

    VAR             reduce using rule 45 (estatuto -> lectura .)
    PUBLIC          reduce using rule 45 (estatuto -> lectura .)
    IF              reduce using rule 45 (estatuto -> lectura .)
    PRIVATE         reduce using rule 45 (estatuto -> lectura .)
    PROTECTED       reduce using rule 45 (estatuto -> lectura .)
    ID              reduce using rule 45 (estatuto -> lectura .)
    PRINT           reduce using rule 45 (estatuto -> lectura .)
    READ            reduce using rule 45 (estatuto -> lectura .)
    WHILE           reduce using rule 45 (estatuto -> lectura .)
    RBRACE          reduce using rule 45 (estatuto -> lectura .)
    RETURN          reduce using rule 45 (estatuto -> lectura .)


state 29

    (18) condicion -> IF . LPAREN gotoF RPAREN bloque
    (19) condicion -> IF . LPAREN gotoF RPAREN bloque elif

    LPAREN          shift and go to state 50


state 30

    (23) ciclo -> aux_ciclo . WHILE LPAREN gotoF RPAREN bloque

    WHILE           shift and go to state 51


state 31

    (75) asignacion -> objeto_aAcceso . EQUALS expresion
    (76) asignacion -> objeto_aAcceso . EQUALS llamada_func
    (77) asignacion -> objeto_aAcceso . EQUALS objeto_metodo
    (81) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET EQUALS expresion
    (82) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET EQUALS llamada_func
    (83) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET EQUALS objeto_metodo
    (87) asignacion -> objeto_aAcceso . LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (88) asignacion -> objeto_aAcceso . LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> objeto_aAcceso . LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo

    EQUALS          shift and go to state 52
    LBRACKET        shift and go to state 53


state 32

    (51) escritura -> PRINT . LPAREN aux3 RPAREN

    LPAREN          shift and go to state 54


state 33

    (46) lectura -> READ . LPAREN aux4 RPAREN

    LPAREN          shift and go to state 55


state 34

    (3) class -> scope CLASS ID .
    (4) class -> scope CLASS ID . COLON ID

    LBRACE          reduce using rule 3 (class -> scope CLASS ID .)
    COLON           shift and go to state 56


state 35

    (5) context -> LBRACE aux6 RBRACE .

    $end            reduce using rule 5 (context -> LBRACE aux6 RBRACE .)


state 36

    (12) aux6 -> vars aux6 .

    RBRACE          reduce using rule 12 (aux6 -> vars aux6 .)


state 37

    (13) aux6 -> constructor aux6 .

    RBRACE          reduce using rule 13 (aux6 -> constructor aux6 .)


state 38

    (14) aux6 -> funcion aux6 .

    RBRACE          reduce using rule 14 (aux6 -> funcion aux6 .)


state 39

    (15) aux6 -> estatuto aux6 .

    RBRACE          reduce using rule 15 (aux6 -> estatuto aux6 .)


state 40

    (16) aux6 -> condicion aux6 .

    RBRACE          reduce using rule 16 (aux6 -> condicion aux6 .)


state 41

    (17) aux6 -> ciclo aux6 .

    RBRACE          reduce using rule 17 (aux6 -> ciclo aux6 .)


state 42

    (60) vars -> VAR aux2 . COLON tipo_simple
    (61) vars -> VAR aux2 . COLON tipo_compuesto

    COLON           shift and go to state 57


state 43

    (62) vars -> VAR ID . LBRACKET cint RBRACKET COLON tipo_simple
    (63) vars -> VAR ID . LBRACKET cint RBRACKET COLON tipo_compuesto
    (64) vars -> VAR ID . LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> VAR ID . LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (66) aux2 -> ID .
    (67) aux2 -> ID . COMMA aux2

    LBRACKET        shift and go to state 58
    COLON           reduce using rule 66 (aux2 -> ID .)
    COMMA           shift and go to state 59


state 44

    (72) asignacion -> ID EQUALS . expresion
    (73) asignacion -> ID EQUALS . llamada_func
    (74) asignacion -> ID EQUALS . objeto_metodo
    (101) expresion -> . exp
    (102) expresion -> . exp LT expresion
    (103) expresion -> . exp GT expresion
    (104) expresion -> . exp GE expresion
    (105) expresion -> . exp LE expresion
    (106) expresion -> . exp EQ expresion
    (107) expresion -> . exp NE expresion
    (91) llamada_func -> . ID LPAREN aux RPAREN
    (90) objeto_metodo -> . ID PERIOD llamada_func
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    ID              shift and go to state 60
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    expresion                      shift and go to state 61
    llamada_func                   shift and go to state 62
    objeto_metodo                  shift and go to state 63
    exp                            shift and go to state 64
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 45

    (78) asignacion -> ID LBRACKET . exp RBRACKET EQUALS expresion
    (79) asignacion -> ID LBRACKET . exp RBRACKET EQUALS llamada_func
    (80) asignacion -> ID LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (84) asignacion -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (85) asignacion -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              shift and go to state 78
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    exp                            shift and go to state 79
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 46

    (91) llamada_func -> ID LPAREN . aux RPAREN
    (92) aux -> . exp
    (93) aux -> . exp COMMA aux
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              shift and go to state 78
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    aux                            shift and go to state 80
    exp                            shift and go to state 81
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 47

    (90) objeto_metodo -> ID PERIOD . llamada_func
    (129) objeto_aAcceso -> ID PERIOD . ID
    (91) llamada_func -> . ID LPAREN aux RPAREN

    ID              shift and go to state 82

    llamada_func                   shift and go to state 83

state 48

    (25) constructor -> PUBLIC ID . LPAREN param RPAREN bloque

    LPAREN          shift and go to state 84


state 49

    (27) funcion -> scope DEF . ID LPAREN param RPAREN contexto_func

    ID              shift and go to state 85


state 50

    (18) condicion -> IF LPAREN . gotoF RPAREN bloque
    (19) condicion -> IF LPAREN . gotoF RPAREN bloque elif
    (94) gotoF -> . exp_cond
    (95) exp_cond -> . exp_bool
    (96) exp_cond -> . exp_bool AND exp_cond
    (97) exp_cond -> . exp_bool OR exp_cond
    (98) exp_bool -> . TRUE
    (99) exp_bool -> . FALSE
    (100) exp_bool -> . expresion
    (101) expresion -> . exp
    (102) expresion -> . exp LT expresion
    (103) expresion -> . exp GT expresion
    (104) expresion -> . exp GE expresion
    (105) expresion -> . exp LE expresion
    (106) expresion -> . exp EQ expresion
    (107) expresion -> . exp NE expresion
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              shift and go to state 78
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    gotoF                          shift and go to state 86
    exp_cond                       shift and go to state 87
    exp_bool                       shift and go to state 88
    expresion                      shift and go to state 91
    exp                            shift and go to state 64
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 51

    (23) ciclo -> aux_ciclo WHILE . LPAREN gotoF RPAREN bloque

    LPAREN          shift and go to state 92


state 52

    (75) asignacion -> objeto_aAcceso EQUALS . expresion
    (76) asignacion -> objeto_aAcceso EQUALS . llamada_func
    (77) asignacion -> objeto_aAcceso EQUALS . objeto_metodo
    (101) expresion -> . exp
    (102) expresion -> . exp LT expresion
    (103) expresion -> . exp GT expresion
    (104) expresion -> . exp GE expresion
    (105) expresion -> . exp LE expresion
    (106) expresion -> . exp EQ expresion
    (107) expresion -> . exp NE expresion
    (91) llamada_func -> . ID LPAREN aux RPAREN
    (90) objeto_metodo -> . ID PERIOD llamada_func
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    ID              shift and go to state 60
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    objeto_aAcceso                 shift and go to state 70
    expresion                      shift and go to state 93
    llamada_func                   shift and go to state 94
    objeto_metodo                  shift and go to state 95
    exp                            shift and go to state 64
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 53

    (81) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET EQUALS expresion
    (82) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET EQUALS llamada_func
    (83) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (87) asignacion -> objeto_aAcceso LBRACKET . LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (88) asignacion -> objeto_aAcceso LBRACKET . LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> objeto_aAcceso LBRACKET . LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    LBRACKET        shift and go to state 96
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              shift and go to state 78
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    objeto_aAcceso                 shift and go to state 70
    exp                            shift and go to state 97
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 54

    (51) escritura -> PRINT LPAREN . aux3 RPAREN
    (52) aux3 -> . expresion
    (53) aux3 -> . llamada_func
    (54) aux3 -> . objeto_metodo
    (55) aux3 -> . CSTRING
    (56) aux3 -> . expresion COMMA aux3
    (57) aux3 -> . llamada_func COMMA aux3
    (58) aux3 -> . objeto_metodo COMMA aux3
    (59) aux3 -> . CSTRING COMMA aux3
    (101) expresion -> . exp
    (102) expresion -> . exp LT expresion
    (103) expresion -> . exp GT expresion
    (104) expresion -> . exp GE expresion
    (105) expresion -> . exp LE expresion
    (106) expresion -> . exp EQ expresion
    (107) expresion -> . exp NE expresion
    (91) llamada_func -> . ID LPAREN aux RPAREN
    (90) objeto_metodo -> . ID PERIOD llamada_func
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    CSTRING         shift and go to state 102
    ID              shift and go to state 60
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    aux3                           shift and go to state 98
    expresion                      shift and go to state 99
    llamada_func                   shift and go to state 100
    objeto_metodo                  shift and go to state 101
    exp                            shift and go to state 64
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 55

    (46) lectura -> READ LPAREN . aux4 RPAREN
    (47) aux4 -> . ID
    (48) aux4 -> . objeto_aAcceso
    (49) aux4 -> . ID COMMA aux4
    (50) aux4 -> . objeto_aAcceso COMMA aux4
    (129) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 104

    aux4                           shift and go to state 103
    objeto_aAcceso                 shift and go to state 105

state 56

    (4) class -> scope CLASS ID COLON . ID

    ID              shift and go to state 106


state 57

    (60) vars -> VAR aux2 COLON . tipo_simple
    (61) vars -> VAR aux2 COLON . tipo_compuesto
    (68) tipo_simple -> . INT
    (69) tipo_simple -> . FLOAT
    (70) tipo_simple -> . CHAR
    (71) tipo_compuesto -> . ID

    INT             shift and go to state 109
    FLOAT           shift and go to state 110
    CHAR            shift and go to state 111
    ID              shift and go to state 112

    tipo_simple                    shift and go to state 107
    tipo_compuesto                 shift and go to state 108

state 58

    (62) vars -> VAR ID LBRACKET . cint RBRACKET COLON tipo_simple
    (63) vars -> VAR ID LBRACKET . cint RBRACKET COLON tipo_compuesto
    (64) vars -> VAR ID LBRACKET . cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> VAR ID LBRACKET . cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (126) cint -> . CINT

    CINT            shift and go to state 75

    cint                           shift and go to state 113

state 59

    (67) aux2 -> ID COMMA . aux2
    (66) aux2 -> . ID
    (67) aux2 -> . ID COMMA aux2

    ID              shift and go to state 114

    aux2                           shift and go to state 115

state 60

    (91) llamada_func -> ID . LPAREN aux RPAREN
    (90) objeto_metodo -> ID . PERIOD llamada_func
    (122) var -> ID .
    (129) objeto_aAcceso -> ID . PERIOD ID

    LPAREN          shift and go to state 46
    PERIOD          shift and go to state 47
    TIMES           reduce using rule 122 (var -> ID .)
    DIVIDE          reduce using rule 122 (var -> ID .)
    MODULO          reduce using rule 122 (var -> ID .)
    LT              reduce using rule 122 (var -> ID .)
    GT              reduce using rule 122 (var -> ID .)
    GE              reduce using rule 122 (var -> ID .)
    LE              reduce using rule 122 (var -> ID .)
    EQ              reduce using rule 122 (var -> ID .)
    NE              reduce using rule 122 (var -> ID .)
    PLUS            reduce using rule 122 (var -> ID .)
    MINUS           reduce using rule 122 (var -> ID .)
    VAR             reduce using rule 122 (var -> ID .)
    PUBLIC          reduce using rule 122 (var -> ID .)
    IF              reduce using rule 122 (var -> ID .)
    PRIVATE         reduce using rule 122 (var -> ID .)
    PROTECTED       reduce using rule 122 (var -> ID .)
    ID              reduce using rule 122 (var -> ID .)
    PRINT           reduce using rule 122 (var -> ID .)
    READ            reduce using rule 122 (var -> ID .)
    WHILE           reduce using rule 122 (var -> ID .)
    RBRACE          reduce using rule 122 (var -> ID .)
    RETURN          reduce using rule 122 (var -> ID .)
    COMMA           reduce using rule 122 (var -> ID .)
    RPAREN          reduce using rule 122 (var -> ID .)


state 61

    (72) asignacion -> ID EQUALS expresion .

    VAR             reduce using rule 72 (asignacion -> ID EQUALS expresion .)
    PUBLIC          reduce using rule 72 (asignacion -> ID EQUALS expresion .)
    IF              reduce using rule 72 (asignacion -> ID EQUALS expresion .)
    PRIVATE         reduce using rule 72 (asignacion -> ID EQUALS expresion .)
    PROTECTED       reduce using rule 72 (asignacion -> ID EQUALS expresion .)
    ID              reduce using rule 72 (asignacion -> ID EQUALS expresion .)
    PRINT           reduce using rule 72 (asignacion -> ID EQUALS expresion .)
    READ            reduce using rule 72 (asignacion -> ID EQUALS expresion .)
    WHILE           reduce using rule 72 (asignacion -> ID EQUALS expresion .)
    RBRACE          reduce using rule 72 (asignacion -> ID EQUALS expresion .)
    RETURN          reduce using rule 72 (asignacion -> ID EQUALS expresion .)


state 62

    (73) asignacion -> ID EQUALS llamada_func .

    VAR             reduce using rule 73 (asignacion -> ID EQUALS llamada_func .)
    PUBLIC          reduce using rule 73 (asignacion -> ID EQUALS llamada_func .)
    IF              reduce using rule 73 (asignacion -> ID EQUALS llamada_func .)
    PRIVATE         reduce using rule 73 (asignacion -> ID EQUALS llamada_func .)
    PROTECTED       reduce using rule 73 (asignacion -> ID EQUALS llamada_func .)
    ID              reduce using rule 73 (asignacion -> ID EQUALS llamada_func .)
    PRINT           reduce using rule 73 (asignacion -> ID EQUALS llamada_func .)
    READ            reduce using rule 73 (asignacion -> ID EQUALS llamada_func .)
    WHILE           reduce using rule 73 (asignacion -> ID EQUALS llamada_func .)
    RBRACE          reduce using rule 73 (asignacion -> ID EQUALS llamada_func .)
    RETURN          reduce using rule 73 (asignacion -> ID EQUALS llamada_func .)


state 63

    (74) asignacion -> ID EQUALS objeto_metodo .

    VAR             reduce using rule 74 (asignacion -> ID EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 74 (asignacion -> ID EQUALS objeto_metodo .)
    IF              reduce using rule 74 (asignacion -> ID EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 74 (asignacion -> ID EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 74 (asignacion -> ID EQUALS objeto_metodo .)
    ID              reduce using rule 74 (asignacion -> ID EQUALS objeto_metodo .)
    PRINT           reduce using rule 74 (asignacion -> ID EQUALS objeto_metodo .)
    READ            reduce using rule 74 (asignacion -> ID EQUALS objeto_metodo .)
    WHILE           reduce using rule 74 (asignacion -> ID EQUALS objeto_metodo .)
    RBRACE          reduce using rule 74 (asignacion -> ID EQUALS objeto_metodo .)
    RETURN          reduce using rule 74 (asignacion -> ID EQUALS objeto_metodo .)


state 64

    (101) expresion -> exp .
    (102) expresion -> exp . LT expresion
    (103) expresion -> exp . GT expresion
    (104) expresion -> exp . GE expresion
    (105) expresion -> exp . LE expresion
    (106) expresion -> exp . EQ expresion
    (107) expresion -> exp . NE expresion
    (109) exp -> exp . PLUS termino
    (110) exp -> exp . MINUS termino

    VAR             reduce using rule 101 (expresion -> exp .)
    PUBLIC          reduce using rule 101 (expresion -> exp .)
    IF              reduce using rule 101 (expresion -> exp .)
    PRIVATE         reduce using rule 101 (expresion -> exp .)
    PROTECTED       reduce using rule 101 (expresion -> exp .)
    ID              reduce using rule 101 (expresion -> exp .)
    PRINT           reduce using rule 101 (expresion -> exp .)
    READ            reduce using rule 101 (expresion -> exp .)
    WHILE           reduce using rule 101 (expresion -> exp .)
    RBRACE          reduce using rule 101 (expresion -> exp .)
    RETURN          reduce using rule 101 (expresion -> exp .)
    AND             reduce using rule 101 (expresion -> exp .)
    OR              reduce using rule 101 (expresion -> exp .)
    RPAREN          reduce using rule 101 (expresion -> exp .)
    COMMA           reduce using rule 101 (expresion -> exp .)
    LT              shift and go to state 116
    GT              shift and go to state 117
    GE              shift and go to state 118
    LE              shift and go to state 119
    EQ              shift and go to state 120
    NE              shift and go to state 121
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123


state 65

    (115) factor -> LPAREN . exp_cond RPAREN
    (95) exp_cond -> . exp_bool
    (96) exp_cond -> . exp_bool AND exp_cond
    (97) exp_cond -> . exp_bool OR exp_cond
    (98) exp_bool -> . TRUE
    (99) exp_bool -> . FALSE
    (100) exp_bool -> . expresion
    (101) expresion -> . exp
    (102) expresion -> . exp LT expresion
    (103) expresion -> . exp GT expresion
    (104) expresion -> . exp GE expresion
    (105) expresion -> . exp LE expresion
    (106) expresion -> . exp EQ expresion
    (107) expresion -> . exp NE expresion
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              shift and go to state 78
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    exp_cond                       shift and go to state 124
    exp_bool                       shift and go to state 88
    expresion                      shift and go to state 91
    exp                            shift and go to state 64
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 66

    (108) exp -> termino .
    (112) termino -> termino . TIMES factor
    (113) termino -> termino . DIVIDE factor
    (114) termino -> termino . MODULO factor

    LT              reduce using rule 108 (exp -> termino .)
    GT              reduce using rule 108 (exp -> termino .)
    GE              reduce using rule 108 (exp -> termino .)
    LE              reduce using rule 108 (exp -> termino .)
    EQ              reduce using rule 108 (exp -> termino .)
    NE              reduce using rule 108 (exp -> termino .)
    PLUS            reduce using rule 108 (exp -> termino .)
    MINUS           reduce using rule 108 (exp -> termino .)
    VAR             reduce using rule 108 (exp -> termino .)
    PUBLIC          reduce using rule 108 (exp -> termino .)
    IF              reduce using rule 108 (exp -> termino .)
    PRIVATE         reduce using rule 108 (exp -> termino .)
    PROTECTED       reduce using rule 108 (exp -> termino .)
    ID              reduce using rule 108 (exp -> termino .)
    PRINT           reduce using rule 108 (exp -> termino .)
    READ            reduce using rule 108 (exp -> termino .)
    WHILE           reduce using rule 108 (exp -> termino .)
    RBRACE          reduce using rule 108 (exp -> termino .)
    RETURN          reduce using rule 108 (exp -> termino .)
    RBRACKET        reduce using rule 108 (exp -> termino .)
    COMMA           reduce using rule 108 (exp -> termino .)
    RPAREN          reduce using rule 108 (exp -> termino .)
    AND             reduce using rule 108 (exp -> termino .)
    OR              reduce using rule 108 (exp -> termino .)
    TIMES           shift and go to state 125
    DIVIDE          shift and go to state 126
    MODULO          shift and go to state 127


state 67

    (116) factor -> PLUS . objeto_aAcceso
    (118) factor -> PLUS . var
    (129) objeto_aAcceso -> . ID PERIOD ID
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    ID              shift and go to state 130
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    objeto_aAcceso                 shift and go to state 128
    var                            shift and go to state 129
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 68

    (117) factor -> MINUS . objeto_aAcceso
    (119) factor -> MINUS . var
    (129) objeto_aAcceso -> . ID PERIOD ID
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    ID              shift and go to state 130
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    objeto_aAcceso                 shift and go to state 131
    var                            shift and go to state 132
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 69

    (111) termino -> factor .

    TIMES           reduce using rule 111 (termino -> factor .)
    DIVIDE          reduce using rule 111 (termino -> factor .)
    MODULO          reduce using rule 111 (termino -> factor .)
    LT              reduce using rule 111 (termino -> factor .)
    GT              reduce using rule 111 (termino -> factor .)
    GE              reduce using rule 111 (termino -> factor .)
    LE              reduce using rule 111 (termino -> factor .)
    EQ              reduce using rule 111 (termino -> factor .)
    NE              reduce using rule 111 (termino -> factor .)
    PLUS            reduce using rule 111 (termino -> factor .)
    MINUS           reduce using rule 111 (termino -> factor .)
    VAR             reduce using rule 111 (termino -> factor .)
    PUBLIC          reduce using rule 111 (termino -> factor .)
    IF              reduce using rule 111 (termino -> factor .)
    PRIVATE         reduce using rule 111 (termino -> factor .)
    PROTECTED       reduce using rule 111 (termino -> factor .)
    ID              reduce using rule 111 (termino -> factor .)
    PRINT           reduce using rule 111 (termino -> factor .)
    READ            reduce using rule 111 (termino -> factor .)
    WHILE           reduce using rule 111 (termino -> factor .)
    RBRACE          reduce using rule 111 (termino -> factor .)
    RETURN          reduce using rule 111 (termino -> factor .)
    RBRACKET        reduce using rule 111 (termino -> factor .)
    COMMA           reduce using rule 111 (termino -> factor .)
    RPAREN          reduce using rule 111 (termino -> factor .)
    AND             reduce using rule 111 (termino -> factor .)
    OR              reduce using rule 111 (termino -> factor .)


state 70

    (121) factor -> objeto_aAcceso .

    TIMES           reduce using rule 121 (factor -> objeto_aAcceso .)
    DIVIDE          reduce using rule 121 (factor -> objeto_aAcceso .)
    MODULO          reduce using rule 121 (factor -> objeto_aAcceso .)
    LT              reduce using rule 121 (factor -> objeto_aAcceso .)
    GT              reduce using rule 121 (factor -> objeto_aAcceso .)
    GE              reduce using rule 121 (factor -> objeto_aAcceso .)
    LE              reduce using rule 121 (factor -> objeto_aAcceso .)
    EQ              reduce using rule 121 (factor -> objeto_aAcceso .)
    NE              reduce using rule 121 (factor -> objeto_aAcceso .)
    PLUS            reduce using rule 121 (factor -> objeto_aAcceso .)
    MINUS           reduce using rule 121 (factor -> objeto_aAcceso .)
    VAR             reduce using rule 121 (factor -> objeto_aAcceso .)
    PUBLIC          reduce using rule 121 (factor -> objeto_aAcceso .)
    IF              reduce using rule 121 (factor -> objeto_aAcceso .)
    PRIVATE         reduce using rule 121 (factor -> objeto_aAcceso .)
    PROTECTED       reduce using rule 121 (factor -> objeto_aAcceso .)
    ID              reduce using rule 121 (factor -> objeto_aAcceso .)
    PRINT           reduce using rule 121 (factor -> objeto_aAcceso .)
    READ            reduce using rule 121 (factor -> objeto_aAcceso .)
    WHILE           reduce using rule 121 (factor -> objeto_aAcceso .)
    RBRACE          reduce using rule 121 (factor -> objeto_aAcceso .)
    RETURN          reduce using rule 121 (factor -> objeto_aAcceso .)
    RBRACKET        reduce using rule 121 (factor -> objeto_aAcceso .)
    COMMA           reduce using rule 121 (factor -> objeto_aAcceso .)
    RPAREN          reduce using rule 121 (factor -> objeto_aAcceso .)
    AND             reduce using rule 121 (factor -> objeto_aAcceso .)
    OR              reduce using rule 121 (factor -> objeto_aAcceso .)


state 71

    (120) factor -> var .

    TIMES           reduce using rule 120 (factor -> var .)
    DIVIDE          reduce using rule 120 (factor -> var .)
    MODULO          reduce using rule 120 (factor -> var .)
    LT              reduce using rule 120 (factor -> var .)
    GT              reduce using rule 120 (factor -> var .)
    GE              reduce using rule 120 (factor -> var .)
    LE              reduce using rule 120 (factor -> var .)
    EQ              reduce using rule 120 (factor -> var .)
    NE              reduce using rule 120 (factor -> var .)
    PLUS            reduce using rule 120 (factor -> var .)
    MINUS           reduce using rule 120 (factor -> var .)
    VAR             reduce using rule 120 (factor -> var .)
    PUBLIC          reduce using rule 120 (factor -> var .)
    IF              reduce using rule 120 (factor -> var .)
    PRIVATE         reduce using rule 120 (factor -> var .)
    PROTECTED       reduce using rule 120 (factor -> var .)
    ID              reduce using rule 120 (factor -> var .)
    PRINT           reduce using rule 120 (factor -> var .)
    READ            reduce using rule 120 (factor -> var .)
    WHILE           reduce using rule 120 (factor -> var .)
    RBRACE          reduce using rule 120 (factor -> var .)
    RETURN          reduce using rule 120 (factor -> var .)
    RBRACKET        reduce using rule 120 (factor -> var .)
    COMMA           reduce using rule 120 (factor -> var .)
    RPAREN          reduce using rule 120 (factor -> var .)
    AND             reduce using rule 120 (factor -> var .)
    OR              reduce using rule 120 (factor -> var .)


state 72

    (123) var -> cint .

    TIMES           reduce using rule 123 (var -> cint .)
    DIVIDE          reduce using rule 123 (var -> cint .)
    MODULO          reduce using rule 123 (var -> cint .)
    LT              reduce using rule 123 (var -> cint .)
    GT              reduce using rule 123 (var -> cint .)
    GE              reduce using rule 123 (var -> cint .)
    LE              reduce using rule 123 (var -> cint .)
    EQ              reduce using rule 123 (var -> cint .)
    NE              reduce using rule 123 (var -> cint .)
    PLUS            reduce using rule 123 (var -> cint .)
    MINUS           reduce using rule 123 (var -> cint .)
    VAR             reduce using rule 123 (var -> cint .)
    PUBLIC          reduce using rule 123 (var -> cint .)
    IF              reduce using rule 123 (var -> cint .)
    PRIVATE         reduce using rule 123 (var -> cint .)
    PROTECTED       reduce using rule 123 (var -> cint .)
    ID              reduce using rule 123 (var -> cint .)
    PRINT           reduce using rule 123 (var -> cint .)
    READ            reduce using rule 123 (var -> cint .)
    WHILE           reduce using rule 123 (var -> cint .)
    RBRACE          reduce using rule 123 (var -> cint .)
    RETURN          reduce using rule 123 (var -> cint .)
    RBRACKET        reduce using rule 123 (var -> cint .)
    COMMA           reduce using rule 123 (var -> cint .)
    RPAREN          reduce using rule 123 (var -> cint .)
    AND             reduce using rule 123 (var -> cint .)
    OR              reduce using rule 123 (var -> cint .)


state 73

    (124) var -> cfloat .

    TIMES           reduce using rule 124 (var -> cfloat .)
    DIVIDE          reduce using rule 124 (var -> cfloat .)
    MODULO          reduce using rule 124 (var -> cfloat .)
    LT              reduce using rule 124 (var -> cfloat .)
    GT              reduce using rule 124 (var -> cfloat .)
    GE              reduce using rule 124 (var -> cfloat .)
    LE              reduce using rule 124 (var -> cfloat .)
    EQ              reduce using rule 124 (var -> cfloat .)
    NE              reduce using rule 124 (var -> cfloat .)
    PLUS            reduce using rule 124 (var -> cfloat .)
    MINUS           reduce using rule 124 (var -> cfloat .)
    VAR             reduce using rule 124 (var -> cfloat .)
    PUBLIC          reduce using rule 124 (var -> cfloat .)
    IF              reduce using rule 124 (var -> cfloat .)
    PRIVATE         reduce using rule 124 (var -> cfloat .)
    PROTECTED       reduce using rule 124 (var -> cfloat .)
    ID              reduce using rule 124 (var -> cfloat .)
    PRINT           reduce using rule 124 (var -> cfloat .)
    READ            reduce using rule 124 (var -> cfloat .)
    WHILE           reduce using rule 124 (var -> cfloat .)
    RBRACE          reduce using rule 124 (var -> cfloat .)
    RETURN          reduce using rule 124 (var -> cfloat .)
    RBRACKET        reduce using rule 124 (var -> cfloat .)
    COMMA           reduce using rule 124 (var -> cfloat .)
    RPAREN          reduce using rule 124 (var -> cfloat .)
    AND             reduce using rule 124 (var -> cfloat .)
    OR              reduce using rule 124 (var -> cfloat .)


state 74

    (125) var -> cchar .

    TIMES           reduce using rule 125 (var -> cchar .)
    DIVIDE          reduce using rule 125 (var -> cchar .)
    MODULO          reduce using rule 125 (var -> cchar .)
    LT              reduce using rule 125 (var -> cchar .)
    GT              reduce using rule 125 (var -> cchar .)
    GE              reduce using rule 125 (var -> cchar .)
    LE              reduce using rule 125 (var -> cchar .)
    EQ              reduce using rule 125 (var -> cchar .)
    NE              reduce using rule 125 (var -> cchar .)
    PLUS            reduce using rule 125 (var -> cchar .)
    MINUS           reduce using rule 125 (var -> cchar .)
    VAR             reduce using rule 125 (var -> cchar .)
    PUBLIC          reduce using rule 125 (var -> cchar .)
    IF              reduce using rule 125 (var -> cchar .)
    PRIVATE         reduce using rule 125 (var -> cchar .)
    PROTECTED       reduce using rule 125 (var -> cchar .)
    ID              reduce using rule 125 (var -> cchar .)
    PRINT           reduce using rule 125 (var -> cchar .)
    READ            reduce using rule 125 (var -> cchar .)
    WHILE           reduce using rule 125 (var -> cchar .)
    RBRACE          reduce using rule 125 (var -> cchar .)
    RETURN          reduce using rule 125 (var -> cchar .)
    RBRACKET        reduce using rule 125 (var -> cchar .)
    COMMA           reduce using rule 125 (var -> cchar .)
    RPAREN          reduce using rule 125 (var -> cchar .)
    AND             reduce using rule 125 (var -> cchar .)
    OR              reduce using rule 125 (var -> cchar .)


state 75

    (126) cint -> CINT .

    TIMES           reduce using rule 126 (cint -> CINT .)
    DIVIDE          reduce using rule 126 (cint -> CINT .)
    MODULO          reduce using rule 126 (cint -> CINT .)
    LT              reduce using rule 126 (cint -> CINT .)
    GT              reduce using rule 126 (cint -> CINT .)
    GE              reduce using rule 126 (cint -> CINT .)
    LE              reduce using rule 126 (cint -> CINT .)
    EQ              reduce using rule 126 (cint -> CINT .)
    NE              reduce using rule 126 (cint -> CINT .)
    PLUS            reduce using rule 126 (cint -> CINT .)
    MINUS           reduce using rule 126 (cint -> CINT .)
    VAR             reduce using rule 126 (cint -> CINT .)
    PUBLIC          reduce using rule 126 (cint -> CINT .)
    IF              reduce using rule 126 (cint -> CINT .)
    PRIVATE         reduce using rule 126 (cint -> CINT .)
    PROTECTED       reduce using rule 126 (cint -> CINT .)
    ID              reduce using rule 126 (cint -> CINT .)
    PRINT           reduce using rule 126 (cint -> CINT .)
    READ            reduce using rule 126 (cint -> CINT .)
    WHILE           reduce using rule 126 (cint -> CINT .)
    RBRACE          reduce using rule 126 (cint -> CINT .)
    RETURN          reduce using rule 126 (cint -> CINT .)
    RBRACKET        reduce using rule 126 (cint -> CINT .)
    COMMA           reduce using rule 126 (cint -> CINT .)
    RPAREN          reduce using rule 126 (cint -> CINT .)
    AND             reduce using rule 126 (cint -> CINT .)
    OR              reduce using rule 126 (cint -> CINT .)


state 76

    (127) cfloat -> NUMBER .

    TIMES           reduce using rule 127 (cfloat -> NUMBER .)
    DIVIDE          reduce using rule 127 (cfloat -> NUMBER .)
    MODULO          reduce using rule 127 (cfloat -> NUMBER .)
    LT              reduce using rule 127 (cfloat -> NUMBER .)
    GT              reduce using rule 127 (cfloat -> NUMBER .)
    GE              reduce using rule 127 (cfloat -> NUMBER .)
    LE              reduce using rule 127 (cfloat -> NUMBER .)
    EQ              reduce using rule 127 (cfloat -> NUMBER .)
    NE              reduce using rule 127 (cfloat -> NUMBER .)
    PLUS            reduce using rule 127 (cfloat -> NUMBER .)
    MINUS           reduce using rule 127 (cfloat -> NUMBER .)
    VAR             reduce using rule 127 (cfloat -> NUMBER .)
    PUBLIC          reduce using rule 127 (cfloat -> NUMBER .)
    IF              reduce using rule 127 (cfloat -> NUMBER .)
    PRIVATE         reduce using rule 127 (cfloat -> NUMBER .)
    PROTECTED       reduce using rule 127 (cfloat -> NUMBER .)
    ID              reduce using rule 127 (cfloat -> NUMBER .)
    PRINT           reduce using rule 127 (cfloat -> NUMBER .)
    READ            reduce using rule 127 (cfloat -> NUMBER .)
    WHILE           reduce using rule 127 (cfloat -> NUMBER .)
    RBRACE          reduce using rule 127 (cfloat -> NUMBER .)
    RETURN          reduce using rule 127 (cfloat -> NUMBER .)
    RBRACKET        reduce using rule 127 (cfloat -> NUMBER .)
    COMMA           reduce using rule 127 (cfloat -> NUMBER .)
    RPAREN          reduce using rule 127 (cfloat -> NUMBER .)
    AND             reduce using rule 127 (cfloat -> NUMBER .)
    OR              reduce using rule 127 (cfloat -> NUMBER .)


state 77

    (128) cchar -> CCHAR .

    TIMES           reduce using rule 128 (cchar -> CCHAR .)
    DIVIDE          reduce using rule 128 (cchar -> CCHAR .)
    MODULO          reduce using rule 128 (cchar -> CCHAR .)
    LT              reduce using rule 128 (cchar -> CCHAR .)
    GT              reduce using rule 128 (cchar -> CCHAR .)
    GE              reduce using rule 128 (cchar -> CCHAR .)
    LE              reduce using rule 128 (cchar -> CCHAR .)
    EQ              reduce using rule 128 (cchar -> CCHAR .)
    NE              reduce using rule 128 (cchar -> CCHAR .)
    PLUS            reduce using rule 128 (cchar -> CCHAR .)
    MINUS           reduce using rule 128 (cchar -> CCHAR .)
    VAR             reduce using rule 128 (cchar -> CCHAR .)
    PUBLIC          reduce using rule 128 (cchar -> CCHAR .)
    IF              reduce using rule 128 (cchar -> CCHAR .)
    PRIVATE         reduce using rule 128 (cchar -> CCHAR .)
    PROTECTED       reduce using rule 128 (cchar -> CCHAR .)
    ID              reduce using rule 128 (cchar -> CCHAR .)
    PRINT           reduce using rule 128 (cchar -> CCHAR .)
    READ            reduce using rule 128 (cchar -> CCHAR .)
    WHILE           reduce using rule 128 (cchar -> CCHAR .)
    RBRACE          reduce using rule 128 (cchar -> CCHAR .)
    RETURN          reduce using rule 128 (cchar -> CCHAR .)
    RBRACKET        reduce using rule 128 (cchar -> CCHAR .)
    COMMA           reduce using rule 128 (cchar -> CCHAR .)
    RPAREN          reduce using rule 128 (cchar -> CCHAR .)
    AND             reduce using rule 128 (cchar -> CCHAR .)
    OR              reduce using rule 128 (cchar -> CCHAR .)


state 78

    (122) var -> ID .
    (129) objeto_aAcceso -> ID . PERIOD ID

    TIMES           reduce using rule 122 (var -> ID .)
    DIVIDE          reduce using rule 122 (var -> ID .)
    MODULO          reduce using rule 122 (var -> ID .)
    RBRACKET        reduce using rule 122 (var -> ID .)
    PLUS            reduce using rule 122 (var -> ID .)
    MINUS           reduce using rule 122 (var -> ID .)
    COMMA           reduce using rule 122 (var -> ID .)
    RPAREN          reduce using rule 122 (var -> ID .)
    LT              reduce using rule 122 (var -> ID .)
    GT              reduce using rule 122 (var -> ID .)
    GE              reduce using rule 122 (var -> ID .)
    LE              reduce using rule 122 (var -> ID .)
    EQ              reduce using rule 122 (var -> ID .)
    NE              reduce using rule 122 (var -> ID .)
    AND             reduce using rule 122 (var -> ID .)
    OR              reduce using rule 122 (var -> ID .)
    VAR             reduce using rule 122 (var -> ID .)
    PUBLIC          reduce using rule 122 (var -> ID .)
    IF              reduce using rule 122 (var -> ID .)
    PRIVATE         reduce using rule 122 (var -> ID .)
    PROTECTED       reduce using rule 122 (var -> ID .)
    ID              reduce using rule 122 (var -> ID .)
    PRINT           reduce using rule 122 (var -> ID .)
    READ            reduce using rule 122 (var -> ID .)
    WHILE           reduce using rule 122 (var -> ID .)
    RBRACE          reduce using rule 122 (var -> ID .)
    RETURN          reduce using rule 122 (var -> ID .)
    PERIOD          shift and go to state 133


state 79

    (78) asignacion -> ID LBRACKET exp . RBRACKET EQUALS expresion
    (79) asignacion -> ID LBRACKET exp . RBRACKET EQUALS llamada_func
    (80) asignacion -> ID LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (84) asignacion -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (85) asignacion -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (109) exp -> exp . PLUS termino
    (110) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 134
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123


state 80

    (91) llamada_func -> ID LPAREN aux . RPAREN

    RPAREN          shift and go to state 135


state 81

    (92) aux -> exp .
    (93) aux -> exp . COMMA aux
    (109) exp -> exp . PLUS termino
    (110) exp -> exp . MINUS termino

    RPAREN          reduce using rule 92 (aux -> exp .)
    COMMA           shift and go to state 136
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123


state 82

    (129) objeto_aAcceso -> ID PERIOD ID .
    (91) llamada_func -> ID . LPAREN aux RPAREN

    EQUALS          reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    LBRACKET        reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    TIMES           reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    DIVIDE          reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    MODULO          reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    LT              reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    GT              reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    GE              reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    LE              reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    EQ              reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    NE              reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    PLUS            reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    MINUS           reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    VAR             reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    PUBLIC          reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    IF              reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    PRIVATE         reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    PROTECTED       reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    ID              reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    PRINT           reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    READ            reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    WHILE           reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACE          reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    RETURN          reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    COMMA           reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    RPAREN          reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    LPAREN          shift and go to state 46


state 83

    (90) objeto_metodo -> ID PERIOD llamada_func .

    VAR             reduce using rule 90 (objeto_metodo -> ID PERIOD llamada_func .)
    PUBLIC          reduce using rule 90 (objeto_metodo -> ID PERIOD llamada_func .)
    IF              reduce using rule 90 (objeto_metodo -> ID PERIOD llamada_func .)
    PRIVATE         reduce using rule 90 (objeto_metodo -> ID PERIOD llamada_func .)
    PROTECTED       reduce using rule 90 (objeto_metodo -> ID PERIOD llamada_func .)
    ID              reduce using rule 90 (objeto_metodo -> ID PERIOD llamada_func .)
    PRINT           reduce using rule 90 (objeto_metodo -> ID PERIOD llamada_func .)
    READ            reduce using rule 90 (objeto_metodo -> ID PERIOD llamada_func .)
    WHILE           reduce using rule 90 (objeto_metodo -> ID PERIOD llamada_func .)
    RBRACE          reduce using rule 90 (objeto_metodo -> ID PERIOD llamada_func .)
    RETURN          reduce using rule 90 (objeto_metodo -> ID PERIOD llamada_func .)
    COMMA           reduce using rule 90 (objeto_metodo -> ID PERIOD llamada_func .)
    RPAREN          reduce using rule 90 (objeto_metodo -> ID PERIOD llamada_func .)


state 84

    (25) constructor -> PUBLIC ID LPAREN . param RPAREN bloque
    (35) param -> .
    (36) param -> . tipo_simple ID
    (37) param -> . tipo_simple ID COMMA param
    (68) tipo_simple -> . INT
    (69) tipo_simple -> . FLOAT
    (70) tipo_simple -> . CHAR

    RPAREN          reduce using rule 35 (param -> .)
    INT             shift and go to state 109
    FLOAT           shift and go to state 110
    CHAR            shift and go to state 111

    param                          shift and go to state 137
    tipo_simple                    shift and go to state 138

state 85

    (27) funcion -> scope DEF ID . LPAREN param RPAREN contexto_func

    LPAREN          shift and go to state 139


state 86

    (18) condicion -> IF LPAREN gotoF . RPAREN bloque
    (19) condicion -> IF LPAREN gotoF . RPAREN bloque elif

    RPAREN          shift and go to state 140


state 87

    (94) gotoF -> exp_cond .

    RPAREN          reduce using rule 94 (gotoF -> exp_cond .)


state 88

    (95) exp_cond -> exp_bool .
    (96) exp_cond -> exp_bool . AND exp_cond
    (97) exp_cond -> exp_bool . OR exp_cond

    RPAREN          reduce using rule 95 (exp_cond -> exp_bool .)
    AND             shift and go to state 141
    OR              shift and go to state 142


state 89

    (98) exp_bool -> TRUE .

    AND             reduce using rule 98 (exp_bool -> TRUE .)
    OR              reduce using rule 98 (exp_bool -> TRUE .)
    RPAREN          reduce using rule 98 (exp_bool -> TRUE .)


state 90

    (99) exp_bool -> FALSE .

    AND             reduce using rule 99 (exp_bool -> FALSE .)
    OR              reduce using rule 99 (exp_bool -> FALSE .)
    RPAREN          reduce using rule 99 (exp_bool -> FALSE .)


state 91

    (100) exp_bool -> expresion .

    AND             reduce using rule 100 (exp_bool -> expresion .)
    OR              reduce using rule 100 (exp_bool -> expresion .)
    RPAREN          reduce using rule 100 (exp_bool -> expresion .)


state 92

    (23) ciclo -> aux_ciclo WHILE LPAREN . gotoF RPAREN bloque
    (94) gotoF -> . exp_cond
    (95) exp_cond -> . exp_bool
    (96) exp_cond -> . exp_bool AND exp_cond
    (97) exp_cond -> . exp_bool OR exp_cond
    (98) exp_bool -> . TRUE
    (99) exp_bool -> . FALSE
    (100) exp_bool -> . expresion
    (101) expresion -> . exp
    (102) expresion -> . exp LT expresion
    (103) expresion -> . exp GT expresion
    (104) expresion -> . exp GE expresion
    (105) expresion -> . exp LE expresion
    (106) expresion -> . exp EQ expresion
    (107) expresion -> . exp NE expresion
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              shift and go to state 78
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    gotoF                          shift and go to state 143
    exp_cond                       shift and go to state 87
    exp_bool                       shift and go to state 88
    expresion                      shift and go to state 91
    exp                            shift and go to state 64
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 93

    (75) asignacion -> objeto_aAcceso EQUALS expresion .

    VAR             reduce using rule 75 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PUBLIC          reduce using rule 75 (asignacion -> objeto_aAcceso EQUALS expresion .)
    IF              reduce using rule 75 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PRIVATE         reduce using rule 75 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PROTECTED       reduce using rule 75 (asignacion -> objeto_aAcceso EQUALS expresion .)
    ID              reduce using rule 75 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PRINT           reduce using rule 75 (asignacion -> objeto_aAcceso EQUALS expresion .)
    READ            reduce using rule 75 (asignacion -> objeto_aAcceso EQUALS expresion .)
    WHILE           reduce using rule 75 (asignacion -> objeto_aAcceso EQUALS expresion .)
    RBRACE          reduce using rule 75 (asignacion -> objeto_aAcceso EQUALS expresion .)
    RETURN          reduce using rule 75 (asignacion -> objeto_aAcceso EQUALS expresion .)


state 94

    (76) asignacion -> objeto_aAcceso EQUALS llamada_func .

    VAR             reduce using rule 76 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PUBLIC          reduce using rule 76 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    IF              reduce using rule 76 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PRIVATE         reduce using rule 76 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PROTECTED       reduce using rule 76 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    ID              reduce using rule 76 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PRINT           reduce using rule 76 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    READ            reduce using rule 76 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    WHILE           reduce using rule 76 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    RBRACE          reduce using rule 76 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    RETURN          reduce using rule 76 (asignacion -> objeto_aAcceso EQUALS llamada_func .)


state 95

    (77) asignacion -> objeto_aAcceso EQUALS objeto_metodo .

    VAR             reduce using rule 77 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 77 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    IF              reduce using rule 77 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 77 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 77 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    ID              reduce using rule 77 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PRINT           reduce using rule 77 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    READ            reduce using rule 77 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    WHILE           reduce using rule 77 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    RBRACE          reduce using rule 77 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    RETURN          reduce using rule 77 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)


state 96

    (87) asignacion -> objeto_aAcceso LBRACKET LBRACKET . exp RBRACKET exp RBRACKET EQUALS expresion
    (88) asignacion -> objeto_aAcceso LBRACKET LBRACKET . exp RBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> objeto_aAcceso LBRACKET LBRACKET . exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              shift and go to state 78
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    objeto_aAcceso                 shift and go to state 70
    exp                            shift and go to state 144
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 97

    (81) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET EQUALS expresion
    (82) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET EQUALS llamada_func
    (83) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (109) exp -> exp . PLUS termino
    (110) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 145
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123


state 98

    (51) escritura -> PRINT LPAREN aux3 . RPAREN

    RPAREN          shift and go to state 146


state 99

    (52) aux3 -> expresion .
    (56) aux3 -> expresion . COMMA aux3

    RPAREN          reduce using rule 52 (aux3 -> expresion .)
    COMMA           shift and go to state 147


state 100

    (53) aux3 -> llamada_func .
    (57) aux3 -> llamada_func . COMMA aux3

    RPAREN          reduce using rule 53 (aux3 -> llamada_func .)
    COMMA           shift and go to state 148


state 101

    (54) aux3 -> objeto_metodo .
    (58) aux3 -> objeto_metodo . COMMA aux3

    RPAREN          reduce using rule 54 (aux3 -> objeto_metodo .)
    COMMA           shift and go to state 149


state 102

    (55) aux3 -> CSTRING .
    (59) aux3 -> CSTRING . COMMA aux3

    RPAREN          reduce using rule 55 (aux3 -> CSTRING .)
    COMMA           shift and go to state 150


state 103

    (46) lectura -> READ LPAREN aux4 . RPAREN

    RPAREN          shift and go to state 151


state 104

    (47) aux4 -> ID .
    (49) aux4 -> ID . COMMA aux4
    (129) objeto_aAcceso -> ID . PERIOD ID

    RPAREN          reduce using rule 47 (aux4 -> ID .)
    COMMA           shift and go to state 152
    PERIOD          shift and go to state 133


state 105

    (48) aux4 -> objeto_aAcceso .
    (50) aux4 -> objeto_aAcceso . COMMA aux4

    RPAREN          reduce using rule 48 (aux4 -> objeto_aAcceso .)
    COMMA           shift and go to state 153


state 106

    (4) class -> scope CLASS ID COLON ID .

    LBRACE          reduce using rule 4 (class -> scope CLASS ID COLON ID .)


state 107

    (60) vars -> VAR aux2 COLON tipo_simple .

    VAR             reduce using rule 60 (vars -> VAR aux2 COLON tipo_simple .)
    PUBLIC          reduce using rule 60 (vars -> VAR aux2 COLON tipo_simple .)
    IF              reduce using rule 60 (vars -> VAR aux2 COLON tipo_simple .)
    PRIVATE         reduce using rule 60 (vars -> VAR aux2 COLON tipo_simple .)
    PROTECTED       reduce using rule 60 (vars -> VAR aux2 COLON tipo_simple .)
    ID              reduce using rule 60 (vars -> VAR aux2 COLON tipo_simple .)
    PRINT           reduce using rule 60 (vars -> VAR aux2 COLON tipo_simple .)
    READ            reduce using rule 60 (vars -> VAR aux2 COLON tipo_simple .)
    WHILE           reduce using rule 60 (vars -> VAR aux2 COLON tipo_simple .)
    RBRACE          reduce using rule 60 (vars -> VAR aux2 COLON tipo_simple .)
    RETURN          reduce using rule 60 (vars -> VAR aux2 COLON tipo_simple .)


state 108

    (61) vars -> VAR aux2 COLON tipo_compuesto .

    VAR             reduce using rule 61 (vars -> VAR aux2 COLON tipo_compuesto .)
    PUBLIC          reduce using rule 61 (vars -> VAR aux2 COLON tipo_compuesto .)
    IF              reduce using rule 61 (vars -> VAR aux2 COLON tipo_compuesto .)
    PRIVATE         reduce using rule 61 (vars -> VAR aux2 COLON tipo_compuesto .)
    PROTECTED       reduce using rule 61 (vars -> VAR aux2 COLON tipo_compuesto .)
    ID              reduce using rule 61 (vars -> VAR aux2 COLON tipo_compuesto .)
    PRINT           reduce using rule 61 (vars -> VAR aux2 COLON tipo_compuesto .)
    READ            reduce using rule 61 (vars -> VAR aux2 COLON tipo_compuesto .)
    WHILE           reduce using rule 61 (vars -> VAR aux2 COLON tipo_compuesto .)
    RBRACE          reduce using rule 61 (vars -> VAR aux2 COLON tipo_compuesto .)
    RETURN          reduce using rule 61 (vars -> VAR aux2 COLON tipo_compuesto .)


state 109

    (68) tipo_simple -> INT .

    VAR             reduce using rule 68 (tipo_simple -> INT .)
    PUBLIC          reduce using rule 68 (tipo_simple -> INT .)
    IF              reduce using rule 68 (tipo_simple -> INT .)
    PRIVATE         reduce using rule 68 (tipo_simple -> INT .)
    PROTECTED       reduce using rule 68 (tipo_simple -> INT .)
    ID              reduce using rule 68 (tipo_simple -> INT .)
    PRINT           reduce using rule 68 (tipo_simple -> INT .)
    READ            reduce using rule 68 (tipo_simple -> INT .)
    WHILE           reduce using rule 68 (tipo_simple -> INT .)
    RBRACE          reduce using rule 68 (tipo_simple -> INT .)
    RETURN          reduce using rule 68 (tipo_simple -> INT .)


state 110

    (69) tipo_simple -> FLOAT .

    VAR             reduce using rule 69 (tipo_simple -> FLOAT .)
    PUBLIC          reduce using rule 69 (tipo_simple -> FLOAT .)
    IF              reduce using rule 69 (tipo_simple -> FLOAT .)
    PRIVATE         reduce using rule 69 (tipo_simple -> FLOAT .)
    PROTECTED       reduce using rule 69 (tipo_simple -> FLOAT .)
    ID              reduce using rule 69 (tipo_simple -> FLOAT .)
    PRINT           reduce using rule 69 (tipo_simple -> FLOAT .)
    READ            reduce using rule 69 (tipo_simple -> FLOAT .)
    WHILE           reduce using rule 69 (tipo_simple -> FLOAT .)
    RBRACE          reduce using rule 69 (tipo_simple -> FLOAT .)
    RETURN          reduce using rule 69 (tipo_simple -> FLOAT .)


state 111

    (70) tipo_simple -> CHAR .

    VAR             reduce using rule 70 (tipo_simple -> CHAR .)
    PUBLIC          reduce using rule 70 (tipo_simple -> CHAR .)
    IF              reduce using rule 70 (tipo_simple -> CHAR .)
    PRIVATE         reduce using rule 70 (tipo_simple -> CHAR .)
    PROTECTED       reduce using rule 70 (tipo_simple -> CHAR .)
    ID              reduce using rule 70 (tipo_simple -> CHAR .)
    PRINT           reduce using rule 70 (tipo_simple -> CHAR .)
    READ            reduce using rule 70 (tipo_simple -> CHAR .)
    WHILE           reduce using rule 70 (tipo_simple -> CHAR .)
    RBRACE          reduce using rule 70 (tipo_simple -> CHAR .)
    RETURN          reduce using rule 70 (tipo_simple -> CHAR .)


state 112

    (71) tipo_compuesto -> ID .

    VAR             reduce using rule 71 (tipo_compuesto -> ID .)
    PUBLIC          reduce using rule 71 (tipo_compuesto -> ID .)
    IF              reduce using rule 71 (tipo_compuesto -> ID .)
    PRIVATE         reduce using rule 71 (tipo_compuesto -> ID .)
    PROTECTED       reduce using rule 71 (tipo_compuesto -> ID .)
    ID              reduce using rule 71 (tipo_compuesto -> ID .)
    PRINT           reduce using rule 71 (tipo_compuesto -> ID .)
    READ            reduce using rule 71 (tipo_compuesto -> ID .)
    WHILE           reduce using rule 71 (tipo_compuesto -> ID .)
    RBRACE          reduce using rule 71 (tipo_compuesto -> ID .)
    RETURN          reduce using rule 71 (tipo_compuesto -> ID .)


state 113

    (62) vars -> VAR ID LBRACKET cint . RBRACKET COLON tipo_simple
    (63) vars -> VAR ID LBRACKET cint . RBRACKET COLON tipo_compuesto
    (64) vars -> VAR ID LBRACKET cint . RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> VAR ID LBRACKET cint . RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto

    RBRACKET        shift and go to state 154


state 114

    (66) aux2 -> ID .
    (67) aux2 -> ID . COMMA aux2

    COLON           reduce using rule 66 (aux2 -> ID .)
    COMMA           shift and go to state 59


state 115

    (67) aux2 -> ID COMMA aux2 .

    COLON           reduce using rule 67 (aux2 -> ID COMMA aux2 .)


state 116

    (102) expresion -> exp LT . expresion
    (101) expresion -> . exp
    (102) expresion -> . exp LT expresion
    (103) expresion -> . exp GT expresion
    (104) expresion -> . exp GE expresion
    (105) expresion -> . exp LE expresion
    (106) expresion -> . exp EQ expresion
    (107) expresion -> . exp NE expresion
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              shift and go to state 78
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    exp                            shift and go to state 64
    expresion                      shift and go to state 155
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 117

    (103) expresion -> exp GT . expresion
    (101) expresion -> . exp
    (102) expresion -> . exp LT expresion
    (103) expresion -> . exp GT expresion
    (104) expresion -> . exp GE expresion
    (105) expresion -> . exp LE expresion
    (106) expresion -> . exp EQ expresion
    (107) expresion -> . exp NE expresion
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              shift and go to state 78
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    exp                            shift and go to state 64
    expresion                      shift and go to state 156
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 118

    (104) expresion -> exp GE . expresion
    (101) expresion -> . exp
    (102) expresion -> . exp LT expresion
    (103) expresion -> . exp GT expresion
    (104) expresion -> . exp GE expresion
    (105) expresion -> . exp LE expresion
    (106) expresion -> . exp EQ expresion
    (107) expresion -> . exp NE expresion
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              shift and go to state 78
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    exp                            shift and go to state 64
    expresion                      shift and go to state 157
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 119

    (105) expresion -> exp LE . expresion
    (101) expresion -> . exp
    (102) expresion -> . exp LT expresion
    (103) expresion -> . exp GT expresion
    (104) expresion -> . exp GE expresion
    (105) expresion -> . exp LE expresion
    (106) expresion -> . exp EQ expresion
    (107) expresion -> . exp NE expresion
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              shift and go to state 78
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    exp                            shift and go to state 64
    expresion                      shift and go to state 158
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 120

    (106) expresion -> exp EQ . expresion
    (101) expresion -> . exp
    (102) expresion -> . exp LT expresion
    (103) expresion -> . exp GT expresion
    (104) expresion -> . exp GE expresion
    (105) expresion -> . exp LE expresion
    (106) expresion -> . exp EQ expresion
    (107) expresion -> . exp NE expresion
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              shift and go to state 78
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    exp                            shift and go to state 64
    expresion                      shift and go to state 159
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 121

    (107) expresion -> exp NE . expresion
    (101) expresion -> . exp
    (102) expresion -> . exp LT expresion
    (103) expresion -> . exp GT expresion
    (104) expresion -> . exp GE expresion
    (105) expresion -> . exp LE expresion
    (106) expresion -> . exp EQ expresion
    (107) expresion -> . exp NE expresion
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              shift and go to state 78
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    exp                            shift and go to state 64
    expresion                      shift and go to state 160
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 122

    (109) exp -> exp PLUS . termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              shift and go to state 78
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    termino                        shift and go to state 161
    factor                         shift and go to state 69
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 123

    (110) exp -> exp MINUS . termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              shift and go to state 78
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    termino                        shift and go to state 162
    factor                         shift and go to state 69
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 124

    (115) factor -> LPAREN exp_cond . RPAREN

    RPAREN          shift and go to state 163


state 125

    (112) termino -> termino TIMES . factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              shift and go to state 78
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    factor                         shift and go to state 164
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 126

    (113) termino -> termino DIVIDE . factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              shift and go to state 78
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    factor                         shift and go to state 165
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 127

    (114) termino -> termino MODULO . factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              shift and go to state 78
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    factor                         shift and go to state 166
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 128

    (116) factor -> PLUS objeto_aAcceso .

    TIMES           reduce using rule 116 (factor -> PLUS objeto_aAcceso .)
    DIVIDE          reduce using rule 116 (factor -> PLUS objeto_aAcceso .)
    MODULO          reduce using rule 116 (factor -> PLUS objeto_aAcceso .)
    LT              reduce using rule 116 (factor -> PLUS objeto_aAcceso .)
    GT              reduce using rule 116 (factor -> PLUS objeto_aAcceso .)
    GE              reduce using rule 116 (factor -> PLUS objeto_aAcceso .)
    LE              reduce using rule 116 (factor -> PLUS objeto_aAcceso .)
    EQ              reduce using rule 116 (factor -> PLUS objeto_aAcceso .)
    NE              reduce using rule 116 (factor -> PLUS objeto_aAcceso .)
    PLUS            reduce using rule 116 (factor -> PLUS objeto_aAcceso .)
    MINUS           reduce using rule 116 (factor -> PLUS objeto_aAcceso .)
    VAR             reduce using rule 116 (factor -> PLUS objeto_aAcceso .)
    PUBLIC          reduce using rule 116 (factor -> PLUS objeto_aAcceso .)
    IF              reduce using rule 116 (factor -> PLUS objeto_aAcceso .)
    PRIVATE         reduce using rule 116 (factor -> PLUS objeto_aAcceso .)
    PROTECTED       reduce using rule 116 (factor -> PLUS objeto_aAcceso .)
    ID              reduce using rule 116 (factor -> PLUS objeto_aAcceso .)
    PRINT           reduce using rule 116 (factor -> PLUS objeto_aAcceso .)
    READ            reduce using rule 116 (factor -> PLUS objeto_aAcceso .)
    WHILE           reduce using rule 116 (factor -> PLUS objeto_aAcceso .)
    RBRACE          reduce using rule 116 (factor -> PLUS objeto_aAcceso .)
    RETURN          reduce using rule 116 (factor -> PLUS objeto_aAcceso .)
    RBRACKET        reduce using rule 116 (factor -> PLUS objeto_aAcceso .)
    COMMA           reduce using rule 116 (factor -> PLUS objeto_aAcceso .)
    RPAREN          reduce using rule 116 (factor -> PLUS objeto_aAcceso .)
    AND             reduce using rule 116 (factor -> PLUS objeto_aAcceso .)
    OR              reduce using rule 116 (factor -> PLUS objeto_aAcceso .)


state 129

    (118) factor -> PLUS var .

    TIMES           reduce using rule 118 (factor -> PLUS var .)
    DIVIDE          reduce using rule 118 (factor -> PLUS var .)
    MODULO          reduce using rule 118 (factor -> PLUS var .)
    LT              reduce using rule 118 (factor -> PLUS var .)
    GT              reduce using rule 118 (factor -> PLUS var .)
    GE              reduce using rule 118 (factor -> PLUS var .)
    LE              reduce using rule 118 (factor -> PLUS var .)
    EQ              reduce using rule 118 (factor -> PLUS var .)
    NE              reduce using rule 118 (factor -> PLUS var .)
    PLUS            reduce using rule 118 (factor -> PLUS var .)
    MINUS           reduce using rule 118 (factor -> PLUS var .)
    VAR             reduce using rule 118 (factor -> PLUS var .)
    PUBLIC          reduce using rule 118 (factor -> PLUS var .)
    IF              reduce using rule 118 (factor -> PLUS var .)
    PRIVATE         reduce using rule 118 (factor -> PLUS var .)
    PROTECTED       reduce using rule 118 (factor -> PLUS var .)
    ID              reduce using rule 118 (factor -> PLUS var .)
    PRINT           reduce using rule 118 (factor -> PLUS var .)
    READ            reduce using rule 118 (factor -> PLUS var .)
    WHILE           reduce using rule 118 (factor -> PLUS var .)
    RBRACE          reduce using rule 118 (factor -> PLUS var .)
    RETURN          reduce using rule 118 (factor -> PLUS var .)
    RBRACKET        reduce using rule 118 (factor -> PLUS var .)
    COMMA           reduce using rule 118 (factor -> PLUS var .)
    RPAREN          reduce using rule 118 (factor -> PLUS var .)
    AND             reduce using rule 118 (factor -> PLUS var .)
    OR              reduce using rule 118 (factor -> PLUS var .)


state 130

    (129) objeto_aAcceso -> ID . PERIOD ID
    (122) var -> ID .

    PERIOD          shift and go to state 133
    TIMES           reduce using rule 122 (var -> ID .)
    DIVIDE          reduce using rule 122 (var -> ID .)
    MODULO          reduce using rule 122 (var -> ID .)
    LT              reduce using rule 122 (var -> ID .)
    GT              reduce using rule 122 (var -> ID .)
    GE              reduce using rule 122 (var -> ID .)
    LE              reduce using rule 122 (var -> ID .)
    EQ              reduce using rule 122 (var -> ID .)
    NE              reduce using rule 122 (var -> ID .)
    PLUS            reduce using rule 122 (var -> ID .)
    MINUS           reduce using rule 122 (var -> ID .)
    VAR             reduce using rule 122 (var -> ID .)
    PUBLIC          reduce using rule 122 (var -> ID .)
    IF              reduce using rule 122 (var -> ID .)
    PRIVATE         reduce using rule 122 (var -> ID .)
    PROTECTED       reduce using rule 122 (var -> ID .)
    ID              reduce using rule 122 (var -> ID .)
    PRINT           reduce using rule 122 (var -> ID .)
    READ            reduce using rule 122 (var -> ID .)
    WHILE           reduce using rule 122 (var -> ID .)
    RBRACE          reduce using rule 122 (var -> ID .)
    RETURN          reduce using rule 122 (var -> ID .)
    RBRACKET        reduce using rule 122 (var -> ID .)
    COMMA           reduce using rule 122 (var -> ID .)
    RPAREN          reduce using rule 122 (var -> ID .)
    AND             reduce using rule 122 (var -> ID .)
    OR              reduce using rule 122 (var -> ID .)


state 131

    (117) factor -> MINUS objeto_aAcceso .

    TIMES           reduce using rule 117 (factor -> MINUS objeto_aAcceso .)
    DIVIDE          reduce using rule 117 (factor -> MINUS objeto_aAcceso .)
    MODULO          reduce using rule 117 (factor -> MINUS objeto_aAcceso .)
    LT              reduce using rule 117 (factor -> MINUS objeto_aAcceso .)
    GT              reduce using rule 117 (factor -> MINUS objeto_aAcceso .)
    GE              reduce using rule 117 (factor -> MINUS objeto_aAcceso .)
    LE              reduce using rule 117 (factor -> MINUS objeto_aAcceso .)
    EQ              reduce using rule 117 (factor -> MINUS objeto_aAcceso .)
    NE              reduce using rule 117 (factor -> MINUS objeto_aAcceso .)
    PLUS            reduce using rule 117 (factor -> MINUS objeto_aAcceso .)
    MINUS           reduce using rule 117 (factor -> MINUS objeto_aAcceso .)
    VAR             reduce using rule 117 (factor -> MINUS objeto_aAcceso .)
    PUBLIC          reduce using rule 117 (factor -> MINUS objeto_aAcceso .)
    IF              reduce using rule 117 (factor -> MINUS objeto_aAcceso .)
    PRIVATE         reduce using rule 117 (factor -> MINUS objeto_aAcceso .)
    PROTECTED       reduce using rule 117 (factor -> MINUS objeto_aAcceso .)
    ID              reduce using rule 117 (factor -> MINUS objeto_aAcceso .)
    PRINT           reduce using rule 117 (factor -> MINUS objeto_aAcceso .)
    READ            reduce using rule 117 (factor -> MINUS objeto_aAcceso .)
    WHILE           reduce using rule 117 (factor -> MINUS objeto_aAcceso .)
    RBRACE          reduce using rule 117 (factor -> MINUS objeto_aAcceso .)
    RETURN          reduce using rule 117 (factor -> MINUS objeto_aAcceso .)
    RBRACKET        reduce using rule 117 (factor -> MINUS objeto_aAcceso .)
    COMMA           reduce using rule 117 (factor -> MINUS objeto_aAcceso .)
    RPAREN          reduce using rule 117 (factor -> MINUS objeto_aAcceso .)
    AND             reduce using rule 117 (factor -> MINUS objeto_aAcceso .)
    OR              reduce using rule 117 (factor -> MINUS objeto_aAcceso .)


state 132

    (119) factor -> MINUS var .

    TIMES           reduce using rule 119 (factor -> MINUS var .)
    DIVIDE          reduce using rule 119 (factor -> MINUS var .)
    MODULO          reduce using rule 119 (factor -> MINUS var .)
    LT              reduce using rule 119 (factor -> MINUS var .)
    GT              reduce using rule 119 (factor -> MINUS var .)
    GE              reduce using rule 119 (factor -> MINUS var .)
    LE              reduce using rule 119 (factor -> MINUS var .)
    EQ              reduce using rule 119 (factor -> MINUS var .)
    NE              reduce using rule 119 (factor -> MINUS var .)
    PLUS            reduce using rule 119 (factor -> MINUS var .)
    MINUS           reduce using rule 119 (factor -> MINUS var .)
    VAR             reduce using rule 119 (factor -> MINUS var .)
    PUBLIC          reduce using rule 119 (factor -> MINUS var .)
    IF              reduce using rule 119 (factor -> MINUS var .)
    PRIVATE         reduce using rule 119 (factor -> MINUS var .)
    PROTECTED       reduce using rule 119 (factor -> MINUS var .)
    ID              reduce using rule 119 (factor -> MINUS var .)
    PRINT           reduce using rule 119 (factor -> MINUS var .)
    READ            reduce using rule 119 (factor -> MINUS var .)
    WHILE           reduce using rule 119 (factor -> MINUS var .)
    RBRACE          reduce using rule 119 (factor -> MINUS var .)
    RETURN          reduce using rule 119 (factor -> MINUS var .)
    RBRACKET        reduce using rule 119 (factor -> MINUS var .)
    COMMA           reduce using rule 119 (factor -> MINUS var .)
    RPAREN          reduce using rule 119 (factor -> MINUS var .)
    AND             reduce using rule 119 (factor -> MINUS var .)
    OR              reduce using rule 119 (factor -> MINUS var .)


state 133

    (129) objeto_aAcceso -> ID PERIOD . ID

    ID              shift and go to state 167


state 134

    (78) asignacion -> ID LBRACKET exp RBRACKET . EQUALS expresion
    (79) asignacion -> ID LBRACKET exp RBRACKET . EQUALS llamada_func
    (80) asignacion -> ID LBRACKET exp RBRACKET . EQUALS objeto_metodo
    (84) asignacion -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS expresion
    (85) asignacion -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS objeto_metodo

    EQUALS          shift and go to state 169
    LBRACKET        shift and go to state 168


state 135

    (91) llamada_func -> ID LPAREN aux RPAREN .

    VAR             reduce using rule 91 (llamada_func -> ID LPAREN aux RPAREN .)
    PUBLIC          reduce using rule 91 (llamada_func -> ID LPAREN aux RPAREN .)
    IF              reduce using rule 91 (llamada_func -> ID LPAREN aux RPAREN .)
    PRIVATE         reduce using rule 91 (llamada_func -> ID LPAREN aux RPAREN .)
    PROTECTED       reduce using rule 91 (llamada_func -> ID LPAREN aux RPAREN .)
    ID              reduce using rule 91 (llamada_func -> ID LPAREN aux RPAREN .)
    PRINT           reduce using rule 91 (llamada_func -> ID LPAREN aux RPAREN .)
    READ            reduce using rule 91 (llamada_func -> ID LPAREN aux RPAREN .)
    WHILE           reduce using rule 91 (llamada_func -> ID LPAREN aux RPAREN .)
    RBRACE          reduce using rule 91 (llamada_func -> ID LPAREN aux RPAREN .)
    RETURN          reduce using rule 91 (llamada_func -> ID LPAREN aux RPAREN .)
    COMMA           reduce using rule 91 (llamada_func -> ID LPAREN aux RPAREN .)
    RPAREN          reduce using rule 91 (llamada_func -> ID LPAREN aux RPAREN .)


state 136

    (93) aux -> exp COMMA . aux
    (92) aux -> . exp
    (93) aux -> . exp COMMA aux
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              shift and go to state 78
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    exp                            shift and go to state 81
    aux                            shift and go to state 170
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 137

    (25) constructor -> PUBLIC ID LPAREN param . RPAREN bloque

    RPAREN          shift and go to state 171


state 138

    (36) param -> tipo_simple . ID
    (37) param -> tipo_simple . ID COMMA param

    ID              shift and go to state 172


state 139

    (27) funcion -> scope DEF ID LPAREN . param RPAREN contexto_func
    (35) param -> .
    (36) param -> . tipo_simple ID
    (37) param -> . tipo_simple ID COMMA param
    (68) tipo_simple -> . INT
    (69) tipo_simple -> . FLOAT
    (70) tipo_simple -> . CHAR

    RPAREN          reduce using rule 35 (param -> .)
    INT             shift and go to state 109
    FLOAT           shift and go to state 110
    CHAR            shift and go to state 111

    param                          shift and go to state 173
    tipo_simple                    shift and go to state 138

state 140

    (18) condicion -> IF LPAREN gotoF RPAREN . bloque
    (19) condicion -> IF LPAREN gotoF RPAREN . bloque elif
    (26) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 175

    bloque                         shift and go to state 174

state 141

    (96) exp_cond -> exp_bool AND . exp_cond
    (95) exp_cond -> . exp_bool
    (96) exp_cond -> . exp_bool AND exp_cond
    (97) exp_cond -> . exp_bool OR exp_cond
    (98) exp_bool -> . TRUE
    (99) exp_bool -> . FALSE
    (100) exp_bool -> . expresion
    (101) expresion -> . exp
    (102) expresion -> . exp LT expresion
    (103) expresion -> . exp GT expresion
    (104) expresion -> . exp GE expresion
    (105) expresion -> . exp LE expresion
    (106) expresion -> . exp EQ expresion
    (107) expresion -> . exp NE expresion
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              shift and go to state 78
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    exp_bool                       shift and go to state 88
    exp_cond                       shift and go to state 176
    expresion                      shift and go to state 91
    exp                            shift and go to state 64
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 142

    (97) exp_cond -> exp_bool OR . exp_cond
    (95) exp_cond -> . exp_bool
    (96) exp_cond -> . exp_bool AND exp_cond
    (97) exp_cond -> . exp_bool OR exp_cond
    (98) exp_bool -> . TRUE
    (99) exp_bool -> . FALSE
    (100) exp_bool -> . expresion
    (101) expresion -> . exp
    (102) expresion -> . exp LT expresion
    (103) expresion -> . exp GT expresion
    (104) expresion -> . exp GE expresion
    (105) expresion -> . exp LE expresion
    (106) expresion -> . exp EQ expresion
    (107) expresion -> . exp NE expresion
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              shift and go to state 78
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    exp_bool                       shift and go to state 88
    exp_cond                       shift and go to state 177
    expresion                      shift and go to state 91
    exp                            shift and go to state 64
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 143

    (23) ciclo -> aux_ciclo WHILE LPAREN gotoF . RPAREN bloque

    RPAREN          shift and go to state 178


state 144

    (87) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp . RBRACKET exp RBRACKET EQUALS expresion
    (88) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp . RBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp . RBRACKET exp RBRACKET EQUALS objeto_metodo
    (109) exp -> exp . PLUS termino
    (110) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 179
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123


state 145

    (81) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . EQUALS expresion
    (82) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . EQUALS llamada_func
    (83) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . EQUALS objeto_metodo

    EQUALS          shift and go to state 180


state 146

    (51) escritura -> PRINT LPAREN aux3 RPAREN .

    VAR             reduce using rule 51 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PUBLIC          reduce using rule 51 (escritura -> PRINT LPAREN aux3 RPAREN .)
    IF              reduce using rule 51 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PRIVATE         reduce using rule 51 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PROTECTED       reduce using rule 51 (escritura -> PRINT LPAREN aux3 RPAREN .)
    ID              reduce using rule 51 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PRINT           reduce using rule 51 (escritura -> PRINT LPAREN aux3 RPAREN .)
    READ            reduce using rule 51 (escritura -> PRINT LPAREN aux3 RPAREN .)
    WHILE           reduce using rule 51 (escritura -> PRINT LPAREN aux3 RPAREN .)
    RBRACE          reduce using rule 51 (escritura -> PRINT LPAREN aux3 RPAREN .)
    RETURN          reduce using rule 51 (escritura -> PRINT LPAREN aux3 RPAREN .)


state 147

    (56) aux3 -> expresion COMMA . aux3
    (52) aux3 -> . expresion
    (53) aux3 -> . llamada_func
    (54) aux3 -> . objeto_metodo
    (55) aux3 -> . CSTRING
    (56) aux3 -> . expresion COMMA aux3
    (57) aux3 -> . llamada_func COMMA aux3
    (58) aux3 -> . objeto_metodo COMMA aux3
    (59) aux3 -> . CSTRING COMMA aux3
    (101) expresion -> . exp
    (102) expresion -> . exp LT expresion
    (103) expresion -> . exp GT expresion
    (104) expresion -> . exp GE expresion
    (105) expresion -> . exp LE expresion
    (106) expresion -> . exp EQ expresion
    (107) expresion -> . exp NE expresion
    (91) llamada_func -> . ID LPAREN aux RPAREN
    (90) objeto_metodo -> . ID PERIOD llamada_func
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    CSTRING         shift and go to state 102
    ID              shift and go to state 60
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    expresion                      shift and go to state 99
    aux3                           shift and go to state 181
    llamada_func                   shift and go to state 100
    objeto_metodo                  shift and go to state 101
    exp                            shift and go to state 64
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 148

    (57) aux3 -> llamada_func COMMA . aux3
    (52) aux3 -> . expresion
    (53) aux3 -> . llamada_func
    (54) aux3 -> . objeto_metodo
    (55) aux3 -> . CSTRING
    (56) aux3 -> . expresion COMMA aux3
    (57) aux3 -> . llamada_func COMMA aux3
    (58) aux3 -> . objeto_metodo COMMA aux3
    (59) aux3 -> . CSTRING COMMA aux3
    (101) expresion -> . exp
    (102) expresion -> . exp LT expresion
    (103) expresion -> . exp GT expresion
    (104) expresion -> . exp GE expresion
    (105) expresion -> . exp LE expresion
    (106) expresion -> . exp EQ expresion
    (107) expresion -> . exp NE expresion
    (91) llamada_func -> . ID LPAREN aux RPAREN
    (90) objeto_metodo -> . ID PERIOD llamada_func
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    CSTRING         shift and go to state 102
    ID              shift and go to state 60
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    llamada_func                   shift and go to state 100
    aux3                           shift and go to state 182
    expresion                      shift and go to state 99
    objeto_metodo                  shift and go to state 101
    exp                            shift and go to state 64
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 149

    (58) aux3 -> objeto_metodo COMMA . aux3
    (52) aux3 -> . expresion
    (53) aux3 -> . llamada_func
    (54) aux3 -> . objeto_metodo
    (55) aux3 -> . CSTRING
    (56) aux3 -> . expresion COMMA aux3
    (57) aux3 -> . llamada_func COMMA aux3
    (58) aux3 -> . objeto_metodo COMMA aux3
    (59) aux3 -> . CSTRING COMMA aux3
    (101) expresion -> . exp
    (102) expresion -> . exp LT expresion
    (103) expresion -> . exp GT expresion
    (104) expresion -> . exp GE expresion
    (105) expresion -> . exp LE expresion
    (106) expresion -> . exp EQ expresion
    (107) expresion -> . exp NE expresion
    (91) llamada_func -> . ID LPAREN aux RPAREN
    (90) objeto_metodo -> . ID PERIOD llamada_func
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    CSTRING         shift and go to state 102
    ID              shift and go to state 60
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    objeto_metodo                  shift and go to state 101
    aux3                           shift and go to state 183
    expresion                      shift and go to state 99
    llamada_func                   shift and go to state 100
    exp                            shift and go to state 64
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 150

    (59) aux3 -> CSTRING COMMA . aux3
    (52) aux3 -> . expresion
    (53) aux3 -> . llamada_func
    (54) aux3 -> . objeto_metodo
    (55) aux3 -> . CSTRING
    (56) aux3 -> . expresion COMMA aux3
    (57) aux3 -> . llamada_func COMMA aux3
    (58) aux3 -> . objeto_metodo COMMA aux3
    (59) aux3 -> . CSTRING COMMA aux3
    (101) expresion -> . exp
    (102) expresion -> . exp LT expresion
    (103) expresion -> . exp GT expresion
    (104) expresion -> . exp GE expresion
    (105) expresion -> . exp LE expresion
    (106) expresion -> . exp EQ expresion
    (107) expresion -> . exp NE expresion
    (91) llamada_func -> . ID LPAREN aux RPAREN
    (90) objeto_metodo -> . ID PERIOD llamada_func
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    CSTRING         shift and go to state 102
    ID              shift and go to state 60
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    aux3                           shift and go to state 184
    expresion                      shift and go to state 99
    llamada_func                   shift and go to state 100
    objeto_metodo                  shift and go to state 101
    exp                            shift and go to state 64
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 151

    (46) lectura -> READ LPAREN aux4 RPAREN .

    VAR             reduce using rule 46 (lectura -> READ LPAREN aux4 RPAREN .)
    PUBLIC          reduce using rule 46 (lectura -> READ LPAREN aux4 RPAREN .)
    IF              reduce using rule 46 (lectura -> READ LPAREN aux4 RPAREN .)
    PRIVATE         reduce using rule 46 (lectura -> READ LPAREN aux4 RPAREN .)
    PROTECTED       reduce using rule 46 (lectura -> READ LPAREN aux4 RPAREN .)
    ID              reduce using rule 46 (lectura -> READ LPAREN aux4 RPAREN .)
    PRINT           reduce using rule 46 (lectura -> READ LPAREN aux4 RPAREN .)
    READ            reduce using rule 46 (lectura -> READ LPAREN aux4 RPAREN .)
    WHILE           reduce using rule 46 (lectura -> READ LPAREN aux4 RPAREN .)
    RBRACE          reduce using rule 46 (lectura -> READ LPAREN aux4 RPAREN .)
    RETURN          reduce using rule 46 (lectura -> READ LPAREN aux4 RPAREN .)


state 152

    (49) aux4 -> ID COMMA . aux4
    (47) aux4 -> . ID
    (48) aux4 -> . objeto_aAcceso
    (49) aux4 -> . ID COMMA aux4
    (50) aux4 -> . objeto_aAcceso COMMA aux4
    (129) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 104

    aux4                           shift and go to state 185
    objeto_aAcceso                 shift and go to state 105

state 153

    (50) aux4 -> objeto_aAcceso COMMA . aux4
    (47) aux4 -> . ID
    (48) aux4 -> . objeto_aAcceso
    (49) aux4 -> . ID COMMA aux4
    (50) aux4 -> . objeto_aAcceso COMMA aux4
    (129) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 104

    objeto_aAcceso                 shift and go to state 105
    aux4                           shift and go to state 186

state 154

    (62) vars -> VAR ID LBRACKET cint RBRACKET . COLON tipo_simple
    (63) vars -> VAR ID LBRACKET cint RBRACKET . COLON tipo_compuesto
    (64) vars -> VAR ID LBRACKET cint RBRACKET . LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> VAR ID LBRACKET cint RBRACKET . LBRACKET cint RBRACKET COLON tipo_compuesto

    COLON           shift and go to state 188
    LBRACKET        shift and go to state 187


state 155

    (102) expresion -> exp LT expresion .

    VAR             reduce using rule 102 (expresion -> exp LT expresion .)
    PUBLIC          reduce using rule 102 (expresion -> exp LT expresion .)
    IF              reduce using rule 102 (expresion -> exp LT expresion .)
    PRIVATE         reduce using rule 102 (expresion -> exp LT expresion .)
    PROTECTED       reduce using rule 102 (expresion -> exp LT expresion .)
    ID              reduce using rule 102 (expresion -> exp LT expresion .)
    PRINT           reduce using rule 102 (expresion -> exp LT expresion .)
    READ            reduce using rule 102 (expresion -> exp LT expresion .)
    WHILE           reduce using rule 102 (expresion -> exp LT expresion .)
    RBRACE          reduce using rule 102 (expresion -> exp LT expresion .)
    RETURN          reduce using rule 102 (expresion -> exp LT expresion .)
    AND             reduce using rule 102 (expresion -> exp LT expresion .)
    OR              reduce using rule 102 (expresion -> exp LT expresion .)
    RPAREN          reduce using rule 102 (expresion -> exp LT expresion .)
    COMMA           reduce using rule 102 (expresion -> exp LT expresion .)


state 156

    (103) expresion -> exp GT expresion .

    VAR             reduce using rule 103 (expresion -> exp GT expresion .)
    PUBLIC          reduce using rule 103 (expresion -> exp GT expresion .)
    IF              reduce using rule 103 (expresion -> exp GT expresion .)
    PRIVATE         reduce using rule 103 (expresion -> exp GT expresion .)
    PROTECTED       reduce using rule 103 (expresion -> exp GT expresion .)
    ID              reduce using rule 103 (expresion -> exp GT expresion .)
    PRINT           reduce using rule 103 (expresion -> exp GT expresion .)
    READ            reduce using rule 103 (expresion -> exp GT expresion .)
    WHILE           reduce using rule 103 (expresion -> exp GT expresion .)
    RBRACE          reduce using rule 103 (expresion -> exp GT expresion .)
    RETURN          reduce using rule 103 (expresion -> exp GT expresion .)
    AND             reduce using rule 103 (expresion -> exp GT expresion .)
    OR              reduce using rule 103 (expresion -> exp GT expresion .)
    RPAREN          reduce using rule 103 (expresion -> exp GT expresion .)
    COMMA           reduce using rule 103 (expresion -> exp GT expresion .)


state 157

    (104) expresion -> exp GE expresion .

    VAR             reduce using rule 104 (expresion -> exp GE expresion .)
    PUBLIC          reduce using rule 104 (expresion -> exp GE expresion .)
    IF              reduce using rule 104 (expresion -> exp GE expresion .)
    PRIVATE         reduce using rule 104 (expresion -> exp GE expresion .)
    PROTECTED       reduce using rule 104 (expresion -> exp GE expresion .)
    ID              reduce using rule 104 (expresion -> exp GE expresion .)
    PRINT           reduce using rule 104 (expresion -> exp GE expresion .)
    READ            reduce using rule 104 (expresion -> exp GE expresion .)
    WHILE           reduce using rule 104 (expresion -> exp GE expresion .)
    RBRACE          reduce using rule 104 (expresion -> exp GE expresion .)
    RETURN          reduce using rule 104 (expresion -> exp GE expresion .)
    AND             reduce using rule 104 (expresion -> exp GE expresion .)
    OR              reduce using rule 104 (expresion -> exp GE expresion .)
    RPAREN          reduce using rule 104 (expresion -> exp GE expresion .)
    COMMA           reduce using rule 104 (expresion -> exp GE expresion .)


state 158

    (105) expresion -> exp LE expresion .

    VAR             reduce using rule 105 (expresion -> exp LE expresion .)
    PUBLIC          reduce using rule 105 (expresion -> exp LE expresion .)
    IF              reduce using rule 105 (expresion -> exp LE expresion .)
    PRIVATE         reduce using rule 105 (expresion -> exp LE expresion .)
    PROTECTED       reduce using rule 105 (expresion -> exp LE expresion .)
    ID              reduce using rule 105 (expresion -> exp LE expresion .)
    PRINT           reduce using rule 105 (expresion -> exp LE expresion .)
    READ            reduce using rule 105 (expresion -> exp LE expresion .)
    WHILE           reduce using rule 105 (expresion -> exp LE expresion .)
    RBRACE          reduce using rule 105 (expresion -> exp LE expresion .)
    RETURN          reduce using rule 105 (expresion -> exp LE expresion .)
    AND             reduce using rule 105 (expresion -> exp LE expresion .)
    OR              reduce using rule 105 (expresion -> exp LE expresion .)
    RPAREN          reduce using rule 105 (expresion -> exp LE expresion .)
    COMMA           reduce using rule 105 (expresion -> exp LE expresion .)


state 159

    (106) expresion -> exp EQ expresion .

    VAR             reduce using rule 106 (expresion -> exp EQ expresion .)
    PUBLIC          reduce using rule 106 (expresion -> exp EQ expresion .)
    IF              reduce using rule 106 (expresion -> exp EQ expresion .)
    PRIVATE         reduce using rule 106 (expresion -> exp EQ expresion .)
    PROTECTED       reduce using rule 106 (expresion -> exp EQ expresion .)
    ID              reduce using rule 106 (expresion -> exp EQ expresion .)
    PRINT           reduce using rule 106 (expresion -> exp EQ expresion .)
    READ            reduce using rule 106 (expresion -> exp EQ expresion .)
    WHILE           reduce using rule 106 (expresion -> exp EQ expresion .)
    RBRACE          reduce using rule 106 (expresion -> exp EQ expresion .)
    RETURN          reduce using rule 106 (expresion -> exp EQ expresion .)
    AND             reduce using rule 106 (expresion -> exp EQ expresion .)
    OR              reduce using rule 106 (expresion -> exp EQ expresion .)
    RPAREN          reduce using rule 106 (expresion -> exp EQ expresion .)
    COMMA           reduce using rule 106 (expresion -> exp EQ expresion .)


state 160

    (107) expresion -> exp NE expresion .

    VAR             reduce using rule 107 (expresion -> exp NE expresion .)
    PUBLIC          reduce using rule 107 (expresion -> exp NE expresion .)
    IF              reduce using rule 107 (expresion -> exp NE expresion .)
    PRIVATE         reduce using rule 107 (expresion -> exp NE expresion .)
    PROTECTED       reduce using rule 107 (expresion -> exp NE expresion .)
    ID              reduce using rule 107 (expresion -> exp NE expresion .)
    PRINT           reduce using rule 107 (expresion -> exp NE expresion .)
    READ            reduce using rule 107 (expresion -> exp NE expresion .)
    WHILE           reduce using rule 107 (expresion -> exp NE expresion .)
    RBRACE          reduce using rule 107 (expresion -> exp NE expresion .)
    RETURN          reduce using rule 107 (expresion -> exp NE expresion .)
    AND             reduce using rule 107 (expresion -> exp NE expresion .)
    OR              reduce using rule 107 (expresion -> exp NE expresion .)
    RPAREN          reduce using rule 107 (expresion -> exp NE expresion .)
    COMMA           reduce using rule 107 (expresion -> exp NE expresion .)


state 161

    (109) exp -> exp PLUS termino .
    (112) termino -> termino . TIMES factor
    (113) termino -> termino . DIVIDE factor
    (114) termino -> termino . MODULO factor

    LT              reduce using rule 109 (exp -> exp PLUS termino .)
    GT              reduce using rule 109 (exp -> exp PLUS termino .)
    GE              reduce using rule 109 (exp -> exp PLUS termino .)
    LE              reduce using rule 109 (exp -> exp PLUS termino .)
    EQ              reduce using rule 109 (exp -> exp PLUS termino .)
    NE              reduce using rule 109 (exp -> exp PLUS termino .)
    PLUS            reduce using rule 109 (exp -> exp PLUS termino .)
    MINUS           reduce using rule 109 (exp -> exp PLUS termino .)
    VAR             reduce using rule 109 (exp -> exp PLUS termino .)
    PUBLIC          reduce using rule 109 (exp -> exp PLUS termino .)
    IF              reduce using rule 109 (exp -> exp PLUS termino .)
    PRIVATE         reduce using rule 109 (exp -> exp PLUS termino .)
    PROTECTED       reduce using rule 109 (exp -> exp PLUS termino .)
    ID              reduce using rule 109 (exp -> exp PLUS termino .)
    PRINT           reduce using rule 109 (exp -> exp PLUS termino .)
    READ            reduce using rule 109 (exp -> exp PLUS termino .)
    WHILE           reduce using rule 109 (exp -> exp PLUS termino .)
    RBRACE          reduce using rule 109 (exp -> exp PLUS termino .)
    RETURN          reduce using rule 109 (exp -> exp PLUS termino .)
    RBRACKET        reduce using rule 109 (exp -> exp PLUS termino .)
    COMMA           reduce using rule 109 (exp -> exp PLUS termino .)
    RPAREN          reduce using rule 109 (exp -> exp PLUS termino .)
    AND             reduce using rule 109 (exp -> exp PLUS termino .)
    OR              reduce using rule 109 (exp -> exp PLUS termino .)
    TIMES           shift and go to state 125
    DIVIDE          shift and go to state 126
    MODULO          shift and go to state 127


state 162

    (110) exp -> exp MINUS termino .
    (112) termino -> termino . TIMES factor
    (113) termino -> termino . DIVIDE factor
    (114) termino -> termino . MODULO factor

    LT              reduce using rule 110 (exp -> exp MINUS termino .)
    GT              reduce using rule 110 (exp -> exp MINUS termino .)
    GE              reduce using rule 110 (exp -> exp MINUS termino .)
    LE              reduce using rule 110 (exp -> exp MINUS termino .)
    EQ              reduce using rule 110 (exp -> exp MINUS termino .)
    NE              reduce using rule 110 (exp -> exp MINUS termino .)
    PLUS            reduce using rule 110 (exp -> exp MINUS termino .)
    MINUS           reduce using rule 110 (exp -> exp MINUS termino .)
    VAR             reduce using rule 110 (exp -> exp MINUS termino .)
    PUBLIC          reduce using rule 110 (exp -> exp MINUS termino .)
    IF              reduce using rule 110 (exp -> exp MINUS termino .)
    PRIVATE         reduce using rule 110 (exp -> exp MINUS termino .)
    PROTECTED       reduce using rule 110 (exp -> exp MINUS termino .)
    ID              reduce using rule 110 (exp -> exp MINUS termino .)
    PRINT           reduce using rule 110 (exp -> exp MINUS termino .)
    READ            reduce using rule 110 (exp -> exp MINUS termino .)
    WHILE           reduce using rule 110 (exp -> exp MINUS termino .)
    RBRACE          reduce using rule 110 (exp -> exp MINUS termino .)
    RETURN          reduce using rule 110 (exp -> exp MINUS termino .)
    RBRACKET        reduce using rule 110 (exp -> exp MINUS termino .)
    COMMA           reduce using rule 110 (exp -> exp MINUS termino .)
    RPAREN          reduce using rule 110 (exp -> exp MINUS termino .)
    AND             reduce using rule 110 (exp -> exp MINUS termino .)
    OR              reduce using rule 110 (exp -> exp MINUS termino .)
    TIMES           shift and go to state 125
    DIVIDE          shift and go to state 126
    MODULO          shift and go to state 127


state 163

    (115) factor -> LPAREN exp_cond RPAREN .

    TIMES           reduce using rule 115 (factor -> LPAREN exp_cond RPAREN .)
    DIVIDE          reduce using rule 115 (factor -> LPAREN exp_cond RPAREN .)
    MODULO          reduce using rule 115 (factor -> LPAREN exp_cond RPAREN .)
    LT              reduce using rule 115 (factor -> LPAREN exp_cond RPAREN .)
    GT              reduce using rule 115 (factor -> LPAREN exp_cond RPAREN .)
    GE              reduce using rule 115 (factor -> LPAREN exp_cond RPAREN .)
    LE              reduce using rule 115 (factor -> LPAREN exp_cond RPAREN .)
    EQ              reduce using rule 115 (factor -> LPAREN exp_cond RPAREN .)
    NE              reduce using rule 115 (factor -> LPAREN exp_cond RPAREN .)
    PLUS            reduce using rule 115 (factor -> LPAREN exp_cond RPAREN .)
    MINUS           reduce using rule 115 (factor -> LPAREN exp_cond RPAREN .)
    VAR             reduce using rule 115 (factor -> LPAREN exp_cond RPAREN .)
    PUBLIC          reduce using rule 115 (factor -> LPAREN exp_cond RPAREN .)
    IF              reduce using rule 115 (factor -> LPAREN exp_cond RPAREN .)
    PRIVATE         reduce using rule 115 (factor -> LPAREN exp_cond RPAREN .)
    PROTECTED       reduce using rule 115 (factor -> LPAREN exp_cond RPAREN .)
    ID              reduce using rule 115 (factor -> LPAREN exp_cond RPAREN .)
    PRINT           reduce using rule 115 (factor -> LPAREN exp_cond RPAREN .)
    READ            reduce using rule 115 (factor -> LPAREN exp_cond RPAREN .)
    WHILE           reduce using rule 115 (factor -> LPAREN exp_cond RPAREN .)
    RBRACE          reduce using rule 115 (factor -> LPAREN exp_cond RPAREN .)
    RETURN          reduce using rule 115 (factor -> LPAREN exp_cond RPAREN .)
    RBRACKET        reduce using rule 115 (factor -> LPAREN exp_cond RPAREN .)
    COMMA           reduce using rule 115 (factor -> LPAREN exp_cond RPAREN .)
    RPAREN          reduce using rule 115 (factor -> LPAREN exp_cond RPAREN .)
    AND             reduce using rule 115 (factor -> LPAREN exp_cond RPAREN .)
    OR              reduce using rule 115 (factor -> LPAREN exp_cond RPAREN .)


state 164

    (112) termino -> termino TIMES factor .

    TIMES           reduce using rule 112 (termino -> termino TIMES factor .)
    DIVIDE          reduce using rule 112 (termino -> termino TIMES factor .)
    MODULO          reduce using rule 112 (termino -> termino TIMES factor .)
    LT              reduce using rule 112 (termino -> termino TIMES factor .)
    GT              reduce using rule 112 (termino -> termino TIMES factor .)
    GE              reduce using rule 112 (termino -> termino TIMES factor .)
    LE              reduce using rule 112 (termino -> termino TIMES factor .)
    EQ              reduce using rule 112 (termino -> termino TIMES factor .)
    NE              reduce using rule 112 (termino -> termino TIMES factor .)
    PLUS            reduce using rule 112 (termino -> termino TIMES factor .)
    MINUS           reduce using rule 112 (termino -> termino TIMES factor .)
    VAR             reduce using rule 112 (termino -> termino TIMES factor .)
    PUBLIC          reduce using rule 112 (termino -> termino TIMES factor .)
    IF              reduce using rule 112 (termino -> termino TIMES factor .)
    PRIVATE         reduce using rule 112 (termino -> termino TIMES factor .)
    PROTECTED       reduce using rule 112 (termino -> termino TIMES factor .)
    ID              reduce using rule 112 (termino -> termino TIMES factor .)
    PRINT           reduce using rule 112 (termino -> termino TIMES factor .)
    READ            reduce using rule 112 (termino -> termino TIMES factor .)
    WHILE           reduce using rule 112 (termino -> termino TIMES factor .)
    RBRACE          reduce using rule 112 (termino -> termino TIMES factor .)
    RETURN          reduce using rule 112 (termino -> termino TIMES factor .)
    RBRACKET        reduce using rule 112 (termino -> termino TIMES factor .)
    COMMA           reduce using rule 112 (termino -> termino TIMES factor .)
    RPAREN          reduce using rule 112 (termino -> termino TIMES factor .)
    AND             reduce using rule 112 (termino -> termino TIMES factor .)
    OR              reduce using rule 112 (termino -> termino TIMES factor .)


state 165

    (113) termino -> termino DIVIDE factor .

    TIMES           reduce using rule 113 (termino -> termino DIVIDE factor .)
    DIVIDE          reduce using rule 113 (termino -> termino DIVIDE factor .)
    MODULO          reduce using rule 113 (termino -> termino DIVIDE factor .)
    LT              reduce using rule 113 (termino -> termino DIVIDE factor .)
    GT              reduce using rule 113 (termino -> termino DIVIDE factor .)
    GE              reduce using rule 113 (termino -> termino DIVIDE factor .)
    LE              reduce using rule 113 (termino -> termino DIVIDE factor .)
    EQ              reduce using rule 113 (termino -> termino DIVIDE factor .)
    NE              reduce using rule 113 (termino -> termino DIVIDE factor .)
    PLUS            reduce using rule 113 (termino -> termino DIVIDE factor .)
    MINUS           reduce using rule 113 (termino -> termino DIVIDE factor .)
    VAR             reduce using rule 113 (termino -> termino DIVIDE factor .)
    PUBLIC          reduce using rule 113 (termino -> termino DIVIDE factor .)
    IF              reduce using rule 113 (termino -> termino DIVIDE factor .)
    PRIVATE         reduce using rule 113 (termino -> termino DIVIDE factor .)
    PROTECTED       reduce using rule 113 (termino -> termino DIVIDE factor .)
    ID              reduce using rule 113 (termino -> termino DIVIDE factor .)
    PRINT           reduce using rule 113 (termino -> termino DIVIDE factor .)
    READ            reduce using rule 113 (termino -> termino DIVIDE factor .)
    WHILE           reduce using rule 113 (termino -> termino DIVIDE factor .)
    RBRACE          reduce using rule 113 (termino -> termino DIVIDE factor .)
    RETURN          reduce using rule 113 (termino -> termino DIVIDE factor .)
    RBRACKET        reduce using rule 113 (termino -> termino DIVIDE factor .)
    COMMA           reduce using rule 113 (termino -> termino DIVIDE factor .)
    RPAREN          reduce using rule 113 (termino -> termino DIVIDE factor .)
    AND             reduce using rule 113 (termino -> termino DIVIDE factor .)
    OR              reduce using rule 113 (termino -> termino DIVIDE factor .)


state 166

    (114) termino -> termino MODULO factor .

    TIMES           reduce using rule 114 (termino -> termino MODULO factor .)
    DIVIDE          reduce using rule 114 (termino -> termino MODULO factor .)
    MODULO          reduce using rule 114 (termino -> termino MODULO factor .)
    LT              reduce using rule 114 (termino -> termino MODULO factor .)
    GT              reduce using rule 114 (termino -> termino MODULO factor .)
    GE              reduce using rule 114 (termino -> termino MODULO factor .)
    LE              reduce using rule 114 (termino -> termino MODULO factor .)
    EQ              reduce using rule 114 (termino -> termino MODULO factor .)
    NE              reduce using rule 114 (termino -> termino MODULO factor .)
    PLUS            reduce using rule 114 (termino -> termino MODULO factor .)
    MINUS           reduce using rule 114 (termino -> termino MODULO factor .)
    VAR             reduce using rule 114 (termino -> termino MODULO factor .)
    PUBLIC          reduce using rule 114 (termino -> termino MODULO factor .)
    IF              reduce using rule 114 (termino -> termino MODULO factor .)
    PRIVATE         reduce using rule 114 (termino -> termino MODULO factor .)
    PROTECTED       reduce using rule 114 (termino -> termino MODULO factor .)
    ID              reduce using rule 114 (termino -> termino MODULO factor .)
    PRINT           reduce using rule 114 (termino -> termino MODULO factor .)
    READ            reduce using rule 114 (termino -> termino MODULO factor .)
    WHILE           reduce using rule 114 (termino -> termino MODULO factor .)
    RBRACE          reduce using rule 114 (termino -> termino MODULO factor .)
    RETURN          reduce using rule 114 (termino -> termino MODULO factor .)
    RBRACKET        reduce using rule 114 (termino -> termino MODULO factor .)
    COMMA           reduce using rule 114 (termino -> termino MODULO factor .)
    RPAREN          reduce using rule 114 (termino -> termino MODULO factor .)
    AND             reduce using rule 114 (termino -> termino MODULO factor .)
    OR              reduce using rule 114 (termino -> termino MODULO factor .)


state 167

    (129) objeto_aAcceso -> ID PERIOD ID .

    TIMES           reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    DIVIDE          reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    MODULO          reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACKET        reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    PLUS            reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    MINUS           reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    COMMA           reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    RPAREN          reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    LT              reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    GT              reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    GE              reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    LE              reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    EQ              reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    NE              reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    AND             reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    OR              reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    VAR             reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    PUBLIC          reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    IF              reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    PRIVATE         reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    PROTECTED       reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    ID              reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    PRINT           reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    READ            reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    WHILE           reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACE          reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)
    RETURN          reduce using rule 129 (objeto_aAcceso -> ID PERIOD ID .)


state 168

    (84) asignacion -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS expresion
    (85) asignacion -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS llamada_func
    (86) asignacion -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              shift and go to state 78
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    exp                            shift and go to state 189
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 169

    (78) asignacion -> ID LBRACKET exp RBRACKET EQUALS . expresion
    (79) asignacion -> ID LBRACKET exp RBRACKET EQUALS . llamada_func
    (80) asignacion -> ID LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (101) expresion -> . exp
    (102) expresion -> . exp LT expresion
    (103) expresion -> . exp GT expresion
    (104) expresion -> . exp GE expresion
    (105) expresion -> . exp LE expresion
    (106) expresion -> . exp EQ expresion
    (107) expresion -> . exp NE expresion
    (91) llamada_func -> . ID LPAREN aux RPAREN
    (90) objeto_metodo -> . ID PERIOD llamada_func
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    ID              shift and go to state 60
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    exp                            shift and go to state 64
    expresion                      shift and go to state 190
    llamada_func                   shift and go to state 191
    objeto_metodo                  shift and go to state 192
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 170

    (93) aux -> exp COMMA aux .

    RPAREN          reduce using rule 93 (aux -> exp COMMA aux .)


state 171

    (25) constructor -> PUBLIC ID LPAREN param RPAREN . bloque
    (26) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 175

    bloque                         shift and go to state 193

state 172

    (36) param -> tipo_simple ID .
    (37) param -> tipo_simple ID . COMMA param

    RPAREN          reduce using rule 36 (param -> tipo_simple ID .)
    COMMA           shift and go to state 194


state 173

    (27) funcion -> scope DEF ID LPAREN param . RPAREN contexto_func

    RPAREN          shift and go to state 195


state 174

    (18) condicion -> IF LPAREN gotoF RPAREN bloque .
    (19) condicion -> IF LPAREN gotoF RPAREN bloque . elif
    (20) elif -> . aux_elif ELIF LPAREN gotoF RPAREN bloque
    (21) elif -> . aux_elif ELIF LPAREN gotoF RPAREN bloque elif
    (22) aux_elif -> .

    VAR             reduce using rule 18 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    PUBLIC          reduce using rule 18 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    IF              reduce using rule 18 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    PRIVATE         reduce using rule 18 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    PROTECTED       reduce using rule 18 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    ID              reduce using rule 18 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    PRINT           reduce using rule 18 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    READ            reduce using rule 18 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    WHILE           reduce using rule 18 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    RBRACE          reduce using rule 18 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    ELIF            reduce using rule 22 (aux_elif -> .)

    elif                           shift and go to state 196
    aux_elif                       shift and go to state 197

state 175

    (26) bloque -> LBRACE . aux5 RBRACE
    (31) aux5 -> . vars
    (32) aux5 -> . estatuto
    (33) aux5 -> . vars aux5
    (34) aux5 -> . estatuto aux5
    (60) vars -> . VAR aux2 COLON tipo_simple
    (61) vars -> . VAR aux2 COLON tipo_compuesto
    (62) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (63) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (64) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (41) estatuto -> . asignacion
    (42) estatuto -> . escritura
    (43) estatuto -> . llamada_func
    (44) estatuto -> . objeto_metodo
    (45) estatuto -> . lectura
    (72) asignacion -> . ID EQUALS expresion
    (73) asignacion -> . ID EQUALS llamada_func
    (74) asignacion -> . ID EQUALS objeto_metodo
    (75) asignacion -> . objeto_aAcceso EQUALS expresion
    (76) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (77) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (78) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (79) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (80) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (81) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (83) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (84) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (87) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (88) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (51) escritura -> . PRINT LPAREN aux3 RPAREN
    (91) llamada_func -> . ID LPAREN aux RPAREN
    (90) objeto_metodo -> . ID PERIOD llamada_func
    (46) lectura -> . READ LPAREN aux4 RPAREN
    (129) objeto_aAcceso -> . ID PERIOD ID

    VAR             shift and go to state 20
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    aux5                           shift and go to state 198
    vars                           shift and go to state 199
    estatuto                       shift and go to state 200
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 176

    (96) exp_cond -> exp_bool AND exp_cond .

    RPAREN          reduce using rule 96 (exp_cond -> exp_bool AND exp_cond .)


state 177

    (97) exp_cond -> exp_bool OR exp_cond .

    RPAREN          reduce using rule 97 (exp_cond -> exp_bool OR exp_cond .)


state 178

    (23) ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN . bloque
    (26) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 175

    bloque                         shift and go to state 201

state 179

    (87) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET . exp RBRACKET EQUALS expresion
    (88) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET . exp RBRACKET EQUALS llamada_func
    (89) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET . exp RBRACKET EQUALS objeto_metodo
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              shift and go to state 78
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    objeto_aAcceso                 shift and go to state 70
    exp                            shift and go to state 202
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 180

    (81) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS . expresion
    (82) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS . llamada_func
    (83) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (101) expresion -> . exp
    (102) expresion -> . exp LT expresion
    (103) expresion -> . exp GT expresion
    (104) expresion -> . exp GE expresion
    (105) expresion -> . exp LE expresion
    (106) expresion -> . exp EQ expresion
    (107) expresion -> . exp NE expresion
    (91) llamada_func -> . ID LPAREN aux RPAREN
    (90) objeto_metodo -> . ID PERIOD llamada_func
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    ID              shift and go to state 60
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    objeto_aAcceso                 shift and go to state 70
    exp                            shift and go to state 64
    expresion                      shift and go to state 203
    llamada_func                   shift and go to state 204
    objeto_metodo                  shift and go to state 205
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 181

    (56) aux3 -> expresion COMMA aux3 .

    RPAREN          reduce using rule 56 (aux3 -> expresion COMMA aux3 .)


state 182

    (57) aux3 -> llamada_func COMMA aux3 .

    RPAREN          reduce using rule 57 (aux3 -> llamada_func COMMA aux3 .)


state 183

    (58) aux3 -> objeto_metodo COMMA aux3 .

    RPAREN          reduce using rule 58 (aux3 -> objeto_metodo COMMA aux3 .)


state 184

    (59) aux3 -> CSTRING COMMA aux3 .

    RPAREN          reduce using rule 59 (aux3 -> CSTRING COMMA aux3 .)


state 185

    (49) aux4 -> ID COMMA aux4 .

    RPAREN          reduce using rule 49 (aux4 -> ID COMMA aux4 .)


state 186

    (50) aux4 -> objeto_aAcceso COMMA aux4 .

    RPAREN          reduce using rule 50 (aux4 -> objeto_aAcceso COMMA aux4 .)


state 187

    (64) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET . cint RBRACKET COLON tipo_simple
    (65) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET . cint RBRACKET COLON tipo_compuesto
    (126) cint -> . CINT

    CINT            shift and go to state 75

    cint                           shift and go to state 206

state 188

    (62) vars -> VAR ID LBRACKET cint RBRACKET COLON . tipo_simple
    (63) vars -> VAR ID LBRACKET cint RBRACKET COLON . tipo_compuesto
    (68) tipo_simple -> . INT
    (69) tipo_simple -> . FLOAT
    (70) tipo_simple -> . CHAR
    (71) tipo_compuesto -> . ID

    INT             shift and go to state 109
    FLOAT           shift and go to state 110
    CHAR            shift and go to state 111
    ID              shift and go to state 112

    tipo_simple                    shift and go to state 207
    tipo_compuesto                 shift and go to state 208

state 189

    (84) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS expresion
    (85) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS llamada_func
    (86) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (109) exp -> exp . PLUS termino
    (110) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 209
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123


state 190

    (78) asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .

    VAR             reduce using rule 78 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 78 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 78 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 78 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 78 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    ID              reduce using rule 78 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 78 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 78 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 78 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 78 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 78 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)


state 191

    (79) asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .

    VAR             reduce using rule 79 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 79 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 79 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 79 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 79 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 79 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 79 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 79 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 79 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 79 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 79 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)


state 192

    (80) asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 80 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 80 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 80 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 80 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 80 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 80 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 80 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 80 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 80 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 80 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 80 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 193

    (25) constructor -> PUBLIC ID LPAREN param RPAREN bloque .

    VAR             reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PUBLIC          reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    IF              reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PRIVATE         reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PROTECTED       reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    ID              reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PRINT           reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    READ            reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    WHILE           reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    RBRACE          reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)


state 194

    (37) param -> tipo_simple ID COMMA . param
    (35) param -> .
    (36) param -> . tipo_simple ID
    (37) param -> . tipo_simple ID COMMA param
    (68) tipo_simple -> . INT
    (69) tipo_simple -> . FLOAT
    (70) tipo_simple -> . CHAR

    RPAREN          reduce using rule 35 (param -> .)
    INT             shift and go to state 109
    FLOAT           shift and go to state 110
    CHAR            shift and go to state 111

    tipo_simple                    shift and go to state 138
    param                          shift and go to state 210

state 195

    (27) funcion -> scope DEF ID LPAREN param RPAREN . contexto_func
    (28) contexto_func -> . LBRACE aux5 RBRACE
    (29) contexto_func -> . LBRACE aux5 RETURN INT ID RBRACE
    (30) contexto_func -> . LBRACE aux5 RETURN FLOAT ID RBRACE

    LBRACE          shift and go to state 212

    contexto_func                  shift and go to state 211

state 196

    (19) condicion -> IF LPAREN gotoF RPAREN bloque elif .

    VAR             reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    PUBLIC          reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    IF              reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    PRIVATE         reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    PROTECTED       reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    ID              reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    PRINT           reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    READ            reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    WHILE           reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    RBRACE          reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)


state 197

    (20) elif -> aux_elif . ELIF LPAREN gotoF RPAREN bloque
    (21) elif -> aux_elif . ELIF LPAREN gotoF RPAREN bloque elif

    ELIF            shift and go to state 213


state 198

    (26) bloque -> LBRACE aux5 . RBRACE

    RBRACE          shift and go to state 214


state 199

    (31) aux5 -> vars .
    (33) aux5 -> vars . aux5
    (31) aux5 -> . vars
    (32) aux5 -> . estatuto
    (33) aux5 -> . vars aux5
    (34) aux5 -> . estatuto aux5
    (60) vars -> . VAR aux2 COLON tipo_simple
    (61) vars -> . VAR aux2 COLON tipo_compuesto
    (62) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (63) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (64) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (41) estatuto -> . asignacion
    (42) estatuto -> . escritura
    (43) estatuto -> . llamada_func
    (44) estatuto -> . objeto_metodo
    (45) estatuto -> . lectura
    (72) asignacion -> . ID EQUALS expresion
    (73) asignacion -> . ID EQUALS llamada_func
    (74) asignacion -> . ID EQUALS objeto_metodo
    (75) asignacion -> . objeto_aAcceso EQUALS expresion
    (76) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (77) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (78) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (79) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (80) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (81) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (83) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (84) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (87) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (88) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (51) escritura -> . PRINT LPAREN aux3 RPAREN
    (91) llamada_func -> . ID LPAREN aux RPAREN
    (90) objeto_metodo -> . ID PERIOD llamada_func
    (46) lectura -> . READ LPAREN aux4 RPAREN
    (129) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 31 (aux5 -> vars .)
    RETURN          reduce using rule 31 (aux5 -> vars .)
    VAR             shift and go to state 20
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    vars                           shift and go to state 199
    aux5                           shift and go to state 215
    estatuto                       shift and go to state 200
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 200

    (32) aux5 -> estatuto .
    (34) aux5 -> estatuto . aux5
    (31) aux5 -> . vars
    (32) aux5 -> . estatuto
    (33) aux5 -> . vars aux5
    (34) aux5 -> . estatuto aux5
    (60) vars -> . VAR aux2 COLON tipo_simple
    (61) vars -> . VAR aux2 COLON tipo_compuesto
    (62) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (63) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (64) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (41) estatuto -> . asignacion
    (42) estatuto -> . escritura
    (43) estatuto -> . llamada_func
    (44) estatuto -> . objeto_metodo
    (45) estatuto -> . lectura
    (72) asignacion -> . ID EQUALS expresion
    (73) asignacion -> . ID EQUALS llamada_func
    (74) asignacion -> . ID EQUALS objeto_metodo
    (75) asignacion -> . objeto_aAcceso EQUALS expresion
    (76) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (77) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (78) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (79) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (80) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (81) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (83) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (84) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (87) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (88) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (51) escritura -> . PRINT LPAREN aux3 RPAREN
    (91) llamada_func -> . ID LPAREN aux RPAREN
    (90) objeto_metodo -> . ID PERIOD llamada_func
    (46) lectura -> . READ LPAREN aux4 RPAREN
    (129) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 32 (aux5 -> estatuto .)
    RETURN          reduce using rule 32 (aux5 -> estatuto .)
    VAR             shift and go to state 20
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    estatuto                       shift and go to state 200
    aux5                           shift and go to state 216
    vars                           shift and go to state 199
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 201

    (23) ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .

    VAR             reduce using rule 23 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    PUBLIC          reduce using rule 23 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    IF              reduce using rule 23 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    PRIVATE         reduce using rule 23 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    PROTECTED       reduce using rule 23 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    ID              reduce using rule 23 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    PRINT           reduce using rule 23 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    READ            reduce using rule 23 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    WHILE           reduce using rule 23 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    RBRACE          reduce using rule 23 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)


state 202

    (87) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp . RBRACKET EQUALS expresion
    (88) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp . RBRACKET EQUALS llamada_func
    (89) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp . RBRACKET EQUALS objeto_metodo
    (109) exp -> exp . PLUS termino
    (110) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 217
    PLUS            shift and go to state 122
    MINUS           shift and go to state 123


state 203

    (81) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .

    VAR             reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    ID              reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)


state 204

    (82) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .

    VAR             reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)


state 205

    (83) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 83 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 83 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 83 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 83 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 83 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 83 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 83 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 83 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 83 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 83 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 83 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 206

    (64) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint . RBRACKET COLON tipo_simple
    (65) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint . RBRACKET COLON tipo_compuesto

    RBRACKET        shift and go to state 218


state 207

    (62) vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .

    VAR             reduce using rule 62 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PUBLIC          reduce using rule 62 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    IF              reduce using rule 62 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PRIVATE         reduce using rule 62 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PROTECTED       reduce using rule 62 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    ID              reduce using rule 62 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PRINT           reduce using rule 62 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    READ            reduce using rule 62 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    WHILE           reduce using rule 62 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    RBRACE          reduce using rule 62 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    RETURN          reduce using rule 62 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)


state 208

    (63) vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .

    VAR             reduce using rule 63 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PUBLIC          reduce using rule 63 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    IF              reduce using rule 63 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRIVATE         reduce using rule 63 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PROTECTED       reduce using rule 63 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    ID              reduce using rule 63 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRINT           reduce using rule 63 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    READ            reduce using rule 63 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    WHILE           reduce using rule 63 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RBRACE          reduce using rule 63 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RETURN          reduce using rule 63 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)


state 209

    (84) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS expresion
    (85) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS llamada_func
    (86) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS objeto_metodo

    EQUALS          shift and go to state 219


state 210

    (37) param -> tipo_simple ID COMMA param .

    RPAREN          reduce using rule 37 (param -> tipo_simple ID COMMA param .)


state 211

    (27) funcion -> scope DEF ID LPAREN param RPAREN contexto_func .

    VAR             reduce using rule 27 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    PUBLIC          reduce using rule 27 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    IF              reduce using rule 27 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    PRIVATE         reduce using rule 27 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    PROTECTED       reduce using rule 27 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    ID              reduce using rule 27 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    PRINT           reduce using rule 27 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    READ            reduce using rule 27 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    WHILE           reduce using rule 27 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    RBRACE          reduce using rule 27 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)


state 212

    (28) contexto_func -> LBRACE . aux5 RBRACE
    (29) contexto_func -> LBRACE . aux5 RETURN INT ID RBRACE
    (30) contexto_func -> LBRACE . aux5 RETURN FLOAT ID RBRACE
    (31) aux5 -> . vars
    (32) aux5 -> . estatuto
    (33) aux5 -> . vars aux5
    (34) aux5 -> . estatuto aux5
    (60) vars -> . VAR aux2 COLON tipo_simple
    (61) vars -> . VAR aux2 COLON tipo_compuesto
    (62) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (63) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (64) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (41) estatuto -> . asignacion
    (42) estatuto -> . escritura
    (43) estatuto -> . llamada_func
    (44) estatuto -> . objeto_metodo
    (45) estatuto -> . lectura
    (72) asignacion -> . ID EQUALS expresion
    (73) asignacion -> . ID EQUALS llamada_func
    (74) asignacion -> . ID EQUALS objeto_metodo
    (75) asignacion -> . objeto_aAcceso EQUALS expresion
    (76) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (77) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (78) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (79) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (80) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (81) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (82) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (83) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (84) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (85) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (86) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (87) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (88) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (89) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (51) escritura -> . PRINT LPAREN aux3 RPAREN
    (91) llamada_func -> . ID LPAREN aux RPAREN
    (90) objeto_metodo -> . ID PERIOD llamada_func
    (46) lectura -> . READ LPAREN aux4 RPAREN
    (129) objeto_aAcceso -> . ID PERIOD ID

    VAR             shift and go to state 20
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    aux5                           shift and go to state 220
    vars                           shift and go to state 199
    estatuto                       shift and go to state 200
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 213

    (20) elif -> aux_elif ELIF . LPAREN gotoF RPAREN bloque
    (21) elif -> aux_elif ELIF . LPAREN gotoF RPAREN bloque elif

    LPAREN          shift and go to state 221


state 214

    (26) bloque -> LBRACE aux5 RBRACE .

    ELIF            reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    VAR             reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    PUBLIC          reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    IF              reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    PRIVATE         reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    PROTECTED       reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    ID              reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    PRINT           reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    READ            reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    WHILE           reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    RBRACE          reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)


state 215

    (33) aux5 -> vars aux5 .

    RBRACE          reduce using rule 33 (aux5 -> vars aux5 .)
    RETURN          reduce using rule 33 (aux5 -> vars aux5 .)


state 216

    (34) aux5 -> estatuto aux5 .

    RBRACE          reduce using rule 34 (aux5 -> estatuto aux5 .)
    RETURN          reduce using rule 34 (aux5 -> estatuto aux5 .)


state 217

    (87) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET . EQUALS expresion
    (88) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET . EQUALS llamada_func
    (89) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET . EQUALS objeto_metodo

    EQUALS          shift and go to state 222


state 218

    (64) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET . COLON tipo_simple
    (65) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET . COLON tipo_compuesto

    COLON           shift and go to state 223


state 219

    (84) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . expresion
    (85) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . llamada_func
    (86) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (101) expresion -> . exp
    (102) expresion -> . exp LT expresion
    (103) expresion -> . exp GT expresion
    (104) expresion -> . exp GE expresion
    (105) expresion -> . exp LE expresion
    (106) expresion -> . exp EQ expresion
    (107) expresion -> . exp NE expresion
    (91) llamada_func -> . ID LPAREN aux RPAREN
    (90) objeto_metodo -> . ID PERIOD llamada_func
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    ID              shift and go to state 60
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    exp                            shift and go to state 64
    expresion                      shift and go to state 224
    llamada_func                   shift and go to state 225
    objeto_metodo                  shift and go to state 226
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 220

    (28) contexto_func -> LBRACE aux5 . RBRACE
    (29) contexto_func -> LBRACE aux5 . RETURN INT ID RBRACE
    (30) contexto_func -> LBRACE aux5 . RETURN FLOAT ID RBRACE

    RBRACE          shift and go to state 227
    RETURN          shift and go to state 228


state 221

    (20) elif -> aux_elif ELIF LPAREN . gotoF RPAREN bloque
    (21) elif -> aux_elif ELIF LPAREN . gotoF RPAREN bloque elif
    (94) gotoF -> . exp_cond
    (95) exp_cond -> . exp_bool
    (96) exp_cond -> . exp_bool AND exp_cond
    (97) exp_cond -> . exp_bool OR exp_cond
    (98) exp_bool -> . TRUE
    (99) exp_bool -> . FALSE
    (100) exp_bool -> . expresion
    (101) expresion -> . exp
    (102) expresion -> . exp LT expresion
    (103) expresion -> . exp GT expresion
    (104) expresion -> . exp GE expresion
    (105) expresion -> . exp LE expresion
    (106) expresion -> . exp EQ expresion
    (107) expresion -> . exp NE expresion
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              shift and go to state 78
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    gotoF                          shift and go to state 229
    exp_cond                       shift and go to state 87
    exp_bool                       shift and go to state 88
    expresion                      shift and go to state 91
    exp                            shift and go to state 64
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    objeto_aAcceso                 shift and go to state 70
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 222

    (87) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS . expresion
    (88) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS . llamada_func
    (89) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS . objeto_metodo
    (101) expresion -> . exp
    (102) expresion -> . exp LT expresion
    (103) expresion -> . exp GT expresion
    (104) expresion -> . exp GE expresion
    (105) expresion -> . exp LE expresion
    (106) expresion -> . exp EQ expresion
    (107) expresion -> . exp NE expresion
    (91) llamada_func -> . ID LPAREN aux RPAREN
    (90) objeto_metodo -> . ID PERIOD llamada_func
    (108) exp -> . termino
    (109) exp -> . exp PLUS termino
    (110) exp -> . exp MINUS termino
    (111) termino -> . factor
    (112) termino -> . termino TIMES factor
    (113) termino -> . termino DIVIDE factor
    (114) termino -> . termino MODULO factor
    (115) factor -> . LPAREN exp_cond RPAREN
    (116) factor -> . PLUS objeto_aAcceso
    (117) factor -> . MINUS objeto_aAcceso
    (118) factor -> . PLUS var
    (119) factor -> . MINUS var
    (120) factor -> . var
    (121) factor -> . objeto_aAcceso
    (122) var -> . ID
    (123) var -> . cint
    (124) var -> . cfloat
    (125) var -> . cchar
    (129) objeto_aAcceso -> . ID PERIOD ID
    (126) cint -> . CINT
    (127) cfloat -> . NUMBER
    (128) cchar -> . CCHAR

    ID              shift and go to state 60
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    CINT            shift and go to state 75
    NUMBER          shift and go to state 76
    CCHAR           shift and go to state 77

    objeto_aAcceso                 shift and go to state 70
    exp                            shift and go to state 64
    expresion                      shift and go to state 230
    llamada_func                   shift and go to state 231
    objeto_metodo                  shift and go to state 232
    termino                        shift and go to state 66
    factor                         shift and go to state 69
    var                            shift and go to state 71
    cint                           shift and go to state 72
    cfloat                         shift and go to state 73
    cchar                          shift and go to state 74

state 223

    (64) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON . tipo_simple
    (65) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON . tipo_compuesto
    (68) tipo_simple -> . INT
    (69) tipo_simple -> . FLOAT
    (70) tipo_simple -> . CHAR
    (71) tipo_compuesto -> . ID

    INT             shift and go to state 109
    FLOAT           shift and go to state 110
    CHAR            shift and go to state 111
    ID              shift and go to state 112

    tipo_simple                    shift and go to state 233
    tipo_compuesto                 shift and go to state 234

state 224

    (84) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .

    VAR             reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    ID              reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)


state 225

    (85) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .

    VAR             reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)


state 226

    (86) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 227

    (28) contexto_func -> LBRACE aux5 RBRACE .

    VAR             reduce using rule 28 (contexto_func -> LBRACE aux5 RBRACE .)
    PUBLIC          reduce using rule 28 (contexto_func -> LBRACE aux5 RBRACE .)
    IF              reduce using rule 28 (contexto_func -> LBRACE aux5 RBRACE .)
    PRIVATE         reduce using rule 28 (contexto_func -> LBRACE aux5 RBRACE .)
    PROTECTED       reduce using rule 28 (contexto_func -> LBRACE aux5 RBRACE .)
    ID              reduce using rule 28 (contexto_func -> LBRACE aux5 RBRACE .)
    PRINT           reduce using rule 28 (contexto_func -> LBRACE aux5 RBRACE .)
    READ            reduce using rule 28 (contexto_func -> LBRACE aux5 RBRACE .)
    WHILE           reduce using rule 28 (contexto_func -> LBRACE aux5 RBRACE .)
    RBRACE          reduce using rule 28 (contexto_func -> LBRACE aux5 RBRACE .)


state 228

    (29) contexto_func -> LBRACE aux5 RETURN . INT ID RBRACE
    (30) contexto_func -> LBRACE aux5 RETURN . FLOAT ID RBRACE

    INT             shift and go to state 235
    FLOAT           shift and go to state 236


state 229

    (20) elif -> aux_elif ELIF LPAREN gotoF . RPAREN bloque
    (21) elif -> aux_elif ELIF LPAREN gotoF . RPAREN bloque elif

    RPAREN          shift and go to state 237


state 230

    (87) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .

    VAR             reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    ID              reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)


state 231

    (88) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .

    VAR             reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)


state 232

    (89) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 233

    (64) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .

    VAR             reduce using rule 64 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PUBLIC          reduce using rule 64 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    IF              reduce using rule 64 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PRIVATE         reduce using rule 64 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PROTECTED       reduce using rule 64 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    ID              reduce using rule 64 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PRINT           reduce using rule 64 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    READ            reduce using rule 64 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    WHILE           reduce using rule 64 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    RBRACE          reduce using rule 64 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    RETURN          reduce using rule 64 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)


state 234

    (65) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .

    VAR             reduce using rule 65 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PUBLIC          reduce using rule 65 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    IF              reduce using rule 65 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRIVATE         reduce using rule 65 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PROTECTED       reduce using rule 65 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    ID              reduce using rule 65 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRINT           reduce using rule 65 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    READ            reduce using rule 65 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    WHILE           reduce using rule 65 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RBRACE          reduce using rule 65 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RETURN          reduce using rule 65 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)


state 235

    (29) contexto_func -> LBRACE aux5 RETURN INT . ID RBRACE

    ID              shift and go to state 238


state 236

    (30) contexto_func -> LBRACE aux5 RETURN FLOAT . ID RBRACE

    ID              shift and go to state 239


state 237

    (20) elif -> aux_elif ELIF LPAREN gotoF RPAREN . bloque
    (21) elif -> aux_elif ELIF LPAREN gotoF RPAREN . bloque elif
    (26) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 175

    bloque                         shift and go to state 240

state 238

    (29) contexto_func -> LBRACE aux5 RETURN INT ID . RBRACE

    RBRACE          shift and go to state 241


state 239

    (30) contexto_func -> LBRACE aux5 RETURN FLOAT ID . RBRACE

    RBRACE          shift and go to state 242


state 240

    (20) elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .
    (21) elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque . elif
    (20) elif -> . aux_elif ELIF LPAREN gotoF RPAREN bloque
    (21) elif -> . aux_elif ELIF LPAREN gotoF RPAREN bloque elif
    (22) aux_elif -> .

    VAR             reduce using rule 20 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    PUBLIC          reduce using rule 20 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    IF              reduce using rule 20 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    PRIVATE         reduce using rule 20 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    PROTECTED       reduce using rule 20 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    ID              reduce using rule 20 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    PRINT           reduce using rule 20 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    READ            reduce using rule 20 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    WHILE           reduce using rule 20 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    RBRACE          reduce using rule 20 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    ELIF            reduce using rule 22 (aux_elif -> .)

    aux_elif                       shift and go to state 197
    elif                           shift and go to state 243

state 241

    (29) contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .

    VAR             reduce using rule 29 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)
    PUBLIC          reduce using rule 29 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)
    IF              reduce using rule 29 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)
    PRIVATE         reduce using rule 29 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)
    PROTECTED       reduce using rule 29 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)
    ID              reduce using rule 29 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)
    PRINT           reduce using rule 29 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)
    READ            reduce using rule 29 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)
    WHILE           reduce using rule 29 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)
    RBRACE          reduce using rule 29 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)


state 242

    (30) contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .

    VAR             reduce using rule 30 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)
    PUBLIC          reduce using rule 30 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)
    IF              reduce using rule 30 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)
    PRIVATE         reduce using rule 30 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)
    PROTECTED       reduce using rule 30 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)
    ID              reduce using rule 30 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)
    PRINT           reduce using rule 30 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)
    READ            reduce using rule 30 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)
    WHILE           reduce using rule 30 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)
    RBRACE          reduce using rule 30 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)


state 243

    (21) elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .

    VAR             reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    PUBLIC          reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    IF              reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    PRIVATE         reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    PROTECTED       reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    ID              reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    PRINT           reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    READ            reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    WHILE           reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    RBRACE          reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)

