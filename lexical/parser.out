Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID aux_program class context
Rule 2     programa -> PROGRAM ID aux_program context
Rule 3     aux_program -> <empty>
Rule 4     class -> scope CLASS ID
Rule 5     class -> scope CLASS ID COLON ID
Rule 6     context -> LBRACE aux6 RBRACE
Rule 7     aux6 -> vars
Rule 8     aux6 -> constructor
Rule 9     aux6 -> funcion
Rule 10    aux6 -> estatuto
Rule 11    aux6 -> condicion
Rule 12    aux6 -> ciclo
Rule 13    aux6 -> vars aux6
Rule 14    aux6 -> constructor aux6
Rule 15    aux6 -> funcion aux6
Rule 16    aux6 -> estatuto aux6
Rule 17    aux6 -> condicion aux6
Rule 18    aux6 -> ciclo aux6
Rule 19    condicion -> IF LPAREN gotoF RPAREN bloque
Rule 20    condicion -> IF LPAREN gotoF RPAREN bloque elif
Rule 21    elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque
Rule 22    elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif
Rule 23    aux_elif -> <empty>
Rule 24    ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque
Rule 25    aux_ciclo -> <empty>
Rule 26    constructor -> PUBLIC ID LPAREN param RPAREN bloque
Rule 27    bloque -> LBRACE aux5 RBRACE
Rule 28    funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func
Rule 29    funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
Rule 30    id -> ID
Rule 31    type -> INT
Rule 32    type -> FLOAT
Rule 33    type -> CHAR
Rule 34    contexto_func -> LBRACE aux5 RBRACE
Rule 35    contexto_func -> LBRACE aux5 RETURN ID RBRACE
Rule 36    aux5 -> vars
Rule 37    aux5 -> estatuto
Rule 38    aux5 -> vars aux5
Rule 39    aux5 -> estatuto aux5
Rule 40    param -> <empty>
Rule 41    param -> tipo_simple ID
Rule 42    param -> tipo_simple ID COMMA param
Rule 43    aux_param -> <empty>
Rule 44    scope -> <empty>
Rule 45    scope -> PRIVATE
Rule 46    scope -> PUBLIC
Rule 47    scope -> PROTECTED
Rule 48    estatuto -> asignacion
Rule 49    estatuto -> escritura
Rule 50    estatuto -> llamada_func
Rule 51    estatuto -> objeto_metodo
Rule 52    estatuto -> lectura
Rule 53    lectura -> READ LPAREN aux4 RPAREN
Rule 54    aux4 -> ID
Rule 55    aux4 -> objeto_aAcceso
Rule 56    aux4 -> ID COMMA aux4
Rule 57    aux4 -> objeto_aAcceso COMMA aux4
Rule 58    escritura -> PRINT LPAREN aux3 RPAREN
Rule 59    aux3 -> expresion
Rule 60    aux3 -> llamada_func
Rule 61    aux3 -> objeto_metodo
Rule 62    aux3 -> CSTRING
Rule 63    aux3 -> expresion COMMA aux3
Rule 64    aux3 -> llamada_func COMMA aux3
Rule 65    aux3 -> objeto_metodo COMMA aux3
Rule 66    aux3 -> CSTRING COMMA aux3
Rule 67    vars -> VAR aux2 COLON tipo_simple
Rule 68    vars -> VAR aux2 COLON tipo_compuesto
Rule 69    vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple
Rule 70    vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
Rule 71    vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
Rule 72    vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
Rule 73    aux2 -> ID
Rule 74    aux2 -> ID COMMA aux2
Rule 75    tipo_simple -> INT
Rule 76    tipo_simple -> FLOAT
Rule 77    tipo_simple -> CHAR
Rule 78    tipo_compuesto -> ID
Rule 79    asignacion -> ID EQUALS expresion
Rule 80    asignacion -> ID EQUALS llamada_func
Rule 81    asignacion -> ID EQUALS objeto_metodo
Rule 82    asignacion -> objeto_aAcceso EQUALS expresion
Rule 83    asignacion -> objeto_aAcceso EQUALS llamada_func
Rule 84    asignacion -> objeto_aAcceso EQUALS objeto_metodo
Rule 85    asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion
Rule 86    asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func
Rule 87    asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 88    asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
Rule 89    asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
Rule 90    asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 91    asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
Rule 92    asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
Rule 93    asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 94    asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
Rule 95    asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
Rule 96    asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 97    objeto_metodo -> ID PERIOD llamada_func
Rule 98    llamada_func -> ID LPAREN aux RPAREN
Rule 99    aux -> exp
Rule 100   aux -> exp COMMA aux
Rule 101   gotoF -> exp_cond
Rule 102   exp_cond -> exp_bool
Rule 103   exp_cond -> exp_bool AND exp_cond
Rule 104   exp_cond -> exp_bool OR exp_cond
Rule 105   exp_bool -> TRUE
Rule 106   exp_bool -> FALSE
Rule 107   exp_bool -> expresion
Rule 108   expresion -> exp
Rule 109   expresion -> exp LT expresion
Rule 110   expresion -> exp GT expresion
Rule 111   expresion -> exp GE expresion
Rule 112   expresion -> exp LE expresion
Rule 113   expresion -> exp EQ expresion
Rule 114   expresion -> exp NE expresion
Rule 115   exp -> termino
Rule 116   exp -> exp PLUS termino
Rule 117   exp -> exp MINUS termino
Rule 118   termino -> factor
Rule 119   termino -> termino TIMES factor
Rule 120   termino -> termino DIVIDE factor
Rule 121   termino -> termino MODULO factor
Rule 122   factor -> LPAREN exp_cond RPAREN
Rule 123   factor -> PLUS objeto_aAcceso
Rule 124   factor -> MINUS objeto_aAcceso
Rule 125   factor -> PLUS var
Rule 126   factor -> MINUS var
Rule 127   factor -> var
Rule 128   factor -> objeto_aAcceso
Rule 129   var -> ID
Rule 130   var -> cint
Rule 131   var -> cfloat
Rule 132   var -> cchar
Rule 133   cint -> CINT
Rule 134   cfloat -> NUMBER
Rule 135   cchar -> CCHAR
Rule 136   objeto_aAcceso -> ID PERIOD ID

Terminals, with rules where they appear

AND                  : 103
CCHAR                : 135
CHAR                 : 33 77
CINT                 : 133
CLASS                : 4 5
COLON                : 5 67 68 69 70 71 72
COMMA                : 42 56 57 63 64 65 66 74 100
CSTRING              : 62 66
DEF                  : 28 29
DIVIDE               : 120
ELIF                 : 21 22
EQ                   : 113
EQUALS               : 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96
FALSE                : 106
FLOAT                : 32 76
GE                   : 111
GT                   : 110
ID                   : 1 2 4 5 5 26 30 35 41 42 54 56 69 70 71 72 73 74 78 79 80 81 85 86 87 91 92 93 97 98 129 136 136
IF                   : 19 20
INT                  : 31 75
LBRACE               : 6 27 34 35
LBRACKET             : 69 70 71 71 72 72 85 86 87 88 89 90 91 91 92 92 93 93 94 94 95 95 96 96
LE                   : 112
LPAREN               : 19 20 21 22 24 26 28 29 53 58 98 122
LT                   : 109
MINUS                : 117 124 126
MODULO               : 121
NE                   : 114
NUMBER               : 134
OR                   : 104
PERIOD               : 97 136
PLUS                 : 116 123 125
PRINT                : 58
PRIVATE              : 45
PROGRAM              : 1 2
PROTECTED            : 47
PUBLIC               : 26 46
RBRACE               : 6 27 34 35
RBRACKET             : 69 70 71 71 72 72 85 86 87 88 89 90 91 91 92 92 93 93 94 94 95 95 96 96
READ                 : 53
RETURN               : 35
RPAREN               : 19 20 21 22 24 26 28 29 53 58 98 122
TIMES                : 119
TRUE                 : 105
VAR                  : 67 68 69 70 71 72
VOID                 : 29
WHILE                : 24
error                : 

Nonterminals, with rules where they appear

asignacion           : 48
aux                  : 98 100
aux2                 : 67 68 74
aux3                 : 58 63 64 65 66
aux4                 : 53 56 57
aux5                 : 27 34 35 38 39
aux6                 : 6 13 14 15 16 17 18
aux_ciclo            : 24
aux_elif             : 21 22
aux_param            : 28 29
aux_program          : 1 2
bloque               : 19 20 21 22 24 26
cchar                : 132
cfloat               : 131
ciclo                : 12 18
cint                 : 69 70 71 71 72 72 130
class                : 1
condicion            : 11 17
constructor          : 8 14
context              : 1 2
contexto_func        : 28 29
elif                 : 20 22
escritura            : 49
estatuto             : 10 16 37 39
exp                  : 85 86 87 88 89 90 91 91 92 92 93 93 94 94 95 95 96 96 99 100 108 109 110 111 112 113 114 116 117
exp_bool             : 102 103 104
exp_cond             : 101 103 104 122
expresion            : 59 63 79 82 85 88 91 94 107 109 110 111 112 113 114
factor               : 118 119 120 121
funcion              : 9 15
gotoF                : 19 20 21 22 24
id                   : 28 29
lectura              : 52
llamada_func         : 50 60 64 80 83 86 89 92 95 97
objeto_aAcceso       : 55 57 82 83 84 88 89 90 94 95 96 123 124 128
objeto_metodo        : 51 61 65 81 84 87 90 93 96
param                : 26 28 29 42
programa             : 0
scope                : 4 5 28 29
termino              : 115 116 117 119 120 121
tipo_compuesto       : 68 70 72
tipo_simple          : 41 42 67 69 71
type                 : 28
var                  : 125 126 127
vars                 : 7 13 36 38

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID aux_program class context
    (2) programa -> . PROGRAM ID aux_program context

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID aux_program class context
    (2) programa -> PROGRAM . ID aux_program context

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . aux_program class context
    (2) programa -> PROGRAM ID . aux_program context
    (3) aux_program -> .

    LBRACE          reduce using rule 3 (aux_program -> .)
    PRIVATE         reduce using rule 3 (aux_program -> .)
    PUBLIC          reduce using rule 3 (aux_program -> .)
    PROTECTED       reduce using rule 3 (aux_program -> .)
    CLASS           reduce using rule 3 (aux_program -> .)

    aux_program                    shift and go to state 4

state 4

    (1) programa -> PROGRAM ID aux_program . class context
    (2) programa -> PROGRAM ID aux_program . context
    (4) class -> . scope CLASS ID
    (5) class -> . scope CLASS ID COLON ID
    (6) context -> . LBRACE aux6 RBRACE
    (44) scope -> .
    (45) scope -> . PRIVATE
    (46) scope -> . PUBLIC
    (47) scope -> . PROTECTED

    LBRACE          shift and go to state 8
    CLASS           reduce using rule 44 (scope -> .)
    PRIVATE         shift and go to state 9
    PUBLIC          shift and go to state 10
    PROTECTED       shift and go to state 11

    class                          shift and go to state 5
    context                        shift and go to state 6
    scope                          shift and go to state 7

state 5

    (1) programa -> PROGRAM ID aux_program class . context
    (6) context -> . LBRACE aux6 RBRACE

    LBRACE          shift and go to state 8

    context                        shift and go to state 12

state 6

    (2) programa -> PROGRAM ID aux_program context .

    $end            reduce using rule 2 (programa -> PROGRAM ID aux_program context .)


state 7

    (4) class -> scope . CLASS ID
    (5) class -> scope . CLASS ID COLON ID

    CLASS           shift and go to state 13


state 8

    (6) context -> LBRACE . aux6 RBRACE
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (67) vars -> . VAR aux2 COLON tipo_simple
    (68) vars -> . VAR aux2 COLON tipo_compuesto
    (69) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (71) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (72) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (26) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (28) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (29) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (48) estatuto -> . asignacion
    (49) estatuto -> . escritura
    (50) estatuto -> . llamada_func
    (51) estatuto -> . objeto_metodo
    (52) estatuto -> . lectura
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque
    (20) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (44) scope -> .
    (45) scope -> . PRIVATE
    (46) scope -> . PUBLIC
    (47) scope -> . PROTECTED
    (79) asignacion -> . ID EQUALS expresion
    (80) asignacion -> . ID EQUALS llamada_func
    (81) asignacion -> . ID EQUALS objeto_metodo
    (82) asignacion -> . objeto_aAcceso EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (84) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (85) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (86) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (88) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (58) escritura -> . PRINT LPAREN aux3 RPAREN
    (98) llamada_func -> . ID LPAREN aux RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (53) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (136) objeto_aAcceso -> . ID PERIOD ID

    VAR             shift and go to state 21
    PUBLIC          shift and go to state 23
    IF              shift and go to state 30
    VOID            reduce using rule 44 (scope -> .)
    INT             reduce using rule 44 (scope -> .)
    FLOAT           reduce using rule 44 (scope -> .)
    CHAR            reduce using rule 44 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 34
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    aux6                           shift and go to state 14
    vars                           shift and go to state 15
    constructor                    shift and go to state 16
    funcion                        shift and go to state 17
    estatuto                       shift and go to state 18
    condicion                      shift and go to state 19
    ciclo                          shift and go to state 20
    scope                          shift and go to state 24
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32

state 9

    (45) scope -> PRIVATE .

    CLASS           reduce using rule 45 (scope -> PRIVATE .)
    VOID            reduce using rule 45 (scope -> PRIVATE .)
    INT             reduce using rule 45 (scope -> PRIVATE .)
    FLOAT           reduce using rule 45 (scope -> PRIVATE .)
    CHAR            reduce using rule 45 (scope -> PRIVATE .)


state 10

    (46) scope -> PUBLIC .

    CLASS           reduce using rule 46 (scope -> PUBLIC .)


state 11

    (47) scope -> PROTECTED .

    CLASS           reduce using rule 47 (scope -> PROTECTED .)
    VOID            reduce using rule 47 (scope -> PROTECTED .)
    INT             reduce using rule 47 (scope -> PROTECTED .)
    FLOAT           reduce using rule 47 (scope -> PROTECTED .)
    CHAR            reduce using rule 47 (scope -> PROTECTED .)


state 12

    (1) programa -> PROGRAM ID aux_program class context .

    $end            reduce using rule 1 (programa -> PROGRAM ID aux_program class context .)


state 13

    (4) class -> scope CLASS . ID
    (5) class -> scope CLASS . ID COLON ID

    ID              shift and go to state 35


state 14

    (6) context -> LBRACE aux6 . RBRACE

    RBRACE          shift and go to state 36


state 15

    (7) aux6 -> vars .
    (13) aux6 -> vars . aux6
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (67) vars -> . VAR aux2 COLON tipo_simple
    (68) vars -> . VAR aux2 COLON tipo_compuesto
    (69) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (71) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (72) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (26) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (28) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (29) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (48) estatuto -> . asignacion
    (49) estatuto -> . escritura
    (50) estatuto -> . llamada_func
    (51) estatuto -> . objeto_metodo
    (52) estatuto -> . lectura
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque
    (20) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (44) scope -> .
    (45) scope -> . PRIVATE
    (46) scope -> . PUBLIC
    (47) scope -> . PROTECTED
    (79) asignacion -> . ID EQUALS expresion
    (80) asignacion -> . ID EQUALS llamada_func
    (81) asignacion -> . ID EQUALS objeto_metodo
    (82) asignacion -> . objeto_aAcceso EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (84) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (85) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (86) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (88) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (58) escritura -> . PRINT LPAREN aux3 RPAREN
    (98) llamada_func -> . ID LPAREN aux RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (53) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (136) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 7 (aux6 -> vars .)
    VAR             shift and go to state 21
    PUBLIC          shift and go to state 23
    IF              shift and go to state 30
    VOID            reduce using rule 44 (scope -> .)
    INT             reduce using rule 44 (scope -> .)
    FLOAT           reduce using rule 44 (scope -> .)
    CHAR            reduce using rule 44 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 34
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    vars                           shift and go to state 15
    aux6                           shift and go to state 37
    constructor                    shift and go to state 16
    funcion                        shift and go to state 17
    estatuto                       shift and go to state 18
    condicion                      shift and go to state 19
    ciclo                          shift and go to state 20
    scope                          shift and go to state 24
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32

state 16

    (8) aux6 -> constructor .
    (14) aux6 -> constructor . aux6
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (67) vars -> . VAR aux2 COLON tipo_simple
    (68) vars -> . VAR aux2 COLON tipo_compuesto
    (69) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (71) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (72) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (26) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (28) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (29) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (48) estatuto -> . asignacion
    (49) estatuto -> . escritura
    (50) estatuto -> . llamada_func
    (51) estatuto -> . objeto_metodo
    (52) estatuto -> . lectura
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque
    (20) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (44) scope -> .
    (45) scope -> . PRIVATE
    (46) scope -> . PUBLIC
    (47) scope -> . PROTECTED
    (79) asignacion -> . ID EQUALS expresion
    (80) asignacion -> . ID EQUALS llamada_func
    (81) asignacion -> . ID EQUALS objeto_metodo
    (82) asignacion -> . objeto_aAcceso EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (84) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (85) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (86) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (88) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (58) escritura -> . PRINT LPAREN aux3 RPAREN
    (98) llamada_func -> . ID LPAREN aux RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (53) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (136) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 8 (aux6 -> constructor .)
    VAR             shift and go to state 21
    PUBLIC          shift and go to state 23
    IF              shift and go to state 30
    VOID            reduce using rule 44 (scope -> .)
    INT             reduce using rule 44 (scope -> .)
    FLOAT           reduce using rule 44 (scope -> .)
    CHAR            reduce using rule 44 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 34
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    constructor                    shift and go to state 16
    aux6                           shift and go to state 38
    vars                           shift and go to state 15
    funcion                        shift and go to state 17
    estatuto                       shift and go to state 18
    condicion                      shift and go to state 19
    ciclo                          shift and go to state 20
    scope                          shift and go to state 24
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32

state 17

    (9) aux6 -> funcion .
    (15) aux6 -> funcion . aux6
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (67) vars -> . VAR aux2 COLON tipo_simple
    (68) vars -> . VAR aux2 COLON tipo_compuesto
    (69) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (71) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (72) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (26) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (28) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (29) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (48) estatuto -> . asignacion
    (49) estatuto -> . escritura
    (50) estatuto -> . llamada_func
    (51) estatuto -> . objeto_metodo
    (52) estatuto -> . lectura
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque
    (20) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (44) scope -> .
    (45) scope -> . PRIVATE
    (46) scope -> . PUBLIC
    (47) scope -> . PROTECTED
    (79) asignacion -> . ID EQUALS expresion
    (80) asignacion -> . ID EQUALS llamada_func
    (81) asignacion -> . ID EQUALS objeto_metodo
    (82) asignacion -> . objeto_aAcceso EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (84) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (85) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (86) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (88) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (58) escritura -> . PRINT LPAREN aux3 RPAREN
    (98) llamada_func -> . ID LPAREN aux RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (53) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (136) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 9 (aux6 -> funcion .)
    VAR             shift and go to state 21
    PUBLIC          shift and go to state 23
    IF              shift and go to state 30
    VOID            reduce using rule 44 (scope -> .)
    INT             reduce using rule 44 (scope -> .)
    FLOAT           reduce using rule 44 (scope -> .)
    CHAR            reduce using rule 44 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 34
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    funcion                        shift and go to state 17
    aux6                           shift and go to state 39
    vars                           shift and go to state 15
    constructor                    shift and go to state 16
    estatuto                       shift and go to state 18
    condicion                      shift and go to state 19
    ciclo                          shift and go to state 20
    scope                          shift and go to state 24
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32

state 18

    (10) aux6 -> estatuto .
    (16) aux6 -> estatuto . aux6
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (67) vars -> . VAR aux2 COLON tipo_simple
    (68) vars -> . VAR aux2 COLON tipo_compuesto
    (69) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (71) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (72) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (26) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (28) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (29) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (48) estatuto -> . asignacion
    (49) estatuto -> . escritura
    (50) estatuto -> . llamada_func
    (51) estatuto -> . objeto_metodo
    (52) estatuto -> . lectura
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque
    (20) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (44) scope -> .
    (45) scope -> . PRIVATE
    (46) scope -> . PUBLIC
    (47) scope -> . PROTECTED
    (79) asignacion -> . ID EQUALS expresion
    (80) asignacion -> . ID EQUALS llamada_func
    (81) asignacion -> . ID EQUALS objeto_metodo
    (82) asignacion -> . objeto_aAcceso EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (84) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (85) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (86) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (88) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (58) escritura -> . PRINT LPAREN aux3 RPAREN
    (98) llamada_func -> . ID LPAREN aux RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (53) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (136) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 10 (aux6 -> estatuto .)
    VAR             shift and go to state 21
    PUBLIC          shift and go to state 23
    IF              shift and go to state 30
    VOID            reduce using rule 44 (scope -> .)
    INT             reduce using rule 44 (scope -> .)
    FLOAT           reduce using rule 44 (scope -> .)
    CHAR            reduce using rule 44 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 34
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    estatuto                       shift and go to state 18
    aux6                           shift and go to state 40
    vars                           shift and go to state 15
    constructor                    shift and go to state 16
    funcion                        shift and go to state 17
    condicion                      shift and go to state 19
    ciclo                          shift and go to state 20
    scope                          shift and go to state 24
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32

state 19

    (11) aux6 -> condicion .
    (17) aux6 -> condicion . aux6
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (67) vars -> . VAR aux2 COLON tipo_simple
    (68) vars -> . VAR aux2 COLON tipo_compuesto
    (69) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (71) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (72) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (26) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (28) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (29) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (48) estatuto -> . asignacion
    (49) estatuto -> . escritura
    (50) estatuto -> . llamada_func
    (51) estatuto -> . objeto_metodo
    (52) estatuto -> . lectura
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque
    (20) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (44) scope -> .
    (45) scope -> . PRIVATE
    (46) scope -> . PUBLIC
    (47) scope -> . PROTECTED
    (79) asignacion -> . ID EQUALS expresion
    (80) asignacion -> . ID EQUALS llamada_func
    (81) asignacion -> . ID EQUALS objeto_metodo
    (82) asignacion -> . objeto_aAcceso EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (84) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (85) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (86) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (88) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (58) escritura -> . PRINT LPAREN aux3 RPAREN
    (98) llamada_func -> . ID LPAREN aux RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (53) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (136) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 11 (aux6 -> condicion .)
    VAR             shift and go to state 21
    PUBLIC          shift and go to state 23
    IF              shift and go to state 30
    VOID            reduce using rule 44 (scope -> .)
    INT             reduce using rule 44 (scope -> .)
    FLOAT           reduce using rule 44 (scope -> .)
    CHAR            reduce using rule 44 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 34
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    condicion                      shift and go to state 19
    aux6                           shift and go to state 41
    vars                           shift and go to state 15
    constructor                    shift and go to state 16
    funcion                        shift and go to state 17
    estatuto                       shift and go to state 18
    ciclo                          shift and go to state 20
    scope                          shift and go to state 24
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32

state 20

    (12) aux6 -> ciclo .
    (18) aux6 -> ciclo . aux6
    (7) aux6 -> . vars
    (8) aux6 -> . constructor
    (9) aux6 -> . funcion
    (10) aux6 -> . estatuto
    (11) aux6 -> . condicion
    (12) aux6 -> . ciclo
    (13) aux6 -> . vars aux6
    (14) aux6 -> . constructor aux6
    (15) aux6 -> . funcion aux6
    (16) aux6 -> . estatuto aux6
    (17) aux6 -> . condicion aux6
    (18) aux6 -> . ciclo aux6
    (67) vars -> . VAR aux2 COLON tipo_simple
    (68) vars -> . VAR aux2 COLON tipo_compuesto
    (69) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (71) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (72) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (26) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (28) funcion -> . scope type DEF id LPAREN param aux_param RPAREN contexto_func
    (29) funcion -> . scope VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (48) estatuto -> . asignacion
    (49) estatuto -> . escritura
    (50) estatuto -> . llamada_func
    (51) estatuto -> . objeto_metodo
    (52) estatuto -> . lectura
    (19) condicion -> . IF LPAREN gotoF RPAREN bloque
    (20) condicion -> . IF LPAREN gotoF RPAREN bloque elif
    (24) ciclo -> . aux_ciclo WHILE LPAREN gotoF RPAREN bloque
    (44) scope -> .
    (45) scope -> . PRIVATE
    (46) scope -> . PUBLIC
    (47) scope -> . PROTECTED
    (79) asignacion -> . ID EQUALS expresion
    (80) asignacion -> . ID EQUALS llamada_func
    (81) asignacion -> . ID EQUALS objeto_metodo
    (82) asignacion -> . objeto_aAcceso EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (84) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (85) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (86) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (88) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (58) escritura -> . PRINT LPAREN aux3 RPAREN
    (98) llamada_func -> . ID LPAREN aux RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (53) lectura -> . READ LPAREN aux4 RPAREN
    (25) aux_ciclo -> .
    (136) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 12 (aux6 -> ciclo .)
    VAR             shift and go to state 21
    PUBLIC          shift and go to state 23
    IF              shift and go to state 30
    VOID            reduce using rule 44 (scope -> .)
    INT             reduce using rule 44 (scope -> .)
    FLOAT           reduce using rule 44 (scope -> .)
    CHAR            reduce using rule 44 (scope -> .)
    PRIVATE         shift and go to state 9
    PROTECTED       shift and go to state 11
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 34
    WHILE           reduce using rule 25 (aux_ciclo -> .)

    ciclo                          shift and go to state 20
    aux6                           shift and go to state 42
    vars                           shift and go to state 15
    constructor                    shift and go to state 16
    funcion                        shift and go to state 17
    estatuto                       shift and go to state 18
    condicion                      shift and go to state 19
    scope                          shift and go to state 24
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    aux_ciclo                      shift and go to state 31
    objeto_aAcceso                 shift and go to state 32

state 21

    (67) vars -> VAR . aux2 COLON tipo_simple
    (68) vars -> VAR . aux2 COLON tipo_compuesto
    (69) vars -> VAR . ID LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> VAR . ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (71) vars -> VAR . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (72) vars -> VAR . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (73) aux2 -> . ID
    (74) aux2 -> . ID COMMA aux2

    ID              shift and go to state 44

    aux2                           shift and go to state 43

state 22

    (79) asignacion -> ID . EQUALS expresion
    (80) asignacion -> ID . EQUALS llamada_func
    (81) asignacion -> ID . EQUALS objeto_metodo
    (85) asignacion -> ID . LBRACKET exp RBRACKET EQUALS expresion
    (86) asignacion -> ID . LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> ID . LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (98) llamada_func -> ID . LPAREN aux RPAREN
    (97) objeto_metodo -> ID . PERIOD llamada_func
    (136) objeto_aAcceso -> ID . PERIOD ID

    EQUALS          shift and go to state 45
    LBRACKET        shift and go to state 46
    LPAREN          shift and go to state 47
    PERIOD          shift and go to state 48


state 23

    (26) constructor -> PUBLIC . ID LPAREN param RPAREN bloque
    (46) scope -> PUBLIC .

    ID              shift and go to state 49
    VOID            reduce using rule 46 (scope -> PUBLIC .)
    INT             reduce using rule 46 (scope -> PUBLIC .)
    FLOAT           reduce using rule 46 (scope -> PUBLIC .)
    CHAR            reduce using rule 46 (scope -> PUBLIC .)


state 24

    (28) funcion -> scope . type DEF id LPAREN param aux_param RPAREN contexto_func
    (29) funcion -> scope . VOID DEF id LPAREN param aux_param RPAREN contexto_func
    (31) type -> . INT
    (32) type -> . FLOAT
    (33) type -> . CHAR

    VOID            shift and go to state 51
    INT             shift and go to state 52
    FLOAT           shift and go to state 53
    CHAR            shift and go to state 54

    type                           shift and go to state 50

state 25

    (48) estatuto -> asignacion .

    VAR             reduce using rule 48 (estatuto -> asignacion .)
    PUBLIC          reduce using rule 48 (estatuto -> asignacion .)
    IF              reduce using rule 48 (estatuto -> asignacion .)
    PRIVATE         reduce using rule 48 (estatuto -> asignacion .)
    PROTECTED       reduce using rule 48 (estatuto -> asignacion .)
    ID              reduce using rule 48 (estatuto -> asignacion .)
    PRINT           reduce using rule 48 (estatuto -> asignacion .)
    READ            reduce using rule 48 (estatuto -> asignacion .)
    VOID            reduce using rule 48 (estatuto -> asignacion .)
    INT             reduce using rule 48 (estatuto -> asignacion .)
    FLOAT           reduce using rule 48 (estatuto -> asignacion .)
    CHAR            reduce using rule 48 (estatuto -> asignacion .)
    WHILE           reduce using rule 48 (estatuto -> asignacion .)
    RBRACE          reduce using rule 48 (estatuto -> asignacion .)
    RETURN          reduce using rule 48 (estatuto -> asignacion .)


state 26

    (49) estatuto -> escritura .

    VAR             reduce using rule 49 (estatuto -> escritura .)
    PUBLIC          reduce using rule 49 (estatuto -> escritura .)
    IF              reduce using rule 49 (estatuto -> escritura .)
    PRIVATE         reduce using rule 49 (estatuto -> escritura .)
    PROTECTED       reduce using rule 49 (estatuto -> escritura .)
    ID              reduce using rule 49 (estatuto -> escritura .)
    PRINT           reduce using rule 49 (estatuto -> escritura .)
    READ            reduce using rule 49 (estatuto -> escritura .)
    VOID            reduce using rule 49 (estatuto -> escritura .)
    INT             reduce using rule 49 (estatuto -> escritura .)
    FLOAT           reduce using rule 49 (estatuto -> escritura .)
    CHAR            reduce using rule 49 (estatuto -> escritura .)
    WHILE           reduce using rule 49 (estatuto -> escritura .)
    RBRACE          reduce using rule 49 (estatuto -> escritura .)
    RETURN          reduce using rule 49 (estatuto -> escritura .)


state 27

    (50) estatuto -> llamada_func .

    VAR             reduce using rule 50 (estatuto -> llamada_func .)
    PUBLIC          reduce using rule 50 (estatuto -> llamada_func .)
    IF              reduce using rule 50 (estatuto -> llamada_func .)
    PRIVATE         reduce using rule 50 (estatuto -> llamada_func .)
    PROTECTED       reduce using rule 50 (estatuto -> llamada_func .)
    ID              reduce using rule 50 (estatuto -> llamada_func .)
    PRINT           reduce using rule 50 (estatuto -> llamada_func .)
    READ            reduce using rule 50 (estatuto -> llamada_func .)
    VOID            reduce using rule 50 (estatuto -> llamada_func .)
    INT             reduce using rule 50 (estatuto -> llamada_func .)
    FLOAT           reduce using rule 50 (estatuto -> llamada_func .)
    CHAR            reduce using rule 50 (estatuto -> llamada_func .)
    WHILE           reduce using rule 50 (estatuto -> llamada_func .)
    RBRACE          reduce using rule 50 (estatuto -> llamada_func .)
    RETURN          reduce using rule 50 (estatuto -> llamada_func .)


state 28

    (51) estatuto -> objeto_metodo .

    VAR             reduce using rule 51 (estatuto -> objeto_metodo .)
    PUBLIC          reduce using rule 51 (estatuto -> objeto_metodo .)
    IF              reduce using rule 51 (estatuto -> objeto_metodo .)
    PRIVATE         reduce using rule 51 (estatuto -> objeto_metodo .)
    PROTECTED       reduce using rule 51 (estatuto -> objeto_metodo .)
    ID              reduce using rule 51 (estatuto -> objeto_metodo .)
    PRINT           reduce using rule 51 (estatuto -> objeto_metodo .)
    READ            reduce using rule 51 (estatuto -> objeto_metodo .)
    VOID            reduce using rule 51 (estatuto -> objeto_metodo .)
    INT             reduce using rule 51 (estatuto -> objeto_metodo .)
    FLOAT           reduce using rule 51 (estatuto -> objeto_metodo .)
    CHAR            reduce using rule 51 (estatuto -> objeto_metodo .)
    WHILE           reduce using rule 51 (estatuto -> objeto_metodo .)
    RBRACE          reduce using rule 51 (estatuto -> objeto_metodo .)
    RETURN          reduce using rule 51 (estatuto -> objeto_metodo .)


state 29

    (52) estatuto -> lectura .

    VAR             reduce using rule 52 (estatuto -> lectura .)
    PUBLIC          reduce using rule 52 (estatuto -> lectura .)
    IF              reduce using rule 52 (estatuto -> lectura .)
    PRIVATE         reduce using rule 52 (estatuto -> lectura .)
    PROTECTED       reduce using rule 52 (estatuto -> lectura .)
    ID              reduce using rule 52 (estatuto -> lectura .)
    PRINT           reduce using rule 52 (estatuto -> lectura .)
    READ            reduce using rule 52 (estatuto -> lectura .)
    VOID            reduce using rule 52 (estatuto -> lectura .)
    INT             reduce using rule 52 (estatuto -> lectura .)
    FLOAT           reduce using rule 52 (estatuto -> lectura .)
    CHAR            reduce using rule 52 (estatuto -> lectura .)
    WHILE           reduce using rule 52 (estatuto -> lectura .)
    RBRACE          reduce using rule 52 (estatuto -> lectura .)
    RETURN          reduce using rule 52 (estatuto -> lectura .)


state 30

    (19) condicion -> IF . LPAREN gotoF RPAREN bloque
    (20) condicion -> IF . LPAREN gotoF RPAREN bloque elif

    LPAREN          shift and go to state 55


state 31

    (24) ciclo -> aux_ciclo . WHILE LPAREN gotoF RPAREN bloque

    WHILE           shift and go to state 56


state 32

    (82) asignacion -> objeto_aAcceso . EQUALS expresion
    (83) asignacion -> objeto_aAcceso . EQUALS llamada_func
    (84) asignacion -> objeto_aAcceso . EQUALS objeto_metodo
    (88) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET EQUALS objeto_metodo
    (94) asignacion -> objeto_aAcceso . LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> objeto_aAcceso . LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> objeto_aAcceso . LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo

    EQUALS          shift and go to state 57
    LBRACKET        shift and go to state 58


state 33

    (58) escritura -> PRINT . LPAREN aux3 RPAREN

    LPAREN          shift and go to state 59


state 34

    (53) lectura -> READ . LPAREN aux4 RPAREN

    LPAREN          shift and go to state 60


state 35

    (4) class -> scope CLASS ID .
    (5) class -> scope CLASS ID . COLON ID

    LBRACE          reduce using rule 4 (class -> scope CLASS ID .)
    COLON           shift and go to state 61


state 36

    (6) context -> LBRACE aux6 RBRACE .

    $end            reduce using rule 6 (context -> LBRACE aux6 RBRACE .)


state 37

    (13) aux6 -> vars aux6 .

    RBRACE          reduce using rule 13 (aux6 -> vars aux6 .)


state 38

    (14) aux6 -> constructor aux6 .

    RBRACE          reduce using rule 14 (aux6 -> constructor aux6 .)


state 39

    (15) aux6 -> funcion aux6 .

    RBRACE          reduce using rule 15 (aux6 -> funcion aux6 .)


state 40

    (16) aux6 -> estatuto aux6 .

    RBRACE          reduce using rule 16 (aux6 -> estatuto aux6 .)


state 41

    (17) aux6 -> condicion aux6 .

    RBRACE          reduce using rule 17 (aux6 -> condicion aux6 .)


state 42

    (18) aux6 -> ciclo aux6 .

    RBRACE          reduce using rule 18 (aux6 -> ciclo aux6 .)


state 43

    (67) vars -> VAR aux2 . COLON tipo_simple
    (68) vars -> VAR aux2 . COLON tipo_compuesto

    COLON           shift and go to state 62


state 44

    (69) vars -> VAR ID . LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> VAR ID . LBRACKET cint RBRACKET COLON tipo_compuesto
    (71) vars -> VAR ID . LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (72) vars -> VAR ID . LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (73) aux2 -> ID .
    (74) aux2 -> ID . COMMA aux2

    LBRACKET        shift and go to state 63
    COLON           reduce using rule 73 (aux2 -> ID .)
    COMMA           shift and go to state 64


state 45

    (79) asignacion -> ID EQUALS . expresion
    (80) asignacion -> ID EQUALS . llamada_func
    (81) asignacion -> ID EQUALS . objeto_metodo
    (108) expresion -> . exp
    (109) expresion -> . exp LT expresion
    (110) expresion -> . exp GT expresion
    (111) expresion -> . exp GE expresion
    (112) expresion -> . exp LE expresion
    (113) expresion -> . exp EQ expresion
    (114) expresion -> . exp NE expresion
    (98) llamada_func -> . ID LPAREN aux RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    ID              shift and go to state 65
    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    expresion                      shift and go to state 66
    llamada_func                   shift and go to state 67
    objeto_metodo                  shift and go to state 68
    exp                            shift and go to state 69
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 46

    (85) asignacion -> ID LBRACKET . exp RBRACKET EQUALS expresion
    (86) asignacion -> ID LBRACKET . exp RBRACKET EQUALS llamada_func
    (87) asignacion -> ID LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    ID              shift and go to state 83
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    exp                            shift and go to state 84
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 47

    (98) llamada_func -> ID LPAREN . aux RPAREN
    (99) aux -> . exp
    (100) aux -> . exp COMMA aux
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    ID              shift and go to state 83
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    aux                            shift and go to state 85
    exp                            shift and go to state 86
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 48

    (97) objeto_metodo -> ID PERIOD . llamada_func
    (136) objeto_aAcceso -> ID PERIOD . ID
    (98) llamada_func -> . ID LPAREN aux RPAREN

    ID              shift and go to state 87

    llamada_func                   shift and go to state 88

state 49

    (26) constructor -> PUBLIC ID . LPAREN param RPAREN bloque

    LPAREN          shift and go to state 89


state 50

    (28) funcion -> scope type . DEF id LPAREN param aux_param RPAREN contexto_func

    DEF             shift and go to state 90


state 51

    (29) funcion -> scope VOID . DEF id LPAREN param aux_param RPAREN contexto_func

    DEF             shift and go to state 91


state 52

    (31) type -> INT .

    DEF             reduce using rule 31 (type -> INT .)


state 53

    (32) type -> FLOAT .

    DEF             reduce using rule 32 (type -> FLOAT .)


state 54

    (33) type -> CHAR .

    DEF             reduce using rule 33 (type -> CHAR .)


state 55

    (19) condicion -> IF LPAREN . gotoF RPAREN bloque
    (20) condicion -> IF LPAREN . gotoF RPAREN bloque elif
    (101) gotoF -> . exp_cond
    (102) exp_cond -> . exp_bool
    (103) exp_cond -> . exp_bool AND exp_cond
    (104) exp_cond -> . exp_bool OR exp_cond
    (105) exp_bool -> . TRUE
    (106) exp_bool -> . FALSE
    (107) exp_bool -> . expresion
    (108) expresion -> . exp
    (109) expresion -> . exp LT expresion
    (110) expresion -> . exp GT expresion
    (111) expresion -> . exp GE expresion
    (112) expresion -> . exp LE expresion
    (113) expresion -> . exp EQ expresion
    (114) expresion -> . exp NE expresion
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    ID              shift and go to state 83
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    gotoF                          shift and go to state 92
    exp_cond                       shift and go to state 93
    exp_bool                       shift and go to state 94
    expresion                      shift and go to state 97
    exp                            shift and go to state 69
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 56

    (24) ciclo -> aux_ciclo WHILE . LPAREN gotoF RPAREN bloque

    LPAREN          shift and go to state 98


state 57

    (82) asignacion -> objeto_aAcceso EQUALS . expresion
    (83) asignacion -> objeto_aAcceso EQUALS . llamada_func
    (84) asignacion -> objeto_aAcceso EQUALS . objeto_metodo
    (108) expresion -> . exp
    (109) expresion -> . exp LT expresion
    (110) expresion -> . exp GT expresion
    (111) expresion -> . exp GE expresion
    (112) expresion -> . exp LE expresion
    (113) expresion -> . exp EQ expresion
    (114) expresion -> . exp NE expresion
    (98) llamada_func -> . ID LPAREN aux RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    ID              shift and go to state 65
    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    objeto_aAcceso                 shift and go to state 75
    expresion                      shift and go to state 99
    llamada_func                   shift and go to state 100
    objeto_metodo                  shift and go to state 101
    exp                            shift and go to state 69
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 58

    (88) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET EQUALS expresion
    (89) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET EQUALS llamada_func
    (90) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (94) asignacion -> objeto_aAcceso LBRACKET . LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> objeto_aAcceso LBRACKET . LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> objeto_aAcceso LBRACKET . LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    LBRACKET        shift and go to state 102
    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    ID              shift and go to state 83
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    objeto_aAcceso                 shift and go to state 75
    exp                            shift and go to state 103
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 59

    (58) escritura -> PRINT LPAREN . aux3 RPAREN
    (59) aux3 -> . expresion
    (60) aux3 -> . llamada_func
    (61) aux3 -> . objeto_metodo
    (62) aux3 -> . CSTRING
    (63) aux3 -> . expresion COMMA aux3
    (64) aux3 -> . llamada_func COMMA aux3
    (65) aux3 -> . objeto_metodo COMMA aux3
    (66) aux3 -> . CSTRING COMMA aux3
    (108) expresion -> . exp
    (109) expresion -> . exp LT expresion
    (110) expresion -> . exp GT expresion
    (111) expresion -> . exp GE expresion
    (112) expresion -> . exp LE expresion
    (113) expresion -> . exp EQ expresion
    (114) expresion -> . exp NE expresion
    (98) llamada_func -> . ID LPAREN aux RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    CSTRING         shift and go to state 108
    ID              shift and go to state 65
    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    aux3                           shift and go to state 104
    expresion                      shift and go to state 105
    llamada_func                   shift and go to state 106
    objeto_metodo                  shift and go to state 107
    exp                            shift and go to state 69
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 60

    (53) lectura -> READ LPAREN . aux4 RPAREN
    (54) aux4 -> . ID
    (55) aux4 -> . objeto_aAcceso
    (56) aux4 -> . ID COMMA aux4
    (57) aux4 -> . objeto_aAcceso COMMA aux4
    (136) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 110

    aux4                           shift and go to state 109
    objeto_aAcceso                 shift and go to state 111

state 61

    (5) class -> scope CLASS ID COLON . ID

    ID              shift and go to state 112


state 62

    (67) vars -> VAR aux2 COLON . tipo_simple
    (68) vars -> VAR aux2 COLON . tipo_compuesto
    (75) tipo_simple -> . INT
    (76) tipo_simple -> . FLOAT
    (77) tipo_simple -> . CHAR
    (78) tipo_compuesto -> . ID

    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    CHAR            shift and go to state 117
    ID              shift and go to state 118

    tipo_simple                    shift and go to state 113
    tipo_compuesto                 shift and go to state 114

state 63

    (69) vars -> VAR ID LBRACKET . cint RBRACKET COLON tipo_simple
    (70) vars -> VAR ID LBRACKET . cint RBRACKET COLON tipo_compuesto
    (71) vars -> VAR ID LBRACKET . cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (72) vars -> VAR ID LBRACKET . cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (133) cint -> . CINT

    CINT            shift and go to state 80

    cint                           shift and go to state 119

state 64

    (74) aux2 -> ID COMMA . aux2
    (73) aux2 -> . ID
    (74) aux2 -> . ID COMMA aux2

    ID              shift and go to state 120

    aux2                           shift and go to state 121

state 65

    (98) llamada_func -> ID . LPAREN aux RPAREN
    (97) objeto_metodo -> ID . PERIOD llamada_func
    (129) var -> ID .
    (136) objeto_aAcceso -> ID . PERIOD ID

    LPAREN          shift and go to state 47
    PERIOD          shift and go to state 48
    TIMES           reduce using rule 129 (var -> ID .)
    DIVIDE          reduce using rule 129 (var -> ID .)
    MODULO          reduce using rule 129 (var -> ID .)
    LT              reduce using rule 129 (var -> ID .)
    GT              reduce using rule 129 (var -> ID .)
    GE              reduce using rule 129 (var -> ID .)
    LE              reduce using rule 129 (var -> ID .)
    EQ              reduce using rule 129 (var -> ID .)
    NE              reduce using rule 129 (var -> ID .)
    PLUS            reduce using rule 129 (var -> ID .)
    MINUS           reduce using rule 129 (var -> ID .)
    VAR             reduce using rule 129 (var -> ID .)
    PUBLIC          reduce using rule 129 (var -> ID .)
    IF              reduce using rule 129 (var -> ID .)
    PRIVATE         reduce using rule 129 (var -> ID .)
    PROTECTED       reduce using rule 129 (var -> ID .)
    ID              reduce using rule 129 (var -> ID .)
    PRINT           reduce using rule 129 (var -> ID .)
    READ            reduce using rule 129 (var -> ID .)
    VOID            reduce using rule 129 (var -> ID .)
    INT             reduce using rule 129 (var -> ID .)
    FLOAT           reduce using rule 129 (var -> ID .)
    CHAR            reduce using rule 129 (var -> ID .)
    WHILE           reduce using rule 129 (var -> ID .)
    RBRACE          reduce using rule 129 (var -> ID .)
    RETURN          reduce using rule 129 (var -> ID .)
    COMMA           reduce using rule 129 (var -> ID .)
    RPAREN          reduce using rule 129 (var -> ID .)


state 66

    (79) asignacion -> ID EQUALS expresion .

    VAR             reduce using rule 79 (asignacion -> ID EQUALS expresion .)
    PUBLIC          reduce using rule 79 (asignacion -> ID EQUALS expresion .)
    IF              reduce using rule 79 (asignacion -> ID EQUALS expresion .)
    PRIVATE         reduce using rule 79 (asignacion -> ID EQUALS expresion .)
    PROTECTED       reduce using rule 79 (asignacion -> ID EQUALS expresion .)
    ID              reduce using rule 79 (asignacion -> ID EQUALS expresion .)
    PRINT           reduce using rule 79 (asignacion -> ID EQUALS expresion .)
    READ            reduce using rule 79 (asignacion -> ID EQUALS expresion .)
    VOID            reduce using rule 79 (asignacion -> ID EQUALS expresion .)
    INT             reduce using rule 79 (asignacion -> ID EQUALS expresion .)
    FLOAT           reduce using rule 79 (asignacion -> ID EQUALS expresion .)
    CHAR            reduce using rule 79 (asignacion -> ID EQUALS expresion .)
    WHILE           reduce using rule 79 (asignacion -> ID EQUALS expresion .)
    RBRACE          reduce using rule 79 (asignacion -> ID EQUALS expresion .)
    RETURN          reduce using rule 79 (asignacion -> ID EQUALS expresion .)


state 67

    (80) asignacion -> ID EQUALS llamada_func .

    VAR             reduce using rule 80 (asignacion -> ID EQUALS llamada_func .)
    PUBLIC          reduce using rule 80 (asignacion -> ID EQUALS llamada_func .)
    IF              reduce using rule 80 (asignacion -> ID EQUALS llamada_func .)
    PRIVATE         reduce using rule 80 (asignacion -> ID EQUALS llamada_func .)
    PROTECTED       reduce using rule 80 (asignacion -> ID EQUALS llamada_func .)
    ID              reduce using rule 80 (asignacion -> ID EQUALS llamada_func .)
    PRINT           reduce using rule 80 (asignacion -> ID EQUALS llamada_func .)
    READ            reduce using rule 80 (asignacion -> ID EQUALS llamada_func .)
    VOID            reduce using rule 80 (asignacion -> ID EQUALS llamada_func .)
    INT             reduce using rule 80 (asignacion -> ID EQUALS llamada_func .)
    FLOAT           reduce using rule 80 (asignacion -> ID EQUALS llamada_func .)
    CHAR            reduce using rule 80 (asignacion -> ID EQUALS llamada_func .)
    WHILE           reduce using rule 80 (asignacion -> ID EQUALS llamada_func .)
    RBRACE          reduce using rule 80 (asignacion -> ID EQUALS llamada_func .)
    RETURN          reduce using rule 80 (asignacion -> ID EQUALS llamada_func .)


state 68

    (81) asignacion -> ID EQUALS objeto_metodo .

    VAR             reduce using rule 81 (asignacion -> ID EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 81 (asignacion -> ID EQUALS objeto_metodo .)
    IF              reduce using rule 81 (asignacion -> ID EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 81 (asignacion -> ID EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 81 (asignacion -> ID EQUALS objeto_metodo .)
    ID              reduce using rule 81 (asignacion -> ID EQUALS objeto_metodo .)
    PRINT           reduce using rule 81 (asignacion -> ID EQUALS objeto_metodo .)
    READ            reduce using rule 81 (asignacion -> ID EQUALS objeto_metodo .)
    VOID            reduce using rule 81 (asignacion -> ID EQUALS objeto_metodo .)
    INT             reduce using rule 81 (asignacion -> ID EQUALS objeto_metodo .)
    FLOAT           reduce using rule 81 (asignacion -> ID EQUALS objeto_metodo .)
    CHAR            reduce using rule 81 (asignacion -> ID EQUALS objeto_metodo .)
    WHILE           reduce using rule 81 (asignacion -> ID EQUALS objeto_metodo .)
    RBRACE          reduce using rule 81 (asignacion -> ID EQUALS objeto_metodo .)
    RETURN          reduce using rule 81 (asignacion -> ID EQUALS objeto_metodo .)


state 69

    (108) expresion -> exp .
    (109) expresion -> exp . LT expresion
    (110) expresion -> exp . GT expresion
    (111) expresion -> exp . GE expresion
    (112) expresion -> exp . LE expresion
    (113) expresion -> exp . EQ expresion
    (114) expresion -> exp . NE expresion
    (116) exp -> exp . PLUS termino
    (117) exp -> exp . MINUS termino

    VAR             reduce using rule 108 (expresion -> exp .)
    PUBLIC          reduce using rule 108 (expresion -> exp .)
    IF              reduce using rule 108 (expresion -> exp .)
    PRIVATE         reduce using rule 108 (expresion -> exp .)
    PROTECTED       reduce using rule 108 (expresion -> exp .)
    ID              reduce using rule 108 (expresion -> exp .)
    PRINT           reduce using rule 108 (expresion -> exp .)
    READ            reduce using rule 108 (expresion -> exp .)
    VOID            reduce using rule 108 (expresion -> exp .)
    INT             reduce using rule 108 (expresion -> exp .)
    FLOAT           reduce using rule 108 (expresion -> exp .)
    CHAR            reduce using rule 108 (expresion -> exp .)
    WHILE           reduce using rule 108 (expresion -> exp .)
    RBRACE          reduce using rule 108 (expresion -> exp .)
    RETURN          reduce using rule 108 (expresion -> exp .)
    AND             reduce using rule 108 (expresion -> exp .)
    OR              reduce using rule 108 (expresion -> exp .)
    RPAREN          reduce using rule 108 (expresion -> exp .)
    COMMA           reduce using rule 108 (expresion -> exp .)
    LT              shift and go to state 122
    GT              shift and go to state 123
    GE              shift and go to state 124
    LE              shift and go to state 125
    EQ              shift and go to state 126
    NE              shift and go to state 127
    PLUS            shift and go to state 128
    MINUS           shift and go to state 129


state 70

    (122) factor -> LPAREN . exp_cond RPAREN
    (102) exp_cond -> . exp_bool
    (103) exp_cond -> . exp_bool AND exp_cond
    (104) exp_cond -> . exp_bool OR exp_cond
    (105) exp_bool -> . TRUE
    (106) exp_bool -> . FALSE
    (107) exp_bool -> . expresion
    (108) expresion -> . exp
    (109) expresion -> . exp LT expresion
    (110) expresion -> . exp GT expresion
    (111) expresion -> . exp GE expresion
    (112) expresion -> . exp LE expresion
    (113) expresion -> . exp EQ expresion
    (114) expresion -> . exp NE expresion
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    ID              shift and go to state 83
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    exp_cond                       shift and go to state 130
    exp_bool                       shift and go to state 94
    expresion                      shift and go to state 97
    exp                            shift and go to state 69
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 71

    (115) exp -> termino .
    (119) termino -> termino . TIMES factor
    (120) termino -> termino . DIVIDE factor
    (121) termino -> termino . MODULO factor

    LT              reduce using rule 115 (exp -> termino .)
    GT              reduce using rule 115 (exp -> termino .)
    GE              reduce using rule 115 (exp -> termino .)
    LE              reduce using rule 115 (exp -> termino .)
    EQ              reduce using rule 115 (exp -> termino .)
    NE              reduce using rule 115 (exp -> termino .)
    PLUS            reduce using rule 115 (exp -> termino .)
    MINUS           reduce using rule 115 (exp -> termino .)
    VAR             reduce using rule 115 (exp -> termino .)
    PUBLIC          reduce using rule 115 (exp -> termino .)
    IF              reduce using rule 115 (exp -> termino .)
    PRIVATE         reduce using rule 115 (exp -> termino .)
    PROTECTED       reduce using rule 115 (exp -> termino .)
    ID              reduce using rule 115 (exp -> termino .)
    PRINT           reduce using rule 115 (exp -> termino .)
    READ            reduce using rule 115 (exp -> termino .)
    VOID            reduce using rule 115 (exp -> termino .)
    INT             reduce using rule 115 (exp -> termino .)
    FLOAT           reduce using rule 115 (exp -> termino .)
    CHAR            reduce using rule 115 (exp -> termino .)
    WHILE           reduce using rule 115 (exp -> termino .)
    RBRACE          reduce using rule 115 (exp -> termino .)
    RETURN          reduce using rule 115 (exp -> termino .)
    RBRACKET        reduce using rule 115 (exp -> termino .)
    COMMA           reduce using rule 115 (exp -> termino .)
    RPAREN          reduce using rule 115 (exp -> termino .)
    AND             reduce using rule 115 (exp -> termino .)
    OR              reduce using rule 115 (exp -> termino .)
    TIMES           shift and go to state 131
    DIVIDE          shift and go to state 132
    MODULO          shift and go to state 133


state 72

    (123) factor -> PLUS . objeto_aAcceso
    (125) factor -> PLUS . var
    (136) objeto_aAcceso -> . ID PERIOD ID
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    ID              shift and go to state 136
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    objeto_aAcceso                 shift and go to state 134
    var                            shift and go to state 135
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 73

    (124) factor -> MINUS . objeto_aAcceso
    (126) factor -> MINUS . var
    (136) objeto_aAcceso -> . ID PERIOD ID
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    ID              shift and go to state 136
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    objeto_aAcceso                 shift and go to state 137
    var                            shift and go to state 138
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 74

    (118) termino -> factor .

    TIMES           reduce using rule 118 (termino -> factor .)
    DIVIDE          reduce using rule 118 (termino -> factor .)
    MODULO          reduce using rule 118 (termino -> factor .)
    LT              reduce using rule 118 (termino -> factor .)
    GT              reduce using rule 118 (termino -> factor .)
    GE              reduce using rule 118 (termino -> factor .)
    LE              reduce using rule 118 (termino -> factor .)
    EQ              reduce using rule 118 (termino -> factor .)
    NE              reduce using rule 118 (termino -> factor .)
    PLUS            reduce using rule 118 (termino -> factor .)
    MINUS           reduce using rule 118 (termino -> factor .)
    VAR             reduce using rule 118 (termino -> factor .)
    PUBLIC          reduce using rule 118 (termino -> factor .)
    IF              reduce using rule 118 (termino -> factor .)
    PRIVATE         reduce using rule 118 (termino -> factor .)
    PROTECTED       reduce using rule 118 (termino -> factor .)
    ID              reduce using rule 118 (termino -> factor .)
    PRINT           reduce using rule 118 (termino -> factor .)
    READ            reduce using rule 118 (termino -> factor .)
    VOID            reduce using rule 118 (termino -> factor .)
    INT             reduce using rule 118 (termino -> factor .)
    FLOAT           reduce using rule 118 (termino -> factor .)
    CHAR            reduce using rule 118 (termino -> factor .)
    WHILE           reduce using rule 118 (termino -> factor .)
    RBRACE          reduce using rule 118 (termino -> factor .)
    RETURN          reduce using rule 118 (termino -> factor .)
    RBRACKET        reduce using rule 118 (termino -> factor .)
    COMMA           reduce using rule 118 (termino -> factor .)
    RPAREN          reduce using rule 118 (termino -> factor .)
    AND             reduce using rule 118 (termino -> factor .)
    OR              reduce using rule 118 (termino -> factor .)


state 75

    (128) factor -> objeto_aAcceso .

    TIMES           reduce using rule 128 (factor -> objeto_aAcceso .)
    DIVIDE          reduce using rule 128 (factor -> objeto_aAcceso .)
    MODULO          reduce using rule 128 (factor -> objeto_aAcceso .)
    LT              reduce using rule 128 (factor -> objeto_aAcceso .)
    GT              reduce using rule 128 (factor -> objeto_aAcceso .)
    GE              reduce using rule 128 (factor -> objeto_aAcceso .)
    LE              reduce using rule 128 (factor -> objeto_aAcceso .)
    EQ              reduce using rule 128 (factor -> objeto_aAcceso .)
    NE              reduce using rule 128 (factor -> objeto_aAcceso .)
    PLUS            reduce using rule 128 (factor -> objeto_aAcceso .)
    MINUS           reduce using rule 128 (factor -> objeto_aAcceso .)
    VAR             reduce using rule 128 (factor -> objeto_aAcceso .)
    PUBLIC          reduce using rule 128 (factor -> objeto_aAcceso .)
    IF              reduce using rule 128 (factor -> objeto_aAcceso .)
    PRIVATE         reduce using rule 128 (factor -> objeto_aAcceso .)
    PROTECTED       reduce using rule 128 (factor -> objeto_aAcceso .)
    ID              reduce using rule 128 (factor -> objeto_aAcceso .)
    PRINT           reduce using rule 128 (factor -> objeto_aAcceso .)
    READ            reduce using rule 128 (factor -> objeto_aAcceso .)
    VOID            reduce using rule 128 (factor -> objeto_aAcceso .)
    INT             reduce using rule 128 (factor -> objeto_aAcceso .)
    FLOAT           reduce using rule 128 (factor -> objeto_aAcceso .)
    CHAR            reduce using rule 128 (factor -> objeto_aAcceso .)
    WHILE           reduce using rule 128 (factor -> objeto_aAcceso .)
    RBRACE          reduce using rule 128 (factor -> objeto_aAcceso .)
    RETURN          reduce using rule 128 (factor -> objeto_aAcceso .)
    RBRACKET        reduce using rule 128 (factor -> objeto_aAcceso .)
    COMMA           reduce using rule 128 (factor -> objeto_aAcceso .)
    RPAREN          reduce using rule 128 (factor -> objeto_aAcceso .)
    AND             reduce using rule 128 (factor -> objeto_aAcceso .)
    OR              reduce using rule 128 (factor -> objeto_aAcceso .)


state 76

    (127) factor -> var .

    TIMES           reduce using rule 127 (factor -> var .)
    DIVIDE          reduce using rule 127 (factor -> var .)
    MODULO          reduce using rule 127 (factor -> var .)
    LT              reduce using rule 127 (factor -> var .)
    GT              reduce using rule 127 (factor -> var .)
    GE              reduce using rule 127 (factor -> var .)
    LE              reduce using rule 127 (factor -> var .)
    EQ              reduce using rule 127 (factor -> var .)
    NE              reduce using rule 127 (factor -> var .)
    PLUS            reduce using rule 127 (factor -> var .)
    MINUS           reduce using rule 127 (factor -> var .)
    VAR             reduce using rule 127 (factor -> var .)
    PUBLIC          reduce using rule 127 (factor -> var .)
    IF              reduce using rule 127 (factor -> var .)
    PRIVATE         reduce using rule 127 (factor -> var .)
    PROTECTED       reduce using rule 127 (factor -> var .)
    ID              reduce using rule 127 (factor -> var .)
    PRINT           reduce using rule 127 (factor -> var .)
    READ            reduce using rule 127 (factor -> var .)
    VOID            reduce using rule 127 (factor -> var .)
    INT             reduce using rule 127 (factor -> var .)
    FLOAT           reduce using rule 127 (factor -> var .)
    CHAR            reduce using rule 127 (factor -> var .)
    WHILE           reduce using rule 127 (factor -> var .)
    RBRACE          reduce using rule 127 (factor -> var .)
    RETURN          reduce using rule 127 (factor -> var .)
    RBRACKET        reduce using rule 127 (factor -> var .)
    COMMA           reduce using rule 127 (factor -> var .)
    RPAREN          reduce using rule 127 (factor -> var .)
    AND             reduce using rule 127 (factor -> var .)
    OR              reduce using rule 127 (factor -> var .)


state 77

    (130) var -> cint .

    TIMES           reduce using rule 130 (var -> cint .)
    DIVIDE          reduce using rule 130 (var -> cint .)
    MODULO          reduce using rule 130 (var -> cint .)
    LT              reduce using rule 130 (var -> cint .)
    GT              reduce using rule 130 (var -> cint .)
    GE              reduce using rule 130 (var -> cint .)
    LE              reduce using rule 130 (var -> cint .)
    EQ              reduce using rule 130 (var -> cint .)
    NE              reduce using rule 130 (var -> cint .)
    PLUS            reduce using rule 130 (var -> cint .)
    MINUS           reduce using rule 130 (var -> cint .)
    VAR             reduce using rule 130 (var -> cint .)
    PUBLIC          reduce using rule 130 (var -> cint .)
    IF              reduce using rule 130 (var -> cint .)
    PRIVATE         reduce using rule 130 (var -> cint .)
    PROTECTED       reduce using rule 130 (var -> cint .)
    ID              reduce using rule 130 (var -> cint .)
    PRINT           reduce using rule 130 (var -> cint .)
    READ            reduce using rule 130 (var -> cint .)
    VOID            reduce using rule 130 (var -> cint .)
    INT             reduce using rule 130 (var -> cint .)
    FLOAT           reduce using rule 130 (var -> cint .)
    CHAR            reduce using rule 130 (var -> cint .)
    WHILE           reduce using rule 130 (var -> cint .)
    RBRACE          reduce using rule 130 (var -> cint .)
    RETURN          reduce using rule 130 (var -> cint .)
    RBRACKET        reduce using rule 130 (var -> cint .)
    COMMA           reduce using rule 130 (var -> cint .)
    RPAREN          reduce using rule 130 (var -> cint .)
    AND             reduce using rule 130 (var -> cint .)
    OR              reduce using rule 130 (var -> cint .)


state 78

    (131) var -> cfloat .

    TIMES           reduce using rule 131 (var -> cfloat .)
    DIVIDE          reduce using rule 131 (var -> cfloat .)
    MODULO          reduce using rule 131 (var -> cfloat .)
    LT              reduce using rule 131 (var -> cfloat .)
    GT              reduce using rule 131 (var -> cfloat .)
    GE              reduce using rule 131 (var -> cfloat .)
    LE              reduce using rule 131 (var -> cfloat .)
    EQ              reduce using rule 131 (var -> cfloat .)
    NE              reduce using rule 131 (var -> cfloat .)
    PLUS            reduce using rule 131 (var -> cfloat .)
    MINUS           reduce using rule 131 (var -> cfloat .)
    VAR             reduce using rule 131 (var -> cfloat .)
    PUBLIC          reduce using rule 131 (var -> cfloat .)
    IF              reduce using rule 131 (var -> cfloat .)
    PRIVATE         reduce using rule 131 (var -> cfloat .)
    PROTECTED       reduce using rule 131 (var -> cfloat .)
    ID              reduce using rule 131 (var -> cfloat .)
    PRINT           reduce using rule 131 (var -> cfloat .)
    READ            reduce using rule 131 (var -> cfloat .)
    VOID            reduce using rule 131 (var -> cfloat .)
    INT             reduce using rule 131 (var -> cfloat .)
    FLOAT           reduce using rule 131 (var -> cfloat .)
    CHAR            reduce using rule 131 (var -> cfloat .)
    WHILE           reduce using rule 131 (var -> cfloat .)
    RBRACE          reduce using rule 131 (var -> cfloat .)
    RETURN          reduce using rule 131 (var -> cfloat .)
    RBRACKET        reduce using rule 131 (var -> cfloat .)
    COMMA           reduce using rule 131 (var -> cfloat .)
    RPAREN          reduce using rule 131 (var -> cfloat .)
    AND             reduce using rule 131 (var -> cfloat .)
    OR              reduce using rule 131 (var -> cfloat .)


state 79

    (132) var -> cchar .

    TIMES           reduce using rule 132 (var -> cchar .)
    DIVIDE          reduce using rule 132 (var -> cchar .)
    MODULO          reduce using rule 132 (var -> cchar .)
    LT              reduce using rule 132 (var -> cchar .)
    GT              reduce using rule 132 (var -> cchar .)
    GE              reduce using rule 132 (var -> cchar .)
    LE              reduce using rule 132 (var -> cchar .)
    EQ              reduce using rule 132 (var -> cchar .)
    NE              reduce using rule 132 (var -> cchar .)
    PLUS            reduce using rule 132 (var -> cchar .)
    MINUS           reduce using rule 132 (var -> cchar .)
    VAR             reduce using rule 132 (var -> cchar .)
    PUBLIC          reduce using rule 132 (var -> cchar .)
    IF              reduce using rule 132 (var -> cchar .)
    PRIVATE         reduce using rule 132 (var -> cchar .)
    PROTECTED       reduce using rule 132 (var -> cchar .)
    ID              reduce using rule 132 (var -> cchar .)
    PRINT           reduce using rule 132 (var -> cchar .)
    READ            reduce using rule 132 (var -> cchar .)
    VOID            reduce using rule 132 (var -> cchar .)
    INT             reduce using rule 132 (var -> cchar .)
    FLOAT           reduce using rule 132 (var -> cchar .)
    CHAR            reduce using rule 132 (var -> cchar .)
    WHILE           reduce using rule 132 (var -> cchar .)
    RBRACE          reduce using rule 132 (var -> cchar .)
    RETURN          reduce using rule 132 (var -> cchar .)
    RBRACKET        reduce using rule 132 (var -> cchar .)
    COMMA           reduce using rule 132 (var -> cchar .)
    RPAREN          reduce using rule 132 (var -> cchar .)
    AND             reduce using rule 132 (var -> cchar .)
    OR              reduce using rule 132 (var -> cchar .)


state 80

    (133) cint -> CINT .

    TIMES           reduce using rule 133 (cint -> CINT .)
    DIVIDE          reduce using rule 133 (cint -> CINT .)
    MODULO          reduce using rule 133 (cint -> CINT .)
    LT              reduce using rule 133 (cint -> CINT .)
    GT              reduce using rule 133 (cint -> CINT .)
    GE              reduce using rule 133 (cint -> CINT .)
    LE              reduce using rule 133 (cint -> CINT .)
    EQ              reduce using rule 133 (cint -> CINT .)
    NE              reduce using rule 133 (cint -> CINT .)
    PLUS            reduce using rule 133 (cint -> CINT .)
    MINUS           reduce using rule 133 (cint -> CINT .)
    VAR             reduce using rule 133 (cint -> CINT .)
    PUBLIC          reduce using rule 133 (cint -> CINT .)
    IF              reduce using rule 133 (cint -> CINT .)
    PRIVATE         reduce using rule 133 (cint -> CINT .)
    PROTECTED       reduce using rule 133 (cint -> CINT .)
    ID              reduce using rule 133 (cint -> CINT .)
    PRINT           reduce using rule 133 (cint -> CINT .)
    READ            reduce using rule 133 (cint -> CINT .)
    VOID            reduce using rule 133 (cint -> CINT .)
    INT             reduce using rule 133 (cint -> CINT .)
    FLOAT           reduce using rule 133 (cint -> CINT .)
    CHAR            reduce using rule 133 (cint -> CINT .)
    WHILE           reduce using rule 133 (cint -> CINT .)
    RBRACE          reduce using rule 133 (cint -> CINT .)
    RETURN          reduce using rule 133 (cint -> CINT .)
    RBRACKET        reduce using rule 133 (cint -> CINT .)
    COMMA           reduce using rule 133 (cint -> CINT .)
    RPAREN          reduce using rule 133 (cint -> CINT .)
    AND             reduce using rule 133 (cint -> CINT .)
    OR              reduce using rule 133 (cint -> CINT .)


state 81

    (134) cfloat -> NUMBER .

    TIMES           reduce using rule 134 (cfloat -> NUMBER .)
    DIVIDE          reduce using rule 134 (cfloat -> NUMBER .)
    MODULO          reduce using rule 134 (cfloat -> NUMBER .)
    LT              reduce using rule 134 (cfloat -> NUMBER .)
    GT              reduce using rule 134 (cfloat -> NUMBER .)
    GE              reduce using rule 134 (cfloat -> NUMBER .)
    LE              reduce using rule 134 (cfloat -> NUMBER .)
    EQ              reduce using rule 134 (cfloat -> NUMBER .)
    NE              reduce using rule 134 (cfloat -> NUMBER .)
    PLUS            reduce using rule 134 (cfloat -> NUMBER .)
    MINUS           reduce using rule 134 (cfloat -> NUMBER .)
    VAR             reduce using rule 134 (cfloat -> NUMBER .)
    PUBLIC          reduce using rule 134 (cfloat -> NUMBER .)
    IF              reduce using rule 134 (cfloat -> NUMBER .)
    PRIVATE         reduce using rule 134 (cfloat -> NUMBER .)
    PROTECTED       reduce using rule 134 (cfloat -> NUMBER .)
    ID              reduce using rule 134 (cfloat -> NUMBER .)
    PRINT           reduce using rule 134 (cfloat -> NUMBER .)
    READ            reduce using rule 134 (cfloat -> NUMBER .)
    VOID            reduce using rule 134 (cfloat -> NUMBER .)
    INT             reduce using rule 134 (cfloat -> NUMBER .)
    FLOAT           reduce using rule 134 (cfloat -> NUMBER .)
    CHAR            reduce using rule 134 (cfloat -> NUMBER .)
    WHILE           reduce using rule 134 (cfloat -> NUMBER .)
    RBRACE          reduce using rule 134 (cfloat -> NUMBER .)
    RETURN          reduce using rule 134 (cfloat -> NUMBER .)
    RBRACKET        reduce using rule 134 (cfloat -> NUMBER .)
    COMMA           reduce using rule 134 (cfloat -> NUMBER .)
    RPAREN          reduce using rule 134 (cfloat -> NUMBER .)
    AND             reduce using rule 134 (cfloat -> NUMBER .)
    OR              reduce using rule 134 (cfloat -> NUMBER .)


state 82

    (135) cchar -> CCHAR .

    TIMES           reduce using rule 135 (cchar -> CCHAR .)
    DIVIDE          reduce using rule 135 (cchar -> CCHAR .)
    MODULO          reduce using rule 135 (cchar -> CCHAR .)
    LT              reduce using rule 135 (cchar -> CCHAR .)
    GT              reduce using rule 135 (cchar -> CCHAR .)
    GE              reduce using rule 135 (cchar -> CCHAR .)
    LE              reduce using rule 135 (cchar -> CCHAR .)
    EQ              reduce using rule 135 (cchar -> CCHAR .)
    NE              reduce using rule 135 (cchar -> CCHAR .)
    PLUS            reduce using rule 135 (cchar -> CCHAR .)
    MINUS           reduce using rule 135 (cchar -> CCHAR .)
    VAR             reduce using rule 135 (cchar -> CCHAR .)
    PUBLIC          reduce using rule 135 (cchar -> CCHAR .)
    IF              reduce using rule 135 (cchar -> CCHAR .)
    PRIVATE         reduce using rule 135 (cchar -> CCHAR .)
    PROTECTED       reduce using rule 135 (cchar -> CCHAR .)
    ID              reduce using rule 135 (cchar -> CCHAR .)
    PRINT           reduce using rule 135 (cchar -> CCHAR .)
    READ            reduce using rule 135 (cchar -> CCHAR .)
    VOID            reduce using rule 135 (cchar -> CCHAR .)
    INT             reduce using rule 135 (cchar -> CCHAR .)
    FLOAT           reduce using rule 135 (cchar -> CCHAR .)
    CHAR            reduce using rule 135 (cchar -> CCHAR .)
    WHILE           reduce using rule 135 (cchar -> CCHAR .)
    RBRACE          reduce using rule 135 (cchar -> CCHAR .)
    RETURN          reduce using rule 135 (cchar -> CCHAR .)
    RBRACKET        reduce using rule 135 (cchar -> CCHAR .)
    COMMA           reduce using rule 135 (cchar -> CCHAR .)
    RPAREN          reduce using rule 135 (cchar -> CCHAR .)
    AND             reduce using rule 135 (cchar -> CCHAR .)
    OR              reduce using rule 135 (cchar -> CCHAR .)


state 83

    (129) var -> ID .
    (136) objeto_aAcceso -> ID . PERIOD ID

    TIMES           reduce using rule 129 (var -> ID .)
    DIVIDE          reduce using rule 129 (var -> ID .)
    MODULO          reduce using rule 129 (var -> ID .)
    RBRACKET        reduce using rule 129 (var -> ID .)
    PLUS            reduce using rule 129 (var -> ID .)
    MINUS           reduce using rule 129 (var -> ID .)
    COMMA           reduce using rule 129 (var -> ID .)
    RPAREN          reduce using rule 129 (var -> ID .)
    LT              reduce using rule 129 (var -> ID .)
    GT              reduce using rule 129 (var -> ID .)
    GE              reduce using rule 129 (var -> ID .)
    LE              reduce using rule 129 (var -> ID .)
    EQ              reduce using rule 129 (var -> ID .)
    NE              reduce using rule 129 (var -> ID .)
    AND             reduce using rule 129 (var -> ID .)
    OR              reduce using rule 129 (var -> ID .)
    VAR             reduce using rule 129 (var -> ID .)
    PUBLIC          reduce using rule 129 (var -> ID .)
    IF              reduce using rule 129 (var -> ID .)
    PRIVATE         reduce using rule 129 (var -> ID .)
    PROTECTED       reduce using rule 129 (var -> ID .)
    ID              reduce using rule 129 (var -> ID .)
    PRINT           reduce using rule 129 (var -> ID .)
    READ            reduce using rule 129 (var -> ID .)
    VOID            reduce using rule 129 (var -> ID .)
    INT             reduce using rule 129 (var -> ID .)
    FLOAT           reduce using rule 129 (var -> ID .)
    CHAR            reduce using rule 129 (var -> ID .)
    WHILE           reduce using rule 129 (var -> ID .)
    RBRACE          reduce using rule 129 (var -> ID .)
    RETURN          reduce using rule 129 (var -> ID .)
    PERIOD          shift and go to state 139


state 84

    (85) asignacion -> ID LBRACKET exp . RBRACKET EQUALS expresion
    (86) asignacion -> ID LBRACKET exp . RBRACKET EQUALS llamada_func
    (87) asignacion -> ID LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (91) asignacion -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (116) exp -> exp . PLUS termino
    (117) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 140
    PLUS            shift and go to state 128
    MINUS           shift and go to state 129


state 85

    (98) llamada_func -> ID LPAREN aux . RPAREN

    RPAREN          shift and go to state 141


state 86

    (99) aux -> exp .
    (100) aux -> exp . COMMA aux
    (116) exp -> exp . PLUS termino
    (117) exp -> exp . MINUS termino

    RPAREN          reduce using rule 99 (aux -> exp .)
    COMMA           shift and go to state 142
    PLUS            shift and go to state 128
    MINUS           shift and go to state 129


state 87

    (136) objeto_aAcceso -> ID PERIOD ID .
    (98) llamada_func -> ID . LPAREN aux RPAREN

    EQUALS          reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    LBRACKET        reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    TIMES           reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    DIVIDE          reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    MODULO          reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    LT              reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    GT              reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    GE              reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    LE              reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    EQ              reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    NE              reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    PLUS            reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    MINUS           reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    VAR             reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    PUBLIC          reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    IF              reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    PRIVATE         reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    PROTECTED       reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    ID              reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    PRINT           reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    READ            reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    VOID            reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    INT             reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    FLOAT           reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    CHAR            reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    WHILE           reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACE          reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    RETURN          reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    COMMA           reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    RPAREN          reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    LPAREN          shift and go to state 47


state 88

    (97) objeto_metodo -> ID PERIOD llamada_func .

    VAR             reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    PUBLIC          reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    IF              reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    PRIVATE         reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    PROTECTED       reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    ID              reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    PRINT           reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    READ            reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    VOID            reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    INT             reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    FLOAT           reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    CHAR            reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    WHILE           reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    RBRACE          reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    RETURN          reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    COMMA           reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)
    RPAREN          reduce using rule 97 (objeto_metodo -> ID PERIOD llamada_func .)


state 89

    (26) constructor -> PUBLIC ID LPAREN . param RPAREN bloque
    (40) param -> .
    (41) param -> . tipo_simple ID
    (42) param -> . tipo_simple ID COMMA param
    (75) tipo_simple -> . INT
    (76) tipo_simple -> . FLOAT
    (77) tipo_simple -> . CHAR

    RPAREN          reduce using rule 40 (param -> .)
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    CHAR            shift and go to state 117

    param                          shift and go to state 143
    tipo_simple                    shift and go to state 144

state 90

    (28) funcion -> scope type DEF . id LPAREN param aux_param RPAREN contexto_func
    (30) id -> . ID

    ID              shift and go to state 146

    id                             shift and go to state 145

state 91

    (29) funcion -> scope VOID DEF . id LPAREN param aux_param RPAREN contexto_func
    (30) id -> . ID

    ID              shift and go to state 146

    id                             shift and go to state 147

state 92

    (19) condicion -> IF LPAREN gotoF . RPAREN bloque
    (20) condicion -> IF LPAREN gotoF . RPAREN bloque elif

    RPAREN          shift and go to state 148


state 93

    (101) gotoF -> exp_cond .

    RPAREN          reduce using rule 101 (gotoF -> exp_cond .)


state 94

    (102) exp_cond -> exp_bool .
    (103) exp_cond -> exp_bool . AND exp_cond
    (104) exp_cond -> exp_bool . OR exp_cond

    RPAREN          reduce using rule 102 (exp_cond -> exp_bool .)
    AND             shift and go to state 149
    OR              shift and go to state 150


state 95

    (105) exp_bool -> TRUE .

    AND             reduce using rule 105 (exp_bool -> TRUE .)
    OR              reduce using rule 105 (exp_bool -> TRUE .)
    RPAREN          reduce using rule 105 (exp_bool -> TRUE .)


state 96

    (106) exp_bool -> FALSE .

    AND             reduce using rule 106 (exp_bool -> FALSE .)
    OR              reduce using rule 106 (exp_bool -> FALSE .)
    RPAREN          reduce using rule 106 (exp_bool -> FALSE .)


state 97

    (107) exp_bool -> expresion .

    AND             reduce using rule 107 (exp_bool -> expresion .)
    OR              reduce using rule 107 (exp_bool -> expresion .)
    RPAREN          reduce using rule 107 (exp_bool -> expresion .)


state 98

    (24) ciclo -> aux_ciclo WHILE LPAREN . gotoF RPAREN bloque
    (101) gotoF -> . exp_cond
    (102) exp_cond -> . exp_bool
    (103) exp_cond -> . exp_bool AND exp_cond
    (104) exp_cond -> . exp_bool OR exp_cond
    (105) exp_bool -> . TRUE
    (106) exp_bool -> . FALSE
    (107) exp_bool -> . expresion
    (108) expresion -> . exp
    (109) expresion -> . exp LT expresion
    (110) expresion -> . exp GT expresion
    (111) expresion -> . exp GE expresion
    (112) expresion -> . exp LE expresion
    (113) expresion -> . exp EQ expresion
    (114) expresion -> . exp NE expresion
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    ID              shift and go to state 83
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    gotoF                          shift and go to state 151
    exp_cond                       shift and go to state 93
    exp_bool                       shift and go to state 94
    expresion                      shift and go to state 97
    exp                            shift and go to state 69
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 99

    (82) asignacion -> objeto_aAcceso EQUALS expresion .

    VAR             reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PUBLIC          reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS expresion .)
    IF              reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PRIVATE         reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PROTECTED       reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS expresion .)
    ID              reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PRINT           reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS expresion .)
    READ            reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS expresion .)
    VOID            reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS expresion .)
    INT             reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS expresion .)
    FLOAT           reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS expresion .)
    CHAR            reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS expresion .)
    WHILE           reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS expresion .)
    RBRACE          reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS expresion .)
    RETURN          reduce using rule 82 (asignacion -> objeto_aAcceso EQUALS expresion .)


state 100

    (83) asignacion -> objeto_aAcceso EQUALS llamada_func .

    VAR             reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PUBLIC          reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    IF              reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PRIVATE         reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PROTECTED       reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    ID              reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PRINT           reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    READ            reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    VOID            reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    INT             reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    FLOAT           reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    CHAR            reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    WHILE           reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    RBRACE          reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    RETURN          reduce using rule 83 (asignacion -> objeto_aAcceso EQUALS llamada_func .)


state 101

    (84) asignacion -> objeto_aAcceso EQUALS objeto_metodo .

    VAR             reduce using rule 84 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 84 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    IF              reduce using rule 84 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 84 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 84 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    ID              reduce using rule 84 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PRINT           reduce using rule 84 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    READ            reduce using rule 84 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    VOID            reduce using rule 84 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    INT             reduce using rule 84 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    FLOAT           reduce using rule 84 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    CHAR            reduce using rule 84 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    WHILE           reduce using rule 84 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    RBRACE          reduce using rule 84 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    RETURN          reduce using rule 84 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)


state 102

    (94) asignacion -> objeto_aAcceso LBRACKET LBRACKET . exp RBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> objeto_aAcceso LBRACKET LBRACKET . exp RBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> objeto_aAcceso LBRACKET LBRACKET . exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    ID              shift and go to state 83
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    objeto_aAcceso                 shift and go to state 75
    exp                            shift and go to state 152
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 103

    (88) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET EQUALS expresion
    (89) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET EQUALS llamada_func
    (90) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (116) exp -> exp . PLUS termino
    (117) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 153
    PLUS            shift and go to state 128
    MINUS           shift and go to state 129


state 104

    (58) escritura -> PRINT LPAREN aux3 . RPAREN

    RPAREN          shift and go to state 154


state 105

    (59) aux3 -> expresion .
    (63) aux3 -> expresion . COMMA aux3

    RPAREN          reduce using rule 59 (aux3 -> expresion .)
    COMMA           shift and go to state 155


state 106

    (60) aux3 -> llamada_func .
    (64) aux3 -> llamada_func . COMMA aux3

    RPAREN          reduce using rule 60 (aux3 -> llamada_func .)
    COMMA           shift and go to state 156


state 107

    (61) aux3 -> objeto_metodo .
    (65) aux3 -> objeto_metodo . COMMA aux3

    RPAREN          reduce using rule 61 (aux3 -> objeto_metodo .)
    COMMA           shift and go to state 157


state 108

    (62) aux3 -> CSTRING .
    (66) aux3 -> CSTRING . COMMA aux3

    RPAREN          reduce using rule 62 (aux3 -> CSTRING .)
    COMMA           shift and go to state 158


state 109

    (53) lectura -> READ LPAREN aux4 . RPAREN

    RPAREN          shift and go to state 159


state 110

    (54) aux4 -> ID .
    (56) aux4 -> ID . COMMA aux4
    (136) objeto_aAcceso -> ID . PERIOD ID

    RPAREN          reduce using rule 54 (aux4 -> ID .)
    COMMA           shift and go to state 160
    PERIOD          shift and go to state 139


state 111

    (55) aux4 -> objeto_aAcceso .
    (57) aux4 -> objeto_aAcceso . COMMA aux4

    RPAREN          reduce using rule 55 (aux4 -> objeto_aAcceso .)
    COMMA           shift and go to state 161


state 112

    (5) class -> scope CLASS ID COLON ID .

    LBRACE          reduce using rule 5 (class -> scope CLASS ID COLON ID .)


state 113

    (67) vars -> VAR aux2 COLON tipo_simple .

    VAR             reduce using rule 67 (vars -> VAR aux2 COLON tipo_simple .)
    PUBLIC          reduce using rule 67 (vars -> VAR aux2 COLON tipo_simple .)
    IF              reduce using rule 67 (vars -> VAR aux2 COLON tipo_simple .)
    PRIVATE         reduce using rule 67 (vars -> VAR aux2 COLON tipo_simple .)
    PROTECTED       reduce using rule 67 (vars -> VAR aux2 COLON tipo_simple .)
    ID              reduce using rule 67 (vars -> VAR aux2 COLON tipo_simple .)
    PRINT           reduce using rule 67 (vars -> VAR aux2 COLON tipo_simple .)
    READ            reduce using rule 67 (vars -> VAR aux2 COLON tipo_simple .)
    VOID            reduce using rule 67 (vars -> VAR aux2 COLON tipo_simple .)
    INT             reduce using rule 67 (vars -> VAR aux2 COLON tipo_simple .)
    FLOAT           reduce using rule 67 (vars -> VAR aux2 COLON tipo_simple .)
    CHAR            reduce using rule 67 (vars -> VAR aux2 COLON tipo_simple .)
    WHILE           reduce using rule 67 (vars -> VAR aux2 COLON tipo_simple .)
    RBRACE          reduce using rule 67 (vars -> VAR aux2 COLON tipo_simple .)
    RETURN          reduce using rule 67 (vars -> VAR aux2 COLON tipo_simple .)


state 114

    (68) vars -> VAR aux2 COLON tipo_compuesto .

    VAR             reduce using rule 68 (vars -> VAR aux2 COLON tipo_compuesto .)
    PUBLIC          reduce using rule 68 (vars -> VAR aux2 COLON tipo_compuesto .)
    IF              reduce using rule 68 (vars -> VAR aux2 COLON tipo_compuesto .)
    PRIVATE         reduce using rule 68 (vars -> VAR aux2 COLON tipo_compuesto .)
    PROTECTED       reduce using rule 68 (vars -> VAR aux2 COLON tipo_compuesto .)
    ID              reduce using rule 68 (vars -> VAR aux2 COLON tipo_compuesto .)
    PRINT           reduce using rule 68 (vars -> VAR aux2 COLON tipo_compuesto .)
    READ            reduce using rule 68 (vars -> VAR aux2 COLON tipo_compuesto .)
    VOID            reduce using rule 68 (vars -> VAR aux2 COLON tipo_compuesto .)
    INT             reduce using rule 68 (vars -> VAR aux2 COLON tipo_compuesto .)
    FLOAT           reduce using rule 68 (vars -> VAR aux2 COLON tipo_compuesto .)
    CHAR            reduce using rule 68 (vars -> VAR aux2 COLON tipo_compuesto .)
    WHILE           reduce using rule 68 (vars -> VAR aux2 COLON tipo_compuesto .)
    RBRACE          reduce using rule 68 (vars -> VAR aux2 COLON tipo_compuesto .)
    RETURN          reduce using rule 68 (vars -> VAR aux2 COLON tipo_compuesto .)


state 115

    (75) tipo_simple -> INT .

    VAR             reduce using rule 75 (tipo_simple -> INT .)
    PUBLIC          reduce using rule 75 (tipo_simple -> INT .)
    IF              reduce using rule 75 (tipo_simple -> INT .)
    PRIVATE         reduce using rule 75 (tipo_simple -> INT .)
    PROTECTED       reduce using rule 75 (tipo_simple -> INT .)
    ID              reduce using rule 75 (tipo_simple -> INT .)
    PRINT           reduce using rule 75 (tipo_simple -> INT .)
    READ            reduce using rule 75 (tipo_simple -> INT .)
    VOID            reduce using rule 75 (tipo_simple -> INT .)
    INT             reduce using rule 75 (tipo_simple -> INT .)
    FLOAT           reduce using rule 75 (tipo_simple -> INT .)
    CHAR            reduce using rule 75 (tipo_simple -> INT .)
    WHILE           reduce using rule 75 (tipo_simple -> INT .)
    RBRACE          reduce using rule 75 (tipo_simple -> INT .)
    RETURN          reduce using rule 75 (tipo_simple -> INT .)


state 116

    (76) tipo_simple -> FLOAT .

    VAR             reduce using rule 76 (tipo_simple -> FLOAT .)
    PUBLIC          reduce using rule 76 (tipo_simple -> FLOAT .)
    IF              reduce using rule 76 (tipo_simple -> FLOAT .)
    PRIVATE         reduce using rule 76 (tipo_simple -> FLOAT .)
    PROTECTED       reduce using rule 76 (tipo_simple -> FLOAT .)
    ID              reduce using rule 76 (tipo_simple -> FLOAT .)
    PRINT           reduce using rule 76 (tipo_simple -> FLOAT .)
    READ            reduce using rule 76 (tipo_simple -> FLOAT .)
    VOID            reduce using rule 76 (tipo_simple -> FLOAT .)
    INT             reduce using rule 76 (tipo_simple -> FLOAT .)
    FLOAT           reduce using rule 76 (tipo_simple -> FLOAT .)
    CHAR            reduce using rule 76 (tipo_simple -> FLOAT .)
    WHILE           reduce using rule 76 (tipo_simple -> FLOAT .)
    RBRACE          reduce using rule 76 (tipo_simple -> FLOAT .)
    RETURN          reduce using rule 76 (tipo_simple -> FLOAT .)


state 117

    (77) tipo_simple -> CHAR .

    VAR             reduce using rule 77 (tipo_simple -> CHAR .)
    PUBLIC          reduce using rule 77 (tipo_simple -> CHAR .)
    IF              reduce using rule 77 (tipo_simple -> CHAR .)
    PRIVATE         reduce using rule 77 (tipo_simple -> CHAR .)
    PROTECTED       reduce using rule 77 (tipo_simple -> CHAR .)
    ID              reduce using rule 77 (tipo_simple -> CHAR .)
    PRINT           reduce using rule 77 (tipo_simple -> CHAR .)
    READ            reduce using rule 77 (tipo_simple -> CHAR .)
    VOID            reduce using rule 77 (tipo_simple -> CHAR .)
    INT             reduce using rule 77 (tipo_simple -> CHAR .)
    FLOAT           reduce using rule 77 (tipo_simple -> CHAR .)
    CHAR            reduce using rule 77 (tipo_simple -> CHAR .)
    WHILE           reduce using rule 77 (tipo_simple -> CHAR .)
    RBRACE          reduce using rule 77 (tipo_simple -> CHAR .)
    RETURN          reduce using rule 77 (tipo_simple -> CHAR .)


state 118

    (78) tipo_compuesto -> ID .

    VAR             reduce using rule 78 (tipo_compuesto -> ID .)
    PUBLIC          reduce using rule 78 (tipo_compuesto -> ID .)
    IF              reduce using rule 78 (tipo_compuesto -> ID .)
    PRIVATE         reduce using rule 78 (tipo_compuesto -> ID .)
    PROTECTED       reduce using rule 78 (tipo_compuesto -> ID .)
    ID              reduce using rule 78 (tipo_compuesto -> ID .)
    PRINT           reduce using rule 78 (tipo_compuesto -> ID .)
    READ            reduce using rule 78 (tipo_compuesto -> ID .)
    VOID            reduce using rule 78 (tipo_compuesto -> ID .)
    INT             reduce using rule 78 (tipo_compuesto -> ID .)
    FLOAT           reduce using rule 78 (tipo_compuesto -> ID .)
    CHAR            reduce using rule 78 (tipo_compuesto -> ID .)
    WHILE           reduce using rule 78 (tipo_compuesto -> ID .)
    RBRACE          reduce using rule 78 (tipo_compuesto -> ID .)
    RETURN          reduce using rule 78 (tipo_compuesto -> ID .)


state 119

    (69) vars -> VAR ID LBRACKET cint . RBRACKET COLON tipo_simple
    (70) vars -> VAR ID LBRACKET cint . RBRACKET COLON tipo_compuesto
    (71) vars -> VAR ID LBRACKET cint . RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (72) vars -> VAR ID LBRACKET cint . RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto

    RBRACKET        shift and go to state 162


state 120

    (73) aux2 -> ID .
    (74) aux2 -> ID . COMMA aux2

    COLON           reduce using rule 73 (aux2 -> ID .)
    COMMA           shift and go to state 64


state 121

    (74) aux2 -> ID COMMA aux2 .

    COLON           reduce using rule 74 (aux2 -> ID COMMA aux2 .)


state 122

    (109) expresion -> exp LT . expresion
    (108) expresion -> . exp
    (109) expresion -> . exp LT expresion
    (110) expresion -> . exp GT expresion
    (111) expresion -> . exp GE expresion
    (112) expresion -> . exp LE expresion
    (113) expresion -> . exp EQ expresion
    (114) expresion -> . exp NE expresion
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    ID              shift and go to state 83
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    exp                            shift and go to state 69
    expresion                      shift and go to state 163
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 123

    (110) expresion -> exp GT . expresion
    (108) expresion -> . exp
    (109) expresion -> . exp LT expresion
    (110) expresion -> . exp GT expresion
    (111) expresion -> . exp GE expresion
    (112) expresion -> . exp LE expresion
    (113) expresion -> . exp EQ expresion
    (114) expresion -> . exp NE expresion
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    ID              shift and go to state 83
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    exp                            shift and go to state 69
    expresion                      shift and go to state 164
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 124

    (111) expresion -> exp GE . expresion
    (108) expresion -> . exp
    (109) expresion -> . exp LT expresion
    (110) expresion -> . exp GT expresion
    (111) expresion -> . exp GE expresion
    (112) expresion -> . exp LE expresion
    (113) expresion -> . exp EQ expresion
    (114) expresion -> . exp NE expresion
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    ID              shift and go to state 83
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    exp                            shift and go to state 69
    expresion                      shift and go to state 165
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 125

    (112) expresion -> exp LE . expresion
    (108) expresion -> . exp
    (109) expresion -> . exp LT expresion
    (110) expresion -> . exp GT expresion
    (111) expresion -> . exp GE expresion
    (112) expresion -> . exp LE expresion
    (113) expresion -> . exp EQ expresion
    (114) expresion -> . exp NE expresion
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    ID              shift and go to state 83
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    exp                            shift and go to state 69
    expresion                      shift and go to state 166
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 126

    (113) expresion -> exp EQ . expresion
    (108) expresion -> . exp
    (109) expresion -> . exp LT expresion
    (110) expresion -> . exp GT expresion
    (111) expresion -> . exp GE expresion
    (112) expresion -> . exp LE expresion
    (113) expresion -> . exp EQ expresion
    (114) expresion -> . exp NE expresion
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    ID              shift and go to state 83
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    exp                            shift and go to state 69
    expresion                      shift and go to state 167
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 127

    (114) expresion -> exp NE . expresion
    (108) expresion -> . exp
    (109) expresion -> . exp LT expresion
    (110) expresion -> . exp GT expresion
    (111) expresion -> . exp GE expresion
    (112) expresion -> . exp LE expresion
    (113) expresion -> . exp EQ expresion
    (114) expresion -> . exp NE expresion
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    ID              shift and go to state 83
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    exp                            shift and go to state 69
    expresion                      shift and go to state 168
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 128

    (116) exp -> exp PLUS . termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    ID              shift and go to state 83
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    termino                        shift and go to state 169
    factor                         shift and go to state 74
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 129

    (117) exp -> exp MINUS . termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    ID              shift and go to state 83
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    termino                        shift and go to state 170
    factor                         shift and go to state 74
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 130

    (122) factor -> LPAREN exp_cond . RPAREN

    RPAREN          shift and go to state 171


state 131

    (119) termino -> termino TIMES . factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    ID              shift and go to state 83
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    factor                         shift and go to state 172
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 132

    (120) termino -> termino DIVIDE . factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    ID              shift and go to state 83
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    factor                         shift and go to state 173
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 133

    (121) termino -> termino MODULO . factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    ID              shift and go to state 83
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    factor                         shift and go to state 174
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 134

    (123) factor -> PLUS objeto_aAcceso .

    TIMES           reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    DIVIDE          reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    MODULO          reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    LT              reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    GT              reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    GE              reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    LE              reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    EQ              reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    NE              reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    PLUS            reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    MINUS           reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    VAR             reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    PUBLIC          reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    IF              reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    PRIVATE         reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    PROTECTED       reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    ID              reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    PRINT           reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    READ            reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    VOID            reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    INT             reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    FLOAT           reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    CHAR            reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    WHILE           reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    RBRACE          reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    RETURN          reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    RBRACKET        reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    COMMA           reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    RPAREN          reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    AND             reduce using rule 123 (factor -> PLUS objeto_aAcceso .)
    OR              reduce using rule 123 (factor -> PLUS objeto_aAcceso .)


state 135

    (125) factor -> PLUS var .

    TIMES           reduce using rule 125 (factor -> PLUS var .)
    DIVIDE          reduce using rule 125 (factor -> PLUS var .)
    MODULO          reduce using rule 125 (factor -> PLUS var .)
    LT              reduce using rule 125 (factor -> PLUS var .)
    GT              reduce using rule 125 (factor -> PLUS var .)
    GE              reduce using rule 125 (factor -> PLUS var .)
    LE              reduce using rule 125 (factor -> PLUS var .)
    EQ              reduce using rule 125 (factor -> PLUS var .)
    NE              reduce using rule 125 (factor -> PLUS var .)
    PLUS            reduce using rule 125 (factor -> PLUS var .)
    MINUS           reduce using rule 125 (factor -> PLUS var .)
    VAR             reduce using rule 125 (factor -> PLUS var .)
    PUBLIC          reduce using rule 125 (factor -> PLUS var .)
    IF              reduce using rule 125 (factor -> PLUS var .)
    PRIVATE         reduce using rule 125 (factor -> PLUS var .)
    PROTECTED       reduce using rule 125 (factor -> PLUS var .)
    ID              reduce using rule 125 (factor -> PLUS var .)
    PRINT           reduce using rule 125 (factor -> PLUS var .)
    READ            reduce using rule 125 (factor -> PLUS var .)
    VOID            reduce using rule 125 (factor -> PLUS var .)
    INT             reduce using rule 125 (factor -> PLUS var .)
    FLOAT           reduce using rule 125 (factor -> PLUS var .)
    CHAR            reduce using rule 125 (factor -> PLUS var .)
    WHILE           reduce using rule 125 (factor -> PLUS var .)
    RBRACE          reduce using rule 125 (factor -> PLUS var .)
    RETURN          reduce using rule 125 (factor -> PLUS var .)
    RBRACKET        reduce using rule 125 (factor -> PLUS var .)
    COMMA           reduce using rule 125 (factor -> PLUS var .)
    RPAREN          reduce using rule 125 (factor -> PLUS var .)
    AND             reduce using rule 125 (factor -> PLUS var .)
    OR              reduce using rule 125 (factor -> PLUS var .)


state 136

    (136) objeto_aAcceso -> ID . PERIOD ID
    (129) var -> ID .

    PERIOD          shift and go to state 139
    TIMES           reduce using rule 129 (var -> ID .)
    DIVIDE          reduce using rule 129 (var -> ID .)
    MODULO          reduce using rule 129 (var -> ID .)
    LT              reduce using rule 129 (var -> ID .)
    GT              reduce using rule 129 (var -> ID .)
    GE              reduce using rule 129 (var -> ID .)
    LE              reduce using rule 129 (var -> ID .)
    EQ              reduce using rule 129 (var -> ID .)
    NE              reduce using rule 129 (var -> ID .)
    PLUS            reduce using rule 129 (var -> ID .)
    MINUS           reduce using rule 129 (var -> ID .)
    VAR             reduce using rule 129 (var -> ID .)
    PUBLIC          reduce using rule 129 (var -> ID .)
    IF              reduce using rule 129 (var -> ID .)
    PRIVATE         reduce using rule 129 (var -> ID .)
    PROTECTED       reduce using rule 129 (var -> ID .)
    ID              reduce using rule 129 (var -> ID .)
    PRINT           reduce using rule 129 (var -> ID .)
    READ            reduce using rule 129 (var -> ID .)
    VOID            reduce using rule 129 (var -> ID .)
    INT             reduce using rule 129 (var -> ID .)
    FLOAT           reduce using rule 129 (var -> ID .)
    CHAR            reduce using rule 129 (var -> ID .)
    WHILE           reduce using rule 129 (var -> ID .)
    RBRACE          reduce using rule 129 (var -> ID .)
    RETURN          reduce using rule 129 (var -> ID .)
    RBRACKET        reduce using rule 129 (var -> ID .)
    COMMA           reduce using rule 129 (var -> ID .)
    RPAREN          reduce using rule 129 (var -> ID .)
    AND             reduce using rule 129 (var -> ID .)
    OR              reduce using rule 129 (var -> ID .)


state 137

    (124) factor -> MINUS objeto_aAcceso .

    TIMES           reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    DIVIDE          reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    MODULO          reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    LT              reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    GT              reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    GE              reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    LE              reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    EQ              reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    NE              reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    PLUS            reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    MINUS           reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    VAR             reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    PUBLIC          reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    IF              reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    PRIVATE         reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    PROTECTED       reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    ID              reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    PRINT           reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    READ            reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    VOID            reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    INT             reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    FLOAT           reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    CHAR            reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    WHILE           reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    RBRACE          reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    RETURN          reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    RBRACKET        reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    COMMA           reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    RPAREN          reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    AND             reduce using rule 124 (factor -> MINUS objeto_aAcceso .)
    OR              reduce using rule 124 (factor -> MINUS objeto_aAcceso .)


state 138

    (126) factor -> MINUS var .

    TIMES           reduce using rule 126 (factor -> MINUS var .)
    DIVIDE          reduce using rule 126 (factor -> MINUS var .)
    MODULO          reduce using rule 126 (factor -> MINUS var .)
    LT              reduce using rule 126 (factor -> MINUS var .)
    GT              reduce using rule 126 (factor -> MINUS var .)
    GE              reduce using rule 126 (factor -> MINUS var .)
    LE              reduce using rule 126 (factor -> MINUS var .)
    EQ              reduce using rule 126 (factor -> MINUS var .)
    NE              reduce using rule 126 (factor -> MINUS var .)
    PLUS            reduce using rule 126 (factor -> MINUS var .)
    MINUS           reduce using rule 126 (factor -> MINUS var .)
    VAR             reduce using rule 126 (factor -> MINUS var .)
    PUBLIC          reduce using rule 126 (factor -> MINUS var .)
    IF              reduce using rule 126 (factor -> MINUS var .)
    PRIVATE         reduce using rule 126 (factor -> MINUS var .)
    PROTECTED       reduce using rule 126 (factor -> MINUS var .)
    ID              reduce using rule 126 (factor -> MINUS var .)
    PRINT           reduce using rule 126 (factor -> MINUS var .)
    READ            reduce using rule 126 (factor -> MINUS var .)
    VOID            reduce using rule 126 (factor -> MINUS var .)
    INT             reduce using rule 126 (factor -> MINUS var .)
    FLOAT           reduce using rule 126 (factor -> MINUS var .)
    CHAR            reduce using rule 126 (factor -> MINUS var .)
    WHILE           reduce using rule 126 (factor -> MINUS var .)
    RBRACE          reduce using rule 126 (factor -> MINUS var .)
    RETURN          reduce using rule 126 (factor -> MINUS var .)
    RBRACKET        reduce using rule 126 (factor -> MINUS var .)
    COMMA           reduce using rule 126 (factor -> MINUS var .)
    RPAREN          reduce using rule 126 (factor -> MINUS var .)
    AND             reduce using rule 126 (factor -> MINUS var .)
    OR              reduce using rule 126 (factor -> MINUS var .)


state 139

    (136) objeto_aAcceso -> ID PERIOD . ID

    ID              shift and go to state 175


state 140

    (85) asignacion -> ID LBRACKET exp RBRACKET . EQUALS expresion
    (86) asignacion -> ID LBRACKET exp RBRACKET . EQUALS llamada_func
    (87) asignacion -> ID LBRACKET exp RBRACKET . EQUALS objeto_metodo
    (91) asignacion -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS objeto_metodo

    EQUALS          shift and go to state 177
    LBRACKET        shift and go to state 176


state 141

    (98) llamada_func -> ID LPAREN aux RPAREN .

    VAR             reduce using rule 98 (llamada_func -> ID LPAREN aux RPAREN .)
    PUBLIC          reduce using rule 98 (llamada_func -> ID LPAREN aux RPAREN .)
    IF              reduce using rule 98 (llamada_func -> ID LPAREN aux RPAREN .)
    PRIVATE         reduce using rule 98 (llamada_func -> ID LPAREN aux RPAREN .)
    PROTECTED       reduce using rule 98 (llamada_func -> ID LPAREN aux RPAREN .)
    ID              reduce using rule 98 (llamada_func -> ID LPAREN aux RPAREN .)
    PRINT           reduce using rule 98 (llamada_func -> ID LPAREN aux RPAREN .)
    READ            reduce using rule 98 (llamada_func -> ID LPAREN aux RPAREN .)
    VOID            reduce using rule 98 (llamada_func -> ID LPAREN aux RPAREN .)
    INT             reduce using rule 98 (llamada_func -> ID LPAREN aux RPAREN .)
    FLOAT           reduce using rule 98 (llamada_func -> ID LPAREN aux RPAREN .)
    CHAR            reduce using rule 98 (llamada_func -> ID LPAREN aux RPAREN .)
    WHILE           reduce using rule 98 (llamada_func -> ID LPAREN aux RPAREN .)
    RBRACE          reduce using rule 98 (llamada_func -> ID LPAREN aux RPAREN .)
    RETURN          reduce using rule 98 (llamada_func -> ID LPAREN aux RPAREN .)
    COMMA           reduce using rule 98 (llamada_func -> ID LPAREN aux RPAREN .)
    RPAREN          reduce using rule 98 (llamada_func -> ID LPAREN aux RPAREN .)


state 142

    (100) aux -> exp COMMA . aux
    (99) aux -> . exp
    (100) aux -> . exp COMMA aux
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    ID              shift and go to state 83
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    exp                            shift and go to state 86
    aux                            shift and go to state 178
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 143

    (26) constructor -> PUBLIC ID LPAREN param . RPAREN bloque

    RPAREN          shift and go to state 179


state 144

    (41) param -> tipo_simple . ID
    (42) param -> tipo_simple . ID COMMA param

    ID              shift and go to state 180


state 145

    (28) funcion -> scope type DEF id . LPAREN param aux_param RPAREN contexto_func

    LPAREN          shift and go to state 181


state 146

    (30) id -> ID .

    LPAREN          reduce using rule 30 (id -> ID .)


state 147

    (29) funcion -> scope VOID DEF id . LPAREN param aux_param RPAREN contexto_func

    LPAREN          shift and go to state 182


state 148

    (19) condicion -> IF LPAREN gotoF RPAREN . bloque
    (20) condicion -> IF LPAREN gotoF RPAREN . bloque elif
    (27) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 184

    bloque                         shift and go to state 183

state 149

    (103) exp_cond -> exp_bool AND . exp_cond
    (102) exp_cond -> . exp_bool
    (103) exp_cond -> . exp_bool AND exp_cond
    (104) exp_cond -> . exp_bool OR exp_cond
    (105) exp_bool -> . TRUE
    (106) exp_bool -> . FALSE
    (107) exp_bool -> . expresion
    (108) expresion -> . exp
    (109) expresion -> . exp LT expresion
    (110) expresion -> . exp GT expresion
    (111) expresion -> . exp GE expresion
    (112) expresion -> . exp LE expresion
    (113) expresion -> . exp EQ expresion
    (114) expresion -> . exp NE expresion
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    ID              shift and go to state 83
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    exp_bool                       shift and go to state 94
    exp_cond                       shift and go to state 185
    expresion                      shift and go to state 97
    exp                            shift and go to state 69
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 150

    (104) exp_cond -> exp_bool OR . exp_cond
    (102) exp_cond -> . exp_bool
    (103) exp_cond -> . exp_bool AND exp_cond
    (104) exp_cond -> . exp_bool OR exp_cond
    (105) exp_bool -> . TRUE
    (106) exp_bool -> . FALSE
    (107) exp_bool -> . expresion
    (108) expresion -> . exp
    (109) expresion -> . exp LT expresion
    (110) expresion -> . exp GT expresion
    (111) expresion -> . exp GE expresion
    (112) expresion -> . exp LE expresion
    (113) expresion -> . exp EQ expresion
    (114) expresion -> . exp NE expresion
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    ID              shift and go to state 83
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    exp_bool                       shift and go to state 94
    exp_cond                       shift and go to state 186
    expresion                      shift and go to state 97
    exp                            shift and go to state 69
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 151

    (24) ciclo -> aux_ciclo WHILE LPAREN gotoF . RPAREN bloque

    RPAREN          shift and go to state 187


state 152

    (94) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp . RBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp . RBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp . RBRACKET exp RBRACKET EQUALS objeto_metodo
    (116) exp -> exp . PLUS termino
    (117) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 188
    PLUS            shift and go to state 128
    MINUS           shift and go to state 129


state 153

    (88) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . EQUALS expresion
    (89) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . EQUALS llamada_func
    (90) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . EQUALS objeto_metodo

    EQUALS          shift and go to state 189


state 154

    (58) escritura -> PRINT LPAREN aux3 RPAREN .

    VAR             reduce using rule 58 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PUBLIC          reduce using rule 58 (escritura -> PRINT LPAREN aux3 RPAREN .)
    IF              reduce using rule 58 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PRIVATE         reduce using rule 58 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PROTECTED       reduce using rule 58 (escritura -> PRINT LPAREN aux3 RPAREN .)
    ID              reduce using rule 58 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PRINT           reduce using rule 58 (escritura -> PRINT LPAREN aux3 RPAREN .)
    READ            reduce using rule 58 (escritura -> PRINT LPAREN aux3 RPAREN .)
    VOID            reduce using rule 58 (escritura -> PRINT LPAREN aux3 RPAREN .)
    INT             reduce using rule 58 (escritura -> PRINT LPAREN aux3 RPAREN .)
    FLOAT           reduce using rule 58 (escritura -> PRINT LPAREN aux3 RPAREN .)
    CHAR            reduce using rule 58 (escritura -> PRINT LPAREN aux3 RPAREN .)
    WHILE           reduce using rule 58 (escritura -> PRINT LPAREN aux3 RPAREN .)
    RBRACE          reduce using rule 58 (escritura -> PRINT LPAREN aux3 RPAREN .)
    RETURN          reduce using rule 58 (escritura -> PRINT LPAREN aux3 RPAREN .)


state 155

    (63) aux3 -> expresion COMMA . aux3
    (59) aux3 -> . expresion
    (60) aux3 -> . llamada_func
    (61) aux3 -> . objeto_metodo
    (62) aux3 -> . CSTRING
    (63) aux3 -> . expresion COMMA aux3
    (64) aux3 -> . llamada_func COMMA aux3
    (65) aux3 -> . objeto_metodo COMMA aux3
    (66) aux3 -> . CSTRING COMMA aux3
    (108) expresion -> . exp
    (109) expresion -> . exp LT expresion
    (110) expresion -> . exp GT expresion
    (111) expresion -> . exp GE expresion
    (112) expresion -> . exp LE expresion
    (113) expresion -> . exp EQ expresion
    (114) expresion -> . exp NE expresion
    (98) llamada_func -> . ID LPAREN aux RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    CSTRING         shift and go to state 108
    ID              shift and go to state 65
    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    expresion                      shift and go to state 105
    aux3                           shift and go to state 190
    llamada_func                   shift and go to state 106
    objeto_metodo                  shift and go to state 107
    exp                            shift and go to state 69
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 156

    (64) aux3 -> llamada_func COMMA . aux3
    (59) aux3 -> . expresion
    (60) aux3 -> . llamada_func
    (61) aux3 -> . objeto_metodo
    (62) aux3 -> . CSTRING
    (63) aux3 -> . expresion COMMA aux3
    (64) aux3 -> . llamada_func COMMA aux3
    (65) aux3 -> . objeto_metodo COMMA aux3
    (66) aux3 -> . CSTRING COMMA aux3
    (108) expresion -> . exp
    (109) expresion -> . exp LT expresion
    (110) expresion -> . exp GT expresion
    (111) expresion -> . exp GE expresion
    (112) expresion -> . exp LE expresion
    (113) expresion -> . exp EQ expresion
    (114) expresion -> . exp NE expresion
    (98) llamada_func -> . ID LPAREN aux RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    CSTRING         shift and go to state 108
    ID              shift and go to state 65
    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    llamada_func                   shift and go to state 106
    aux3                           shift and go to state 191
    expresion                      shift and go to state 105
    objeto_metodo                  shift and go to state 107
    exp                            shift and go to state 69
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 157

    (65) aux3 -> objeto_metodo COMMA . aux3
    (59) aux3 -> . expresion
    (60) aux3 -> . llamada_func
    (61) aux3 -> . objeto_metodo
    (62) aux3 -> . CSTRING
    (63) aux3 -> . expresion COMMA aux3
    (64) aux3 -> . llamada_func COMMA aux3
    (65) aux3 -> . objeto_metodo COMMA aux3
    (66) aux3 -> . CSTRING COMMA aux3
    (108) expresion -> . exp
    (109) expresion -> . exp LT expresion
    (110) expresion -> . exp GT expresion
    (111) expresion -> . exp GE expresion
    (112) expresion -> . exp LE expresion
    (113) expresion -> . exp EQ expresion
    (114) expresion -> . exp NE expresion
    (98) llamada_func -> . ID LPAREN aux RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    CSTRING         shift and go to state 108
    ID              shift and go to state 65
    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    objeto_metodo                  shift and go to state 107
    aux3                           shift and go to state 192
    expresion                      shift and go to state 105
    llamada_func                   shift and go to state 106
    exp                            shift and go to state 69
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 158

    (66) aux3 -> CSTRING COMMA . aux3
    (59) aux3 -> . expresion
    (60) aux3 -> . llamada_func
    (61) aux3 -> . objeto_metodo
    (62) aux3 -> . CSTRING
    (63) aux3 -> . expresion COMMA aux3
    (64) aux3 -> . llamada_func COMMA aux3
    (65) aux3 -> . objeto_metodo COMMA aux3
    (66) aux3 -> . CSTRING COMMA aux3
    (108) expresion -> . exp
    (109) expresion -> . exp LT expresion
    (110) expresion -> . exp GT expresion
    (111) expresion -> . exp GE expresion
    (112) expresion -> . exp LE expresion
    (113) expresion -> . exp EQ expresion
    (114) expresion -> . exp NE expresion
    (98) llamada_func -> . ID LPAREN aux RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    CSTRING         shift and go to state 108
    ID              shift and go to state 65
    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    aux3                           shift and go to state 193
    expresion                      shift and go to state 105
    llamada_func                   shift and go to state 106
    objeto_metodo                  shift and go to state 107
    exp                            shift and go to state 69
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 159

    (53) lectura -> READ LPAREN aux4 RPAREN .

    VAR             reduce using rule 53 (lectura -> READ LPAREN aux4 RPAREN .)
    PUBLIC          reduce using rule 53 (lectura -> READ LPAREN aux4 RPAREN .)
    IF              reduce using rule 53 (lectura -> READ LPAREN aux4 RPAREN .)
    PRIVATE         reduce using rule 53 (lectura -> READ LPAREN aux4 RPAREN .)
    PROTECTED       reduce using rule 53 (lectura -> READ LPAREN aux4 RPAREN .)
    ID              reduce using rule 53 (lectura -> READ LPAREN aux4 RPAREN .)
    PRINT           reduce using rule 53 (lectura -> READ LPAREN aux4 RPAREN .)
    READ            reduce using rule 53 (lectura -> READ LPAREN aux4 RPAREN .)
    VOID            reduce using rule 53 (lectura -> READ LPAREN aux4 RPAREN .)
    INT             reduce using rule 53 (lectura -> READ LPAREN aux4 RPAREN .)
    FLOAT           reduce using rule 53 (lectura -> READ LPAREN aux4 RPAREN .)
    CHAR            reduce using rule 53 (lectura -> READ LPAREN aux4 RPAREN .)
    WHILE           reduce using rule 53 (lectura -> READ LPAREN aux4 RPAREN .)
    RBRACE          reduce using rule 53 (lectura -> READ LPAREN aux4 RPAREN .)
    RETURN          reduce using rule 53 (lectura -> READ LPAREN aux4 RPAREN .)


state 160

    (56) aux4 -> ID COMMA . aux4
    (54) aux4 -> . ID
    (55) aux4 -> . objeto_aAcceso
    (56) aux4 -> . ID COMMA aux4
    (57) aux4 -> . objeto_aAcceso COMMA aux4
    (136) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 110

    aux4                           shift and go to state 194
    objeto_aAcceso                 shift and go to state 111

state 161

    (57) aux4 -> objeto_aAcceso COMMA . aux4
    (54) aux4 -> . ID
    (55) aux4 -> . objeto_aAcceso
    (56) aux4 -> . ID COMMA aux4
    (57) aux4 -> . objeto_aAcceso COMMA aux4
    (136) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 110

    objeto_aAcceso                 shift and go to state 111
    aux4                           shift and go to state 195

state 162

    (69) vars -> VAR ID LBRACKET cint RBRACKET . COLON tipo_simple
    (70) vars -> VAR ID LBRACKET cint RBRACKET . COLON tipo_compuesto
    (71) vars -> VAR ID LBRACKET cint RBRACKET . LBRACKET cint RBRACKET COLON tipo_simple
    (72) vars -> VAR ID LBRACKET cint RBRACKET . LBRACKET cint RBRACKET COLON tipo_compuesto

    COLON           shift and go to state 197
    LBRACKET        shift and go to state 196


state 163

    (109) expresion -> exp LT expresion .

    VAR             reduce using rule 109 (expresion -> exp LT expresion .)
    PUBLIC          reduce using rule 109 (expresion -> exp LT expresion .)
    IF              reduce using rule 109 (expresion -> exp LT expresion .)
    PRIVATE         reduce using rule 109 (expresion -> exp LT expresion .)
    PROTECTED       reduce using rule 109 (expresion -> exp LT expresion .)
    ID              reduce using rule 109 (expresion -> exp LT expresion .)
    PRINT           reduce using rule 109 (expresion -> exp LT expresion .)
    READ            reduce using rule 109 (expresion -> exp LT expresion .)
    VOID            reduce using rule 109 (expresion -> exp LT expresion .)
    INT             reduce using rule 109 (expresion -> exp LT expresion .)
    FLOAT           reduce using rule 109 (expresion -> exp LT expresion .)
    CHAR            reduce using rule 109 (expresion -> exp LT expresion .)
    WHILE           reduce using rule 109 (expresion -> exp LT expresion .)
    RBRACE          reduce using rule 109 (expresion -> exp LT expresion .)
    RETURN          reduce using rule 109 (expresion -> exp LT expresion .)
    AND             reduce using rule 109 (expresion -> exp LT expresion .)
    OR              reduce using rule 109 (expresion -> exp LT expresion .)
    RPAREN          reduce using rule 109 (expresion -> exp LT expresion .)
    COMMA           reduce using rule 109 (expresion -> exp LT expresion .)


state 164

    (110) expresion -> exp GT expresion .

    VAR             reduce using rule 110 (expresion -> exp GT expresion .)
    PUBLIC          reduce using rule 110 (expresion -> exp GT expresion .)
    IF              reduce using rule 110 (expresion -> exp GT expresion .)
    PRIVATE         reduce using rule 110 (expresion -> exp GT expresion .)
    PROTECTED       reduce using rule 110 (expresion -> exp GT expresion .)
    ID              reduce using rule 110 (expresion -> exp GT expresion .)
    PRINT           reduce using rule 110 (expresion -> exp GT expresion .)
    READ            reduce using rule 110 (expresion -> exp GT expresion .)
    VOID            reduce using rule 110 (expresion -> exp GT expresion .)
    INT             reduce using rule 110 (expresion -> exp GT expresion .)
    FLOAT           reduce using rule 110 (expresion -> exp GT expresion .)
    CHAR            reduce using rule 110 (expresion -> exp GT expresion .)
    WHILE           reduce using rule 110 (expresion -> exp GT expresion .)
    RBRACE          reduce using rule 110 (expresion -> exp GT expresion .)
    RETURN          reduce using rule 110 (expresion -> exp GT expresion .)
    AND             reduce using rule 110 (expresion -> exp GT expresion .)
    OR              reduce using rule 110 (expresion -> exp GT expresion .)
    RPAREN          reduce using rule 110 (expresion -> exp GT expresion .)
    COMMA           reduce using rule 110 (expresion -> exp GT expresion .)


state 165

    (111) expresion -> exp GE expresion .

    VAR             reduce using rule 111 (expresion -> exp GE expresion .)
    PUBLIC          reduce using rule 111 (expresion -> exp GE expresion .)
    IF              reduce using rule 111 (expresion -> exp GE expresion .)
    PRIVATE         reduce using rule 111 (expresion -> exp GE expresion .)
    PROTECTED       reduce using rule 111 (expresion -> exp GE expresion .)
    ID              reduce using rule 111 (expresion -> exp GE expresion .)
    PRINT           reduce using rule 111 (expresion -> exp GE expresion .)
    READ            reduce using rule 111 (expresion -> exp GE expresion .)
    VOID            reduce using rule 111 (expresion -> exp GE expresion .)
    INT             reduce using rule 111 (expresion -> exp GE expresion .)
    FLOAT           reduce using rule 111 (expresion -> exp GE expresion .)
    CHAR            reduce using rule 111 (expresion -> exp GE expresion .)
    WHILE           reduce using rule 111 (expresion -> exp GE expresion .)
    RBRACE          reduce using rule 111 (expresion -> exp GE expresion .)
    RETURN          reduce using rule 111 (expresion -> exp GE expresion .)
    AND             reduce using rule 111 (expresion -> exp GE expresion .)
    OR              reduce using rule 111 (expresion -> exp GE expresion .)
    RPAREN          reduce using rule 111 (expresion -> exp GE expresion .)
    COMMA           reduce using rule 111 (expresion -> exp GE expresion .)


state 166

    (112) expresion -> exp LE expresion .

    VAR             reduce using rule 112 (expresion -> exp LE expresion .)
    PUBLIC          reduce using rule 112 (expresion -> exp LE expresion .)
    IF              reduce using rule 112 (expresion -> exp LE expresion .)
    PRIVATE         reduce using rule 112 (expresion -> exp LE expresion .)
    PROTECTED       reduce using rule 112 (expresion -> exp LE expresion .)
    ID              reduce using rule 112 (expresion -> exp LE expresion .)
    PRINT           reduce using rule 112 (expresion -> exp LE expresion .)
    READ            reduce using rule 112 (expresion -> exp LE expresion .)
    VOID            reduce using rule 112 (expresion -> exp LE expresion .)
    INT             reduce using rule 112 (expresion -> exp LE expresion .)
    FLOAT           reduce using rule 112 (expresion -> exp LE expresion .)
    CHAR            reduce using rule 112 (expresion -> exp LE expresion .)
    WHILE           reduce using rule 112 (expresion -> exp LE expresion .)
    RBRACE          reduce using rule 112 (expresion -> exp LE expresion .)
    RETURN          reduce using rule 112 (expresion -> exp LE expresion .)
    AND             reduce using rule 112 (expresion -> exp LE expresion .)
    OR              reduce using rule 112 (expresion -> exp LE expresion .)
    RPAREN          reduce using rule 112 (expresion -> exp LE expresion .)
    COMMA           reduce using rule 112 (expresion -> exp LE expresion .)


state 167

    (113) expresion -> exp EQ expresion .

    VAR             reduce using rule 113 (expresion -> exp EQ expresion .)
    PUBLIC          reduce using rule 113 (expresion -> exp EQ expresion .)
    IF              reduce using rule 113 (expresion -> exp EQ expresion .)
    PRIVATE         reduce using rule 113 (expresion -> exp EQ expresion .)
    PROTECTED       reduce using rule 113 (expresion -> exp EQ expresion .)
    ID              reduce using rule 113 (expresion -> exp EQ expresion .)
    PRINT           reduce using rule 113 (expresion -> exp EQ expresion .)
    READ            reduce using rule 113 (expresion -> exp EQ expresion .)
    VOID            reduce using rule 113 (expresion -> exp EQ expresion .)
    INT             reduce using rule 113 (expresion -> exp EQ expresion .)
    FLOAT           reduce using rule 113 (expresion -> exp EQ expresion .)
    CHAR            reduce using rule 113 (expresion -> exp EQ expresion .)
    WHILE           reduce using rule 113 (expresion -> exp EQ expresion .)
    RBRACE          reduce using rule 113 (expresion -> exp EQ expresion .)
    RETURN          reduce using rule 113 (expresion -> exp EQ expresion .)
    AND             reduce using rule 113 (expresion -> exp EQ expresion .)
    OR              reduce using rule 113 (expresion -> exp EQ expresion .)
    RPAREN          reduce using rule 113 (expresion -> exp EQ expresion .)
    COMMA           reduce using rule 113 (expresion -> exp EQ expresion .)


state 168

    (114) expresion -> exp NE expresion .

    VAR             reduce using rule 114 (expresion -> exp NE expresion .)
    PUBLIC          reduce using rule 114 (expresion -> exp NE expresion .)
    IF              reduce using rule 114 (expresion -> exp NE expresion .)
    PRIVATE         reduce using rule 114 (expresion -> exp NE expresion .)
    PROTECTED       reduce using rule 114 (expresion -> exp NE expresion .)
    ID              reduce using rule 114 (expresion -> exp NE expresion .)
    PRINT           reduce using rule 114 (expresion -> exp NE expresion .)
    READ            reduce using rule 114 (expresion -> exp NE expresion .)
    VOID            reduce using rule 114 (expresion -> exp NE expresion .)
    INT             reduce using rule 114 (expresion -> exp NE expresion .)
    FLOAT           reduce using rule 114 (expresion -> exp NE expresion .)
    CHAR            reduce using rule 114 (expresion -> exp NE expresion .)
    WHILE           reduce using rule 114 (expresion -> exp NE expresion .)
    RBRACE          reduce using rule 114 (expresion -> exp NE expresion .)
    RETURN          reduce using rule 114 (expresion -> exp NE expresion .)
    AND             reduce using rule 114 (expresion -> exp NE expresion .)
    OR              reduce using rule 114 (expresion -> exp NE expresion .)
    RPAREN          reduce using rule 114 (expresion -> exp NE expresion .)
    COMMA           reduce using rule 114 (expresion -> exp NE expresion .)


state 169

    (116) exp -> exp PLUS termino .
    (119) termino -> termino . TIMES factor
    (120) termino -> termino . DIVIDE factor
    (121) termino -> termino . MODULO factor

    LT              reduce using rule 116 (exp -> exp PLUS termino .)
    GT              reduce using rule 116 (exp -> exp PLUS termino .)
    GE              reduce using rule 116 (exp -> exp PLUS termino .)
    LE              reduce using rule 116 (exp -> exp PLUS termino .)
    EQ              reduce using rule 116 (exp -> exp PLUS termino .)
    NE              reduce using rule 116 (exp -> exp PLUS termino .)
    PLUS            reduce using rule 116 (exp -> exp PLUS termino .)
    MINUS           reduce using rule 116 (exp -> exp PLUS termino .)
    VAR             reduce using rule 116 (exp -> exp PLUS termino .)
    PUBLIC          reduce using rule 116 (exp -> exp PLUS termino .)
    IF              reduce using rule 116 (exp -> exp PLUS termino .)
    PRIVATE         reduce using rule 116 (exp -> exp PLUS termino .)
    PROTECTED       reduce using rule 116 (exp -> exp PLUS termino .)
    ID              reduce using rule 116 (exp -> exp PLUS termino .)
    PRINT           reduce using rule 116 (exp -> exp PLUS termino .)
    READ            reduce using rule 116 (exp -> exp PLUS termino .)
    VOID            reduce using rule 116 (exp -> exp PLUS termino .)
    INT             reduce using rule 116 (exp -> exp PLUS termino .)
    FLOAT           reduce using rule 116 (exp -> exp PLUS termino .)
    CHAR            reduce using rule 116 (exp -> exp PLUS termino .)
    WHILE           reduce using rule 116 (exp -> exp PLUS termino .)
    RBRACE          reduce using rule 116 (exp -> exp PLUS termino .)
    RETURN          reduce using rule 116 (exp -> exp PLUS termino .)
    RBRACKET        reduce using rule 116 (exp -> exp PLUS termino .)
    COMMA           reduce using rule 116 (exp -> exp PLUS termino .)
    RPAREN          reduce using rule 116 (exp -> exp PLUS termino .)
    AND             reduce using rule 116 (exp -> exp PLUS termino .)
    OR              reduce using rule 116 (exp -> exp PLUS termino .)
    TIMES           shift and go to state 131
    DIVIDE          shift and go to state 132
    MODULO          shift and go to state 133


state 170

    (117) exp -> exp MINUS termino .
    (119) termino -> termino . TIMES factor
    (120) termino -> termino . DIVIDE factor
    (121) termino -> termino . MODULO factor

    LT              reduce using rule 117 (exp -> exp MINUS termino .)
    GT              reduce using rule 117 (exp -> exp MINUS termino .)
    GE              reduce using rule 117 (exp -> exp MINUS termino .)
    LE              reduce using rule 117 (exp -> exp MINUS termino .)
    EQ              reduce using rule 117 (exp -> exp MINUS termino .)
    NE              reduce using rule 117 (exp -> exp MINUS termino .)
    PLUS            reduce using rule 117 (exp -> exp MINUS termino .)
    MINUS           reduce using rule 117 (exp -> exp MINUS termino .)
    VAR             reduce using rule 117 (exp -> exp MINUS termino .)
    PUBLIC          reduce using rule 117 (exp -> exp MINUS termino .)
    IF              reduce using rule 117 (exp -> exp MINUS termino .)
    PRIVATE         reduce using rule 117 (exp -> exp MINUS termino .)
    PROTECTED       reduce using rule 117 (exp -> exp MINUS termino .)
    ID              reduce using rule 117 (exp -> exp MINUS termino .)
    PRINT           reduce using rule 117 (exp -> exp MINUS termino .)
    READ            reduce using rule 117 (exp -> exp MINUS termino .)
    VOID            reduce using rule 117 (exp -> exp MINUS termino .)
    INT             reduce using rule 117 (exp -> exp MINUS termino .)
    FLOAT           reduce using rule 117 (exp -> exp MINUS termino .)
    CHAR            reduce using rule 117 (exp -> exp MINUS termino .)
    WHILE           reduce using rule 117 (exp -> exp MINUS termino .)
    RBRACE          reduce using rule 117 (exp -> exp MINUS termino .)
    RETURN          reduce using rule 117 (exp -> exp MINUS termino .)
    RBRACKET        reduce using rule 117 (exp -> exp MINUS termino .)
    COMMA           reduce using rule 117 (exp -> exp MINUS termino .)
    RPAREN          reduce using rule 117 (exp -> exp MINUS termino .)
    AND             reduce using rule 117 (exp -> exp MINUS termino .)
    OR              reduce using rule 117 (exp -> exp MINUS termino .)
    TIMES           shift and go to state 131
    DIVIDE          shift and go to state 132
    MODULO          shift and go to state 133


state 171

    (122) factor -> LPAREN exp_cond RPAREN .

    TIMES           reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    DIVIDE          reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    MODULO          reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    LT              reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    GT              reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    GE              reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    LE              reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    EQ              reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    NE              reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    PLUS            reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    MINUS           reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    VAR             reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    PUBLIC          reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    IF              reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    PRIVATE         reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    PROTECTED       reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    ID              reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    PRINT           reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    READ            reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    VOID            reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    INT             reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    FLOAT           reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    CHAR            reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    WHILE           reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    RBRACE          reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    RETURN          reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    RBRACKET        reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    COMMA           reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    RPAREN          reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    AND             reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)
    OR              reduce using rule 122 (factor -> LPAREN exp_cond RPAREN .)


state 172

    (119) termino -> termino TIMES factor .

    TIMES           reduce using rule 119 (termino -> termino TIMES factor .)
    DIVIDE          reduce using rule 119 (termino -> termino TIMES factor .)
    MODULO          reduce using rule 119 (termino -> termino TIMES factor .)
    LT              reduce using rule 119 (termino -> termino TIMES factor .)
    GT              reduce using rule 119 (termino -> termino TIMES factor .)
    GE              reduce using rule 119 (termino -> termino TIMES factor .)
    LE              reduce using rule 119 (termino -> termino TIMES factor .)
    EQ              reduce using rule 119 (termino -> termino TIMES factor .)
    NE              reduce using rule 119 (termino -> termino TIMES factor .)
    PLUS            reduce using rule 119 (termino -> termino TIMES factor .)
    MINUS           reduce using rule 119 (termino -> termino TIMES factor .)
    VAR             reduce using rule 119 (termino -> termino TIMES factor .)
    PUBLIC          reduce using rule 119 (termino -> termino TIMES factor .)
    IF              reduce using rule 119 (termino -> termino TIMES factor .)
    PRIVATE         reduce using rule 119 (termino -> termino TIMES factor .)
    PROTECTED       reduce using rule 119 (termino -> termino TIMES factor .)
    ID              reduce using rule 119 (termino -> termino TIMES factor .)
    PRINT           reduce using rule 119 (termino -> termino TIMES factor .)
    READ            reduce using rule 119 (termino -> termino TIMES factor .)
    VOID            reduce using rule 119 (termino -> termino TIMES factor .)
    INT             reduce using rule 119 (termino -> termino TIMES factor .)
    FLOAT           reduce using rule 119 (termino -> termino TIMES factor .)
    CHAR            reduce using rule 119 (termino -> termino TIMES factor .)
    WHILE           reduce using rule 119 (termino -> termino TIMES factor .)
    RBRACE          reduce using rule 119 (termino -> termino TIMES factor .)
    RETURN          reduce using rule 119 (termino -> termino TIMES factor .)
    RBRACKET        reduce using rule 119 (termino -> termino TIMES factor .)
    COMMA           reduce using rule 119 (termino -> termino TIMES factor .)
    RPAREN          reduce using rule 119 (termino -> termino TIMES factor .)
    AND             reduce using rule 119 (termino -> termino TIMES factor .)
    OR              reduce using rule 119 (termino -> termino TIMES factor .)


state 173

    (120) termino -> termino DIVIDE factor .

    TIMES           reduce using rule 120 (termino -> termino DIVIDE factor .)
    DIVIDE          reduce using rule 120 (termino -> termino DIVIDE factor .)
    MODULO          reduce using rule 120 (termino -> termino DIVIDE factor .)
    LT              reduce using rule 120 (termino -> termino DIVIDE factor .)
    GT              reduce using rule 120 (termino -> termino DIVIDE factor .)
    GE              reduce using rule 120 (termino -> termino DIVIDE factor .)
    LE              reduce using rule 120 (termino -> termino DIVIDE factor .)
    EQ              reduce using rule 120 (termino -> termino DIVIDE factor .)
    NE              reduce using rule 120 (termino -> termino DIVIDE factor .)
    PLUS            reduce using rule 120 (termino -> termino DIVIDE factor .)
    MINUS           reduce using rule 120 (termino -> termino DIVIDE factor .)
    VAR             reduce using rule 120 (termino -> termino DIVIDE factor .)
    PUBLIC          reduce using rule 120 (termino -> termino DIVIDE factor .)
    IF              reduce using rule 120 (termino -> termino DIVIDE factor .)
    PRIVATE         reduce using rule 120 (termino -> termino DIVIDE factor .)
    PROTECTED       reduce using rule 120 (termino -> termino DIVIDE factor .)
    ID              reduce using rule 120 (termino -> termino DIVIDE factor .)
    PRINT           reduce using rule 120 (termino -> termino DIVIDE factor .)
    READ            reduce using rule 120 (termino -> termino DIVIDE factor .)
    VOID            reduce using rule 120 (termino -> termino DIVIDE factor .)
    INT             reduce using rule 120 (termino -> termino DIVIDE factor .)
    FLOAT           reduce using rule 120 (termino -> termino DIVIDE factor .)
    CHAR            reduce using rule 120 (termino -> termino DIVIDE factor .)
    WHILE           reduce using rule 120 (termino -> termino DIVIDE factor .)
    RBRACE          reduce using rule 120 (termino -> termino DIVIDE factor .)
    RETURN          reduce using rule 120 (termino -> termino DIVIDE factor .)
    RBRACKET        reduce using rule 120 (termino -> termino DIVIDE factor .)
    COMMA           reduce using rule 120 (termino -> termino DIVIDE factor .)
    RPAREN          reduce using rule 120 (termino -> termino DIVIDE factor .)
    AND             reduce using rule 120 (termino -> termino DIVIDE factor .)
    OR              reduce using rule 120 (termino -> termino DIVIDE factor .)


state 174

    (121) termino -> termino MODULO factor .

    TIMES           reduce using rule 121 (termino -> termino MODULO factor .)
    DIVIDE          reduce using rule 121 (termino -> termino MODULO factor .)
    MODULO          reduce using rule 121 (termino -> termino MODULO factor .)
    LT              reduce using rule 121 (termino -> termino MODULO factor .)
    GT              reduce using rule 121 (termino -> termino MODULO factor .)
    GE              reduce using rule 121 (termino -> termino MODULO factor .)
    LE              reduce using rule 121 (termino -> termino MODULO factor .)
    EQ              reduce using rule 121 (termino -> termino MODULO factor .)
    NE              reduce using rule 121 (termino -> termino MODULO factor .)
    PLUS            reduce using rule 121 (termino -> termino MODULO factor .)
    MINUS           reduce using rule 121 (termino -> termino MODULO factor .)
    VAR             reduce using rule 121 (termino -> termino MODULO factor .)
    PUBLIC          reduce using rule 121 (termino -> termino MODULO factor .)
    IF              reduce using rule 121 (termino -> termino MODULO factor .)
    PRIVATE         reduce using rule 121 (termino -> termino MODULO factor .)
    PROTECTED       reduce using rule 121 (termino -> termino MODULO factor .)
    ID              reduce using rule 121 (termino -> termino MODULO factor .)
    PRINT           reduce using rule 121 (termino -> termino MODULO factor .)
    READ            reduce using rule 121 (termino -> termino MODULO factor .)
    VOID            reduce using rule 121 (termino -> termino MODULO factor .)
    INT             reduce using rule 121 (termino -> termino MODULO factor .)
    FLOAT           reduce using rule 121 (termino -> termino MODULO factor .)
    CHAR            reduce using rule 121 (termino -> termino MODULO factor .)
    WHILE           reduce using rule 121 (termino -> termino MODULO factor .)
    RBRACE          reduce using rule 121 (termino -> termino MODULO factor .)
    RETURN          reduce using rule 121 (termino -> termino MODULO factor .)
    RBRACKET        reduce using rule 121 (termino -> termino MODULO factor .)
    COMMA           reduce using rule 121 (termino -> termino MODULO factor .)
    RPAREN          reduce using rule 121 (termino -> termino MODULO factor .)
    AND             reduce using rule 121 (termino -> termino MODULO factor .)
    OR              reduce using rule 121 (termino -> termino MODULO factor .)


state 175

    (136) objeto_aAcceso -> ID PERIOD ID .

    TIMES           reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    DIVIDE          reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    MODULO          reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACKET        reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    PLUS            reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    MINUS           reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    COMMA           reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    RPAREN          reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    LT              reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    GT              reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    GE              reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    LE              reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    EQ              reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    NE              reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    AND             reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    OR              reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    VAR             reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    PUBLIC          reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    IF              reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    PRIVATE         reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    PROTECTED       reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    ID              reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    PRINT           reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    READ            reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    VOID            reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    INT             reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    FLOAT           reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    CHAR            reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    WHILE           reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACE          reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)
    RETURN          reduce using rule 136 (objeto_aAcceso -> ID PERIOD ID .)


state 176

    (91) asignacion -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS expresion
    (92) asignacion -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS llamada_func
    (93) asignacion -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    ID              shift and go to state 83
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    exp                            shift and go to state 198
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 177

    (85) asignacion -> ID LBRACKET exp RBRACKET EQUALS . expresion
    (86) asignacion -> ID LBRACKET exp RBRACKET EQUALS . llamada_func
    (87) asignacion -> ID LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (108) expresion -> . exp
    (109) expresion -> . exp LT expresion
    (110) expresion -> . exp GT expresion
    (111) expresion -> . exp GE expresion
    (112) expresion -> . exp LE expresion
    (113) expresion -> . exp EQ expresion
    (114) expresion -> . exp NE expresion
    (98) llamada_func -> . ID LPAREN aux RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    ID              shift and go to state 65
    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    exp                            shift and go to state 69
    expresion                      shift and go to state 199
    llamada_func                   shift and go to state 200
    objeto_metodo                  shift and go to state 201
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 178

    (100) aux -> exp COMMA aux .

    RPAREN          reduce using rule 100 (aux -> exp COMMA aux .)


state 179

    (26) constructor -> PUBLIC ID LPAREN param RPAREN . bloque
    (27) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 184

    bloque                         shift and go to state 202

state 180

    (41) param -> tipo_simple ID .
    (42) param -> tipo_simple ID . COMMA param

    RPAREN          reduce using rule 41 (param -> tipo_simple ID .)
    COMMA           shift and go to state 203


state 181

    (28) funcion -> scope type DEF id LPAREN . param aux_param RPAREN contexto_func
    (40) param -> .
    (41) param -> . tipo_simple ID
    (42) param -> . tipo_simple ID COMMA param
    (75) tipo_simple -> . INT
    (76) tipo_simple -> . FLOAT
    (77) tipo_simple -> . CHAR

    RPAREN          reduce using rule 40 (param -> .)
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    CHAR            shift and go to state 117

    param                          shift and go to state 204
    tipo_simple                    shift and go to state 144

state 182

    (29) funcion -> scope VOID DEF id LPAREN . param aux_param RPAREN contexto_func
    (40) param -> .
    (41) param -> . tipo_simple ID
    (42) param -> . tipo_simple ID COMMA param
    (75) tipo_simple -> . INT
    (76) tipo_simple -> . FLOAT
    (77) tipo_simple -> . CHAR

    RPAREN          reduce using rule 40 (param -> .)
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    CHAR            shift and go to state 117

    param                          shift and go to state 205
    tipo_simple                    shift and go to state 144

state 183

    (19) condicion -> IF LPAREN gotoF RPAREN bloque .
    (20) condicion -> IF LPAREN gotoF RPAREN bloque . elif
    (21) elif -> . aux_elif ELIF LPAREN gotoF RPAREN bloque
    (22) elif -> . aux_elif ELIF LPAREN gotoF RPAREN bloque elif
    (23) aux_elif -> .

    VAR             reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    PUBLIC          reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    IF              reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    PRIVATE         reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    PROTECTED       reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    ID              reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    PRINT           reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    READ            reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    VOID            reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    INT             reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    FLOAT           reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    CHAR            reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    WHILE           reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    RBRACE          reduce using rule 19 (condicion -> IF LPAREN gotoF RPAREN bloque .)
    ELIF            reduce using rule 23 (aux_elif -> .)

    elif                           shift and go to state 206
    aux_elif                       shift and go to state 207

state 184

    (27) bloque -> LBRACE . aux5 RBRACE
    (36) aux5 -> . vars
    (37) aux5 -> . estatuto
    (38) aux5 -> . vars aux5
    (39) aux5 -> . estatuto aux5
    (67) vars -> . VAR aux2 COLON tipo_simple
    (68) vars -> . VAR aux2 COLON tipo_compuesto
    (69) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (71) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (72) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (48) estatuto -> . asignacion
    (49) estatuto -> . escritura
    (50) estatuto -> . llamada_func
    (51) estatuto -> . objeto_metodo
    (52) estatuto -> . lectura
    (79) asignacion -> . ID EQUALS expresion
    (80) asignacion -> . ID EQUALS llamada_func
    (81) asignacion -> . ID EQUALS objeto_metodo
    (82) asignacion -> . objeto_aAcceso EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (84) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (85) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (86) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (88) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (58) escritura -> . PRINT LPAREN aux3 RPAREN
    (98) llamada_func -> . ID LPAREN aux RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (53) lectura -> . READ LPAREN aux4 RPAREN
    (136) objeto_aAcceso -> . ID PERIOD ID

    VAR             shift and go to state 21
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 34

    aux5                           shift and go to state 208
    vars                           shift and go to state 209
    estatuto                       shift and go to state 210
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    objeto_aAcceso                 shift and go to state 32

state 185

    (103) exp_cond -> exp_bool AND exp_cond .

    RPAREN          reduce using rule 103 (exp_cond -> exp_bool AND exp_cond .)


state 186

    (104) exp_cond -> exp_bool OR exp_cond .

    RPAREN          reduce using rule 104 (exp_cond -> exp_bool OR exp_cond .)


state 187

    (24) ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN . bloque
    (27) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 184

    bloque                         shift and go to state 211

state 188

    (94) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET . exp RBRACKET EQUALS expresion
    (95) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET . exp RBRACKET EQUALS llamada_func
    (96) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET . exp RBRACKET EQUALS objeto_metodo
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    ID              shift and go to state 83
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    objeto_aAcceso                 shift and go to state 75
    exp                            shift and go to state 212
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 189

    (88) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS . expresion
    (89) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS . llamada_func
    (90) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (108) expresion -> . exp
    (109) expresion -> . exp LT expresion
    (110) expresion -> . exp GT expresion
    (111) expresion -> . exp GE expresion
    (112) expresion -> . exp LE expresion
    (113) expresion -> . exp EQ expresion
    (114) expresion -> . exp NE expresion
    (98) llamada_func -> . ID LPAREN aux RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    ID              shift and go to state 65
    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    objeto_aAcceso                 shift and go to state 75
    exp                            shift and go to state 69
    expresion                      shift and go to state 213
    llamada_func                   shift and go to state 214
    objeto_metodo                  shift and go to state 215
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 190

    (63) aux3 -> expresion COMMA aux3 .

    RPAREN          reduce using rule 63 (aux3 -> expresion COMMA aux3 .)


state 191

    (64) aux3 -> llamada_func COMMA aux3 .

    RPAREN          reduce using rule 64 (aux3 -> llamada_func COMMA aux3 .)


state 192

    (65) aux3 -> objeto_metodo COMMA aux3 .

    RPAREN          reduce using rule 65 (aux3 -> objeto_metodo COMMA aux3 .)


state 193

    (66) aux3 -> CSTRING COMMA aux3 .

    RPAREN          reduce using rule 66 (aux3 -> CSTRING COMMA aux3 .)


state 194

    (56) aux4 -> ID COMMA aux4 .

    RPAREN          reduce using rule 56 (aux4 -> ID COMMA aux4 .)


state 195

    (57) aux4 -> objeto_aAcceso COMMA aux4 .

    RPAREN          reduce using rule 57 (aux4 -> objeto_aAcceso COMMA aux4 .)


state 196

    (71) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET . cint RBRACKET COLON tipo_simple
    (72) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET . cint RBRACKET COLON tipo_compuesto
    (133) cint -> . CINT

    CINT            shift and go to state 80

    cint                           shift and go to state 216

state 197

    (69) vars -> VAR ID LBRACKET cint RBRACKET COLON . tipo_simple
    (70) vars -> VAR ID LBRACKET cint RBRACKET COLON . tipo_compuesto
    (75) tipo_simple -> . INT
    (76) tipo_simple -> . FLOAT
    (77) tipo_simple -> . CHAR
    (78) tipo_compuesto -> . ID

    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    CHAR            shift and go to state 117
    ID              shift and go to state 118

    tipo_simple                    shift and go to state 217
    tipo_compuesto                 shift and go to state 218

state 198

    (91) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS expresion
    (92) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS llamada_func
    (93) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (116) exp -> exp . PLUS termino
    (117) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 219
    PLUS            shift and go to state 128
    MINUS           shift and go to state 129


state 199

    (85) asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .

    VAR             reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    ID              reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    VOID            reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    INT             reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    FLOAT           reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    CHAR            reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)


state 200

    (86) asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .

    VAR             reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    VOID            reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    INT             reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    FLOAT           reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    CHAR            reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 86 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)


state 201

    (87) asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 87 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 87 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 87 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 87 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 87 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 87 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 87 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 87 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    VOID            reduce using rule 87 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    INT             reduce using rule 87 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    FLOAT           reduce using rule 87 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    CHAR            reduce using rule 87 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 87 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 87 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 87 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 202

    (26) constructor -> PUBLIC ID LPAREN param RPAREN bloque .

    VAR             reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PUBLIC          reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    IF              reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PRIVATE         reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PROTECTED       reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    ID              reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PRINT           reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    READ            reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    VOID            reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    INT             reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    FLOAT           reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    CHAR            reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    WHILE           reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    RBRACE          reduce using rule 26 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)


state 203

    (42) param -> tipo_simple ID COMMA . param
    (40) param -> .
    (41) param -> . tipo_simple ID
    (42) param -> . tipo_simple ID COMMA param
    (75) tipo_simple -> . INT
    (76) tipo_simple -> . FLOAT
    (77) tipo_simple -> . CHAR

    RPAREN          reduce using rule 40 (param -> .)
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    CHAR            shift and go to state 117

    tipo_simple                    shift and go to state 144
    param                          shift and go to state 220

state 204

    (28) funcion -> scope type DEF id LPAREN param . aux_param RPAREN contexto_func
    (43) aux_param -> .

    RPAREN          reduce using rule 43 (aux_param -> .)

    aux_param                      shift and go to state 221

state 205

    (29) funcion -> scope VOID DEF id LPAREN param . aux_param RPAREN contexto_func
    (43) aux_param -> .

    RPAREN          reduce using rule 43 (aux_param -> .)

    aux_param                      shift and go to state 222

state 206

    (20) condicion -> IF LPAREN gotoF RPAREN bloque elif .

    VAR             reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    PUBLIC          reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    IF              reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    PRIVATE         reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    PROTECTED       reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    ID              reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    PRINT           reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    READ            reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    VOID            reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    INT             reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    FLOAT           reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    CHAR            reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    WHILE           reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)
    RBRACE          reduce using rule 20 (condicion -> IF LPAREN gotoF RPAREN bloque elif .)


state 207

    (21) elif -> aux_elif . ELIF LPAREN gotoF RPAREN bloque
    (22) elif -> aux_elif . ELIF LPAREN gotoF RPAREN bloque elif

    ELIF            shift and go to state 223


state 208

    (27) bloque -> LBRACE aux5 . RBRACE

    RBRACE          shift and go to state 224


state 209

    (36) aux5 -> vars .
    (38) aux5 -> vars . aux5
    (36) aux5 -> . vars
    (37) aux5 -> . estatuto
    (38) aux5 -> . vars aux5
    (39) aux5 -> . estatuto aux5
    (67) vars -> . VAR aux2 COLON tipo_simple
    (68) vars -> . VAR aux2 COLON tipo_compuesto
    (69) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (71) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (72) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (48) estatuto -> . asignacion
    (49) estatuto -> . escritura
    (50) estatuto -> . llamada_func
    (51) estatuto -> . objeto_metodo
    (52) estatuto -> . lectura
    (79) asignacion -> . ID EQUALS expresion
    (80) asignacion -> . ID EQUALS llamada_func
    (81) asignacion -> . ID EQUALS objeto_metodo
    (82) asignacion -> . objeto_aAcceso EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (84) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (85) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (86) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (88) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (58) escritura -> . PRINT LPAREN aux3 RPAREN
    (98) llamada_func -> . ID LPAREN aux RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (53) lectura -> . READ LPAREN aux4 RPAREN
    (136) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 36 (aux5 -> vars .)
    RETURN          reduce using rule 36 (aux5 -> vars .)
    VAR             shift and go to state 21
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 34

    vars                           shift and go to state 209
    aux5                           shift and go to state 225
    estatuto                       shift and go to state 210
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    objeto_aAcceso                 shift and go to state 32

state 210

    (37) aux5 -> estatuto .
    (39) aux5 -> estatuto . aux5
    (36) aux5 -> . vars
    (37) aux5 -> . estatuto
    (38) aux5 -> . vars aux5
    (39) aux5 -> . estatuto aux5
    (67) vars -> . VAR aux2 COLON tipo_simple
    (68) vars -> . VAR aux2 COLON tipo_compuesto
    (69) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (71) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (72) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (48) estatuto -> . asignacion
    (49) estatuto -> . escritura
    (50) estatuto -> . llamada_func
    (51) estatuto -> . objeto_metodo
    (52) estatuto -> . lectura
    (79) asignacion -> . ID EQUALS expresion
    (80) asignacion -> . ID EQUALS llamada_func
    (81) asignacion -> . ID EQUALS objeto_metodo
    (82) asignacion -> . objeto_aAcceso EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (84) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (85) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (86) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (88) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (58) escritura -> . PRINT LPAREN aux3 RPAREN
    (98) llamada_func -> . ID LPAREN aux RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (53) lectura -> . READ LPAREN aux4 RPAREN
    (136) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 37 (aux5 -> estatuto .)
    RETURN          reduce using rule 37 (aux5 -> estatuto .)
    VAR             shift and go to state 21
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 34

    estatuto                       shift and go to state 210
    aux5                           shift and go to state 226
    vars                           shift and go to state 209
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    objeto_aAcceso                 shift and go to state 32

state 211

    (24) ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .

    VAR             reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    PUBLIC          reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    IF              reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    PRIVATE         reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    PROTECTED       reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    ID              reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    PRINT           reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    READ            reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    VOID            reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    INT             reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    FLOAT           reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    CHAR            reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    WHILE           reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)
    RBRACE          reduce using rule 24 (ciclo -> aux_ciclo WHILE LPAREN gotoF RPAREN bloque .)


state 212

    (94) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp . RBRACKET EQUALS expresion
    (95) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp . RBRACKET EQUALS llamada_func
    (96) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp . RBRACKET EQUALS objeto_metodo
    (116) exp -> exp . PLUS termino
    (117) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 227
    PLUS            shift and go to state 128
    MINUS           shift and go to state 129


state 213

    (88) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .

    VAR             reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    ID              reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    VOID            reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    INT             reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    FLOAT           reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    CHAR            reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)


state 214

    (89) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .

    VAR             reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    VOID            reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    INT             reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    FLOAT           reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    CHAR            reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 89 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)


state 215

    (90) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 90 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 90 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 90 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 90 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 90 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 90 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 90 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 90 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    VOID            reduce using rule 90 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    INT             reduce using rule 90 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    FLOAT           reduce using rule 90 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    CHAR            reduce using rule 90 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 90 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 90 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 90 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 216

    (71) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint . RBRACKET COLON tipo_simple
    (72) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint . RBRACKET COLON tipo_compuesto

    RBRACKET        shift and go to state 228


state 217

    (69) vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .

    VAR             reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PUBLIC          reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    IF              reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PRIVATE         reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PROTECTED       reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    ID              reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PRINT           reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    READ            reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    VOID            reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    INT             reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    FLOAT           reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    CHAR            reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    WHILE           reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    RBRACE          reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    RETURN          reduce using rule 69 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)


state 218

    (70) vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .

    VAR             reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PUBLIC          reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    IF              reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRIVATE         reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PROTECTED       reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    ID              reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRINT           reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    READ            reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    VOID            reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    INT             reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    FLOAT           reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    CHAR            reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    WHILE           reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RBRACE          reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RETURN          reduce using rule 70 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)


state 219

    (91) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS expresion
    (92) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS llamada_func
    (93) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS objeto_metodo

    EQUALS          shift and go to state 229


state 220

    (42) param -> tipo_simple ID COMMA param .

    RPAREN          reduce using rule 42 (param -> tipo_simple ID COMMA param .)


state 221

    (28) funcion -> scope type DEF id LPAREN param aux_param . RPAREN contexto_func

    RPAREN          shift and go to state 230


state 222

    (29) funcion -> scope VOID DEF id LPAREN param aux_param . RPAREN contexto_func

    RPAREN          shift and go to state 231


state 223

    (21) elif -> aux_elif ELIF . LPAREN gotoF RPAREN bloque
    (22) elif -> aux_elif ELIF . LPAREN gotoF RPAREN bloque elif

    LPAREN          shift and go to state 232


state 224

    (27) bloque -> LBRACE aux5 RBRACE .

    ELIF            reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    VAR             reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    PUBLIC          reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    IF              reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    PRIVATE         reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    PROTECTED       reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    ID              reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    PRINT           reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    READ            reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    VOID            reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    INT             reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    FLOAT           reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    CHAR            reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    WHILE           reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)
    RBRACE          reduce using rule 27 (bloque -> LBRACE aux5 RBRACE .)


state 225

    (38) aux5 -> vars aux5 .

    RBRACE          reduce using rule 38 (aux5 -> vars aux5 .)
    RETURN          reduce using rule 38 (aux5 -> vars aux5 .)


state 226

    (39) aux5 -> estatuto aux5 .

    RBRACE          reduce using rule 39 (aux5 -> estatuto aux5 .)
    RETURN          reduce using rule 39 (aux5 -> estatuto aux5 .)


state 227

    (94) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET . EQUALS expresion
    (95) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET . EQUALS llamada_func
    (96) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET . EQUALS objeto_metodo

    EQUALS          shift and go to state 233


state 228

    (71) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET . COLON tipo_simple
    (72) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET . COLON tipo_compuesto

    COLON           shift and go to state 234


state 229

    (91) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . expresion
    (92) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . llamada_func
    (93) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (108) expresion -> . exp
    (109) expresion -> . exp LT expresion
    (110) expresion -> . exp GT expresion
    (111) expresion -> . exp GE expresion
    (112) expresion -> . exp LE expresion
    (113) expresion -> . exp EQ expresion
    (114) expresion -> . exp NE expresion
    (98) llamada_func -> . ID LPAREN aux RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    ID              shift and go to state 65
    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    exp                            shift and go to state 69
    expresion                      shift and go to state 235
    llamada_func                   shift and go to state 236
    objeto_metodo                  shift and go to state 237
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 230

    (28) funcion -> scope type DEF id LPAREN param aux_param RPAREN . contexto_func
    (34) contexto_func -> . LBRACE aux5 RBRACE
    (35) contexto_func -> . LBRACE aux5 RETURN ID RBRACE

    LBRACE          shift and go to state 239

    contexto_func                  shift and go to state 238

state 231

    (29) funcion -> scope VOID DEF id LPAREN param aux_param RPAREN . contexto_func
    (34) contexto_func -> . LBRACE aux5 RBRACE
    (35) contexto_func -> . LBRACE aux5 RETURN ID RBRACE

    LBRACE          shift and go to state 239

    contexto_func                  shift and go to state 240

state 232

    (21) elif -> aux_elif ELIF LPAREN . gotoF RPAREN bloque
    (22) elif -> aux_elif ELIF LPAREN . gotoF RPAREN bloque elif
    (101) gotoF -> . exp_cond
    (102) exp_cond -> . exp_bool
    (103) exp_cond -> . exp_bool AND exp_cond
    (104) exp_cond -> . exp_bool OR exp_cond
    (105) exp_bool -> . TRUE
    (106) exp_bool -> . FALSE
    (107) exp_bool -> . expresion
    (108) expresion -> . exp
    (109) expresion -> . exp LT expresion
    (110) expresion -> . exp GT expresion
    (111) expresion -> . exp GE expresion
    (112) expresion -> . exp LE expresion
    (113) expresion -> . exp EQ expresion
    (114) expresion -> . exp NE expresion
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    ID              shift and go to state 83
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    gotoF                          shift and go to state 241
    exp_cond                       shift and go to state 93
    exp_bool                       shift and go to state 94
    expresion                      shift and go to state 97
    exp                            shift and go to state 69
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    objeto_aAcceso                 shift and go to state 75
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 233

    (94) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS . expresion
    (95) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS . llamada_func
    (96) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS . objeto_metodo
    (108) expresion -> . exp
    (109) expresion -> . exp LT expresion
    (110) expresion -> . exp GT expresion
    (111) expresion -> . exp GE expresion
    (112) expresion -> . exp LE expresion
    (113) expresion -> . exp EQ expresion
    (114) expresion -> . exp NE expresion
    (98) llamada_func -> . ID LPAREN aux RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (115) exp -> . termino
    (116) exp -> . exp PLUS termino
    (117) exp -> . exp MINUS termino
    (118) termino -> . factor
    (119) termino -> . termino TIMES factor
    (120) termino -> . termino DIVIDE factor
    (121) termino -> . termino MODULO factor
    (122) factor -> . LPAREN exp_cond RPAREN
    (123) factor -> . PLUS objeto_aAcceso
    (124) factor -> . MINUS objeto_aAcceso
    (125) factor -> . PLUS var
    (126) factor -> . MINUS var
    (127) factor -> . var
    (128) factor -> . objeto_aAcceso
    (129) var -> . ID
    (130) var -> . cint
    (131) var -> . cfloat
    (132) var -> . cchar
    (136) objeto_aAcceso -> . ID PERIOD ID
    (133) cint -> . CINT
    (134) cfloat -> . NUMBER
    (135) cchar -> . CCHAR

    ID              shift and go to state 65
    LPAREN          shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    CINT            shift and go to state 80
    NUMBER          shift and go to state 81
    CCHAR           shift and go to state 82

    objeto_aAcceso                 shift and go to state 75
    exp                            shift and go to state 69
    expresion                      shift and go to state 242
    llamada_func                   shift and go to state 243
    objeto_metodo                  shift and go to state 244
    termino                        shift and go to state 71
    factor                         shift and go to state 74
    var                            shift and go to state 76
    cint                           shift and go to state 77
    cfloat                         shift and go to state 78
    cchar                          shift and go to state 79

state 234

    (71) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON . tipo_simple
    (72) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON . tipo_compuesto
    (75) tipo_simple -> . INT
    (76) tipo_simple -> . FLOAT
    (77) tipo_simple -> . CHAR
    (78) tipo_compuesto -> . ID

    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    CHAR            shift and go to state 117
    ID              shift and go to state 118

    tipo_simple                    shift and go to state 245
    tipo_compuesto                 shift and go to state 246

state 235

    (91) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .

    VAR             reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    ID              reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    VOID            reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    INT             reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    FLOAT           reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    CHAR            reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 91 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)


state 236

    (92) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .

    VAR             reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    VOID            reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    INT             reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    FLOAT           reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    CHAR            reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 92 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)


state 237

    (93) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    VOID            reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    INT             reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    FLOAT           reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    CHAR            reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 93 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 238

    (28) funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .

    VAR             reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    PUBLIC          reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    IF              reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    PRIVATE         reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    PROTECTED       reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    ID              reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    PRINT           reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    READ            reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    VOID            reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    INT             reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    FLOAT           reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    CHAR            reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    WHILE           reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)
    RBRACE          reduce using rule 28 (funcion -> scope type DEF id LPAREN param aux_param RPAREN contexto_func .)


state 239

    (34) contexto_func -> LBRACE . aux5 RBRACE
    (35) contexto_func -> LBRACE . aux5 RETURN ID RBRACE
    (36) aux5 -> . vars
    (37) aux5 -> . estatuto
    (38) aux5 -> . vars aux5
    (39) aux5 -> . estatuto aux5
    (67) vars -> . VAR aux2 COLON tipo_simple
    (68) vars -> . VAR aux2 COLON tipo_compuesto
    (69) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (70) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (71) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (72) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (48) estatuto -> . asignacion
    (49) estatuto -> . escritura
    (50) estatuto -> . llamada_func
    (51) estatuto -> . objeto_metodo
    (52) estatuto -> . lectura
    (79) asignacion -> . ID EQUALS expresion
    (80) asignacion -> . ID EQUALS llamada_func
    (81) asignacion -> . ID EQUALS objeto_metodo
    (82) asignacion -> . objeto_aAcceso EQUALS expresion
    (83) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (84) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (85) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (86) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (87) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (88) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (89) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (90) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (91) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (92) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (93) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (94) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (95) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (96) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (58) escritura -> . PRINT LPAREN aux3 RPAREN
    (98) llamada_func -> . ID LPAREN aux RPAREN
    (97) objeto_metodo -> . ID PERIOD llamada_func
    (53) lectura -> . READ LPAREN aux4 RPAREN
    (136) objeto_aAcceso -> . ID PERIOD ID

    VAR             shift and go to state 21
    ID              shift and go to state 22
    PRINT           shift and go to state 33
    READ            shift and go to state 34

    aux5                           shift and go to state 247
    vars                           shift and go to state 209
    estatuto                       shift and go to state 210
    asignacion                     shift and go to state 25
    escritura                      shift and go to state 26
    llamada_func                   shift and go to state 27
    objeto_metodo                  shift and go to state 28
    lectura                        shift and go to state 29
    objeto_aAcceso                 shift and go to state 32

state 240

    (29) funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .

    VAR             reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    PUBLIC          reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    IF              reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    PRIVATE         reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    PROTECTED       reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    ID              reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    PRINT           reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    READ            reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    VOID            reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    INT             reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    FLOAT           reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    CHAR            reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    WHILE           reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)
    RBRACE          reduce using rule 29 (funcion -> scope VOID DEF id LPAREN param aux_param RPAREN contexto_func .)


state 241

    (21) elif -> aux_elif ELIF LPAREN gotoF . RPAREN bloque
    (22) elif -> aux_elif ELIF LPAREN gotoF . RPAREN bloque elif

    RPAREN          shift and go to state 248


state 242

    (94) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .

    VAR             reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    ID              reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    VOID            reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    INT             reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    FLOAT           reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    CHAR            reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 94 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)


state 243

    (95) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .

    VAR             reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    VOID            reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    INT             reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    FLOAT           reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    CHAR            reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 95 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)


state 244

    (96) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    VOID            reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    INT             reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    FLOAT           reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    CHAR            reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 96 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 245

    (71) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .

    VAR             reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PUBLIC          reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    IF              reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PRIVATE         reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PROTECTED       reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    ID              reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PRINT           reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    READ            reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    VOID            reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    INT             reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    FLOAT           reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    CHAR            reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    WHILE           reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    RBRACE          reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    RETURN          reduce using rule 71 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)


state 246

    (72) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .

    VAR             reduce using rule 72 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PUBLIC          reduce using rule 72 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    IF              reduce using rule 72 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRIVATE         reduce using rule 72 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PROTECTED       reduce using rule 72 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    ID              reduce using rule 72 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRINT           reduce using rule 72 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    READ            reduce using rule 72 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    VOID            reduce using rule 72 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    INT             reduce using rule 72 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    FLOAT           reduce using rule 72 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    CHAR            reduce using rule 72 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    WHILE           reduce using rule 72 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RBRACE          reduce using rule 72 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RETURN          reduce using rule 72 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)


state 247

    (34) contexto_func -> LBRACE aux5 . RBRACE
    (35) contexto_func -> LBRACE aux5 . RETURN ID RBRACE

    RBRACE          shift and go to state 249
    RETURN          shift and go to state 250


state 248

    (21) elif -> aux_elif ELIF LPAREN gotoF RPAREN . bloque
    (22) elif -> aux_elif ELIF LPAREN gotoF RPAREN . bloque elif
    (27) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 184

    bloque                         shift and go to state 251

state 249

    (34) contexto_func -> LBRACE aux5 RBRACE .

    VAR             reduce using rule 34 (contexto_func -> LBRACE aux5 RBRACE .)
    PUBLIC          reduce using rule 34 (contexto_func -> LBRACE aux5 RBRACE .)
    IF              reduce using rule 34 (contexto_func -> LBRACE aux5 RBRACE .)
    PRIVATE         reduce using rule 34 (contexto_func -> LBRACE aux5 RBRACE .)
    PROTECTED       reduce using rule 34 (contexto_func -> LBRACE aux5 RBRACE .)
    ID              reduce using rule 34 (contexto_func -> LBRACE aux5 RBRACE .)
    PRINT           reduce using rule 34 (contexto_func -> LBRACE aux5 RBRACE .)
    READ            reduce using rule 34 (contexto_func -> LBRACE aux5 RBRACE .)
    VOID            reduce using rule 34 (contexto_func -> LBRACE aux5 RBRACE .)
    INT             reduce using rule 34 (contexto_func -> LBRACE aux5 RBRACE .)
    FLOAT           reduce using rule 34 (contexto_func -> LBRACE aux5 RBRACE .)
    CHAR            reduce using rule 34 (contexto_func -> LBRACE aux5 RBRACE .)
    WHILE           reduce using rule 34 (contexto_func -> LBRACE aux5 RBRACE .)
    RBRACE          reduce using rule 34 (contexto_func -> LBRACE aux5 RBRACE .)


state 250

    (35) contexto_func -> LBRACE aux5 RETURN . ID RBRACE

    ID              shift and go to state 252


state 251

    (21) elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .
    (22) elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque . elif
    (21) elif -> . aux_elif ELIF LPAREN gotoF RPAREN bloque
    (22) elif -> . aux_elif ELIF LPAREN gotoF RPAREN bloque elif
    (23) aux_elif -> .

    VAR             reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    PUBLIC          reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    IF              reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    PRIVATE         reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    PROTECTED       reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    ID              reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    PRINT           reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    READ            reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    VOID            reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    INT             reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    FLOAT           reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    CHAR            reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    WHILE           reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    RBRACE          reduce using rule 21 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque .)
    ELIF            reduce using rule 23 (aux_elif -> .)

    aux_elif                       shift and go to state 207
    elif                           shift and go to state 253

state 252

    (35) contexto_func -> LBRACE aux5 RETURN ID . RBRACE

    RBRACE          shift and go to state 254


state 253

    (22) elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .

    VAR             reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    PUBLIC          reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    IF              reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    PRIVATE         reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    PROTECTED       reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    ID              reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    PRINT           reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    READ            reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    VOID            reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    INT             reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    FLOAT           reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    CHAR            reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    WHILE           reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)
    RBRACE          reduce using rule 22 (elif -> aux_elif ELIF LPAREN gotoF RPAREN bloque elif .)


state 254

    (35) contexto_func -> LBRACE aux5 RETURN ID RBRACE .

    VAR             reduce using rule 35 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)
    PUBLIC          reduce using rule 35 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)
    IF              reduce using rule 35 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)
    PRIVATE         reduce using rule 35 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)
    PROTECTED       reduce using rule 35 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)
    ID              reduce using rule 35 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)
    PRINT           reduce using rule 35 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)
    READ            reduce using rule 35 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)
    VOID            reduce using rule 35 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)
    INT             reduce using rule 35 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)
    FLOAT           reduce using rule 35 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)
    CHAR            reduce using rule 35 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)
    WHILE           reduce using rule 35 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)
    RBRACE          reduce using rule 35 (contexto_func -> LBRACE aux5 RETURN ID RBRACE .)

