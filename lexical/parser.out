Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID class context
Rule 2     programa -> PROGRAM ID context
Rule 3     class -> scope CLASS ID
Rule 4     class -> scope CLASS ID COLON ID
Rule 5     context -> LBRACE aux6 RBRACE
Rule 6     aux6 -> vars
Rule 7     aux6 -> constructor
Rule 8     aux6 -> funcion
Rule 9     aux6 -> estatuto
Rule 10    aux6 -> condicion
Rule 11    aux6 -> ciclo
Rule 12    aux6 -> vars aux6
Rule 13    aux6 -> constructor aux6
Rule 14    aux6 -> funcion aux6
Rule 15    aux6 -> estatuto aux6
Rule 16    aux6 -> condicion aux6
Rule 17    aux6 -> ciclo aux6
Rule 18    condicion -> IF LPAREN expresion RPAREN bloque
Rule 19    condicion -> IF LPAREN expresion RPAREN bloque elif
Rule 20    condicion -> IF LPAREN expresion RPAREN bloque elif else
Rule 21    elif -> <empty>
Rule 22    elif -> ELIF LPAREN expresion RPAREN bloque elif
Rule 23    else -> ELSE bloque
Rule 24    ciclo -> WHILE LPAREN expresion RPAREN bloque
Rule 25    constructor -> PUBLIC ID LPAREN param RPAREN bloque
Rule 26    bloque -> LBRACE aux5 RBRACE
Rule 27    funcion -> scope DEF ID LPAREN param RPAREN contexto_func
Rule 28    contexto_func -> LBRACE aux5 RBRACE
Rule 29    contexto_func -> LBRACE aux5 RETURN INT ID RBRACE
Rule 30    contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE
Rule 31    aux5 -> vars
Rule 32    aux5 -> estatuto
Rule 33    aux5 -> vars aux5
Rule 34    aux5 -> estatuto aux5
Rule 35    param -> <empty>
Rule 36    param -> tipo_simple ID
Rule 37    param -> tipo_simple ID COMMA param
Rule 38    scope -> PRIVATE
Rule 39    scope -> PUBLIC
Rule 40    scope -> PROTECTED
Rule 41    estatuto -> asignacion
Rule 42    estatuto -> escritura
Rule 43    estatuto -> llamada_func
Rule 44    estatuto -> objeto_metodo
Rule 45    estatuto -> lectura
Rule 46    lectura -> READ LPAREN aux4 RPAREN
Rule 47    aux4 -> ID
Rule 48    aux4 -> objeto_aAcceso
Rule 49    aux4 -> ID COMMA aux4
Rule 50    aux4 -> objeto_aAcceso COMMA aux4
Rule 51    escritura -> PRINT LPAREN aux3 RPAREN
Rule 52    aux3 -> expresion
Rule 53    aux3 -> llamada_func
Rule 54    aux3 -> objeto_metodo
Rule 55    aux3 -> CSTRING
Rule 56    aux3 -> expresion COMMA aux3
Rule 57    aux3 -> llamada_func COMMA aux3
Rule 58    aux3 -> objeto_metodo COMMA aux3
Rule 59    aux3 -> CSTRING COMMA aux3
Rule 60    vars -> VAR aux2 COLON tipo_simple
Rule 61    vars -> VAR aux2 COLON tipo_compuesto
Rule 62    vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple
Rule 63    vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
Rule 64    vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
Rule 65    vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
Rule 66    aux2 -> ID
Rule 67    aux2 -> ID COMMA aux2
Rule 68    tipo_simple -> INT
Rule 69    tipo_simple -> FLOAT
Rule 70    tipo_compuesto -> ID
Rule 71    asignacion -> ID EQUALS expresion
Rule 72    asignacion -> ID EQUALS llamada_func
Rule 73    asignacion -> ID EQUALS objeto_metodo
Rule 74    asignacion -> objeto_aAcceso EQUALS expresion
Rule 75    asignacion -> objeto_aAcceso EQUALS llamada_func
Rule 76    asignacion -> objeto_aAcceso EQUALS objeto_metodo
Rule 77    asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion
Rule 78    asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func
Rule 79    asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 80    asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
Rule 81    asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
Rule 82    asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 83    asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
Rule 84    asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
Rule 85    asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 86    asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
Rule 87    asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
Rule 88    asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
Rule 89    objeto_metodo -> ID PERIOD llamada_func
Rule 90    llamada_func -> ID LPAREN aux RPAREN
Rule 91    aux -> exp
Rule 92    aux -> exp COMMA aux
Rule 93    expresion -> exp_bool
Rule 94    expresion -> exp_bool rel_op exp_bool
Rule 95    expresion -> exp_bool AND expresion
Rule 96    expresion -> exp_bool OR expresion
Rule 97    expresion -> exp_bool rel_op exp_bool AND expresion
Rule 98    expresion -> exp_bool rel_op exp_bool OR expresion
Rule 99    exp_bool -> TRUE
Rule 100   exp_bool -> FALSE
Rule 101   exp_bool -> exp
Rule 102   exp -> termino
Rule 103   exp -> exp PLUS termino
Rule 104   exp -> exp MINUS termino
Rule 105   termino -> factor
Rule 106   termino -> termino TIMES factor
Rule 107   termino -> termino DIVIDE factor
Rule 108   termino -> termino MODULO factor
Rule 109   factor -> LPAREN expresion RPAREN
Rule 110   factor -> PLUS objeto_aAcceso
Rule 111   factor -> MINUS objeto_aAcceso
Rule 112   factor -> PLUS var
Rule 113   factor -> MINUS var
Rule 114   factor -> var
Rule 115   factor -> objeto_aAcceso
Rule 116   var -> ID
Rule 117   var -> cint
Rule 118   var -> cfloat
Rule 119   cint -> CINT
Rule 120   cfloat -> NUMBER
Rule 121   rel_op -> LT
Rule 122   rel_op -> LE
Rule 123   rel_op -> GT
Rule 124   rel_op -> GE
Rule 125   rel_op -> EQ
Rule 126   rel_op -> NE
Rule 127   objeto_aAcceso -> ID PERIOD ID

Terminals, with rules where they appear

AND                  : 95 97
CINT                 : 119
CLASS                : 3 4
COLON                : 4 60 61 62 63 64 65
COMMA                : 37 49 50 56 57 58 59 67 92
CSTRING              : 55 59
DEF                  : 27
DIVIDE               : 107
ELIF                 : 22
ELSE                 : 23
EQ                   : 125
EQUALS               : 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88
FALSE                : 100
FLOAT                : 30 69
GE                   : 124
GT                   : 123
ID                   : 1 2 3 4 4 25 27 29 30 36 37 47 49 62 63 64 65 66 67 70 71 72 73 77 78 79 83 84 85 89 90 116 127 127
IF                   : 18 19 20
INT                  : 29 68
LBRACE               : 5 26 28 29 30
LBRACKET             : 62 63 64 64 65 65 77 78 79 80 81 82 83 83 84 84 85 85 86 86 87 87 88 88
LE                   : 122
LPAREN               : 18 19 20 22 24 25 27 46 51 90 109
LT                   : 121
MINUS                : 104 111 113
MODULO               : 108
NE                   : 126
NUMBER               : 120
OR                   : 96 98
PERIOD               : 89 127
PLUS                 : 103 110 112
PRINT                : 51
PRIVATE              : 38
PROGRAM              : 1 2
PROTECTED            : 40
PUBLIC               : 25 39
RBRACE               : 5 26 28 29 30
RBRACKET             : 62 63 64 64 65 65 77 78 79 80 81 82 83 83 84 84 85 85 86 86 87 87 88 88
READ                 : 46
RETURN               : 29 30
RPAREN               : 18 19 20 22 24 25 27 46 51 90 109
TIMES                : 106
TRUE                 : 99
VAR                  : 60 61 62 63 64 65
WHILE                : 24
error                : 

Nonterminals, with rules where they appear

asignacion           : 41
aux                  : 90 92
aux2                 : 60 61 67
aux3                 : 51 56 57 58 59
aux4                 : 46 49 50
aux5                 : 26 28 29 30 33 34
aux6                 : 5 12 13 14 15 16 17
bloque               : 18 19 20 22 23 24 25
cfloat               : 118
ciclo                : 11 17
cint                 : 62 63 64 64 65 65 117
class                : 1
condicion            : 10 16
constructor          : 7 13
context              : 1 2
contexto_func        : 27
elif                 : 19 20 22
else                 : 20
escritura            : 42
estatuto             : 9 15 32 34
exp                  : 77 78 79 80 81 82 83 83 84 84 85 85 86 86 87 87 88 88 91 92 101 103 104
exp_bool             : 93 94 94 95 96 97 97 98 98
expresion            : 18 19 20 22 24 52 56 71 74 77 80 83 86 95 96 97 98 109
factor               : 105 106 107 108
funcion              : 8 14
lectura              : 45
llamada_func         : 43 53 57 72 75 78 81 84 87 89
objeto_aAcceso       : 48 50 74 75 76 80 81 82 86 87 88 110 111 115
objeto_metodo        : 44 54 58 73 76 79 82 85 88
param                : 25 27 37
programa             : 0
rel_op               : 94 97 98
scope                : 3 4 27
termino              : 102 103 104 106 107 108
tipo_compuesto       : 61 63 65
tipo_simple          : 36 37 60 62 64
var                  : 112 113 114
vars                 : 6 12 31 33

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID class context
    (2) programa -> . PROGRAM ID context

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID class context
    (2) programa -> PROGRAM . ID context

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . class context
    (2) programa -> PROGRAM ID . context
    (3) class -> . scope CLASS ID
    (4) class -> . scope CLASS ID COLON ID
    (5) context -> . LBRACE aux6 RBRACE
    (38) scope -> . PRIVATE
    (39) scope -> . PUBLIC
    (40) scope -> . PROTECTED

    LBRACE          shift and go to state 7
    PRIVATE         shift and go to state 8
    PUBLIC          shift and go to state 9
    PROTECTED       shift and go to state 10

    class                          shift and go to state 4
    context                        shift and go to state 5
    scope                          shift and go to state 6

state 4

    (1) programa -> PROGRAM ID class . context
    (5) context -> . LBRACE aux6 RBRACE

    LBRACE          shift and go to state 7

    context                        shift and go to state 11

state 5

    (2) programa -> PROGRAM ID context .

    $end            reduce using rule 2 (programa -> PROGRAM ID context .)


state 6

    (3) class -> scope . CLASS ID
    (4) class -> scope . CLASS ID COLON ID

    CLASS           shift and go to state 12


state 7

    (5) context -> LBRACE . aux6 RBRACE
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (60) vars -> . VAR aux2 COLON tipo_simple
    (61) vars -> . VAR aux2 COLON tipo_compuesto
    (62) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (63) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (64) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (25) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (27) funcion -> . scope DEF ID LPAREN param RPAREN contexto_func
    (41) estatuto -> . asignacion
    (42) estatuto -> . escritura
    (43) estatuto -> . llamada_func
    (44) estatuto -> . objeto_metodo
    (45) estatuto -> . lectura
    (18) condicion -> . IF LPAREN expresion RPAREN bloque
    (19) condicion -> . IF LPAREN expresion RPAREN bloque elif
    (20) condicion -> . IF LPAREN expresion RPAREN bloque elif else
    (24) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (38) scope -> . PRIVATE
    (39) scope -> . PUBLIC
    (40) scope -> . PROTECTED
    (71) asignacion -> . ID EQUALS expresion
    (72) asignacion -> . ID EQUALS llamada_func
    (73) asignacion -> . ID EQUALS objeto_metodo
    (74) asignacion -> . objeto_aAcceso EQUALS expresion
    (75) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (76) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (77) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (78) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (79) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (80) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (81) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (82) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (83) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (85) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (86) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (51) escritura -> . PRINT LPAREN aux3 RPAREN
    (90) llamada_func -> . ID LPAREN aux RPAREN
    (89) objeto_metodo -> . ID PERIOD llamada_func
    (46) lectura -> . READ LPAREN aux4 RPAREN
    (127) objeto_aAcceso -> . ID PERIOD ID

    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    aux6                           shift and go to state 13
    vars                           shift and go to state 14
    constructor                    shift and go to state 15
    funcion                        shift and go to state 16
    estatuto                       shift and go to state 17
    condicion                      shift and go to state 18
    ciclo                          shift and go to state 19
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 8

    (38) scope -> PRIVATE .

    CLASS           reduce using rule 38 (scope -> PRIVATE .)
    DEF             reduce using rule 38 (scope -> PRIVATE .)


state 9

    (39) scope -> PUBLIC .

    CLASS           reduce using rule 39 (scope -> PUBLIC .)


state 10

    (40) scope -> PROTECTED .

    CLASS           reduce using rule 40 (scope -> PROTECTED .)
    DEF             reduce using rule 40 (scope -> PROTECTED .)


state 11

    (1) programa -> PROGRAM ID class context .

    $end            reduce using rule 1 (programa -> PROGRAM ID class context .)


state 12

    (3) class -> scope CLASS . ID
    (4) class -> scope CLASS . ID COLON ID

    ID              shift and go to state 34


state 13

    (5) context -> LBRACE aux6 . RBRACE

    RBRACE          shift and go to state 35


state 14

    (6) aux6 -> vars .
    (12) aux6 -> vars . aux6
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (60) vars -> . VAR aux2 COLON tipo_simple
    (61) vars -> . VAR aux2 COLON tipo_compuesto
    (62) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (63) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (64) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (25) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (27) funcion -> . scope DEF ID LPAREN param RPAREN contexto_func
    (41) estatuto -> . asignacion
    (42) estatuto -> . escritura
    (43) estatuto -> . llamada_func
    (44) estatuto -> . objeto_metodo
    (45) estatuto -> . lectura
    (18) condicion -> . IF LPAREN expresion RPAREN bloque
    (19) condicion -> . IF LPAREN expresion RPAREN bloque elif
    (20) condicion -> . IF LPAREN expresion RPAREN bloque elif else
    (24) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (38) scope -> . PRIVATE
    (39) scope -> . PUBLIC
    (40) scope -> . PROTECTED
    (71) asignacion -> . ID EQUALS expresion
    (72) asignacion -> . ID EQUALS llamada_func
    (73) asignacion -> . ID EQUALS objeto_metodo
    (74) asignacion -> . objeto_aAcceso EQUALS expresion
    (75) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (76) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (77) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (78) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (79) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (80) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (81) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (82) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (83) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (85) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (86) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (51) escritura -> . PRINT LPAREN aux3 RPAREN
    (90) llamada_func -> . ID LPAREN aux RPAREN
    (89) objeto_metodo -> . ID PERIOD llamada_func
    (46) lectura -> . READ LPAREN aux4 RPAREN
    (127) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 6 (aux6 -> vars .)
    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    vars                           shift and go to state 14
    aux6                           shift and go to state 36
    constructor                    shift and go to state 15
    funcion                        shift and go to state 16
    estatuto                       shift and go to state 17
    condicion                      shift and go to state 18
    ciclo                          shift and go to state 19
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 15

    (7) aux6 -> constructor .
    (13) aux6 -> constructor . aux6
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (60) vars -> . VAR aux2 COLON tipo_simple
    (61) vars -> . VAR aux2 COLON tipo_compuesto
    (62) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (63) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (64) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (25) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (27) funcion -> . scope DEF ID LPAREN param RPAREN contexto_func
    (41) estatuto -> . asignacion
    (42) estatuto -> . escritura
    (43) estatuto -> . llamada_func
    (44) estatuto -> . objeto_metodo
    (45) estatuto -> . lectura
    (18) condicion -> . IF LPAREN expresion RPAREN bloque
    (19) condicion -> . IF LPAREN expresion RPAREN bloque elif
    (20) condicion -> . IF LPAREN expresion RPAREN bloque elif else
    (24) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (38) scope -> . PRIVATE
    (39) scope -> . PUBLIC
    (40) scope -> . PROTECTED
    (71) asignacion -> . ID EQUALS expresion
    (72) asignacion -> . ID EQUALS llamada_func
    (73) asignacion -> . ID EQUALS objeto_metodo
    (74) asignacion -> . objeto_aAcceso EQUALS expresion
    (75) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (76) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (77) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (78) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (79) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (80) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (81) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (82) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (83) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (85) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (86) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (51) escritura -> . PRINT LPAREN aux3 RPAREN
    (90) llamada_func -> . ID LPAREN aux RPAREN
    (89) objeto_metodo -> . ID PERIOD llamada_func
    (46) lectura -> . READ LPAREN aux4 RPAREN
    (127) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 7 (aux6 -> constructor .)
    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    constructor                    shift and go to state 15
    aux6                           shift and go to state 37
    vars                           shift and go to state 14
    funcion                        shift and go to state 16
    estatuto                       shift and go to state 17
    condicion                      shift and go to state 18
    ciclo                          shift and go to state 19
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 16

    (8) aux6 -> funcion .
    (14) aux6 -> funcion . aux6
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (60) vars -> . VAR aux2 COLON tipo_simple
    (61) vars -> . VAR aux2 COLON tipo_compuesto
    (62) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (63) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (64) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (25) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (27) funcion -> . scope DEF ID LPAREN param RPAREN contexto_func
    (41) estatuto -> . asignacion
    (42) estatuto -> . escritura
    (43) estatuto -> . llamada_func
    (44) estatuto -> . objeto_metodo
    (45) estatuto -> . lectura
    (18) condicion -> . IF LPAREN expresion RPAREN bloque
    (19) condicion -> . IF LPAREN expresion RPAREN bloque elif
    (20) condicion -> . IF LPAREN expresion RPAREN bloque elif else
    (24) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (38) scope -> . PRIVATE
    (39) scope -> . PUBLIC
    (40) scope -> . PROTECTED
    (71) asignacion -> . ID EQUALS expresion
    (72) asignacion -> . ID EQUALS llamada_func
    (73) asignacion -> . ID EQUALS objeto_metodo
    (74) asignacion -> . objeto_aAcceso EQUALS expresion
    (75) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (76) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (77) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (78) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (79) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (80) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (81) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (82) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (83) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (85) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (86) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (51) escritura -> . PRINT LPAREN aux3 RPAREN
    (90) llamada_func -> . ID LPAREN aux RPAREN
    (89) objeto_metodo -> . ID PERIOD llamada_func
    (46) lectura -> . READ LPAREN aux4 RPAREN
    (127) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 8 (aux6 -> funcion .)
    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    funcion                        shift and go to state 16
    aux6                           shift and go to state 38
    vars                           shift and go to state 14
    constructor                    shift and go to state 15
    estatuto                       shift and go to state 17
    condicion                      shift and go to state 18
    ciclo                          shift and go to state 19
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 17

    (9) aux6 -> estatuto .
    (15) aux6 -> estatuto . aux6
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (60) vars -> . VAR aux2 COLON tipo_simple
    (61) vars -> . VAR aux2 COLON tipo_compuesto
    (62) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (63) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (64) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (25) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (27) funcion -> . scope DEF ID LPAREN param RPAREN contexto_func
    (41) estatuto -> . asignacion
    (42) estatuto -> . escritura
    (43) estatuto -> . llamada_func
    (44) estatuto -> . objeto_metodo
    (45) estatuto -> . lectura
    (18) condicion -> . IF LPAREN expresion RPAREN bloque
    (19) condicion -> . IF LPAREN expresion RPAREN bloque elif
    (20) condicion -> . IF LPAREN expresion RPAREN bloque elif else
    (24) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (38) scope -> . PRIVATE
    (39) scope -> . PUBLIC
    (40) scope -> . PROTECTED
    (71) asignacion -> . ID EQUALS expresion
    (72) asignacion -> . ID EQUALS llamada_func
    (73) asignacion -> . ID EQUALS objeto_metodo
    (74) asignacion -> . objeto_aAcceso EQUALS expresion
    (75) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (76) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (77) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (78) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (79) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (80) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (81) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (82) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (83) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (85) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (86) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (51) escritura -> . PRINT LPAREN aux3 RPAREN
    (90) llamada_func -> . ID LPAREN aux RPAREN
    (89) objeto_metodo -> . ID PERIOD llamada_func
    (46) lectura -> . READ LPAREN aux4 RPAREN
    (127) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 9 (aux6 -> estatuto .)
    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    estatuto                       shift and go to state 17
    aux6                           shift and go to state 39
    vars                           shift and go to state 14
    constructor                    shift and go to state 15
    funcion                        shift and go to state 16
    condicion                      shift and go to state 18
    ciclo                          shift and go to state 19
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 18

    (10) aux6 -> condicion .
    (16) aux6 -> condicion . aux6
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (60) vars -> . VAR aux2 COLON tipo_simple
    (61) vars -> . VAR aux2 COLON tipo_compuesto
    (62) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (63) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (64) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (25) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (27) funcion -> . scope DEF ID LPAREN param RPAREN contexto_func
    (41) estatuto -> . asignacion
    (42) estatuto -> . escritura
    (43) estatuto -> . llamada_func
    (44) estatuto -> . objeto_metodo
    (45) estatuto -> . lectura
    (18) condicion -> . IF LPAREN expresion RPAREN bloque
    (19) condicion -> . IF LPAREN expresion RPAREN bloque elif
    (20) condicion -> . IF LPAREN expresion RPAREN bloque elif else
    (24) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (38) scope -> . PRIVATE
    (39) scope -> . PUBLIC
    (40) scope -> . PROTECTED
    (71) asignacion -> . ID EQUALS expresion
    (72) asignacion -> . ID EQUALS llamada_func
    (73) asignacion -> . ID EQUALS objeto_metodo
    (74) asignacion -> . objeto_aAcceso EQUALS expresion
    (75) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (76) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (77) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (78) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (79) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (80) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (81) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (82) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (83) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (85) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (86) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (51) escritura -> . PRINT LPAREN aux3 RPAREN
    (90) llamada_func -> . ID LPAREN aux RPAREN
    (89) objeto_metodo -> . ID PERIOD llamada_func
    (46) lectura -> . READ LPAREN aux4 RPAREN
    (127) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 10 (aux6 -> condicion .)
    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    condicion                      shift and go to state 18
    aux6                           shift and go to state 40
    vars                           shift and go to state 14
    constructor                    shift and go to state 15
    funcion                        shift and go to state 16
    estatuto                       shift and go to state 17
    ciclo                          shift and go to state 19
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 19

    (11) aux6 -> ciclo .
    (17) aux6 -> ciclo . aux6
    (6) aux6 -> . vars
    (7) aux6 -> . constructor
    (8) aux6 -> . funcion
    (9) aux6 -> . estatuto
    (10) aux6 -> . condicion
    (11) aux6 -> . ciclo
    (12) aux6 -> . vars aux6
    (13) aux6 -> . constructor aux6
    (14) aux6 -> . funcion aux6
    (15) aux6 -> . estatuto aux6
    (16) aux6 -> . condicion aux6
    (17) aux6 -> . ciclo aux6
    (60) vars -> . VAR aux2 COLON tipo_simple
    (61) vars -> . VAR aux2 COLON tipo_compuesto
    (62) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (63) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (64) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (25) constructor -> . PUBLIC ID LPAREN param RPAREN bloque
    (27) funcion -> . scope DEF ID LPAREN param RPAREN contexto_func
    (41) estatuto -> . asignacion
    (42) estatuto -> . escritura
    (43) estatuto -> . llamada_func
    (44) estatuto -> . objeto_metodo
    (45) estatuto -> . lectura
    (18) condicion -> . IF LPAREN expresion RPAREN bloque
    (19) condicion -> . IF LPAREN expresion RPAREN bloque elif
    (20) condicion -> . IF LPAREN expresion RPAREN bloque elif else
    (24) ciclo -> . WHILE LPAREN expresion RPAREN bloque
    (38) scope -> . PRIVATE
    (39) scope -> . PUBLIC
    (40) scope -> . PROTECTED
    (71) asignacion -> . ID EQUALS expresion
    (72) asignacion -> . ID EQUALS llamada_func
    (73) asignacion -> . ID EQUALS objeto_metodo
    (74) asignacion -> . objeto_aAcceso EQUALS expresion
    (75) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (76) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (77) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (78) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (79) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (80) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (81) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (82) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (83) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (85) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (86) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (51) escritura -> . PRINT LPAREN aux3 RPAREN
    (90) llamada_func -> . ID LPAREN aux RPAREN
    (89) objeto_metodo -> . ID PERIOD llamada_func
    (46) lectura -> . READ LPAREN aux4 RPAREN
    (127) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 11 (aux6 -> ciclo .)
    VAR             shift and go to state 20
    PUBLIC          shift and go to state 22
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    PRIVATE         shift and go to state 8
    PROTECTED       shift and go to state 10
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    ciclo                          shift and go to state 19
    aux6                           shift and go to state 41
    vars                           shift and go to state 14
    constructor                    shift and go to state 15
    funcion                        shift and go to state 16
    estatuto                       shift and go to state 17
    condicion                      shift and go to state 18
    scope                          shift and go to state 23
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 20

    (60) vars -> VAR . aux2 COLON tipo_simple
    (61) vars -> VAR . aux2 COLON tipo_compuesto
    (62) vars -> VAR . ID LBRACKET cint RBRACKET COLON tipo_simple
    (63) vars -> VAR . ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (64) vars -> VAR . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> VAR . ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (66) aux2 -> . ID
    (67) aux2 -> . ID COMMA aux2

    ID              shift and go to state 43

    aux2                           shift and go to state 42

state 21

    (71) asignacion -> ID . EQUALS expresion
    (72) asignacion -> ID . EQUALS llamada_func
    (73) asignacion -> ID . EQUALS objeto_metodo
    (77) asignacion -> ID . LBRACKET exp RBRACKET EQUALS expresion
    (78) asignacion -> ID . LBRACKET exp RBRACKET EQUALS llamada_func
    (79) asignacion -> ID . LBRACKET exp RBRACKET EQUALS objeto_metodo
    (83) asignacion -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (85) asignacion -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (90) llamada_func -> ID . LPAREN aux RPAREN
    (89) objeto_metodo -> ID . PERIOD llamada_func
    (127) objeto_aAcceso -> ID . PERIOD ID

    EQUALS          shift and go to state 44
    LBRACKET        shift and go to state 45
    LPAREN          shift and go to state 46
    PERIOD          shift and go to state 47


state 22

    (25) constructor -> PUBLIC . ID LPAREN param RPAREN bloque
    (39) scope -> PUBLIC .

    ID              shift and go to state 48
    DEF             reduce using rule 39 (scope -> PUBLIC .)


state 23

    (27) funcion -> scope . DEF ID LPAREN param RPAREN contexto_func

    DEF             shift and go to state 49


state 24

    (41) estatuto -> asignacion .

    VAR             reduce using rule 41 (estatuto -> asignacion .)
    PUBLIC          reduce using rule 41 (estatuto -> asignacion .)
    IF              reduce using rule 41 (estatuto -> asignacion .)
    WHILE           reduce using rule 41 (estatuto -> asignacion .)
    PRIVATE         reduce using rule 41 (estatuto -> asignacion .)
    PROTECTED       reduce using rule 41 (estatuto -> asignacion .)
    ID              reduce using rule 41 (estatuto -> asignacion .)
    PRINT           reduce using rule 41 (estatuto -> asignacion .)
    READ            reduce using rule 41 (estatuto -> asignacion .)
    RBRACE          reduce using rule 41 (estatuto -> asignacion .)
    RETURN          reduce using rule 41 (estatuto -> asignacion .)


state 25

    (42) estatuto -> escritura .

    VAR             reduce using rule 42 (estatuto -> escritura .)
    PUBLIC          reduce using rule 42 (estatuto -> escritura .)
    IF              reduce using rule 42 (estatuto -> escritura .)
    WHILE           reduce using rule 42 (estatuto -> escritura .)
    PRIVATE         reduce using rule 42 (estatuto -> escritura .)
    PROTECTED       reduce using rule 42 (estatuto -> escritura .)
    ID              reduce using rule 42 (estatuto -> escritura .)
    PRINT           reduce using rule 42 (estatuto -> escritura .)
    READ            reduce using rule 42 (estatuto -> escritura .)
    RBRACE          reduce using rule 42 (estatuto -> escritura .)
    RETURN          reduce using rule 42 (estatuto -> escritura .)


state 26

    (43) estatuto -> llamada_func .

    VAR             reduce using rule 43 (estatuto -> llamada_func .)
    PUBLIC          reduce using rule 43 (estatuto -> llamada_func .)
    IF              reduce using rule 43 (estatuto -> llamada_func .)
    WHILE           reduce using rule 43 (estatuto -> llamada_func .)
    PRIVATE         reduce using rule 43 (estatuto -> llamada_func .)
    PROTECTED       reduce using rule 43 (estatuto -> llamada_func .)
    ID              reduce using rule 43 (estatuto -> llamada_func .)
    PRINT           reduce using rule 43 (estatuto -> llamada_func .)
    READ            reduce using rule 43 (estatuto -> llamada_func .)
    RBRACE          reduce using rule 43 (estatuto -> llamada_func .)
    RETURN          reduce using rule 43 (estatuto -> llamada_func .)


state 27

    (44) estatuto -> objeto_metodo .

    VAR             reduce using rule 44 (estatuto -> objeto_metodo .)
    PUBLIC          reduce using rule 44 (estatuto -> objeto_metodo .)
    IF              reduce using rule 44 (estatuto -> objeto_metodo .)
    WHILE           reduce using rule 44 (estatuto -> objeto_metodo .)
    PRIVATE         reduce using rule 44 (estatuto -> objeto_metodo .)
    PROTECTED       reduce using rule 44 (estatuto -> objeto_metodo .)
    ID              reduce using rule 44 (estatuto -> objeto_metodo .)
    PRINT           reduce using rule 44 (estatuto -> objeto_metodo .)
    READ            reduce using rule 44 (estatuto -> objeto_metodo .)
    RBRACE          reduce using rule 44 (estatuto -> objeto_metodo .)
    RETURN          reduce using rule 44 (estatuto -> objeto_metodo .)


state 28

    (45) estatuto -> lectura .

    VAR             reduce using rule 45 (estatuto -> lectura .)
    PUBLIC          reduce using rule 45 (estatuto -> lectura .)
    IF              reduce using rule 45 (estatuto -> lectura .)
    WHILE           reduce using rule 45 (estatuto -> lectura .)
    PRIVATE         reduce using rule 45 (estatuto -> lectura .)
    PROTECTED       reduce using rule 45 (estatuto -> lectura .)
    ID              reduce using rule 45 (estatuto -> lectura .)
    PRINT           reduce using rule 45 (estatuto -> lectura .)
    READ            reduce using rule 45 (estatuto -> lectura .)
    RBRACE          reduce using rule 45 (estatuto -> lectura .)
    RETURN          reduce using rule 45 (estatuto -> lectura .)


state 29

    (18) condicion -> IF . LPAREN expresion RPAREN bloque
    (19) condicion -> IF . LPAREN expresion RPAREN bloque elif
    (20) condicion -> IF . LPAREN expresion RPAREN bloque elif else

    LPAREN          shift and go to state 50


state 30

    (24) ciclo -> WHILE . LPAREN expresion RPAREN bloque

    LPAREN          shift and go to state 51


state 31

    (74) asignacion -> objeto_aAcceso . EQUALS expresion
    (75) asignacion -> objeto_aAcceso . EQUALS llamada_func
    (76) asignacion -> objeto_aAcceso . EQUALS objeto_metodo
    (80) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET EQUALS expresion
    (81) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET EQUALS llamada_func
    (82) asignacion -> objeto_aAcceso . LBRACKET exp RBRACKET EQUALS objeto_metodo
    (86) asignacion -> objeto_aAcceso . LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (87) asignacion -> objeto_aAcceso . LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (88) asignacion -> objeto_aAcceso . LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo

    EQUALS          shift and go to state 52
    LBRACKET        shift and go to state 53


state 32

    (51) escritura -> PRINT . LPAREN aux3 RPAREN

    LPAREN          shift and go to state 54


state 33

    (46) lectura -> READ . LPAREN aux4 RPAREN

    LPAREN          shift and go to state 55


state 34

    (3) class -> scope CLASS ID .
    (4) class -> scope CLASS ID . COLON ID

    LBRACE          reduce using rule 3 (class -> scope CLASS ID .)
    COLON           shift and go to state 56


state 35

    (5) context -> LBRACE aux6 RBRACE .

    $end            reduce using rule 5 (context -> LBRACE aux6 RBRACE .)


state 36

    (12) aux6 -> vars aux6 .

    RBRACE          reduce using rule 12 (aux6 -> vars aux6 .)


state 37

    (13) aux6 -> constructor aux6 .

    RBRACE          reduce using rule 13 (aux6 -> constructor aux6 .)


state 38

    (14) aux6 -> funcion aux6 .

    RBRACE          reduce using rule 14 (aux6 -> funcion aux6 .)


state 39

    (15) aux6 -> estatuto aux6 .

    RBRACE          reduce using rule 15 (aux6 -> estatuto aux6 .)


state 40

    (16) aux6 -> condicion aux6 .

    RBRACE          reduce using rule 16 (aux6 -> condicion aux6 .)


state 41

    (17) aux6 -> ciclo aux6 .

    RBRACE          reduce using rule 17 (aux6 -> ciclo aux6 .)


state 42

    (60) vars -> VAR aux2 . COLON tipo_simple
    (61) vars -> VAR aux2 . COLON tipo_compuesto

    COLON           shift and go to state 57


state 43

    (62) vars -> VAR ID . LBRACKET cint RBRACKET COLON tipo_simple
    (63) vars -> VAR ID . LBRACKET cint RBRACKET COLON tipo_compuesto
    (64) vars -> VAR ID . LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> VAR ID . LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (66) aux2 -> ID .
    (67) aux2 -> ID . COMMA aux2

    LBRACKET        shift and go to state 58
    COLON           reduce using rule 66 (aux2 -> ID .)
    COMMA           shift and go to state 59


state 44

    (71) asignacion -> ID EQUALS . expresion
    (72) asignacion -> ID EQUALS . llamada_func
    (73) asignacion -> ID EQUALS . objeto_metodo
    (93) expresion -> . exp_bool
    (94) expresion -> . exp_bool rel_op exp_bool
    (95) expresion -> . exp_bool AND expresion
    (96) expresion -> . exp_bool OR expresion
    (97) expresion -> . exp_bool rel_op exp_bool AND expresion
    (98) expresion -> . exp_bool rel_op exp_bool OR expresion
    (90) llamada_func -> . ID LPAREN aux RPAREN
    (89) objeto_metodo -> . ID PERIOD llamada_func
    (99) exp_bool -> . TRUE
    (100) exp_bool -> . FALSE
    (101) exp_bool -> . exp
    (102) exp -> . termino
    (103) exp -> . exp PLUS termino
    (104) exp -> . exp MINUS termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    ID              shift and go to state 60
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    expresion                      shift and go to state 61
    llamada_func                   shift and go to state 62
    objeto_metodo                  shift and go to state 63
    exp_bool                       shift and go to state 64
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 45

    (77) asignacion -> ID LBRACKET . exp RBRACKET EQUALS expresion
    (78) asignacion -> ID LBRACKET . exp RBRACKET EQUALS llamada_func
    (79) asignacion -> ID LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (83) asignacion -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (85) asignacion -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (102) exp -> . termino
    (103) exp -> . exp PLUS termino
    (104) exp -> . exp MINUS termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    exp                            shift and go to state 80
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 46

    (90) llamada_func -> ID LPAREN . aux RPAREN
    (91) aux -> . exp
    (92) aux -> . exp COMMA aux
    (102) exp -> . termino
    (103) exp -> . exp PLUS termino
    (104) exp -> . exp MINUS termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    aux                            shift and go to state 81
    exp                            shift and go to state 82
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 47

    (89) objeto_metodo -> ID PERIOD . llamada_func
    (127) objeto_aAcceso -> ID PERIOD . ID
    (90) llamada_func -> . ID LPAREN aux RPAREN

    ID              shift and go to state 83

    llamada_func                   shift and go to state 84

state 48

    (25) constructor -> PUBLIC ID . LPAREN param RPAREN bloque

    LPAREN          shift and go to state 85


state 49

    (27) funcion -> scope DEF . ID LPAREN param RPAREN contexto_func

    ID              shift and go to state 86


state 50

    (18) condicion -> IF LPAREN . expresion RPAREN bloque
    (19) condicion -> IF LPAREN . expresion RPAREN bloque elif
    (20) condicion -> IF LPAREN . expresion RPAREN bloque elif else
    (93) expresion -> . exp_bool
    (94) expresion -> . exp_bool rel_op exp_bool
    (95) expresion -> . exp_bool AND expresion
    (96) expresion -> . exp_bool OR expresion
    (97) expresion -> . exp_bool rel_op exp_bool AND expresion
    (98) expresion -> . exp_bool rel_op exp_bool OR expresion
    (99) exp_bool -> . TRUE
    (100) exp_bool -> . FALSE
    (101) exp_bool -> . exp
    (102) exp -> . termino
    (103) exp -> . exp PLUS termino
    (104) exp -> . exp MINUS termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    expresion                      shift and go to state 87
    exp_bool                       shift and go to state 64
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 51

    (24) ciclo -> WHILE LPAREN . expresion RPAREN bloque
    (93) expresion -> . exp_bool
    (94) expresion -> . exp_bool rel_op exp_bool
    (95) expresion -> . exp_bool AND expresion
    (96) expresion -> . exp_bool OR expresion
    (97) expresion -> . exp_bool rel_op exp_bool AND expresion
    (98) expresion -> . exp_bool rel_op exp_bool OR expresion
    (99) exp_bool -> . TRUE
    (100) exp_bool -> . FALSE
    (101) exp_bool -> . exp
    (102) exp -> . termino
    (103) exp -> . exp PLUS termino
    (104) exp -> . exp MINUS termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    expresion                      shift and go to state 88
    exp_bool                       shift and go to state 64
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 52

    (74) asignacion -> objeto_aAcceso EQUALS . expresion
    (75) asignacion -> objeto_aAcceso EQUALS . llamada_func
    (76) asignacion -> objeto_aAcceso EQUALS . objeto_metodo
    (93) expresion -> . exp_bool
    (94) expresion -> . exp_bool rel_op exp_bool
    (95) expresion -> . exp_bool AND expresion
    (96) expresion -> . exp_bool OR expresion
    (97) expresion -> . exp_bool rel_op exp_bool AND expresion
    (98) expresion -> . exp_bool rel_op exp_bool OR expresion
    (90) llamada_func -> . ID LPAREN aux RPAREN
    (89) objeto_metodo -> . ID PERIOD llamada_func
    (99) exp_bool -> . TRUE
    (100) exp_bool -> . FALSE
    (101) exp_bool -> . exp
    (102) exp -> . termino
    (103) exp -> . exp PLUS termino
    (104) exp -> . exp MINUS termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    ID              shift and go to state 60
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    objeto_aAcceso                 shift and go to state 73
    expresion                      shift and go to state 89
    llamada_func                   shift and go to state 90
    objeto_metodo                  shift and go to state 91
    exp_bool                       shift and go to state 64
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 53

    (80) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET EQUALS expresion
    (81) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET EQUALS llamada_func
    (82) asignacion -> objeto_aAcceso LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (86) asignacion -> objeto_aAcceso LBRACKET . LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (87) asignacion -> objeto_aAcceso LBRACKET . LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (88) asignacion -> objeto_aAcceso LBRACKET . LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (102) exp -> . termino
    (103) exp -> . exp PLUS termino
    (104) exp -> . exp MINUS termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    LBRACKET        shift and go to state 92
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    objeto_aAcceso                 shift and go to state 73
    exp                            shift and go to state 93
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 54

    (51) escritura -> PRINT LPAREN . aux3 RPAREN
    (52) aux3 -> . expresion
    (53) aux3 -> . llamada_func
    (54) aux3 -> . objeto_metodo
    (55) aux3 -> . CSTRING
    (56) aux3 -> . expresion COMMA aux3
    (57) aux3 -> . llamada_func COMMA aux3
    (58) aux3 -> . objeto_metodo COMMA aux3
    (59) aux3 -> . CSTRING COMMA aux3
    (93) expresion -> . exp_bool
    (94) expresion -> . exp_bool rel_op exp_bool
    (95) expresion -> . exp_bool AND expresion
    (96) expresion -> . exp_bool OR expresion
    (97) expresion -> . exp_bool rel_op exp_bool AND expresion
    (98) expresion -> . exp_bool rel_op exp_bool OR expresion
    (90) llamada_func -> . ID LPAREN aux RPAREN
    (89) objeto_metodo -> . ID PERIOD llamada_func
    (99) exp_bool -> . TRUE
    (100) exp_bool -> . FALSE
    (101) exp_bool -> . exp
    (102) exp -> . termino
    (103) exp -> . exp PLUS termino
    (104) exp -> . exp MINUS termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    CSTRING         shift and go to state 98
    ID              shift and go to state 60
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    aux3                           shift and go to state 94
    expresion                      shift and go to state 95
    llamada_func                   shift and go to state 96
    objeto_metodo                  shift and go to state 97
    exp_bool                       shift and go to state 64
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 55

    (46) lectura -> READ LPAREN . aux4 RPAREN
    (47) aux4 -> . ID
    (48) aux4 -> . objeto_aAcceso
    (49) aux4 -> . ID COMMA aux4
    (50) aux4 -> . objeto_aAcceso COMMA aux4
    (127) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 100

    aux4                           shift and go to state 99
    objeto_aAcceso                 shift and go to state 101

state 56

    (4) class -> scope CLASS ID COLON . ID

    ID              shift and go to state 102


state 57

    (60) vars -> VAR aux2 COLON . tipo_simple
    (61) vars -> VAR aux2 COLON . tipo_compuesto
    (68) tipo_simple -> . INT
    (69) tipo_simple -> . FLOAT
    (70) tipo_compuesto -> . ID

    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    ID              shift and go to state 107

    tipo_simple                    shift and go to state 103
    tipo_compuesto                 shift and go to state 104

state 58

    (62) vars -> VAR ID LBRACKET . cint RBRACKET COLON tipo_simple
    (63) vars -> VAR ID LBRACKET . cint RBRACKET COLON tipo_compuesto
    (64) vars -> VAR ID LBRACKET . cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> VAR ID LBRACKET . cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (119) cint -> . CINT

    CINT            shift and go to state 77

    cint                           shift and go to state 108

state 59

    (67) aux2 -> ID COMMA . aux2
    (66) aux2 -> . ID
    (67) aux2 -> . ID COMMA aux2

    ID              shift and go to state 109

    aux2                           shift and go to state 110

state 60

    (90) llamada_func -> ID . LPAREN aux RPAREN
    (89) objeto_metodo -> ID . PERIOD llamada_func
    (116) var -> ID .
    (127) objeto_aAcceso -> ID . PERIOD ID

    LPAREN          shift and go to state 46
    PERIOD          shift and go to state 47
    TIMES           reduce using rule 116 (var -> ID .)
    DIVIDE          reduce using rule 116 (var -> ID .)
    MODULO          reduce using rule 116 (var -> ID .)
    PLUS            reduce using rule 116 (var -> ID .)
    MINUS           reduce using rule 116 (var -> ID .)
    AND             reduce using rule 116 (var -> ID .)
    OR              reduce using rule 116 (var -> ID .)
    LT              reduce using rule 116 (var -> ID .)
    LE              reduce using rule 116 (var -> ID .)
    GT              reduce using rule 116 (var -> ID .)
    GE              reduce using rule 116 (var -> ID .)
    EQ              reduce using rule 116 (var -> ID .)
    NE              reduce using rule 116 (var -> ID .)
    VAR             reduce using rule 116 (var -> ID .)
    PUBLIC          reduce using rule 116 (var -> ID .)
    IF              reduce using rule 116 (var -> ID .)
    WHILE           reduce using rule 116 (var -> ID .)
    PRIVATE         reduce using rule 116 (var -> ID .)
    PROTECTED       reduce using rule 116 (var -> ID .)
    ID              reduce using rule 116 (var -> ID .)
    PRINT           reduce using rule 116 (var -> ID .)
    READ            reduce using rule 116 (var -> ID .)
    RBRACE          reduce using rule 116 (var -> ID .)
    RETURN          reduce using rule 116 (var -> ID .)
    COMMA           reduce using rule 116 (var -> ID .)
    RPAREN          reduce using rule 116 (var -> ID .)


state 61

    (71) asignacion -> ID EQUALS expresion .

    VAR             reduce using rule 71 (asignacion -> ID EQUALS expresion .)
    PUBLIC          reduce using rule 71 (asignacion -> ID EQUALS expresion .)
    IF              reduce using rule 71 (asignacion -> ID EQUALS expresion .)
    WHILE           reduce using rule 71 (asignacion -> ID EQUALS expresion .)
    PRIVATE         reduce using rule 71 (asignacion -> ID EQUALS expresion .)
    PROTECTED       reduce using rule 71 (asignacion -> ID EQUALS expresion .)
    ID              reduce using rule 71 (asignacion -> ID EQUALS expresion .)
    PRINT           reduce using rule 71 (asignacion -> ID EQUALS expresion .)
    READ            reduce using rule 71 (asignacion -> ID EQUALS expresion .)
    RBRACE          reduce using rule 71 (asignacion -> ID EQUALS expresion .)
    RETURN          reduce using rule 71 (asignacion -> ID EQUALS expresion .)


state 62

    (72) asignacion -> ID EQUALS llamada_func .

    VAR             reduce using rule 72 (asignacion -> ID EQUALS llamada_func .)
    PUBLIC          reduce using rule 72 (asignacion -> ID EQUALS llamada_func .)
    IF              reduce using rule 72 (asignacion -> ID EQUALS llamada_func .)
    WHILE           reduce using rule 72 (asignacion -> ID EQUALS llamada_func .)
    PRIVATE         reduce using rule 72 (asignacion -> ID EQUALS llamada_func .)
    PROTECTED       reduce using rule 72 (asignacion -> ID EQUALS llamada_func .)
    ID              reduce using rule 72 (asignacion -> ID EQUALS llamada_func .)
    PRINT           reduce using rule 72 (asignacion -> ID EQUALS llamada_func .)
    READ            reduce using rule 72 (asignacion -> ID EQUALS llamada_func .)
    RBRACE          reduce using rule 72 (asignacion -> ID EQUALS llamada_func .)
    RETURN          reduce using rule 72 (asignacion -> ID EQUALS llamada_func .)


state 63

    (73) asignacion -> ID EQUALS objeto_metodo .

    VAR             reduce using rule 73 (asignacion -> ID EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 73 (asignacion -> ID EQUALS objeto_metodo .)
    IF              reduce using rule 73 (asignacion -> ID EQUALS objeto_metodo .)
    WHILE           reduce using rule 73 (asignacion -> ID EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 73 (asignacion -> ID EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 73 (asignacion -> ID EQUALS objeto_metodo .)
    ID              reduce using rule 73 (asignacion -> ID EQUALS objeto_metodo .)
    PRINT           reduce using rule 73 (asignacion -> ID EQUALS objeto_metodo .)
    READ            reduce using rule 73 (asignacion -> ID EQUALS objeto_metodo .)
    RBRACE          reduce using rule 73 (asignacion -> ID EQUALS objeto_metodo .)
    RETURN          reduce using rule 73 (asignacion -> ID EQUALS objeto_metodo .)


state 64

    (93) expresion -> exp_bool .
    (94) expresion -> exp_bool . rel_op exp_bool
    (95) expresion -> exp_bool . AND expresion
    (96) expresion -> exp_bool . OR expresion
    (97) expresion -> exp_bool . rel_op exp_bool AND expresion
    (98) expresion -> exp_bool . rel_op exp_bool OR expresion
    (121) rel_op -> . LT
    (122) rel_op -> . LE
    (123) rel_op -> . GT
    (124) rel_op -> . GE
    (125) rel_op -> . EQ
    (126) rel_op -> . NE

    VAR             reduce using rule 93 (expresion -> exp_bool .)
    PUBLIC          reduce using rule 93 (expresion -> exp_bool .)
    IF              reduce using rule 93 (expresion -> exp_bool .)
    WHILE           reduce using rule 93 (expresion -> exp_bool .)
    PRIVATE         reduce using rule 93 (expresion -> exp_bool .)
    PROTECTED       reduce using rule 93 (expresion -> exp_bool .)
    ID              reduce using rule 93 (expresion -> exp_bool .)
    PRINT           reduce using rule 93 (expresion -> exp_bool .)
    READ            reduce using rule 93 (expresion -> exp_bool .)
    RBRACE          reduce using rule 93 (expresion -> exp_bool .)
    RETURN          reduce using rule 93 (expresion -> exp_bool .)
    RPAREN          reduce using rule 93 (expresion -> exp_bool .)
    COMMA           reduce using rule 93 (expresion -> exp_bool .)
    AND             shift and go to state 112
    OR              shift and go to state 113
    LT              shift and go to state 114
    LE              shift and go to state 115
    GT              shift and go to state 116
    GE              shift and go to state 117
    EQ              shift and go to state 118
    NE              shift and go to state 119

    rel_op                         shift and go to state 111

state 65

    (109) factor -> LPAREN . expresion RPAREN
    (93) expresion -> . exp_bool
    (94) expresion -> . exp_bool rel_op exp_bool
    (95) expresion -> . exp_bool AND expresion
    (96) expresion -> . exp_bool OR expresion
    (97) expresion -> . exp_bool rel_op exp_bool AND expresion
    (98) expresion -> . exp_bool rel_op exp_bool OR expresion
    (99) exp_bool -> . TRUE
    (100) exp_bool -> . FALSE
    (101) exp_bool -> . exp
    (102) exp -> . termino
    (103) exp -> . exp PLUS termino
    (104) exp -> . exp MINUS termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    expresion                      shift and go to state 120
    exp_bool                       shift and go to state 64
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 66

    (99) exp_bool -> TRUE .

    AND             reduce using rule 99 (exp_bool -> TRUE .)
    OR              reduce using rule 99 (exp_bool -> TRUE .)
    LT              reduce using rule 99 (exp_bool -> TRUE .)
    LE              reduce using rule 99 (exp_bool -> TRUE .)
    GT              reduce using rule 99 (exp_bool -> TRUE .)
    GE              reduce using rule 99 (exp_bool -> TRUE .)
    EQ              reduce using rule 99 (exp_bool -> TRUE .)
    NE              reduce using rule 99 (exp_bool -> TRUE .)
    VAR             reduce using rule 99 (exp_bool -> TRUE .)
    PUBLIC          reduce using rule 99 (exp_bool -> TRUE .)
    IF              reduce using rule 99 (exp_bool -> TRUE .)
    WHILE           reduce using rule 99 (exp_bool -> TRUE .)
    PRIVATE         reduce using rule 99 (exp_bool -> TRUE .)
    PROTECTED       reduce using rule 99 (exp_bool -> TRUE .)
    ID              reduce using rule 99 (exp_bool -> TRUE .)
    PRINT           reduce using rule 99 (exp_bool -> TRUE .)
    READ            reduce using rule 99 (exp_bool -> TRUE .)
    RBRACE          reduce using rule 99 (exp_bool -> TRUE .)
    RETURN          reduce using rule 99 (exp_bool -> TRUE .)
    RPAREN          reduce using rule 99 (exp_bool -> TRUE .)
    COMMA           reduce using rule 99 (exp_bool -> TRUE .)


state 67

    (100) exp_bool -> FALSE .

    AND             reduce using rule 100 (exp_bool -> FALSE .)
    OR              reduce using rule 100 (exp_bool -> FALSE .)
    LT              reduce using rule 100 (exp_bool -> FALSE .)
    LE              reduce using rule 100 (exp_bool -> FALSE .)
    GT              reduce using rule 100 (exp_bool -> FALSE .)
    GE              reduce using rule 100 (exp_bool -> FALSE .)
    EQ              reduce using rule 100 (exp_bool -> FALSE .)
    NE              reduce using rule 100 (exp_bool -> FALSE .)
    VAR             reduce using rule 100 (exp_bool -> FALSE .)
    PUBLIC          reduce using rule 100 (exp_bool -> FALSE .)
    IF              reduce using rule 100 (exp_bool -> FALSE .)
    WHILE           reduce using rule 100 (exp_bool -> FALSE .)
    PRIVATE         reduce using rule 100 (exp_bool -> FALSE .)
    PROTECTED       reduce using rule 100 (exp_bool -> FALSE .)
    ID              reduce using rule 100 (exp_bool -> FALSE .)
    PRINT           reduce using rule 100 (exp_bool -> FALSE .)
    READ            reduce using rule 100 (exp_bool -> FALSE .)
    RBRACE          reduce using rule 100 (exp_bool -> FALSE .)
    RETURN          reduce using rule 100 (exp_bool -> FALSE .)
    RPAREN          reduce using rule 100 (exp_bool -> FALSE .)
    COMMA           reduce using rule 100 (exp_bool -> FALSE .)


state 68

    (101) exp_bool -> exp .
    (103) exp -> exp . PLUS termino
    (104) exp -> exp . MINUS termino

    AND             reduce using rule 101 (exp_bool -> exp .)
    OR              reduce using rule 101 (exp_bool -> exp .)
    LT              reduce using rule 101 (exp_bool -> exp .)
    LE              reduce using rule 101 (exp_bool -> exp .)
    GT              reduce using rule 101 (exp_bool -> exp .)
    GE              reduce using rule 101 (exp_bool -> exp .)
    EQ              reduce using rule 101 (exp_bool -> exp .)
    NE              reduce using rule 101 (exp_bool -> exp .)
    VAR             reduce using rule 101 (exp_bool -> exp .)
    PUBLIC          reduce using rule 101 (exp_bool -> exp .)
    IF              reduce using rule 101 (exp_bool -> exp .)
    WHILE           reduce using rule 101 (exp_bool -> exp .)
    PRIVATE         reduce using rule 101 (exp_bool -> exp .)
    PROTECTED       reduce using rule 101 (exp_bool -> exp .)
    ID              reduce using rule 101 (exp_bool -> exp .)
    PRINT           reduce using rule 101 (exp_bool -> exp .)
    READ            reduce using rule 101 (exp_bool -> exp .)
    RBRACE          reduce using rule 101 (exp_bool -> exp .)
    RETURN          reduce using rule 101 (exp_bool -> exp .)
    RPAREN          reduce using rule 101 (exp_bool -> exp .)
    COMMA           reduce using rule 101 (exp_bool -> exp .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122


state 69

    (102) exp -> termino .
    (106) termino -> termino . TIMES factor
    (107) termino -> termino . DIVIDE factor
    (108) termino -> termino . MODULO factor

    PLUS            reduce using rule 102 (exp -> termino .)
    MINUS           reduce using rule 102 (exp -> termino .)
    AND             reduce using rule 102 (exp -> termino .)
    OR              reduce using rule 102 (exp -> termino .)
    LT              reduce using rule 102 (exp -> termino .)
    LE              reduce using rule 102 (exp -> termino .)
    GT              reduce using rule 102 (exp -> termino .)
    GE              reduce using rule 102 (exp -> termino .)
    EQ              reduce using rule 102 (exp -> termino .)
    NE              reduce using rule 102 (exp -> termino .)
    VAR             reduce using rule 102 (exp -> termino .)
    PUBLIC          reduce using rule 102 (exp -> termino .)
    IF              reduce using rule 102 (exp -> termino .)
    WHILE           reduce using rule 102 (exp -> termino .)
    PRIVATE         reduce using rule 102 (exp -> termino .)
    PROTECTED       reduce using rule 102 (exp -> termino .)
    ID              reduce using rule 102 (exp -> termino .)
    PRINT           reduce using rule 102 (exp -> termino .)
    READ            reduce using rule 102 (exp -> termino .)
    RBRACE          reduce using rule 102 (exp -> termino .)
    RETURN          reduce using rule 102 (exp -> termino .)
    RBRACKET        reduce using rule 102 (exp -> termino .)
    COMMA           reduce using rule 102 (exp -> termino .)
    RPAREN          reduce using rule 102 (exp -> termino .)
    TIMES           shift and go to state 123
    DIVIDE          shift and go to state 124
    MODULO          shift and go to state 125


state 70

    (110) factor -> PLUS . objeto_aAcceso
    (112) factor -> PLUS . var
    (127) objeto_aAcceso -> . ID PERIOD ID
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    ID              shift and go to state 128
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    objeto_aAcceso                 shift and go to state 126
    var                            shift and go to state 127
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 71

    (111) factor -> MINUS . objeto_aAcceso
    (113) factor -> MINUS . var
    (127) objeto_aAcceso -> . ID PERIOD ID
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    ID              shift and go to state 128
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    objeto_aAcceso                 shift and go to state 129
    var                            shift and go to state 130
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 72

    (105) termino -> factor .

    TIMES           reduce using rule 105 (termino -> factor .)
    DIVIDE          reduce using rule 105 (termino -> factor .)
    MODULO          reduce using rule 105 (termino -> factor .)
    PLUS            reduce using rule 105 (termino -> factor .)
    MINUS           reduce using rule 105 (termino -> factor .)
    AND             reduce using rule 105 (termino -> factor .)
    OR              reduce using rule 105 (termino -> factor .)
    LT              reduce using rule 105 (termino -> factor .)
    LE              reduce using rule 105 (termino -> factor .)
    GT              reduce using rule 105 (termino -> factor .)
    GE              reduce using rule 105 (termino -> factor .)
    EQ              reduce using rule 105 (termino -> factor .)
    NE              reduce using rule 105 (termino -> factor .)
    VAR             reduce using rule 105 (termino -> factor .)
    PUBLIC          reduce using rule 105 (termino -> factor .)
    IF              reduce using rule 105 (termino -> factor .)
    WHILE           reduce using rule 105 (termino -> factor .)
    PRIVATE         reduce using rule 105 (termino -> factor .)
    PROTECTED       reduce using rule 105 (termino -> factor .)
    ID              reduce using rule 105 (termino -> factor .)
    PRINT           reduce using rule 105 (termino -> factor .)
    READ            reduce using rule 105 (termino -> factor .)
    RBRACE          reduce using rule 105 (termino -> factor .)
    RETURN          reduce using rule 105 (termino -> factor .)
    RBRACKET        reduce using rule 105 (termino -> factor .)
    COMMA           reduce using rule 105 (termino -> factor .)
    RPAREN          reduce using rule 105 (termino -> factor .)


state 73

    (115) factor -> objeto_aAcceso .

    TIMES           reduce using rule 115 (factor -> objeto_aAcceso .)
    DIVIDE          reduce using rule 115 (factor -> objeto_aAcceso .)
    MODULO          reduce using rule 115 (factor -> objeto_aAcceso .)
    PLUS            reduce using rule 115 (factor -> objeto_aAcceso .)
    MINUS           reduce using rule 115 (factor -> objeto_aAcceso .)
    AND             reduce using rule 115 (factor -> objeto_aAcceso .)
    OR              reduce using rule 115 (factor -> objeto_aAcceso .)
    LT              reduce using rule 115 (factor -> objeto_aAcceso .)
    LE              reduce using rule 115 (factor -> objeto_aAcceso .)
    GT              reduce using rule 115 (factor -> objeto_aAcceso .)
    GE              reduce using rule 115 (factor -> objeto_aAcceso .)
    EQ              reduce using rule 115 (factor -> objeto_aAcceso .)
    NE              reduce using rule 115 (factor -> objeto_aAcceso .)
    VAR             reduce using rule 115 (factor -> objeto_aAcceso .)
    PUBLIC          reduce using rule 115 (factor -> objeto_aAcceso .)
    IF              reduce using rule 115 (factor -> objeto_aAcceso .)
    WHILE           reduce using rule 115 (factor -> objeto_aAcceso .)
    PRIVATE         reduce using rule 115 (factor -> objeto_aAcceso .)
    PROTECTED       reduce using rule 115 (factor -> objeto_aAcceso .)
    ID              reduce using rule 115 (factor -> objeto_aAcceso .)
    PRINT           reduce using rule 115 (factor -> objeto_aAcceso .)
    READ            reduce using rule 115 (factor -> objeto_aAcceso .)
    RBRACE          reduce using rule 115 (factor -> objeto_aAcceso .)
    RETURN          reduce using rule 115 (factor -> objeto_aAcceso .)
    RBRACKET        reduce using rule 115 (factor -> objeto_aAcceso .)
    COMMA           reduce using rule 115 (factor -> objeto_aAcceso .)
    RPAREN          reduce using rule 115 (factor -> objeto_aAcceso .)


state 74

    (114) factor -> var .

    TIMES           reduce using rule 114 (factor -> var .)
    DIVIDE          reduce using rule 114 (factor -> var .)
    MODULO          reduce using rule 114 (factor -> var .)
    PLUS            reduce using rule 114 (factor -> var .)
    MINUS           reduce using rule 114 (factor -> var .)
    AND             reduce using rule 114 (factor -> var .)
    OR              reduce using rule 114 (factor -> var .)
    LT              reduce using rule 114 (factor -> var .)
    LE              reduce using rule 114 (factor -> var .)
    GT              reduce using rule 114 (factor -> var .)
    GE              reduce using rule 114 (factor -> var .)
    EQ              reduce using rule 114 (factor -> var .)
    NE              reduce using rule 114 (factor -> var .)
    VAR             reduce using rule 114 (factor -> var .)
    PUBLIC          reduce using rule 114 (factor -> var .)
    IF              reduce using rule 114 (factor -> var .)
    WHILE           reduce using rule 114 (factor -> var .)
    PRIVATE         reduce using rule 114 (factor -> var .)
    PROTECTED       reduce using rule 114 (factor -> var .)
    ID              reduce using rule 114 (factor -> var .)
    PRINT           reduce using rule 114 (factor -> var .)
    READ            reduce using rule 114 (factor -> var .)
    RBRACE          reduce using rule 114 (factor -> var .)
    RETURN          reduce using rule 114 (factor -> var .)
    RBRACKET        reduce using rule 114 (factor -> var .)
    COMMA           reduce using rule 114 (factor -> var .)
    RPAREN          reduce using rule 114 (factor -> var .)


state 75

    (117) var -> cint .

    TIMES           reduce using rule 117 (var -> cint .)
    DIVIDE          reduce using rule 117 (var -> cint .)
    MODULO          reduce using rule 117 (var -> cint .)
    PLUS            reduce using rule 117 (var -> cint .)
    MINUS           reduce using rule 117 (var -> cint .)
    AND             reduce using rule 117 (var -> cint .)
    OR              reduce using rule 117 (var -> cint .)
    LT              reduce using rule 117 (var -> cint .)
    LE              reduce using rule 117 (var -> cint .)
    GT              reduce using rule 117 (var -> cint .)
    GE              reduce using rule 117 (var -> cint .)
    EQ              reduce using rule 117 (var -> cint .)
    NE              reduce using rule 117 (var -> cint .)
    VAR             reduce using rule 117 (var -> cint .)
    PUBLIC          reduce using rule 117 (var -> cint .)
    IF              reduce using rule 117 (var -> cint .)
    WHILE           reduce using rule 117 (var -> cint .)
    PRIVATE         reduce using rule 117 (var -> cint .)
    PROTECTED       reduce using rule 117 (var -> cint .)
    ID              reduce using rule 117 (var -> cint .)
    PRINT           reduce using rule 117 (var -> cint .)
    READ            reduce using rule 117 (var -> cint .)
    RBRACE          reduce using rule 117 (var -> cint .)
    RETURN          reduce using rule 117 (var -> cint .)
    RBRACKET        reduce using rule 117 (var -> cint .)
    COMMA           reduce using rule 117 (var -> cint .)
    RPAREN          reduce using rule 117 (var -> cint .)


state 76

    (118) var -> cfloat .

    TIMES           reduce using rule 118 (var -> cfloat .)
    DIVIDE          reduce using rule 118 (var -> cfloat .)
    MODULO          reduce using rule 118 (var -> cfloat .)
    PLUS            reduce using rule 118 (var -> cfloat .)
    MINUS           reduce using rule 118 (var -> cfloat .)
    AND             reduce using rule 118 (var -> cfloat .)
    OR              reduce using rule 118 (var -> cfloat .)
    LT              reduce using rule 118 (var -> cfloat .)
    LE              reduce using rule 118 (var -> cfloat .)
    GT              reduce using rule 118 (var -> cfloat .)
    GE              reduce using rule 118 (var -> cfloat .)
    EQ              reduce using rule 118 (var -> cfloat .)
    NE              reduce using rule 118 (var -> cfloat .)
    VAR             reduce using rule 118 (var -> cfloat .)
    PUBLIC          reduce using rule 118 (var -> cfloat .)
    IF              reduce using rule 118 (var -> cfloat .)
    WHILE           reduce using rule 118 (var -> cfloat .)
    PRIVATE         reduce using rule 118 (var -> cfloat .)
    PROTECTED       reduce using rule 118 (var -> cfloat .)
    ID              reduce using rule 118 (var -> cfloat .)
    PRINT           reduce using rule 118 (var -> cfloat .)
    READ            reduce using rule 118 (var -> cfloat .)
    RBRACE          reduce using rule 118 (var -> cfloat .)
    RETURN          reduce using rule 118 (var -> cfloat .)
    RBRACKET        reduce using rule 118 (var -> cfloat .)
    COMMA           reduce using rule 118 (var -> cfloat .)
    RPAREN          reduce using rule 118 (var -> cfloat .)


state 77

    (119) cint -> CINT .

    TIMES           reduce using rule 119 (cint -> CINT .)
    DIVIDE          reduce using rule 119 (cint -> CINT .)
    MODULO          reduce using rule 119 (cint -> CINT .)
    PLUS            reduce using rule 119 (cint -> CINT .)
    MINUS           reduce using rule 119 (cint -> CINT .)
    AND             reduce using rule 119 (cint -> CINT .)
    OR              reduce using rule 119 (cint -> CINT .)
    LT              reduce using rule 119 (cint -> CINT .)
    LE              reduce using rule 119 (cint -> CINT .)
    GT              reduce using rule 119 (cint -> CINT .)
    GE              reduce using rule 119 (cint -> CINT .)
    EQ              reduce using rule 119 (cint -> CINT .)
    NE              reduce using rule 119 (cint -> CINT .)
    VAR             reduce using rule 119 (cint -> CINT .)
    PUBLIC          reduce using rule 119 (cint -> CINT .)
    IF              reduce using rule 119 (cint -> CINT .)
    WHILE           reduce using rule 119 (cint -> CINT .)
    PRIVATE         reduce using rule 119 (cint -> CINT .)
    PROTECTED       reduce using rule 119 (cint -> CINT .)
    ID              reduce using rule 119 (cint -> CINT .)
    PRINT           reduce using rule 119 (cint -> CINT .)
    READ            reduce using rule 119 (cint -> CINT .)
    RBRACE          reduce using rule 119 (cint -> CINT .)
    RETURN          reduce using rule 119 (cint -> CINT .)
    RBRACKET        reduce using rule 119 (cint -> CINT .)
    COMMA           reduce using rule 119 (cint -> CINT .)
    RPAREN          reduce using rule 119 (cint -> CINT .)


state 78

    (120) cfloat -> NUMBER .

    TIMES           reduce using rule 120 (cfloat -> NUMBER .)
    DIVIDE          reduce using rule 120 (cfloat -> NUMBER .)
    MODULO          reduce using rule 120 (cfloat -> NUMBER .)
    PLUS            reduce using rule 120 (cfloat -> NUMBER .)
    MINUS           reduce using rule 120 (cfloat -> NUMBER .)
    AND             reduce using rule 120 (cfloat -> NUMBER .)
    OR              reduce using rule 120 (cfloat -> NUMBER .)
    LT              reduce using rule 120 (cfloat -> NUMBER .)
    LE              reduce using rule 120 (cfloat -> NUMBER .)
    GT              reduce using rule 120 (cfloat -> NUMBER .)
    GE              reduce using rule 120 (cfloat -> NUMBER .)
    EQ              reduce using rule 120 (cfloat -> NUMBER .)
    NE              reduce using rule 120 (cfloat -> NUMBER .)
    VAR             reduce using rule 120 (cfloat -> NUMBER .)
    PUBLIC          reduce using rule 120 (cfloat -> NUMBER .)
    IF              reduce using rule 120 (cfloat -> NUMBER .)
    WHILE           reduce using rule 120 (cfloat -> NUMBER .)
    PRIVATE         reduce using rule 120 (cfloat -> NUMBER .)
    PROTECTED       reduce using rule 120 (cfloat -> NUMBER .)
    ID              reduce using rule 120 (cfloat -> NUMBER .)
    PRINT           reduce using rule 120 (cfloat -> NUMBER .)
    READ            reduce using rule 120 (cfloat -> NUMBER .)
    RBRACE          reduce using rule 120 (cfloat -> NUMBER .)
    RETURN          reduce using rule 120 (cfloat -> NUMBER .)
    RBRACKET        reduce using rule 120 (cfloat -> NUMBER .)
    COMMA           reduce using rule 120 (cfloat -> NUMBER .)
    RPAREN          reduce using rule 120 (cfloat -> NUMBER .)


state 79

    (116) var -> ID .
    (127) objeto_aAcceso -> ID . PERIOD ID

    TIMES           reduce using rule 116 (var -> ID .)
    DIVIDE          reduce using rule 116 (var -> ID .)
    MODULO          reduce using rule 116 (var -> ID .)
    RBRACKET        reduce using rule 116 (var -> ID .)
    PLUS            reduce using rule 116 (var -> ID .)
    MINUS           reduce using rule 116 (var -> ID .)
    COMMA           reduce using rule 116 (var -> ID .)
    RPAREN          reduce using rule 116 (var -> ID .)
    AND             reduce using rule 116 (var -> ID .)
    OR              reduce using rule 116 (var -> ID .)
    LT              reduce using rule 116 (var -> ID .)
    LE              reduce using rule 116 (var -> ID .)
    GT              reduce using rule 116 (var -> ID .)
    GE              reduce using rule 116 (var -> ID .)
    EQ              reduce using rule 116 (var -> ID .)
    NE              reduce using rule 116 (var -> ID .)
    VAR             reduce using rule 116 (var -> ID .)
    PUBLIC          reduce using rule 116 (var -> ID .)
    IF              reduce using rule 116 (var -> ID .)
    WHILE           reduce using rule 116 (var -> ID .)
    PRIVATE         reduce using rule 116 (var -> ID .)
    PROTECTED       reduce using rule 116 (var -> ID .)
    ID              reduce using rule 116 (var -> ID .)
    PRINT           reduce using rule 116 (var -> ID .)
    READ            reduce using rule 116 (var -> ID .)
    RBRACE          reduce using rule 116 (var -> ID .)
    RETURN          reduce using rule 116 (var -> ID .)
    PERIOD          shift and go to state 131


state 80

    (77) asignacion -> ID LBRACKET exp . RBRACKET EQUALS expresion
    (78) asignacion -> ID LBRACKET exp . RBRACKET EQUALS llamada_func
    (79) asignacion -> ID LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (83) asignacion -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (85) asignacion -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (103) exp -> exp . PLUS termino
    (104) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 132
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122


state 81

    (90) llamada_func -> ID LPAREN aux . RPAREN

    RPAREN          shift and go to state 133


state 82

    (91) aux -> exp .
    (92) aux -> exp . COMMA aux
    (103) exp -> exp . PLUS termino
    (104) exp -> exp . MINUS termino

    RPAREN          reduce using rule 91 (aux -> exp .)
    COMMA           shift and go to state 134
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122


state 83

    (127) objeto_aAcceso -> ID PERIOD ID .
    (90) llamada_func -> ID . LPAREN aux RPAREN

    EQUALS          reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    LBRACKET        reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    TIMES           reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    DIVIDE          reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    MODULO          reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    PLUS            reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    MINUS           reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    AND             reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    OR              reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    LT              reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    LE              reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    GT              reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    GE              reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    EQ              reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    NE              reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    VAR             reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    PUBLIC          reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    IF              reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    WHILE           reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    PRIVATE         reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    PROTECTED       reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    ID              reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    PRINT           reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    READ            reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACE          reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    RETURN          reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    COMMA           reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    RPAREN          reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    LPAREN          shift and go to state 46


state 84

    (89) objeto_metodo -> ID PERIOD llamada_func .

    VAR             reduce using rule 89 (objeto_metodo -> ID PERIOD llamada_func .)
    PUBLIC          reduce using rule 89 (objeto_metodo -> ID PERIOD llamada_func .)
    IF              reduce using rule 89 (objeto_metodo -> ID PERIOD llamada_func .)
    WHILE           reduce using rule 89 (objeto_metodo -> ID PERIOD llamada_func .)
    PRIVATE         reduce using rule 89 (objeto_metodo -> ID PERIOD llamada_func .)
    PROTECTED       reduce using rule 89 (objeto_metodo -> ID PERIOD llamada_func .)
    ID              reduce using rule 89 (objeto_metodo -> ID PERIOD llamada_func .)
    PRINT           reduce using rule 89 (objeto_metodo -> ID PERIOD llamada_func .)
    READ            reduce using rule 89 (objeto_metodo -> ID PERIOD llamada_func .)
    RBRACE          reduce using rule 89 (objeto_metodo -> ID PERIOD llamada_func .)
    RETURN          reduce using rule 89 (objeto_metodo -> ID PERIOD llamada_func .)
    COMMA           reduce using rule 89 (objeto_metodo -> ID PERIOD llamada_func .)
    RPAREN          reduce using rule 89 (objeto_metodo -> ID PERIOD llamada_func .)


state 85

    (25) constructor -> PUBLIC ID LPAREN . param RPAREN bloque
    (35) param -> .
    (36) param -> . tipo_simple ID
    (37) param -> . tipo_simple ID COMMA param
    (68) tipo_simple -> . INT
    (69) tipo_simple -> . FLOAT

    RPAREN          reduce using rule 35 (param -> .)
    INT             shift and go to state 105
    FLOAT           shift and go to state 106

    param                          shift and go to state 135
    tipo_simple                    shift and go to state 136

state 86

    (27) funcion -> scope DEF ID . LPAREN param RPAREN contexto_func

    LPAREN          shift and go to state 137


state 87

    (18) condicion -> IF LPAREN expresion . RPAREN bloque
    (19) condicion -> IF LPAREN expresion . RPAREN bloque elif
    (20) condicion -> IF LPAREN expresion . RPAREN bloque elif else

    RPAREN          shift and go to state 138


state 88

    (24) ciclo -> WHILE LPAREN expresion . RPAREN bloque

    RPAREN          shift and go to state 139


state 89

    (74) asignacion -> objeto_aAcceso EQUALS expresion .

    VAR             reduce using rule 74 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PUBLIC          reduce using rule 74 (asignacion -> objeto_aAcceso EQUALS expresion .)
    IF              reduce using rule 74 (asignacion -> objeto_aAcceso EQUALS expresion .)
    WHILE           reduce using rule 74 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PRIVATE         reduce using rule 74 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PROTECTED       reduce using rule 74 (asignacion -> objeto_aAcceso EQUALS expresion .)
    ID              reduce using rule 74 (asignacion -> objeto_aAcceso EQUALS expresion .)
    PRINT           reduce using rule 74 (asignacion -> objeto_aAcceso EQUALS expresion .)
    READ            reduce using rule 74 (asignacion -> objeto_aAcceso EQUALS expresion .)
    RBRACE          reduce using rule 74 (asignacion -> objeto_aAcceso EQUALS expresion .)
    RETURN          reduce using rule 74 (asignacion -> objeto_aAcceso EQUALS expresion .)


state 90

    (75) asignacion -> objeto_aAcceso EQUALS llamada_func .

    VAR             reduce using rule 75 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PUBLIC          reduce using rule 75 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    IF              reduce using rule 75 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    WHILE           reduce using rule 75 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PRIVATE         reduce using rule 75 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PROTECTED       reduce using rule 75 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    ID              reduce using rule 75 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    PRINT           reduce using rule 75 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    READ            reduce using rule 75 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    RBRACE          reduce using rule 75 (asignacion -> objeto_aAcceso EQUALS llamada_func .)
    RETURN          reduce using rule 75 (asignacion -> objeto_aAcceso EQUALS llamada_func .)


state 91

    (76) asignacion -> objeto_aAcceso EQUALS objeto_metodo .

    VAR             reduce using rule 76 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 76 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    IF              reduce using rule 76 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    WHILE           reduce using rule 76 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 76 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 76 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    ID              reduce using rule 76 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    PRINT           reduce using rule 76 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    READ            reduce using rule 76 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    RBRACE          reduce using rule 76 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)
    RETURN          reduce using rule 76 (asignacion -> objeto_aAcceso EQUALS objeto_metodo .)


state 92

    (86) asignacion -> objeto_aAcceso LBRACKET LBRACKET . exp RBRACKET exp RBRACKET EQUALS expresion
    (87) asignacion -> objeto_aAcceso LBRACKET LBRACKET . exp RBRACKET exp RBRACKET EQUALS llamada_func
    (88) asignacion -> objeto_aAcceso LBRACKET LBRACKET . exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (102) exp -> . termino
    (103) exp -> . exp PLUS termino
    (104) exp -> . exp MINUS termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    objeto_aAcceso                 shift and go to state 73
    exp                            shift and go to state 140
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 93

    (80) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET EQUALS expresion
    (81) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET EQUALS llamada_func
    (82) asignacion -> objeto_aAcceso LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (103) exp -> exp . PLUS termino
    (104) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 141
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122


state 94

    (51) escritura -> PRINT LPAREN aux3 . RPAREN

    RPAREN          shift and go to state 142


state 95

    (52) aux3 -> expresion .
    (56) aux3 -> expresion . COMMA aux3

    RPAREN          reduce using rule 52 (aux3 -> expresion .)
    COMMA           shift and go to state 143


state 96

    (53) aux3 -> llamada_func .
    (57) aux3 -> llamada_func . COMMA aux3

    RPAREN          reduce using rule 53 (aux3 -> llamada_func .)
    COMMA           shift and go to state 144


state 97

    (54) aux3 -> objeto_metodo .
    (58) aux3 -> objeto_metodo . COMMA aux3

    RPAREN          reduce using rule 54 (aux3 -> objeto_metodo .)
    COMMA           shift and go to state 145


state 98

    (55) aux3 -> CSTRING .
    (59) aux3 -> CSTRING . COMMA aux3

    RPAREN          reduce using rule 55 (aux3 -> CSTRING .)
    COMMA           shift and go to state 146


state 99

    (46) lectura -> READ LPAREN aux4 . RPAREN

    RPAREN          shift and go to state 147


state 100

    (47) aux4 -> ID .
    (49) aux4 -> ID . COMMA aux4
    (127) objeto_aAcceso -> ID . PERIOD ID

    RPAREN          reduce using rule 47 (aux4 -> ID .)
    COMMA           shift and go to state 148
    PERIOD          shift and go to state 131


state 101

    (48) aux4 -> objeto_aAcceso .
    (50) aux4 -> objeto_aAcceso . COMMA aux4

    RPAREN          reduce using rule 48 (aux4 -> objeto_aAcceso .)
    COMMA           shift and go to state 149


state 102

    (4) class -> scope CLASS ID COLON ID .

    LBRACE          reduce using rule 4 (class -> scope CLASS ID COLON ID .)


state 103

    (60) vars -> VAR aux2 COLON tipo_simple .

    VAR             reduce using rule 60 (vars -> VAR aux2 COLON tipo_simple .)
    PUBLIC          reduce using rule 60 (vars -> VAR aux2 COLON tipo_simple .)
    IF              reduce using rule 60 (vars -> VAR aux2 COLON tipo_simple .)
    WHILE           reduce using rule 60 (vars -> VAR aux2 COLON tipo_simple .)
    PRIVATE         reduce using rule 60 (vars -> VAR aux2 COLON tipo_simple .)
    PROTECTED       reduce using rule 60 (vars -> VAR aux2 COLON tipo_simple .)
    ID              reduce using rule 60 (vars -> VAR aux2 COLON tipo_simple .)
    PRINT           reduce using rule 60 (vars -> VAR aux2 COLON tipo_simple .)
    READ            reduce using rule 60 (vars -> VAR aux2 COLON tipo_simple .)
    RBRACE          reduce using rule 60 (vars -> VAR aux2 COLON tipo_simple .)
    RETURN          reduce using rule 60 (vars -> VAR aux2 COLON tipo_simple .)


state 104

    (61) vars -> VAR aux2 COLON tipo_compuesto .

    VAR             reduce using rule 61 (vars -> VAR aux2 COLON tipo_compuesto .)
    PUBLIC          reduce using rule 61 (vars -> VAR aux2 COLON tipo_compuesto .)
    IF              reduce using rule 61 (vars -> VAR aux2 COLON tipo_compuesto .)
    WHILE           reduce using rule 61 (vars -> VAR aux2 COLON tipo_compuesto .)
    PRIVATE         reduce using rule 61 (vars -> VAR aux2 COLON tipo_compuesto .)
    PROTECTED       reduce using rule 61 (vars -> VAR aux2 COLON tipo_compuesto .)
    ID              reduce using rule 61 (vars -> VAR aux2 COLON tipo_compuesto .)
    PRINT           reduce using rule 61 (vars -> VAR aux2 COLON tipo_compuesto .)
    READ            reduce using rule 61 (vars -> VAR aux2 COLON tipo_compuesto .)
    RBRACE          reduce using rule 61 (vars -> VAR aux2 COLON tipo_compuesto .)
    RETURN          reduce using rule 61 (vars -> VAR aux2 COLON tipo_compuesto .)


state 105

    (68) tipo_simple -> INT .

    VAR             reduce using rule 68 (tipo_simple -> INT .)
    PUBLIC          reduce using rule 68 (tipo_simple -> INT .)
    IF              reduce using rule 68 (tipo_simple -> INT .)
    WHILE           reduce using rule 68 (tipo_simple -> INT .)
    PRIVATE         reduce using rule 68 (tipo_simple -> INT .)
    PROTECTED       reduce using rule 68 (tipo_simple -> INT .)
    ID              reduce using rule 68 (tipo_simple -> INT .)
    PRINT           reduce using rule 68 (tipo_simple -> INT .)
    READ            reduce using rule 68 (tipo_simple -> INT .)
    RBRACE          reduce using rule 68 (tipo_simple -> INT .)
    RETURN          reduce using rule 68 (tipo_simple -> INT .)


state 106

    (69) tipo_simple -> FLOAT .

    VAR             reduce using rule 69 (tipo_simple -> FLOAT .)
    PUBLIC          reduce using rule 69 (tipo_simple -> FLOAT .)
    IF              reduce using rule 69 (tipo_simple -> FLOAT .)
    WHILE           reduce using rule 69 (tipo_simple -> FLOAT .)
    PRIVATE         reduce using rule 69 (tipo_simple -> FLOAT .)
    PROTECTED       reduce using rule 69 (tipo_simple -> FLOAT .)
    ID              reduce using rule 69 (tipo_simple -> FLOAT .)
    PRINT           reduce using rule 69 (tipo_simple -> FLOAT .)
    READ            reduce using rule 69 (tipo_simple -> FLOAT .)
    RBRACE          reduce using rule 69 (tipo_simple -> FLOAT .)
    RETURN          reduce using rule 69 (tipo_simple -> FLOAT .)


state 107

    (70) tipo_compuesto -> ID .

    VAR             reduce using rule 70 (tipo_compuesto -> ID .)
    PUBLIC          reduce using rule 70 (tipo_compuesto -> ID .)
    IF              reduce using rule 70 (tipo_compuesto -> ID .)
    WHILE           reduce using rule 70 (tipo_compuesto -> ID .)
    PRIVATE         reduce using rule 70 (tipo_compuesto -> ID .)
    PROTECTED       reduce using rule 70 (tipo_compuesto -> ID .)
    ID              reduce using rule 70 (tipo_compuesto -> ID .)
    PRINT           reduce using rule 70 (tipo_compuesto -> ID .)
    READ            reduce using rule 70 (tipo_compuesto -> ID .)
    RBRACE          reduce using rule 70 (tipo_compuesto -> ID .)
    RETURN          reduce using rule 70 (tipo_compuesto -> ID .)


state 108

    (62) vars -> VAR ID LBRACKET cint . RBRACKET COLON tipo_simple
    (63) vars -> VAR ID LBRACKET cint . RBRACKET COLON tipo_compuesto
    (64) vars -> VAR ID LBRACKET cint . RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> VAR ID LBRACKET cint . RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto

    RBRACKET        shift and go to state 150


state 109

    (66) aux2 -> ID .
    (67) aux2 -> ID . COMMA aux2

    COLON           reduce using rule 66 (aux2 -> ID .)
    COMMA           shift and go to state 59


state 110

    (67) aux2 -> ID COMMA aux2 .

    COLON           reduce using rule 67 (aux2 -> ID COMMA aux2 .)


state 111

    (94) expresion -> exp_bool rel_op . exp_bool
    (97) expresion -> exp_bool rel_op . exp_bool AND expresion
    (98) expresion -> exp_bool rel_op . exp_bool OR expresion
    (99) exp_bool -> . TRUE
    (100) exp_bool -> . FALSE
    (101) exp_bool -> . exp
    (102) exp -> . termino
    (103) exp -> . exp PLUS termino
    (104) exp -> . exp MINUS termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    exp_bool                       shift and go to state 151
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 112

    (95) expresion -> exp_bool AND . expresion
    (93) expresion -> . exp_bool
    (94) expresion -> . exp_bool rel_op exp_bool
    (95) expresion -> . exp_bool AND expresion
    (96) expresion -> . exp_bool OR expresion
    (97) expresion -> . exp_bool rel_op exp_bool AND expresion
    (98) expresion -> . exp_bool rel_op exp_bool OR expresion
    (99) exp_bool -> . TRUE
    (100) exp_bool -> . FALSE
    (101) exp_bool -> . exp
    (102) exp -> . termino
    (103) exp -> . exp PLUS termino
    (104) exp -> . exp MINUS termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    exp_bool                       shift and go to state 64
    expresion                      shift and go to state 152
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 113

    (96) expresion -> exp_bool OR . expresion
    (93) expresion -> . exp_bool
    (94) expresion -> . exp_bool rel_op exp_bool
    (95) expresion -> . exp_bool AND expresion
    (96) expresion -> . exp_bool OR expresion
    (97) expresion -> . exp_bool rel_op exp_bool AND expresion
    (98) expresion -> . exp_bool rel_op exp_bool OR expresion
    (99) exp_bool -> . TRUE
    (100) exp_bool -> . FALSE
    (101) exp_bool -> . exp
    (102) exp -> . termino
    (103) exp -> . exp PLUS termino
    (104) exp -> . exp MINUS termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    exp_bool                       shift and go to state 64
    expresion                      shift and go to state 153
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 114

    (121) rel_op -> LT .

    TRUE            reduce using rule 121 (rel_op -> LT .)
    FALSE           reduce using rule 121 (rel_op -> LT .)
    LPAREN          reduce using rule 121 (rel_op -> LT .)
    PLUS            reduce using rule 121 (rel_op -> LT .)
    MINUS           reduce using rule 121 (rel_op -> LT .)
    ID              reduce using rule 121 (rel_op -> LT .)
    CINT            reduce using rule 121 (rel_op -> LT .)
    NUMBER          reduce using rule 121 (rel_op -> LT .)


state 115

    (122) rel_op -> LE .

    TRUE            reduce using rule 122 (rel_op -> LE .)
    FALSE           reduce using rule 122 (rel_op -> LE .)
    LPAREN          reduce using rule 122 (rel_op -> LE .)
    PLUS            reduce using rule 122 (rel_op -> LE .)
    MINUS           reduce using rule 122 (rel_op -> LE .)
    ID              reduce using rule 122 (rel_op -> LE .)
    CINT            reduce using rule 122 (rel_op -> LE .)
    NUMBER          reduce using rule 122 (rel_op -> LE .)


state 116

    (123) rel_op -> GT .

    TRUE            reduce using rule 123 (rel_op -> GT .)
    FALSE           reduce using rule 123 (rel_op -> GT .)
    LPAREN          reduce using rule 123 (rel_op -> GT .)
    PLUS            reduce using rule 123 (rel_op -> GT .)
    MINUS           reduce using rule 123 (rel_op -> GT .)
    ID              reduce using rule 123 (rel_op -> GT .)
    CINT            reduce using rule 123 (rel_op -> GT .)
    NUMBER          reduce using rule 123 (rel_op -> GT .)


state 117

    (124) rel_op -> GE .

    TRUE            reduce using rule 124 (rel_op -> GE .)
    FALSE           reduce using rule 124 (rel_op -> GE .)
    LPAREN          reduce using rule 124 (rel_op -> GE .)
    PLUS            reduce using rule 124 (rel_op -> GE .)
    MINUS           reduce using rule 124 (rel_op -> GE .)
    ID              reduce using rule 124 (rel_op -> GE .)
    CINT            reduce using rule 124 (rel_op -> GE .)
    NUMBER          reduce using rule 124 (rel_op -> GE .)


state 118

    (125) rel_op -> EQ .

    TRUE            reduce using rule 125 (rel_op -> EQ .)
    FALSE           reduce using rule 125 (rel_op -> EQ .)
    LPAREN          reduce using rule 125 (rel_op -> EQ .)
    PLUS            reduce using rule 125 (rel_op -> EQ .)
    MINUS           reduce using rule 125 (rel_op -> EQ .)
    ID              reduce using rule 125 (rel_op -> EQ .)
    CINT            reduce using rule 125 (rel_op -> EQ .)
    NUMBER          reduce using rule 125 (rel_op -> EQ .)


state 119

    (126) rel_op -> NE .

    TRUE            reduce using rule 126 (rel_op -> NE .)
    FALSE           reduce using rule 126 (rel_op -> NE .)
    LPAREN          reduce using rule 126 (rel_op -> NE .)
    PLUS            reduce using rule 126 (rel_op -> NE .)
    MINUS           reduce using rule 126 (rel_op -> NE .)
    ID              reduce using rule 126 (rel_op -> NE .)
    CINT            reduce using rule 126 (rel_op -> NE .)
    NUMBER          reduce using rule 126 (rel_op -> NE .)


state 120

    (109) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 154


state 121

    (103) exp -> exp PLUS . termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    termino                        shift and go to state 155
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 122

    (104) exp -> exp MINUS . termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    termino                        shift and go to state 156
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 123

    (106) termino -> termino TIMES . factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    factor                         shift and go to state 157
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 124

    (107) termino -> termino DIVIDE . factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    factor                         shift and go to state 158
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 125

    (108) termino -> termino MODULO . factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    factor                         shift and go to state 159
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 126

    (110) factor -> PLUS objeto_aAcceso .

    TIMES           reduce using rule 110 (factor -> PLUS objeto_aAcceso .)
    DIVIDE          reduce using rule 110 (factor -> PLUS objeto_aAcceso .)
    MODULO          reduce using rule 110 (factor -> PLUS objeto_aAcceso .)
    PLUS            reduce using rule 110 (factor -> PLUS objeto_aAcceso .)
    MINUS           reduce using rule 110 (factor -> PLUS objeto_aAcceso .)
    AND             reduce using rule 110 (factor -> PLUS objeto_aAcceso .)
    OR              reduce using rule 110 (factor -> PLUS objeto_aAcceso .)
    LT              reduce using rule 110 (factor -> PLUS objeto_aAcceso .)
    LE              reduce using rule 110 (factor -> PLUS objeto_aAcceso .)
    GT              reduce using rule 110 (factor -> PLUS objeto_aAcceso .)
    GE              reduce using rule 110 (factor -> PLUS objeto_aAcceso .)
    EQ              reduce using rule 110 (factor -> PLUS objeto_aAcceso .)
    NE              reduce using rule 110 (factor -> PLUS objeto_aAcceso .)
    VAR             reduce using rule 110 (factor -> PLUS objeto_aAcceso .)
    PUBLIC          reduce using rule 110 (factor -> PLUS objeto_aAcceso .)
    IF              reduce using rule 110 (factor -> PLUS objeto_aAcceso .)
    WHILE           reduce using rule 110 (factor -> PLUS objeto_aAcceso .)
    PRIVATE         reduce using rule 110 (factor -> PLUS objeto_aAcceso .)
    PROTECTED       reduce using rule 110 (factor -> PLUS objeto_aAcceso .)
    ID              reduce using rule 110 (factor -> PLUS objeto_aAcceso .)
    PRINT           reduce using rule 110 (factor -> PLUS objeto_aAcceso .)
    READ            reduce using rule 110 (factor -> PLUS objeto_aAcceso .)
    RBRACE          reduce using rule 110 (factor -> PLUS objeto_aAcceso .)
    RETURN          reduce using rule 110 (factor -> PLUS objeto_aAcceso .)
    RBRACKET        reduce using rule 110 (factor -> PLUS objeto_aAcceso .)
    COMMA           reduce using rule 110 (factor -> PLUS objeto_aAcceso .)
    RPAREN          reduce using rule 110 (factor -> PLUS objeto_aAcceso .)


state 127

    (112) factor -> PLUS var .

    TIMES           reduce using rule 112 (factor -> PLUS var .)
    DIVIDE          reduce using rule 112 (factor -> PLUS var .)
    MODULO          reduce using rule 112 (factor -> PLUS var .)
    PLUS            reduce using rule 112 (factor -> PLUS var .)
    MINUS           reduce using rule 112 (factor -> PLUS var .)
    AND             reduce using rule 112 (factor -> PLUS var .)
    OR              reduce using rule 112 (factor -> PLUS var .)
    LT              reduce using rule 112 (factor -> PLUS var .)
    LE              reduce using rule 112 (factor -> PLUS var .)
    GT              reduce using rule 112 (factor -> PLUS var .)
    GE              reduce using rule 112 (factor -> PLUS var .)
    EQ              reduce using rule 112 (factor -> PLUS var .)
    NE              reduce using rule 112 (factor -> PLUS var .)
    VAR             reduce using rule 112 (factor -> PLUS var .)
    PUBLIC          reduce using rule 112 (factor -> PLUS var .)
    IF              reduce using rule 112 (factor -> PLUS var .)
    WHILE           reduce using rule 112 (factor -> PLUS var .)
    PRIVATE         reduce using rule 112 (factor -> PLUS var .)
    PROTECTED       reduce using rule 112 (factor -> PLUS var .)
    ID              reduce using rule 112 (factor -> PLUS var .)
    PRINT           reduce using rule 112 (factor -> PLUS var .)
    READ            reduce using rule 112 (factor -> PLUS var .)
    RBRACE          reduce using rule 112 (factor -> PLUS var .)
    RETURN          reduce using rule 112 (factor -> PLUS var .)
    RBRACKET        reduce using rule 112 (factor -> PLUS var .)
    COMMA           reduce using rule 112 (factor -> PLUS var .)
    RPAREN          reduce using rule 112 (factor -> PLUS var .)


state 128

    (127) objeto_aAcceso -> ID . PERIOD ID
    (116) var -> ID .

    PERIOD          shift and go to state 131
    TIMES           reduce using rule 116 (var -> ID .)
    DIVIDE          reduce using rule 116 (var -> ID .)
    MODULO          reduce using rule 116 (var -> ID .)
    PLUS            reduce using rule 116 (var -> ID .)
    MINUS           reduce using rule 116 (var -> ID .)
    AND             reduce using rule 116 (var -> ID .)
    OR              reduce using rule 116 (var -> ID .)
    LT              reduce using rule 116 (var -> ID .)
    LE              reduce using rule 116 (var -> ID .)
    GT              reduce using rule 116 (var -> ID .)
    GE              reduce using rule 116 (var -> ID .)
    EQ              reduce using rule 116 (var -> ID .)
    NE              reduce using rule 116 (var -> ID .)
    VAR             reduce using rule 116 (var -> ID .)
    PUBLIC          reduce using rule 116 (var -> ID .)
    IF              reduce using rule 116 (var -> ID .)
    WHILE           reduce using rule 116 (var -> ID .)
    PRIVATE         reduce using rule 116 (var -> ID .)
    PROTECTED       reduce using rule 116 (var -> ID .)
    ID              reduce using rule 116 (var -> ID .)
    PRINT           reduce using rule 116 (var -> ID .)
    READ            reduce using rule 116 (var -> ID .)
    RBRACE          reduce using rule 116 (var -> ID .)
    RETURN          reduce using rule 116 (var -> ID .)
    RBRACKET        reduce using rule 116 (var -> ID .)
    COMMA           reduce using rule 116 (var -> ID .)
    RPAREN          reduce using rule 116 (var -> ID .)


state 129

    (111) factor -> MINUS objeto_aAcceso .

    TIMES           reduce using rule 111 (factor -> MINUS objeto_aAcceso .)
    DIVIDE          reduce using rule 111 (factor -> MINUS objeto_aAcceso .)
    MODULO          reduce using rule 111 (factor -> MINUS objeto_aAcceso .)
    PLUS            reduce using rule 111 (factor -> MINUS objeto_aAcceso .)
    MINUS           reduce using rule 111 (factor -> MINUS objeto_aAcceso .)
    AND             reduce using rule 111 (factor -> MINUS objeto_aAcceso .)
    OR              reduce using rule 111 (factor -> MINUS objeto_aAcceso .)
    LT              reduce using rule 111 (factor -> MINUS objeto_aAcceso .)
    LE              reduce using rule 111 (factor -> MINUS objeto_aAcceso .)
    GT              reduce using rule 111 (factor -> MINUS objeto_aAcceso .)
    GE              reduce using rule 111 (factor -> MINUS objeto_aAcceso .)
    EQ              reduce using rule 111 (factor -> MINUS objeto_aAcceso .)
    NE              reduce using rule 111 (factor -> MINUS objeto_aAcceso .)
    VAR             reduce using rule 111 (factor -> MINUS objeto_aAcceso .)
    PUBLIC          reduce using rule 111 (factor -> MINUS objeto_aAcceso .)
    IF              reduce using rule 111 (factor -> MINUS objeto_aAcceso .)
    WHILE           reduce using rule 111 (factor -> MINUS objeto_aAcceso .)
    PRIVATE         reduce using rule 111 (factor -> MINUS objeto_aAcceso .)
    PROTECTED       reduce using rule 111 (factor -> MINUS objeto_aAcceso .)
    ID              reduce using rule 111 (factor -> MINUS objeto_aAcceso .)
    PRINT           reduce using rule 111 (factor -> MINUS objeto_aAcceso .)
    READ            reduce using rule 111 (factor -> MINUS objeto_aAcceso .)
    RBRACE          reduce using rule 111 (factor -> MINUS objeto_aAcceso .)
    RETURN          reduce using rule 111 (factor -> MINUS objeto_aAcceso .)
    RBRACKET        reduce using rule 111 (factor -> MINUS objeto_aAcceso .)
    COMMA           reduce using rule 111 (factor -> MINUS objeto_aAcceso .)
    RPAREN          reduce using rule 111 (factor -> MINUS objeto_aAcceso .)


state 130

    (113) factor -> MINUS var .

    TIMES           reduce using rule 113 (factor -> MINUS var .)
    DIVIDE          reduce using rule 113 (factor -> MINUS var .)
    MODULO          reduce using rule 113 (factor -> MINUS var .)
    PLUS            reduce using rule 113 (factor -> MINUS var .)
    MINUS           reduce using rule 113 (factor -> MINUS var .)
    AND             reduce using rule 113 (factor -> MINUS var .)
    OR              reduce using rule 113 (factor -> MINUS var .)
    LT              reduce using rule 113 (factor -> MINUS var .)
    LE              reduce using rule 113 (factor -> MINUS var .)
    GT              reduce using rule 113 (factor -> MINUS var .)
    GE              reduce using rule 113 (factor -> MINUS var .)
    EQ              reduce using rule 113 (factor -> MINUS var .)
    NE              reduce using rule 113 (factor -> MINUS var .)
    VAR             reduce using rule 113 (factor -> MINUS var .)
    PUBLIC          reduce using rule 113 (factor -> MINUS var .)
    IF              reduce using rule 113 (factor -> MINUS var .)
    WHILE           reduce using rule 113 (factor -> MINUS var .)
    PRIVATE         reduce using rule 113 (factor -> MINUS var .)
    PROTECTED       reduce using rule 113 (factor -> MINUS var .)
    ID              reduce using rule 113 (factor -> MINUS var .)
    PRINT           reduce using rule 113 (factor -> MINUS var .)
    READ            reduce using rule 113 (factor -> MINUS var .)
    RBRACE          reduce using rule 113 (factor -> MINUS var .)
    RETURN          reduce using rule 113 (factor -> MINUS var .)
    RBRACKET        reduce using rule 113 (factor -> MINUS var .)
    COMMA           reduce using rule 113 (factor -> MINUS var .)
    RPAREN          reduce using rule 113 (factor -> MINUS var .)


state 131

    (127) objeto_aAcceso -> ID PERIOD . ID

    ID              shift and go to state 160


state 132

    (77) asignacion -> ID LBRACKET exp RBRACKET . EQUALS expresion
    (78) asignacion -> ID LBRACKET exp RBRACKET . EQUALS llamada_func
    (79) asignacion -> ID LBRACKET exp RBRACKET . EQUALS objeto_metodo
    (83) asignacion -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS llamada_func
    (85) asignacion -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET EQUALS objeto_metodo

    EQUALS          shift and go to state 162
    LBRACKET        shift and go to state 161


state 133

    (90) llamada_func -> ID LPAREN aux RPAREN .

    VAR             reduce using rule 90 (llamada_func -> ID LPAREN aux RPAREN .)
    PUBLIC          reduce using rule 90 (llamada_func -> ID LPAREN aux RPAREN .)
    IF              reduce using rule 90 (llamada_func -> ID LPAREN aux RPAREN .)
    WHILE           reduce using rule 90 (llamada_func -> ID LPAREN aux RPAREN .)
    PRIVATE         reduce using rule 90 (llamada_func -> ID LPAREN aux RPAREN .)
    PROTECTED       reduce using rule 90 (llamada_func -> ID LPAREN aux RPAREN .)
    ID              reduce using rule 90 (llamada_func -> ID LPAREN aux RPAREN .)
    PRINT           reduce using rule 90 (llamada_func -> ID LPAREN aux RPAREN .)
    READ            reduce using rule 90 (llamada_func -> ID LPAREN aux RPAREN .)
    RBRACE          reduce using rule 90 (llamada_func -> ID LPAREN aux RPAREN .)
    RETURN          reduce using rule 90 (llamada_func -> ID LPAREN aux RPAREN .)
    COMMA           reduce using rule 90 (llamada_func -> ID LPAREN aux RPAREN .)
    RPAREN          reduce using rule 90 (llamada_func -> ID LPAREN aux RPAREN .)


state 134

    (92) aux -> exp COMMA . aux
    (91) aux -> . exp
    (92) aux -> . exp COMMA aux
    (102) exp -> . termino
    (103) exp -> . exp PLUS termino
    (104) exp -> . exp MINUS termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    exp                            shift and go to state 82
    aux                            shift and go to state 163
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 135

    (25) constructor -> PUBLIC ID LPAREN param . RPAREN bloque

    RPAREN          shift and go to state 164


state 136

    (36) param -> tipo_simple . ID
    (37) param -> tipo_simple . ID COMMA param

    ID              shift and go to state 165


state 137

    (27) funcion -> scope DEF ID LPAREN . param RPAREN contexto_func
    (35) param -> .
    (36) param -> . tipo_simple ID
    (37) param -> . tipo_simple ID COMMA param
    (68) tipo_simple -> . INT
    (69) tipo_simple -> . FLOAT

    RPAREN          reduce using rule 35 (param -> .)
    INT             shift and go to state 105
    FLOAT           shift and go to state 106

    param                          shift and go to state 166
    tipo_simple                    shift and go to state 136

state 138

    (18) condicion -> IF LPAREN expresion RPAREN . bloque
    (19) condicion -> IF LPAREN expresion RPAREN . bloque elif
    (20) condicion -> IF LPAREN expresion RPAREN . bloque elif else
    (26) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 168

    bloque                         shift and go to state 167

state 139

    (24) ciclo -> WHILE LPAREN expresion RPAREN . bloque
    (26) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 168

    bloque                         shift and go to state 169

state 140

    (86) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp . RBRACKET exp RBRACKET EQUALS expresion
    (87) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp . RBRACKET exp RBRACKET EQUALS llamada_func
    (88) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp . RBRACKET exp RBRACKET EQUALS objeto_metodo
    (103) exp -> exp . PLUS termino
    (104) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 170
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122


state 141

    (80) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . EQUALS expresion
    (81) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . EQUALS llamada_func
    (82) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET . EQUALS objeto_metodo

    EQUALS          shift and go to state 171


state 142

    (51) escritura -> PRINT LPAREN aux3 RPAREN .

    VAR             reduce using rule 51 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PUBLIC          reduce using rule 51 (escritura -> PRINT LPAREN aux3 RPAREN .)
    IF              reduce using rule 51 (escritura -> PRINT LPAREN aux3 RPAREN .)
    WHILE           reduce using rule 51 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PRIVATE         reduce using rule 51 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PROTECTED       reduce using rule 51 (escritura -> PRINT LPAREN aux3 RPAREN .)
    ID              reduce using rule 51 (escritura -> PRINT LPAREN aux3 RPAREN .)
    PRINT           reduce using rule 51 (escritura -> PRINT LPAREN aux3 RPAREN .)
    READ            reduce using rule 51 (escritura -> PRINT LPAREN aux3 RPAREN .)
    RBRACE          reduce using rule 51 (escritura -> PRINT LPAREN aux3 RPAREN .)
    RETURN          reduce using rule 51 (escritura -> PRINT LPAREN aux3 RPAREN .)


state 143

    (56) aux3 -> expresion COMMA . aux3
    (52) aux3 -> . expresion
    (53) aux3 -> . llamada_func
    (54) aux3 -> . objeto_metodo
    (55) aux3 -> . CSTRING
    (56) aux3 -> . expresion COMMA aux3
    (57) aux3 -> . llamada_func COMMA aux3
    (58) aux3 -> . objeto_metodo COMMA aux3
    (59) aux3 -> . CSTRING COMMA aux3
    (93) expresion -> . exp_bool
    (94) expresion -> . exp_bool rel_op exp_bool
    (95) expresion -> . exp_bool AND expresion
    (96) expresion -> . exp_bool OR expresion
    (97) expresion -> . exp_bool rel_op exp_bool AND expresion
    (98) expresion -> . exp_bool rel_op exp_bool OR expresion
    (90) llamada_func -> . ID LPAREN aux RPAREN
    (89) objeto_metodo -> . ID PERIOD llamada_func
    (99) exp_bool -> . TRUE
    (100) exp_bool -> . FALSE
    (101) exp_bool -> . exp
    (102) exp -> . termino
    (103) exp -> . exp PLUS termino
    (104) exp -> . exp MINUS termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    CSTRING         shift and go to state 98
    ID              shift and go to state 60
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    expresion                      shift and go to state 95
    aux3                           shift and go to state 172
    llamada_func                   shift and go to state 96
    objeto_metodo                  shift and go to state 97
    exp_bool                       shift and go to state 64
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 144

    (57) aux3 -> llamada_func COMMA . aux3
    (52) aux3 -> . expresion
    (53) aux3 -> . llamada_func
    (54) aux3 -> . objeto_metodo
    (55) aux3 -> . CSTRING
    (56) aux3 -> . expresion COMMA aux3
    (57) aux3 -> . llamada_func COMMA aux3
    (58) aux3 -> . objeto_metodo COMMA aux3
    (59) aux3 -> . CSTRING COMMA aux3
    (93) expresion -> . exp_bool
    (94) expresion -> . exp_bool rel_op exp_bool
    (95) expresion -> . exp_bool AND expresion
    (96) expresion -> . exp_bool OR expresion
    (97) expresion -> . exp_bool rel_op exp_bool AND expresion
    (98) expresion -> . exp_bool rel_op exp_bool OR expresion
    (90) llamada_func -> . ID LPAREN aux RPAREN
    (89) objeto_metodo -> . ID PERIOD llamada_func
    (99) exp_bool -> . TRUE
    (100) exp_bool -> . FALSE
    (101) exp_bool -> . exp
    (102) exp -> . termino
    (103) exp -> . exp PLUS termino
    (104) exp -> . exp MINUS termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    CSTRING         shift and go to state 98
    ID              shift and go to state 60
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    llamada_func                   shift and go to state 96
    aux3                           shift and go to state 173
    expresion                      shift and go to state 95
    objeto_metodo                  shift and go to state 97
    exp_bool                       shift and go to state 64
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 145

    (58) aux3 -> objeto_metodo COMMA . aux3
    (52) aux3 -> . expresion
    (53) aux3 -> . llamada_func
    (54) aux3 -> . objeto_metodo
    (55) aux3 -> . CSTRING
    (56) aux3 -> . expresion COMMA aux3
    (57) aux3 -> . llamada_func COMMA aux3
    (58) aux3 -> . objeto_metodo COMMA aux3
    (59) aux3 -> . CSTRING COMMA aux3
    (93) expresion -> . exp_bool
    (94) expresion -> . exp_bool rel_op exp_bool
    (95) expresion -> . exp_bool AND expresion
    (96) expresion -> . exp_bool OR expresion
    (97) expresion -> . exp_bool rel_op exp_bool AND expresion
    (98) expresion -> . exp_bool rel_op exp_bool OR expresion
    (90) llamada_func -> . ID LPAREN aux RPAREN
    (89) objeto_metodo -> . ID PERIOD llamada_func
    (99) exp_bool -> . TRUE
    (100) exp_bool -> . FALSE
    (101) exp_bool -> . exp
    (102) exp -> . termino
    (103) exp -> . exp PLUS termino
    (104) exp -> . exp MINUS termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    CSTRING         shift and go to state 98
    ID              shift and go to state 60
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    objeto_metodo                  shift and go to state 97
    aux3                           shift and go to state 174
    expresion                      shift and go to state 95
    llamada_func                   shift and go to state 96
    exp_bool                       shift and go to state 64
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 146

    (59) aux3 -> CSTRING COMMA . aux3
    (52) aux3 -> . expresion
    (53) aux3 -> . llamada_func
    (54) aux3 -> . objeto_metodo
    (55) aux3 -> . CSTRING
    (56) aux3 -> . expresion COMMA aux3
    (57) aux3 -> . llamada_func COMMA aux3
    (58) aux3 -> . objeto_metodo COMMA aux3
    (59) aux3 -> . CSTRING COMMA aux3
    (93) expresion -> . exp_bool
    (94) expresion -> . exp_bool rel_op exp_bool
    (95) expresion -> . exp_bool AND expresion
    (96) expresion -> . exp_bool OR expresion
    (97) expresion -> . exp_bool rel_op exp_bool AND expresion
    (98) expresion -> . exp_bool rel_op exp_bool OR expresion
    (90) llamada_func -> . ID LPAREN aux RPAREN
    (89) objeto_metodo -> . ID PERIOD llamada_func
    (99) exp_bool -> . TRUE
    (100) exp_bool -> . FALSE
    (101) exp_bool -> . exp
    (102) exp -> . termino
    (103) exp -> . exp PLUS termino
    (104) exp -> . exp MINUS termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    CSTRING         shift and go to state 98
    ID              shift and go to state 60
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    aux3                           shift and go to state 175
    expresion                      shift and go to state 95
    llamada_func                   shift and go to state 96
    objeto_metodo                  shift and go to state 97
    exp_bool                       shift and go to state 64
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 147

    (46) lectura -> READ LPAREN aux4 RPAREN .

    VAR             reduce using rule 46 (lectura -> READ LPAREN aux4 RPAREN .)
    PUBLIC          reduce using rule 46 (lectura -> READ LPAREN aux4 RPAREN .)
    IF              reduce using rule 46 (lectura -> READ LPAREN aux4 RPAREN .)
    WHILE           reduce using rule 46 (lectura -> READ LPAREN aux4 RPAREN .)
    PRIVATE         reduce using rule 46 (lectura -> READ LPAREN aux4 RPAREN .)
    PROTECTED       reduce using rule 46 (lectura -> READ LPAREN aux4 RPAREN .)
    ID              reduce using rule 46 (lectura -> READ LPAREN aux4 RPAREN .)
    PRINT           reduce using rule 46 (lectura -> READ LPAREN aux4 RPAREN .)
    READ            reduce using rule 46 (lectura -> READ LPAREN aux4 RPAREN .)
    RBRACE          reduce using rule 46 (lectura -> READ LPAREN aux4 RPAREN .)
    RETURN          reduce using rule 46 (lectura -> READ LPAREN aux4 RPAREN .)


state 148

    (49) aux4 -> ID COMMA . aux4
    (47) aux4 -> . ID
    (48) aux4 -> . objeto_aAcceso
    (49) aux4 -> . ID COMMA aux4
    (50) aux4 -> . objeto_aAcceso COMMA aux4
    (127) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 100

    aux4                           shift and go to state 176
    objeto_aAcceso                 shift and go to state 101

state 149

    (50) aux4 -> objeto_aAcceso COMMA . aux4
    (47) aux4 -> . ID
    (48) aux4 -> . objeto_aAcceso
    (49) aux4 -> . ID COMMA aux4
    (50) aux4 -> . objeto_aAcceso COMMA aux4
    (127) objeto_aAcceso -> . ID PERIOD ID

    ID              shift and go to state 100

    objeto_aAcceso                 shift and go to state 101
    aux4                           shift and go to state 177

state 150

    (62) vars -> VAR ID LBRACKET cint RBRACKET . COLON tipo_simple
    (63) vars -> VAR ID LBRACKET cint RBRACKET . COLON tipo_compuesto
    (64) vars -> VAR ID LBRACKET cint RBRACKET . LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> VAR ID LBRACKET cint RBRACKET . LBRACKET cint RBRACKET COLON tipo_compuesto

    COLON           shift and go to state 179
    LBRACKET        shift and go to state 178


state 151

    (94) expresion -> exp_bool rel_op exp_bool .
    (97) expresion -> exp_bool rel_op exp_bool . AND expresion
    (98) expresion -> exp_bool rel_op exp_bool . OR expresion

    VAR             reduce using rule 94 (expresion -> exp_bool rel_op exp_bool .)
    PUBLIC          reduce using rule 94 (expresion -> exp_bool rel_op exp_bool .)
    IF              reduce using rule 94 (expresion -> exp_bool rel_op exp_bool .)
    WHILE           reduce using rule 94 (expresion -> exp_bool rel_op exp_bool .)
    PRIVATE         reduce using rule 94 (expresion -> exp_bool rel_op exp_bool .)
    PROTECTED       reduce using rule 94 (expresion -> exp_bool rel_op exp_bool .)
    ID              reduce using rule 94 (expresion -> exp_bool rel_op exp_bool .)
    PRINT           reduce using rule 94 (expresion -> exp_bool rel_op exp_bool .)
    READ            reduce using rule 94 (expresion -> exp_bool rel_op exp_bool .)
    RBRACE          reduce using rule 94 (expresion -> exp_bool rel_op exp_bool .)
    RETURN          reduce using rule 94 (expresion -> exp_bool rel_op exp_bool .)
    RPAREN          reduce using rule 94 (expresion -> exp_bool rel_op exp_bool .)
    COMMA           reduce using rule 94 (expresion -> exp_bool rel_op exp_bool .)
    AND             shift and go to state 180
    OR              shift and go to state 181


state 152

    (95) expresion -> exp_bool AND expresion .

    VAR             reduce using rule 95 (expresion -> exp_bool AND expresion .)
    PUBLIC          reduce using rule 95 (expresion -> exp_bool AND expresion .)
    IF              reduce using rule 95 (expresion -> exp_bool AND expresion .)
    WHILE           reduce using rule 95 (expresion -> exp_bool AND expresion .)
    PRIVATE         reduce using rule 95 (expresion -> exp_bool AND expresion .)
    PROTECTED       reduce using rule 95 (expresion -> exp_bool AND expresion .)
    ID              reduce using rule 95 (expresion -> exp_bool AND expresion .)
    PRINT           reduce using rule 95 (expresion -> exp_bool AND expresion .)
    READ            reduce using rule 95 (expresion -> exp_bool AND expresion .)
    RBRACE          reduce using rule 95 (expresion -> exp_bool AND expresion .)
    RETURN          reduce using rule 95 (expresion -> exp_bool AND expresion .)
    RPAREN          reduce using rule 95 (expresion -> exp_bool AND expresion .)
    COMMA           reduce using rule 95 (expresion -> exp_bool AND expresion .)


state 153

    (96) expresion -> exp_bool OR expresion .

    VAR             reduce using rule 96 (expresion -> exp_bool OR expresion .)
    PUBLIC          reduce using rule 96 (expresion -> exp_bool OR expresion .)
    IF              reduce using rule 96 (expresion -> exp_bool OR expresion .)
    WHILE           reduce using rule 96 (expresion -> exp_bool OR expresion .)
    PRIVATE         reduce using rule 96 (expresion -> exp_bool OR expresion .)
    PROTECTED       reduce using rule 96 (expresion -> exp_bool OR expresion .)
    ID              reduce using rule 96 (expresion -> exp_bool OR expresion .)
    PRINT           reduce using rule 96 (expresion -> exp_bool OR expresion .)
    READ            reduce using rule 96 (expresion -> exp_bool OR expresion .)
    RBRACE          reduce using rule 96 (expresion -> exp_bool OR expresion .)
    RETURN          reduce using rule 96 (expresion -> exp_bool OR expresion .)
    RPAREN          reduce using rule 96 (expresion -> exp_bool OR expresion .)
    COMMA           reduce using rule 96 (expresion -> exp_bool OR expresion .)


state 154

    (109) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    MODULO          reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    AND             reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    OR              reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    LT              reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    LE              reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    GT              reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    GE              reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    EQ              reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    NE              reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    VAR             reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    PUBLIC          reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    IF              reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    WHILE           reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    PRIVATE         reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    PROTECTED       reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    ID              reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    PRINT           reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    READ            reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    RBRACE          reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    RETURN          reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 109 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 109 (factor -> LPAREN expresion RPAREN .)


state 155

    (103) exp -> exp PLUS termino .
    (106) termino -> termino . TIMES factor
    (107) termino -> termino . DIVIDE factor
    (108) termino -> termino . MODULO factor

    PLUS            reduce using rule 103 (exp -> exp PLUS termino .)
    MINUS           reduce using rule 103 (exp -> exp PLUS termino .)
    AND             reduce using rule 103 (exp -> exp PLUS termino .)
    OR              reduce using rule 103 (exp -> exp PLUS termino .)
    LT              reduce using rule 103 (exp -> exp PLUS termino .)
    LE              reduce using rule 103 (exp -> exp PLUS termino .)
    GT              reduce using rule 103 (exp -> exp PLUS termino .)
    GE              reduce using rule 103 (exp -> exp PLUS termino .)
    EQ              reduce using rule 103 (exp -> exp PLUS termino .)
    NE              reduce using rule 103 (exp -> exp PLUS termino .)
    VAR             reduce using rule 103 (exp -> exp PLUS termino .)
    PUBLIC          reduce using rule 103 (exp -> exp PLUS termino .)
    IF              reduce using rule 103 (exp -> exp PLUS termino .)
    WHILE           reduce using rule 103 (exp -> exp PLUS termino .)
    PRIVATE         reduce using rule 103 (exp -> exp PLUS termino .)
    PROTECTED       reduce using rule 103 (exp -> exp PLUS termino .)
    ID              reduce using rule 103 (exp -> exp PLUS termino .)
    PRINT           reduce using rule 103 (exp -> exp PLUS termino .)
    READ            reduce using rule 103 (exp -> exp PLUS termino .)
    RBRACE          reduce using rule 103 (exp -> exp PLUS termino .)
    RETURN          reduce using rule 103 (exp -> exp PLUS termino .)
    RBRACKET        reduce using rule 103 (exp -> exp PLUS termino .)
    COMMA           reduce using rule 103 (exp -> exp PLUS termino .)
    RPAREN          reduce using rule 103 (exp -> exp PLUS termino .)
    TIMES           shift and go to state 123
    DIVIDE          shift and go to state 124
    MODULO          shift and go to state 125


state 156

    (104) exp -> exp MINUS termino .
    (106) termino -> termino . TIMES factor
    (107) termino -> termino . DIVIDE factor
    (108) termino -> termino . MODULO factor

    PLUS            reduce using rule 104 (exp -> exp MINUS termino .)
    MINUS           reduce using rule 104 (exp -> exp MINUS termino .)
    AND             reduce using rule 104 (exp -> exp MINUS termino .)
    OR              reduce using rule 104 (exp -> exp MINUS termino .)
    LT              reduce using rule 104 (exp -> exp MINUS termino .)
    LE              reduce using rule 104 (exp -> exp MINUS termino .)
    GT              reduce using rule 104 (exp -> exp MINUS termino .)
    GE              reduce using rule 104 (exp -> exp MINUS termino .)
    EQ              reduce using rule 104 (exp -> exp MINUS termino .)
    NE              reduce using rule 104 (exp -> exp MINUS termino .)
    VAR             reduce using rule 104 (exp -> exp MINUS termino .)
    PUBLIC          reduce using rule 104 (exp -> exp MINUS termino .)
    IF              reduce using rule 104 (exp -> exp MINUS termino .)
    WHILE           reduce using rule 104 (exp -> exp MINUS termino .)
    PRIVATE         reduce using rule 104 (exp -> exp MINUS termino .)
    PROTECTED       reduce using rule 104 (exp -> exp MINUS termino .)
    ID              reduce using rule 104 (exp -> exp MINUS termino .)
    PRINT           reduce using rule 104 (exp -> exp MINUS termino .)
    READ            reduce using rule 104 (exp -> exp MINUS termino .)
    RBRACE          reduce using rule 104 (exp -> exp MINUS termino .)
    RETURN          reduce using rule 104 (exp -> exp MINUS termino .)
    RBRACKET        reduce using rule 104 (exp -> exp MINUS termino .)
    COMMA           reduce using rule 104 (exp -> exp MINUS termino .)
    RPAREN          reduce using rule 104 (exp -> exp MINUS termino .)
    TIMES           shift and go to state 123
    DIVIDE          shift and go to state 124
    MODULO          shift and go to state 125


state 157

    (106) termino -> termino TIMES factor .

    TIMES           reduce using rule 106 (termino -> termino TIMES factor .)
    DIVIDE          reduce using rule 106 (termino -> termino TIMES factor .)
    MODULO          reduce using rule 106 (termino -> termino TIMES factor .)
    PLUS            reduce using rule 106 (termino -> termino TIMES factor .)
    MINUS           reduce using rule 106 (termino -> termino TIMES factor .)
    AND             reduce using rule 106 (termino -> termino TIMES factor .)
    OR              reduce using rule 106 (termino -> termino TIMES factor .)
    LT              reduce using rule 106 (termino -> termino TIMES factor .)
    LE              reduce using rule 106 (termino -> termino TIMES factor .)
    GT              reduce using rule 106 (termino -> termino TIMES factor .)
    GE              reduce using rule 106 (termino -> termino TIMES factor .)
    EQ              reduce using rule 106 (termino -> termino TIMES factor .)
    NE              reduce using rule 106 (termino -> termino TIMES factor .)
    VAR             reduce using rule 106 (termino -> termino TIMES factor .)
    PUBLIC          reduce using rule 106 (termino -> termino TIMES factor .)
    IF              reduce using rule 106 (termino -> termino TIMES factor .)
    WHILE           reduce using rule 106 (termino -> termino TIMES factor .)
    PRIVATE         reduce using rule 106 (termino -> termino TIMES factor .)
    PROTECTED       reduce using rule 106 (termino -> termino TIMES factor .)
    ID              reduce using rule 106 (termino -> termino TIMES factor .)
    PRINT           reduce using rule 106 (termino -> termino TIMES factor .)
    READ            reduce using rule 106 (termino -> termino TIMES factor .)
    RBRACE          reduce using rule 106 (termino -> termino TIMES factor .)
    RETURN          reduce using rule 106 (termino -> termino TIMES factor .)
    RBRACKET        reduce using rule 106 (termino -> termino TIMES factor .)
    COMMA           reduce using rule 106 (termino -> termino TIMES factor .)
    RPAREN          reduce using rule 106 (termino -> termino TIMES factor .)


state 158

    (107) termino -> termino DIVIDE factor .

    TIMES           reduce using rule 107 (termino -> termino DIVIDE factor .)
    DIVIDE          reduce using rule 107 (termino -> termino DIVIDE factor .)
    MODULO          reduce using rule 107 (termino -> termino DIVIDE factor .)
    PLUS            reduce using rule 107 (termino -> termino DIVIDE factor .)
    MINUS           reduce using rule 107 (termino -> termino DIVIDE factor .)
    AND             reduce using rule 107 (termino -> termino DIVIDE factor .)
    OR              reduce using rule 107 (termino -> termino DIVIDE factor .)
    LT              reduce using rule 107 (termino -> termino DIVIDE factor .)
    LE              reduce using rule 107 (termino -> termino DIVIDE factor .)
    GT              reduce using rule 107 (termino -> termino DIVIDE factor .)
    GE              reduce using rule 107 (termino -> termino DIVIDE factor .)
    EQ              reduce using rule 107 (termino -> termino DIVIDE factor .)
    NE              reduce using rule 107 (termino -> termino DIVIDE factor .)
    VAR             reduce using rule 107 (termino -> termino DIVIDE factor .)
    PUBLIC          reduce using rule 107 (termino -> termino DIVIDE factor .)
    IF              reduce using rule 107 (termino -> termino DIVIDE factor .)
    WHILE           reduce using rule 107 (termino -> termino DIVIDE factor .)
    PRIVATE         reduce using rule 107 (termino -> termino DIVIDE factor .)
    PROTECTED       reduce using rule 107 (termino -> termino DIVIDE factor .)
    ID              reduce using rule 107 (termino -> termino DIVIDE factor .)
    PRINT           reduce using rule 107 (termino -> termino DIVIDE factor .)
    READ            reduce using rule 107 (termino -> termino DIVIDE factor .)
    RBRACE          reduce using rule 107 (termino -> termino DIVIDE factor .)
    RETURN          reduce using rule 107 (termino -> termino DIVIDE factor .)
    RBRACKET        reduce using rule 107 (termino -> termino DIVIDE factor .)
    COMMA           reduce using rule 107 (termino -> termino DIVIDE factor .)
    RPAREN          reduce using rule 107 (termino -> termino DIVIDE factor .)


state 159

    (108) termino -> termino MODULO factor .

    TIMES           reduce using rule 108 (termino -> termino MODULO factor .)
    DIVIDE          reduce using rule 108 (termino -> termino MODULO factor .)
    MODULO          reduce using rule 108 (termino -> termino MODULO factor .)
    PLUS            reduce using rule 108 (termino -> termino MODULO factor .)
    MINUS           reduce using rule 108 (termino -> termino MODULO factor .)
    AND             reduce using rule 108 (termino -> termino MODULO factor .)
    OR              reduce using rule 108 (termino -> termino MODULO factor .)
    LT              reduce using rule 108 (termino -> termino MODULO factor .)
    LE              reduce using rule 108 (termino -> termino MODULO factor .)
    GT              reduce using rule 108 (termino -> termino MODULO factor .)
    GE              reduce using rule 108 (termino -> termino MODULO factor .)
    EQ              reduce using rule 108 (termino -> termino MODULO factor .)
    NE              reduce using rule 108 (termino -> termino MODULO factor .)
    VAR             reduce using rule 108 (termino -> termino MODULO factor .)
    PUBLIC          reduce using rule 108 (termino -> termino MODULO factor .)
    IF              reduce using rule 108 (termino -> termino MODULO factor .)
    WHILE           reduce using rule 108 (termino -> termino MODULO factor .)
    PRIVATE         reduce using rule 108 (termino -> termino MODULO factor .)
    PROTECTED       reduce using rule 108 (termino -> termino MODULO factor .)
    ID              reduce using rule 108 (termino -> termino MODULO factor .)
    PRINT           reduce using rule 108 (termino -> termino MODULO factor .)
    READ            reduce using rule 108 (termino -> termino MODULO factor .)
    RBRACE          reduce using rule 108 (termino -> termino MODULO factor .)
    RETURN          reduce using rule 108 (termino -> termino MODULO factor .)
    RBRACKET        reduce using rule 108 (termino -> termino MODULO factor .)
    COMMA           reduce using rule 108 (termino -> termino MODULO factor .)
    RPAREN          reduce using rule 108 (termino -> termino MODULO factor .)


state 160

    (127) objeto_aAcceso -> ID PERIOD ID .

    TIMES           reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    DIVIDE          reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    MODULO          reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACKET        reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    PLUS            reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    MINUS           reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    COMMA           reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    RPAREN          reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    AND             reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    OR              reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    LT              reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    LE              reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    GT              reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    GE              reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    EQ              reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    NE              reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    VAR             reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    PUBLIC          reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    IF              reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    WHILE           reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    PRIVATE         reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    PROTECTED       reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    ID              reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    PRINT           reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    READ            reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    RBRACE          reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)
    RETURN          reduce using rule 127 (objeto_aAcceso -> ID PERIOD ID .)


state 161

    (83) asignacion -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS expresion
    (84) asignacion -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS llamada_func
    (85) asignacion -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET EQUALS objeto_metodo
    (102) exp -> . termino
    (103) exp -> . exp PLUS termino
    (104) exp -> . exp MINUS termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    exp                            shift and go to state 182
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 162

    (77) asignacion -> ID LBRACKET exp RBRACKET EQUALS . expresion
    (78) asignacion -> ID LBRACKET exp RBRACKET EQUALS . llamada_func
    (79) asignacion -> ID LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (93) expresion -> . exp_bool
    (94) expresion -> . exp_bool rel_op exp_bool
    (95) expresion -> . exp_bool AND expresion
    (96) expresion -> . exp_bool OR expresion
    (97) expresion -> . exp_bool rel_op exp_bool AND expresion
    (98) expresion -> . exp_bool rel_op exp_bool OR expresion
    (90) llamada_func -> . ID LPAREN aux RPAREN
    (89) objeto_metodo -> . ID PERIOD llamada_func
    (99) exp_bool -> . TRUE
    (100) exp_bool -> . FALSE
    (101) exp_bool -> . exp
    (102) exp -> . termino
    (103) exp -> . exp PLUS termino
    (104) exp -> . exp MINUS termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    ID              shift and go to state 60
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    exp                            shift and go to state 68
    expresion                      shift and go to state 183
    llamada_func                   shift and go to state 184
    objeto_metodo                  shift and go to state 185
    exp_bool                       shift and go to state 64
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 163

    (92) aux -> exp COMMA aux .

    RPAREN          reduce using rule 92 (aux -> exp COMMA aux .)


state 164

    (25) constructor -> PUBLIC ID LPAREN param RPAREN . bloque
    (26) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 168

    bloque                         shift and go to state 186

state 165

    (36) param -> tipo_simple ID .
    (37) param -> tipo_simple ID . COMMA param

    RPAREN          reduce using rule 36 (param -> tipo_simple ID .)
    COMMA           shift and go to state 187


state 166

    (27) funcion -> scope DEF ID LPAREN param . RPAREN contexto_func

    RPAREN          shift and go to state 188


state 167

    (18) condicion -> IF LPAREN expresion RPAREN bloque .
    (19) condicion -> IF LPAREN expresion RPAREN bloque . elif
    (20) condicion -> IF LPAREN expresion RPAREN bloque . elif else
    (21) elif -> .
    (22) elif -> . ELIF LPAREN expresion RPAREN bloque elif

  ! reduce/reduce conflict for VAR resolved using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque .)
  ! reduce/reduce conflict for IF resolved using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque .)
  ! reduce/reduce conflict for WHILE resolved using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque .)
  ! reduce/reduce conflict for ID resolved using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque .)
  ! reduce/reduce conflict for PRINT resolved using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque .)
  ! reduce/reduce conflict for READ resolved using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque .)
  ! reduce/reduce conflict for RBRACE resolved using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque .)
    VAR             reduce using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque .)
    PUBLIC          reduce using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque .)
    IF              reduce using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque .)
    WHILE           reduce using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque .)
    PRIVATE         reduce using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque .)
    PROTECTED       reduce using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque .)
    ID              reduce using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque .)
    PRINT           reduce using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque .)
    READ            reduce using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque .)
    RBRACE          reduce using rule 18 (condicion -> IF LPAREN expresion RPAREN bloque .)
    ELSE            reduce using rule 21 (elif -> .)
    ELIF            shift and go to state 190

  ! VAR             [ reduce using rule 21 (elif -> .) ]
  ! PUBLIC          [ reduce using rule 21 (elif -> .) ]
  ! IF              [ reduce using rule 21 (elif -> .) ]
  ! WHILE           [ reduce using rule 21 (elif -> .) ]
  ! PRIVATE         [ reduce using rule 21 (elif -> .) ]
  ! PROTECTED       [ reduce using rule 21 (elif -> .) ]
  ! ID              [ reduce using rule 21 (elif -> .) ]
  ! PRINT           [ reduce using rule 21 (elif -> .) ]
  ! READ            [ reduce using rule 21 (elif -> .) ]
  ! RBRACE          [ reduce using rule 21 (elif -> .) ]

    elif                           shift and go to state 189

state 168

    (26) bloque -> LBRACE . aux5 RBRACE
    (31) aux5 -> . vars
    (32) aux5 -> . estatuto
    (33) aux5 -> . vars aux5
    (34) aux5 -> . estatuto aux5
    (60) vars -> . VAR aux2 COLON tipo_simple
    (61) vars -> . VAR aux2 COLON tipo_compuesto
    (62) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (63) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (64) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (41) estatuto -> . asignacion
    (42) estatuto -> . escritura
    (43) estatuto -> . llamada_func
    (44) estatuto -> . objeto_metodo
    (45) estatuto -> . lectura
    (71) asignacion -> . ID EQUALS expresion
    (72) asignacion -> . ID EQUALS llamada_func
    (73) asignacion -> . ID EQUALS objeto_metodo
    (74) asignacion -> . objeto_aAcceso EQUALS expresion
    (75) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (76) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (77) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (78) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (79) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (80) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (81) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (82) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (83) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (85) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (86) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (51) escritura -> . PRINT LPAREN aux3 RPAREN
    (90) llamada_func -> . ID LPAREN aux RPAREN
    (89) objeto_metodo -> . ID PERIOD llamada_func
    (46) lectura -> . READ LPAREN aux4 RPAREN
    (127) objeto_aAcceso -> . ID PERIOD ID

    VAR             shift and go to state 20
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    aux5                           shift and go to state 191
    vars                           shift and go to state 192
    estatuto                       shift and go to state 193
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 169

    (24) ciclo -> WHILE LPAREN expresion RPAREN bloque .

    VAR             reduce using rule 24 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    PUBLIC          reduce using rule 24 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    IF              reduce using rule 24 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    WHILE           reduce using rule 24 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    PRIVATE         reduce using rule 24 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    PROTECTED       reduce using rule 24 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    ID              reduce using rule 24 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    PRINT           reduce using rule 24 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    READ            reduce using rule 24 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)
    RBRACE          reduce using rule 24 (ciclo -> WHILE LPAREN expresion RPAREN bloque .)


state 170

    (86) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET . exp RBRACKET EQUALS expresion
    (87) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET . exp RBRACKET EQUALS llamada_func
    (88) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET . exp RBRACKET EQUALS objeto_metodo
    (102) exp -> . termino
    (103) exp -> . exp PLUS termino
    (104) exp -> . exp MINUS termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    objeto_aAcceso                 shift and go to state 73
    exp                            shift and go to state 194
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 171

    (80) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS . expresion
    (81) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS . llamada_func
    (82) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (93) expresion -> . exp_bool
    (94) expresion -> . exp_bool rel_op exp_bool
    (95) expresion -> . exp_bool AND expresion
    (96) expresion -> . exp_bool OR expresion
    (97) expresion -> . exp_bool rel_op exp_bool AND expresion
    (98) expresion -> . exp_bool rel_op exp_bool OR expresion
    (90) llamada_func -> . ID LPAREN aux RPAREN
    (89) objeto_metodo -> . ID PERIOD llamada_func
    (99) exp_bool -> . TRUE
    (100) exp_bool -> . FALSE
    (101) exp_bool -> . exp
    (102) exp -> . termino
    (103) exp -> . exp PLUS termino
    (104) exp -> . exp MINUS termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    ID              shift and go to state 60
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    objeto_aAcceso                 shift and go to state 73
    exp                            shift and go to state 68
    expresion                      shift and go to state 195
    llamada_func                   shift and go to state 196
    objeto_metodo                  shift and go to state 197
    exp_bool                       shift and go to state 64
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 172

    (56) aux3 -> expresion COMMA aux3 .

    RPAREN          reduce using rule 56 (aux3 -> expresion COMMA aux3 .)


state 173

    (57) aux3 -> llamada_func COMMA aux3 .

    RPAREN          reduce using rule 57 (aux3 -> llamada_func COMMA aux3 .)


state 174

    (58) aux3 -> objeto_metodo COMMA aux3 .

    RPAREN          reduce using rule 58 (aux3 -> objeto_metodo COMMA aux3 .)


state 175

    (59) aux3 -> CSTRING COMMA aux3 .

    RPAREN          reduce using rule 59 (aux3 -> CSTRING COMMA aux3 .)


state 176

    (49) aux4 -> ID COMMA aux4 .

    RPAREN          reduce using rule 49 (aux4 -> ID COMMA aux4 .)


state 177

    (50) aux4 -> objeto_aAcceso COMMA aux4 .

    RPAREN          reduce using rule 50 (aux4 -> objeto_aAcceso COMMA aux4 .)


state 178

    (64) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET . cint RBRACKET COLON tipo_simple
    (65) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET . cint RBRACKET COLON tipo_compuesto
    (119) cint -> . CINT

    CINT            shift and go to state 77

    cint                           shift and go to state 198

state 179

    (62) vars -> VAR ID LBRACKET cint RBRACKET COLON . tipo_simple
    (63) vars -> VAR ID LBRACKET cint RBRACKET COLON . tipo_compuesto
    (68) tipo_simple -> . INT
    (69) tipo_simple -> . FLOAT
    (70) tipo_compuesto -> . ID

    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    ID              shift and go to state 107

    tipo_simple                    shift and go to state 199
    tipo_compuesto                 shift and go to state 200

state 180

    (97) expresion -> exp_bool rel_op exp_bool AND . expresion
    (93) expresion -> . exp_bool
    (94) expresion -> . exp_bool rel_op exp_bool
    (95) expresion -> . exp_bool AND expresion
    (96) expresion -> . exp_bool OR expresion
    (97) expresion -> . exp_bool rel_op exp_bool AND expresion
    (98) expresion -> . exp_bool rel_op exp_bool OR expresion
    (99) exp_bool -> . TRUE
    (100) exp_bool -> . FALSE
    (101) exp_bool -> . exp
    (102) exp -> . termino
    (103) exp -> . exp PLUS termino
    (104) exp -> . exp MINUS termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    exp_bool                       shift and go to state 64
    expresion                      shift and go to state 201
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 181

    (98) expresion -> exp_bool rel_op exp_bool OR . expresion
    (93) expresion -> . exp_bool
    (94) expresion -> . exp_bool rel_op exp_bool
    (95) expresion -> . exp_bool AND expresion
    (96) expresion -> . exp_bool OR expresion
    (97) expresion -> . exp_bool rel_op exp_bool AND expresion
    (98) expresion -> . exp_bool rel_op exp_bool OR expresion
    (99) exp_bool -> . TRUE
    (100) exp_bool -> . FALSE
    (101) exp_bool -> . exp
    (102) exp -> . termino
    (103) exp -> . exp PLUS termino
    (104) exp -> . exp MINUS termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    exp_bool                       shift and go to state 64
    expresion                      shift and go to state 202
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 182

    (83) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS expresion
    (84) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS llamada_func
    (85) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET EQUALS objeto_metodo
    (103) exp -> exp . PLUS termino
    (104) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 203
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122


state 183

    (77) asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .

    VAR             reduce using rule 77 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 77 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 77 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 77 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 77 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 77 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    ID              reduce using rule 77 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 77 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 77 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 77 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 77 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion .)


state 184

    (78) asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .

    VAR             reduce using rule 78 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 78 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 78 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 78 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 78 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 78 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 78 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 78 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 78 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 78 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 78 (asignacion -> ID LBRACKET exp RBRACKET EQUALS llamada_func .)


state 185

    (79) asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 79 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 79 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 79 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 79 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 79 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 79 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 79 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 79 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 79 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 79 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 79 (asignacion -> ID LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 186

    (25) constructor -> PUBLIC ID LPAREN param RPAREN bloque .

    VAR             reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PUBLIC          reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    IF              reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    WHILE           reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PRIVATE         reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PROTECTED       reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    ID              reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    PRINT           reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    READ            reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)
    RBRACE          reduce using rule 25 (constructor -> PUBLIC ID LPAREN param RPAREN bloque .)


state 187

    (37) param -> tipo_simple ID COMMA . param
    (35) param -> .
    (36) param -> . tipo_simple ID
    (37) param -> . tipo_simple ID COMMA param
    (68) tipo_simple -> . INT
    (69) tipo_simple -> . FLOAT

    RPAREN          reduce using rule 35 (param -> .)
    INT             shift and go to state 105
    FLOAT           shift and go to state 106

    tipo_simple                    shift and go to state 136
    param                          shift and go to state 204

state 188

    (27) funcion -> scope DEF ID LPAREN param RPAREN . contexto_func
    (28) contexto_func -> . LBRACE aux5 RBRACE
    (29) contexto_func -> . LBRACE aux5 RETURN INT ID RBRACE
    (30) contexto_func -> . LBRACE aux5 RETURN FLOAT ID RBRACE

    LBRACE          shift and go to state 206

    contexto_func                  shift and go to state 205

state 189

    (19) condicion -> IF LPAREN expresion RPAREN bloque elif .
    (20) condicion -> IF LPAREN expresion RPAREN bloque elif . else
    (23) else -> . ELSE bloque

    VAR             reduce using rule 19 (condicion -> IF LPAREN expresion RPAREN bloque elif .)
    PUBLIC          reduce using rule 19 (condicion -> IF LPAREN expresion RPAREN bloque elif .)
    IF              reduce using rule 19 (condicion -> IF LPAREN expresion RPAREN bloque elif .)
    WHILE           reduce using rule 19 (condicion -> IF LPAREN expresion RPAREN bloque elif .)
    PRIVATE         reduce using rule 19 (condicion -> IF LPAREN expresion RPAREN bloque elif .)
    PROTECTED       reduce using rule 19 (condicion -> IF LPAREN expresion RPAREN bloque elif .)
    ID              reduce using rule 19 (condicion -> IF LPAREN expresion RPAREN bloque elif .)
    PRINT           reduce using rule 19 (condicion -> IF LPAREN expresion RPAREN bloque elif .)
    READ            reduce using rule 19 (condicion -> IF LPAREN expresion RPAREN bloque elif .)
    RBRACE          reduce using rule 19 (condicion -> IF LPAREN expresion RPAREN bloque elif .)
    ELSE            shift and go to state 208

    else                           shift and go to state 207

state 190

    (22) elif -> ELIF . LPAREN expresion RPAREN bloque elif

    LPAREN          shift and go to state 209


state 191

    (26) bloque -> LBRACE aux5 . RBRACE

    RBRACE          shift and go to state 210


state 192

    (31) aux5 -> vars .
    (33) aux5 -> vars . aux5
    (31) aux5 -> . vars
    (32) aux5 -> . estatuto
    (33) aux5 -> . vars aux5
    (34) aux5 -> . estatuto aux5
    (60) vars -> . VAR aux2 COLON tipo_simple
    (61) vars -> . VAR aux2 COLON tipo_compuesto
    (62) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (63) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (64) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (41) estatuto -> . asignacion
    (42) estatuto -> . escritura
    (43) estatuto -> . llamada_func
    (44) estatuto -> . objeto_metodo
    (45) estatuto -> . lectura
    (71) asignacion -> . ID EQUALS expresion
    (72) asignacion -> . ID EQUALS llamada_func
    (73) asignacion -> . ID EQUALS objeto_metodo
    (74) asignacion -> . objeto_aAcceso EQUALS expresion
    (75) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (76) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (77) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (78) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (79) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (80) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (81) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (82) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (83) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (85) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (86) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (51) escritura -> . PRINT LPAREN aux3 RPAREN
    (90) llamada_func -> . ID LPAREN aux RPAREN
    (89) objeto_metodo -> . ID PERIOD llamada_func
    (46) lectura -> . READ LPAREN aux4 RPAREN
    (127) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 31 (aux5 -> vars .)
    RETURN          reduce using rule 31 (aux5 -> vars .)
    VAR             shift and go to state 20
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    vars                           shift and go to state 192
    aux5                           shift and go to state 211
    estatuto                       shift and go to state 193
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 193

    (32) aux5 -> estatuto .
    (34) aux5 -> estatuto . aux5
    (31) aux5 -> . vars
    (32) aux5 -> . estatuto
    (33) aux5 -> . vars aux5
    (34) aux5 -> . estatuto aux5
    (60) vars -> . VAR aux2 COLON tipo_simple
    (61) vars -> . VAR aux2 COLON tipo_compuesto
    (62) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (63) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (64) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (41) estatuto -> . asignacion
    (42) estatuto -> . escritura
    (43) estatuto -> . llamada_func
    (44) estatuto -> . objeto_metodo
    (45) estatuto -> . lectura
    (71) asignacion -> . ID EQUALS expresion
    (72) asignacion -> . ID EQUALS llamada_func
    (73) asignacion -> . ID EQUALS objeto_metodo
    (74) asignacion -> . objeto_aAcceso EQUALS expresion
    (75) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (76) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (77) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (78) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (79) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (80) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (81) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (82) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (83) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (85) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (86) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (51) escritura -> . PRINT LPAREN aux3 RPAREN
    (90) llamada_func -> . ID LPAREN aux RPAREN
    (89) objeto_metodo -> . ID PERIOD llamada_func
    (46) lectura -> . READ LPAREN aux4 RPAREN
    (127) objeto_aAcceso -> . ID PERIOD ID

    RBRACE          reduce using rule 32 (aux5 -> estatuto .)
    RETURN          reduce using rule 32 (aux5 -> estatuto .)
    VAR             shift and go to state 20
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    estatuto                       shift and go to state 193
    aux5                           shift and go to state 212
    vars                           shift and go to state 192
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 194

    (86) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp . RBRACKET EQUALS expresion
    (87) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp . RBRACKET EQUALS llamada_func
    (88) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp . RBRACKET EQUALS objeto_metodo
    (103) exp -> exp . PLUS termino
    (104) exp -> exp . MINUS termino

    RBRACKET        shift and go to state 213
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122


state 195

    (80) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .

    VAR             reduce using rule 80 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 80 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 80 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 80 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 80 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 80 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    ID              reduce using rule 80 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 80 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 80 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 80 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 80 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion .)


state 196

    (81) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .

    VAR             reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 81 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func .)


state 197

    (82) asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 82 (asignacion -> objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 198

    (64) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint . RBRACKET COLON tipo_simple
    (65) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint . RBRACKET COLON tipo_compuesto

    RBRACKET        shift and go to state 214


state 199

    (62) vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .

    VAR             reduce using rule 62 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PUBLIC          reduce using rule 62 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    IF              reduce using rule 62 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    WHILE           reduce using rule 62 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PRIVATE         reduce using rule 62 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PROTECTED       reduce using rule 62 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    ID              reduce using rule 62 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    PRINT           reduce using rule 62 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    READ            reduce using rule 62 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    RBRACE          reduce using rule 62 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)
    RETURN          reduce using rule 62 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_simple .)


state 200

    (63) vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .

    VAR             reduce using rule 63 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PUBLIC          reduce using rule 63 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    IF              reduce using rule 63 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    WHILE           reduce using rule 63 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRIVATE         reduce using rule 63 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PROTECTED       reduce using rule 63 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    ID              reduce using rule 63 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRINT           reduce using rule 63 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    READ            reduce using rule 63 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RBRACE          reduce using rule 63 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RETURN          reduce using rule 63 (vars -> VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto .)


state 201

    (97) expresion -> exp_bool rel_op exp_bool AND expresion .

    VAR             reduce using rule 97 (expresion -> exp_bool rel_op exp_bool AND expresion .)
    PUBLIC          reduce using rule 97 (expresion -> exp_bool rel_op exp_bool AND expresion .)
    IF              reduce using rule 97 (expresion -> exp_bool rel_op exp_bool AND expresion .)
    WHILE           reduce using rule 97 (expresion -> exp_bool rel_op exp_bool AND expresion .)
    PRIVATE         reduce using rule 97 (expresion -> exp_bool rel_op exp_bool AND expresion .)
    PROTECTED       reduce using rule 97 (expresion -> exp_bool rel_op exp_bool AND expresion .)
    ID              reduce using rule 97 (expresion -> exp_bool rel_op exp_bool AND expresion .)
    PRINT           reduce using rule 97 (expresion -> exp_bool rel_op exp_bool AND expresion .)
    READ            reduce using rule 97 (expresion -> exp_bool rel_op exp_bool AND expresion .)
    RBRACE          reduce using rule 97 (expresion -> exp_bool rel_op exp_bool AND expresion .)
    RETURN          reduce using rule 97 (expresion -> exp_bool rel_op exp_bool AND expresion .)
    RPAREN          reduce using rule 97 (expresion -> exp_bool rel_op exp_bool AND expresion .)
    COMMA           reduce using rule 97 (expresion -> exp_bool rel_op exp_bool AND expresion .)


state 202

    (98) expresion -> exp_bool rel_op exp_bool OR expresion .

    VAR             reduce using rule 98 (expresion -> exp_bool rel_op exp_bool OR expresion .)
    PUBLIC          reduce using rule 98 (expresion -> exp_bool rel_op exp_bool OR expresion .)
    IF              reduce using rule 98 (expresion -> exp_bool rel_op exp_bool OR expresion .)
    WHILE           reduce using rule 98 (expresion -> exp_bool rel_op exp_bool OR expresion .)
    PRIVATE         reduce using rule 98 (expresion -> exp_bool rel_op exp_bool OR expresion .)
    PROTECTED       reduce using rule 98 (expresion -> exp_bool rel_op exp_bool OR expresion .)
    ID              reduce using rule 98 (expresion -> exp_bool rel_op exp_bool OR expresion .)
    PRINT           reduce using rule 98 (expresion -> exp_bool rel_op exp_bool OR expresion .)
    READ            reduce using rule 98 (expresion -> exp_bool rel_op exp_bool OR expresion .)
    RBRACE          reduce using rule 98 (expresion -> exp_bool rel_op exp_bool OR expresion .)
    RETURN          reduce using rule 98 (expresion -> exp_bool rel_op exp_bool OR expresion .)
    RPAREN          reduce using rule 98 (expresion -> exp_bool rel_op exp_bool OR expresion .)
    COMMA           reduce using rule 98 (expresion -> exp_bool rel_op exp_bool OR expresion .)


state 203

    (83) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS expresion
    (84) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS llamada_func
    (85) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET . EQUALS objeto_metodo

    EQUALS          shift and go to state 215


state 204

    (37) param -> tipo_simple ID COMMA param .

    RPAREN          reduce using rule 37 (param -> tipo_simple ID COMMA param .)


state 205

    (27) funcion -> scope DEF ID LPAREN param RPAREN contexto_func .

    VAR             reduce using rule 27 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    PUBLIC          reduce using rule 27 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    IF              reduce using rule 27 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    WHILE           reduce using rule 27 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    PRIVATE         reduce using rule 27 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    PROTECTED       reduce using rule 27 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    ID              reduce using rule 27 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    PRINT           reduce using rule 27 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    READ            reduce using rule 27 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)
    RBRACE          reduce using rule 27 (funcion -> scope DEF ID LPAREN param RPAREN contexto_func .)


state 206

    (28) contexto_func -> LBRACE . aux5 RBRACE
    (29) contexto_func -> LBRACE . aux5 RETURN INT ID RBRACE
    (30) contexto_func -> LBRACE . aux5 RETURN FLOAT ID RBRACE
    (31) aux5 -> . vars
    (32) aux5 -> . estatuto
    (33) aux5 -> . vars aux5
    (34) aux5 -> . estatuto aux5
    (60) vars -> . VAR aux2 COLON tipo_simple
    (61) vars -> . VAR aux2 COLON tipo_compuesto
    (62) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_simple
    (63) vars -> . VAR ID LBRACKET cint RBRACKET COLON tipo_compuesto
    (64) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple
    (65) vars -> . VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto
    (41) estatuto -> . asignacion
    (42) estatuto -> . escritura
    (43) estatuto -> . llamada_func
    (44) estatuto -> . objeto_metodo
    (45) estatuto -> . lectura
    (71) asignacion -> . ID EQUALS expresion
    (72) asignacion -> . ID EQUALS llamada_func
    (73) asignacion -> . ID EQUALS objeto_metodo
    (74) asignacion -> . objeto_aAcceso EQUALS expresion
    (75) asignacion -> . objeto_aAcceso EQUALS llamada_func
    (76) asignacion -> . objeto_aAcceso EQUALS objeto_metodo
    (77) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion
    (78) asignacion -> . ID LBRACKET exp RBRACKET EQUALS llamada_func
    (79) asignacion -> . ID LBRACKET exp RBRACKET EQUALS objeto_metodo
    (80) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS expresion
    (81) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS llamada_func
    (82) asignacion -> . objeto_aAcceso LBRACKET exp RBRACKET EQUALS objeto_metodo
    (83) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion
    (84) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func
    (85) asignacion -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo
    (86) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion
    (87) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func
    (88) asignacion -> . objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo
    (51) escritura -> . PRINT LPAREN aux3 RPAREN
    (90) llamada_func -> . ID LPAREN aux RPAREN
    (89) objeto_metodo -> . ID PERIOD llamada_func
    (46) lectura -> . READ LPAREN aux4 RPAREN
    (127) objeto_aAcceso -> . ID PERIOD ID

    VAR             shift and go to state 20
    ID              shift and go to state 21
    PRINT           shift and go to state 32
    READ            shift and go to state 33

    aux5                           shift and go to state 216
    vars                           shift and go to state 192
    estatuto                       shift and go to state 193
    asignacion                     shift and go to state 24
    escritura                      shift and go to state 25
    llamada_func                   shift and go to state 26
    objeto_metodo                  shift and go to state 27
    lectura                        shift and go to state 28
    objeto_aAcceso                 shift and go to state 31

state 207

    (20) condicion -> IF LPAREN expresion RPAREN bloque elif else .

    VAR             reduce using rule 20 (condicion -> IF LPAREN expresion RPAREN bloque elif else .)
    PUBLIC          reduce using rule 20 (condicion -> IF LPAREN expresion RPAREN bloque elif else .)
    IF              reduce using rule 20 (condicion -> IF LPAREN expresion RPAREN bloque elif else .)
    WHILE           reduce using rule 20 (condicion -> IF LPAREN expresion RPAREN bloque elif else .)
    PRIVATE         reduce using rule 20 (condicion -> IF LPAREN expresion RPAREN bloque elif else .)
    PROTECTED       reduce using rule 20 (condicion -> IF LPAREN expresion RPAREN bloque elif else .)
    ID              reduce using rule 20 (condicion -> IF LPAREN expresion RPAREN bloque elif else .)
    PRINT           reduce using rule 20 (condicion -> IF LPAREN expresion RPAREN bloque elif else .)
    READ            reduce using rule 20 (condicion -> IF LPAREN expresion RPAREN bloque elif else .)
    RBRACE          reduce using rule 20 (condicion -> IF LPAREN expresion RPAREN bloque elif else .)


state 208

    (23) else -> ELSE . bloque
    (26) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 168

    bloque                         shift and go to state 217

state 209

    (22) elif -> ELIF LPAREN . expresion RPAREN bloque elif
    (93) expresion -> . exp_bool
    (94) expresion -> . exp_bool rel_op exp_bool
    (95) expresion -> . exp_bool AND expresion
    (96) expresion -> . exp_bool OR expresion
    (97) expresion -> . exp_bool rel_op exp_bool AND expresion
    (98) expresion -> . exp_bool rel_op exp_bool OR expresion
    (99) exp_bool -> . TRUE
    (100) exp_bool -> . FALSE
    (101) exp_bool -> . exp
    (102) exp -> . termino
    (103) exp -> . exp PLUS termino
    (104) exp -> . exp MINUS termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              shift and go to state 79
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    expresion                      shift and go to state 218
    exp_bool                       shift and go to state 64
    exp                            shift and go to state 68
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 210

    (26) bloque -> LBRACE aux5 RBRACE .

    ELIF            reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    ELSE            reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    VAR             reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    PUBLIC          reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    IF              reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    WHILE           reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    PRIVATE         reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    PROTECTED       reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    ID              reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    PRINT           reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    READ            reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)
    RBRACE          reduce using rule 26 (bloque -> LBRACE aux5 RBRACE .)


state 211

    (33) aux5 -> vars aux5 .

    RBRACE          reduce using rule 33 (aux5 -> vars aux5 .)
    RETURN          reduce using rule 33 (aux5 -> vars aux5 .)


state 212

    (34) aux5 -> estatuto aux5 .

    RBRACE          reduce using rule 34 (aux5 -> estatuto aux5 .)
    RETURN          reduce using rule 34 (aux5 -> estatuto aux5 .)


state 213

    (86) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET . EQUALS expresion
    (87) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET . EQUALS llamada_func
    (88) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET . EQUALS objeto_metodo

    EQUALS          shift and go to state 219


state 214

    (64) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET . COLON tipo_simple
    (65) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET . COLON tipo_compuesto

    COLON           shift and go to state 220


state 215

    (83) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . expresion
    (84) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . llamada_func
    (85) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS . objeto_metodo
    (93) expresion -> . exp_bool
    (94) expresion -> . exp_bool rel_op exp_bool
    (95) expresion -> . exp_bool AND expresion
    (96) expresion -> . exp_bool OR expresion
    (97) expresion -> . exp_bool rel_op exp_bool AND expresion
    (98) expresion -> . exp_bool rel_op exp_bool OR expresion
    (90) llamada_func -> . ID LPAREN aux RPAREN
    (89) objeto_metodo -> . ID PERIOD llamada_func
    (99) exp_bool -> . TRUE
    (100) exp_bool -> . FALSE
    (101) exp_bool -> . exp
    (102) exp -> . termino
    (103) exp -> . exp PLUS termino
    (104) exp -> . exp MINUS termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    ID              shift and go to state 60
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    exp                            shift and go to state 68
    expresion                      shift and go to state 221
    llamada_func                   shift and go to state 222
    objeto_metodo                  shift and go to state 223
    exp_bool                       shift and go to state 64
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    objeto_aAcceso                 shift and go to state 73
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 216

    (28) contexto_func -> LBRACE aux5 . RBRACE
    (29) contexto_func -> LBRACE aux5 . RETURN INT ID RBRACE
    (30) contexto_func -> LBRACE aux5 . RETURN FLOAT ID RBRACE

    RBRACE          shift and go to state 224
    RETURN          shift and go to state 225


state 217

    (23) else -> ELSE bloque .

    VAR             reduce using rule 23 (else -> ELSE bloque .)
    PUBLIC          reduce using rule 23 (else -> ELSE bloque .)
    IF              reduce using rule 23 (else -> ELSE bloque .)
    WHILE           reduce using rule 23 (else -> ELSE bloque .)
    PRIVATE         reduce using rule 23 (else -> ELSE bloque .)
    PROTECTED       reduce using rule 23 (else -> ELSE bloque .)
    ID              reduce using rule 23 (else -> ELSE bloque .)
    PRINT           reduce using rule 23 (else -> ELSE bloque .)
    READ            reduce using rule 23 (else -> ELSE bloque .)
    RBRACE          reduce using rule 23 (else -> ELSE bloque .)


state 218

    (22) elif -> ELIF LPAREN expresion . RPAREN bloque elif

    RPAREN          shift and go to state 226


state 219

    (86) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS . expresion
    (87) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS . llamada_func
    (88) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS . objeto_metodo
    (93) expresion -> . exp_bool
    (94) expresion -> . exp_bool rel_op exp_bool
    (95) expresion -> . exp_bool AND expresion
    (96) expresion -> . exp_bool OR expresion
    (97) expresion -> . exp_bool rel_op exp_bool AND expresion
    (98) expresion -> . exp_bool rel_op exp_bool OR expresion
    (90) llamada_func -> . ID LPAREN aux RPAREN
    (89) objeto_metodo -> . ID PERIOD llamada_func
    (99) exp_bool -> . TRUE
    (100) exp_bool -> . FALSE
    (101) exp_bool -> . exp
    (102) exp -> . termino
    (103) exp -> . exp PLUS termino
    (104) exp -> . exp MINUS termino
    (105) termino -> . factor
    (106) termino -> . termino TIMES factor
    (107) termino -> . termino DIVIDE factor
    (108) termino -> . termino MODULO factor
    (109) factor -> . LPAREN expresion RPAREN
    (110) factor -> . PLUS objeto_aAcceso
    (111) factor -> . MINUS objeto_aAcceso
    (112) factor -> . PLUS var
    (113) factor -> . MINUS var
    (114) factor -> . var
    (115) factor -> . objeto_aAcceso
    (116) var -> . ID
    (117) var -> . cint
    (118) var -> . cfloat
    (127) objeto_aAcceso -> . ID PERIOD ID
    (119) cint -> . CINT
    (120) cfloat -> . NUMBER

    ID              shift and go to state 60
    TRUE            shift and go to state 66
    FALSE           shift and go to state 67
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    CINT            shift and go to state 77
    NUMBER          shift and go to state 78

    objeto_aAcceso                 shift and go to state 73
    exp                            shift and go to state 68
    expresion                      shift and go to state 227
    llamada_func                   shift and go to state 228
    objeto_metodo                  shift and go to state 229
    exp_bool                       shift and go to state 64
    termino                        shift and go to state 69
    factor                         shift and go to state 72
    var                            shift and go to state 74
    cint                           shift and go to state 75
    cfloat                         shift and go to state 76

state 220

    (64) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON . tipo_simple
    (65) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON . tipo_compuesto
    (68) tipo_simple -> . INT
    (69) tipo_simple -> . FLOAT
    (70) tipo_compuesto -> . ID

    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    ID              shift and go to state 107

    tipo_simple                    shift and go to state 230
    tipo_compuesto                 shift and go to state 231

state 221

    (83) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .

    VAR             reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    ID              reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 83 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS expresion .)


state 222

    (84) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .

    VAR             reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 84 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS llamada_func .)


state 223

    (85) asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 85 (asignacion -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 224

    (28) contexto_func -> LBRACE aux5 RBRACE .

    VAR             reduce using rule 28 (contexto_func -> LBRACE aux5 RBRACE .)
    PUBLIC          reduce using rule 28 (contexto_func -> LBRACE aux5 RBRACE .)
    IF              reduce using rule 28 (contexto_func -> LBRACE aux5 RBRACE .)
    WHILE           reduce using rule 28 (contexto_func -> LBRACE aux5 RBRACE .)
    PRIVATE         reduce using rule 28 (contexto_func -> LBRACE aux5 RBRACE .)
    PROTECTED       reduce using rule 28 (contexto_func -> LBRACE aux5 RBRACE .)
    ID              reduce using rule 28 (contexto_func -> LBRACE aux5 RBRACE .)
    PRINT           reduce using rule 28 (contexto_func -> LBRACE aux5 RBRACE .)
    READ            reduce using rule 28 (contexto_func -> LBRACE aux5 RBRACE .)
    RBRACE          reduce using rule 28 (contexto_func -> LBRACE aux5 RBRACE .)


state 225

    (29) contexto_func -> LBRACE aux5 RETURN . INT ID RBRACE
    (30) contexto_func -> LBRACE aux5 RETURN . FLOAT ID RBRACE

    INT             shift and go to state 232
    FLOAT           shift and go to state 233


state 226

    (22) elif -> ELIF LPAREN expresion RPAREN . bloque elif
    (26) bloque -> . LBRACE aux5 RBRACE

    LBRACE          shift and go to state 168

    bloque                         shift and go to state 234

state 227

    (86) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .

    VAR             reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    PUBLIC          reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    IF              reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    WHILE           reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    PRIVATE         reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    PROTECTED       reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    ID              reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    PRINT           reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    READ            reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    RBRACE          reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)
    RETURN          reduce using rule 86 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS expresion .)


state 228

    (87) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .

    VAR             reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    PUBLIC          reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    IF              reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    WHILE           reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    PRIVATE         reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    PROTECTED       reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    ID              reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    PRINT           reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    READ            reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    RBRACE          reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)
    RETURN          reduce using rule 87 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS llamada_func .)


state 229

    (88) asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .

    VAR             reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PUBLIC          reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    IF              reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    WHILE           reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRIVATE         reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PROTECTED       reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    ID              reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    PRINT           reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    READ            reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RBRACE          reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)
    RETURN          reduce using rule 88 (asignacion -> objeto_aAcceso LBRACKET LBRACKET exp RBRACKET exp RBRACKET EQUALS objeto_metodo .)


state 230

    (64) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .

    VAR             reduce using rule 64 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PUBLIC          reduce using rule 64 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    IF              reduce using rule 64 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    WHILE           reduce using rule 64 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PRIVATE         reduce using rule 64 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PROTECTED       reduce using rule 64 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    ID              reduce using rule 64 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    PRINT           reduce using rule 64 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    READ            reduce using rule 64 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    RBRACE          reduce using rule 64 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)
    RETURN          reduce using rule 64 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_simple .)


state 231

    (65) vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .

    VAR             reduce using rule 65 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PUBLIC          reduce using rule 65 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    IF              reduce using rule 65 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    WHILE           reduce using rule 65 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRIVATE         reduce using rule 65 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PROTECTED       reduce using rule 65 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    ID              reduce using rule 65 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    PRINT           reduce using rule 65 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    READ            reduce using rule 65 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RBRACE          reduce using rule 65 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)
    RETURN          reduce using rule 65 (vars -> VAR ID LBRACKET cint RBRACKET LBRACKET cint RBRACKET COLON tipo_compuesto .)


state 232

    (29) contexto_func -> LBRACE aux5 RETURN INT . ID RBRACE

    ID              shift and go to state 235


state 233

    (30) contexto_func -> LBRACE aux5 RETURN FLOAT . ID RBRACE

    ID              shift and go to state 236


state 234

    (22) elif -> ELIF LPAREN expresion RPAREN bloque . elif
    (21) elif -> .
    (22) elif -> . ELIF LPAREN expresion RPAREN bloque elif

    ELSE            reduce using rule 21 (elif -> .)
    VAR             reduce using rule 21 (elif -> .)
    PUBLIC          reduce using rule 21 (elif -> .)
    IF              reduce using rule 21 (elif -> .)
    WHILE           reduce using rule 21 (elif -> .)
    PRIVATE         reduce using rule 21 (elif -> .)
    PROTECTED       reduce using rule 21 (elif -> .)
    ID              reduce using rule 21 (elif -> .)
    PRINT           reduce using rule 21 (elif -> .)
    READ            reduce using rule 21 (elif -> .)
    RBRACE          reduce using rule 21 (elif -> .)
    ELIF            shift and go to state 190

    elif                           shift and go to state 237

state 235

    (29) contexto_func -> LBRACE aux5 RETURN INT ID . RBRACE

    RBRACE          shift and go to state 238


state 236

    (30) contexto_func -> LBRACE aux5 RETURN FLOAT ID . RBRACE

    RBRACE          shift and go to state 239


state 237

    (22) elif -> ELIF LPAREN expresion RPAREN bloque elif .

    ELSE            reduce using rule 22 (elif -> ELIF LPAREN expresion RPAREN bloque elif .)
    VAR             reduce using rule 22 (elif -> ELIF LPAREN expresion RPAREN bloque elif .)
    PUBLIC          reduce using rule 22 (elif -> ELIF LPAREN expresion RPAREN bloque elif .)
    IF              reduce using rule 22 (elif -> ELIF LPAREN expresion RPAREN bloque elif .)
    WHILE           reduce using rule 22 (elif -> ELIF LPAREN expresion RPAREN bloque elif .)
    PRIVATE         reduce using rule 22 (elif -> ELIF LPAREN expresion RPAREN bloque elif .)
    PROTECTED       reduce using rule 22 (elif -> ELIF LPAREN expresion RPAREN bloque elif .)
    ID              reduce using rule 22 (elif -> ELIF LPAREN expresion RPAREN bloque elif .)
    PRINT           reduce using rule 22 (elif -> ELIF LPAREN expresion RPAREN bloque elif .)
    READ            reduce using rule 22 (elif -> ELIF LPAREN expresion RPAREN bloque elif .)
    RBRACE          reduce using rule 22 (elif -> ELIF LPAREN expresion RPAREN bloque elif .)


state 238

    (29) contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .

    VAR             reduce using rule 29 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)
    PUBLIC          reduce using rule 29 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)
    IF              reduce using rule 29 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)
    WHILE           reduce using rule 29 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)
    PRIVATE         reduce using rule 29 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)
    PROTECTED       reduce using rule 29 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)
    ID              reduce using rule 29 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)
    PRINT           reduce using rule 29 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)
    READ            reduce using rule 29 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)
    RBRACE          reduce using rule 29 (contexto_func -> LBRACE aux5 RETURN INT ID RBRACE .)


state 239

    (30) contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .

    VAR             reduce using rule 30 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)
    PUBLIC          reduce using rule 30 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)
    IF              reduce using rule 30 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)
    WHILE           reduce using rule 30 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)
    PRIVATE         reduce using rule 30 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)
    PROTECTED       reduce using rule 30 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)
    ID              reduce using rule 30 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)
    PRINT           reduce using rule 30 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)
    READ            reduce using rule 30 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)
    RBRACE          reduce using rule 30 (contexto_func -> LBRACE aux5 RETURN FLOAT ID RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 167 resolved using rule (condicion -> IF LPAREN expresion RPAREN bloque)
WARNING: rejected rule (elif -> <empty>) in state 167
